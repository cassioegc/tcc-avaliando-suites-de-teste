/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:27:21 GMT 2021
 */

package org.apache.xml.security.signature.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Iterator;
import java.util.NoSuchElementException;
import java.util.function.Consumer;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.signature.reference.ReferenceSubTreeData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceSubTreeData_ESTest extends ReferenceSubTreeData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator");
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.getFirstChild();
      assertNull(node0);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, true);
      assertNotNull(referenceSubTreeData0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      Iterator<Node> iterator0 = referenceSubTreeData0.iterator();
      assertNotNull(iterator0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      boolean boolean0 = referenceSubTreeData0.excludeComments();
      assertTrue(boolean0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      boolean boolean1 = referenceSubTreeData0.excludeComments();
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      Node node1 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      assertSame(iIOMetadataNode0, node1);
      assertSame(node1, iIOMetadataNode0);
      assertNotNull(node1);
      
      Iterator<Node> iterator1 = referenceSubTreeData0.iterator();
      assertNotSame(iterator1, iterator0);
      assertFalse(iterator1.equals((Object)iterator0));
      assertNotNull(iterator1);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      boolean boolean2 = referenceSubTreeData0.excludeComments();
      assertTrue(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(node1, true);
      assertFalse(referenceSubTreeData_DelayedNodeIterator0.equals((Object)iterator1));
      assertFalse(referenceSubTreeData_DelayedNodeIterator0.equals((Object)iterator0));
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      referenceSubTreeData_DelayedNodeIterator0.hasNext();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "&?sCwS=3N%\"KH'U";
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&?sCwS=3N%\"KH'U");
      assertNotNull(iIOMetadataNode0);
      
      String string1 = iIOMetadataNode0.getLocalName();
      assertEquals("&?sCwS=3N%\"KH'U", string1);
      assertTrue(string1.equals((Object)string0));
      assertNotNull(string1);
      
      Node node0 = iIOMetadataNode0.getLastChild();
      assertNull(node0);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, false);
      assertNotNull(referenceSubTreeData0);
      assertFalse(referenceSubTreeData0.excludeComments());
      
      iIOMetadataNode0.setAttributeNS("&?sCwS=3N%\"KH'U", "&?sCwS=3N%\"KH'U", "&?sCwS=3N%\"KH'U");
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(iIOMetadataNode0, false);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      Node node1 = referenceSubTreeData_DelayedNodeIterator0.next();
      assertSame(iIOMetadataNode0, node1);
      assertSame(node1, iIOMetadataNode0);
      assertNotNull(node1);
      
      Iterator<Node> iterator0 = referenceSubTreeData0.iterator();
      assertNotNull(iterator0);
      assertFalse(referenceSubTreeData0.excludeComments());
      
      // Undeclared exception!
      try { 
        referenceSubTreeData_DelayedNodeIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      assertNotNull(iIOMetadataNode0);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData(iIOMetadataNode0, true);
      assertNotNull(referenceSubTreeData0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      Iterator<Node> iterator0 = referenceSubTreeData0.iterator();
      assertNotNull(iterator0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      boolean boolean0 = referenceSubTreeData0.excludeComments();
      assertTrue(boolean0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      boolean boolean1 = referenceSubTreeData0.excludeComments();
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(iIOMetadataNode0, true);
      assertFalse(referenceSubTreeData_DelayedNodeIterator0.equals((Object)iterator0));
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      boolean boolean2 = referenceSubTreeData_DelayedNodeIterator0.hasNext();
      assertNotSame(referenceSubTreeData_DelayedNodeIterator0, iterator0);
      assertTrue(boolean2);
      assertFalse(referenceSubTreeData_DelayedNodeIterator0.equals((Object)iterator0));
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      boolean boolean3 = referenceSubTreeData_DelayedNodeIterator0.hasNext();
      assertNotSame(referenceSubTreeData_DelayedNodeIterator0, iterator0);
      assertTrue(boolean3);
      assertFalse(referenceSubTreeData_DelayedNodeIterator0.equals((Object)iterator0));
      assertTrue(boolean3 == boolean1);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      boolean boolean4 = referenceSubTreeData0.excludeComments();
      assertTrue(boolean4);
      assertTrue(boolean4 == boolean1);
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean2);
      assertTrue(boolean4 == boolean3);
      assertTrue(referenceSubTreeData0.excludeComments());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.getNextSibling();
      assertNull(node0);
      
      Node node1 = iIOMetadataNode0.getFirstChild();
      assertNull(node1);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, true);
      assertNotNull(referenceSubTreeData0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      boolean boolean0 = referenceSubTreeData0.excludeComments();
      assertTrue(boolean0);
      assertTrue(referenceSubTreeData0.excludeComments());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Node node0 = null;
      boolean boolean0 = true;
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator((Node) null, true);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      boolean boolean1 = referenceSubTreeData_DelayedNodeIterator0.hasNext();
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator1 = new ReferenceSubTreeData.DelayedNodeIterator((Node) null, false);
      assertFalse(referenceSubTreeData_DelayedNodeIterator1.equals((Object)referenceSubTreeData_DelayedNodeIterator0));
      assertNotNull(referenceSubTreeData_DelayedNodeIterator1);
      
      // Undeclared exception!
      try { 
        referenceSubTreeData_DelayedNodeIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.getFirstChild();
      assertNull(node0);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, false);
      assertNotNull(referenceSubTreeData0);
      assertFalse(referenceSubTreeData0.excludeComments());
      
      boolean boolean0 = referenceSubTreeData0.excludeComments();
      assertFalse(boolean0);
      assertFalse(referenceSubTreeData0.excludeComments());
      
      Iterator<Node> iterator0 = referenceSubTreeData0.iterator();
      assertNotNull(iterator0);
      assertFalse(referenceSubTreeData0.excludeComments());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.getPreviousSibling();
      assertNull(node0);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, true);
      assertNotNull(referenceSubTreeData0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      Node node1 = referenceSubTreeData0.getRoot();
      assertNull(node1);
      assertTrue(referenceSubTreeData0.excludeComments());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.getFirstChild();
      assertNull(node0);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, true);
      assertNotNull(referenceSubTreeData0);
      assertTrue(referenceSubTreeData0.excludeComments());
      
      Iterator<Node> iterator0 = referenceSubTreeData0.iterator();
      assertNotNull(iterator0);
      assertTrue(referenceSubTreeData0.excludeComments());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("%x=r%F#L+y");
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.getParentNode();
      assertNull(node0);
      
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, false);
      assertNotNull(referenceSubTreeData0);
      assertFalse(referenceSubTreeData0.excludeComments());
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator((Node) null, false);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      // Undeclared exception!
      try { 
        referenceSubTreeData_DelayedNodeIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("iE~,]!aCf]+jMvF`^d");
      assertNotNull(iIOMetadataNode0);
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(iIOMetadataNode0, false);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      Node node0 = referenceSubTreeData_DelayedNodeIterator0.next();
      assertSame(iIOMetadataNode0, node0);
      assertSame(node0, iIOMetadataNode0);
      assertNotNull(node0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      assertNotNull(iIOMetadataNode0);
      
      Node node0 = iIOMetadataNode0.getPreviousSibling();
      assertNull(node0);
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator((Node) null, false);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      boolean boolean0 = referenceSubTreeData_DelayedNodeIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      assertNotNull(iIOMetadataNode0);
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(iIOMetadataNode0, true);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator((Node) null, false);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
      
      // Undeclared exception!
      try { 
        referenceSubTreeData_DelayedNodeIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      assertNotNull(iIOMetadataNode0);
      
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(iIOMetadataNode0, false);
      assertNotNull(referenceSubTreeData_DelayedNodeIterator0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.cloneNode(true);
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData(node0, true);
      referenceSubTreeData0.getRoot();
      assertTrue(referenceSubTreeData0.excludeComments());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, false);
      referenceSubTreeData0.iterator();
      assertFalse(referenceSubTreeData0.excludeComments());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData((Node) null, true);
      referenceSubTreeData0.iterator();
      referenceSubTreeData0.iterator();
      referenceSubTreeData0.getRoot();
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator((Node) null, true);
      // Undeclared exception!
      try { 
        referenceSubTreeData_DelayedNodeIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String string0 = "&?sCwS=3N%\"KH'U";
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("&?sCwS=3N%\"KH'U");
      iIOMetadataNode0.getLocalName();
      iIOMetadataNode0.getLastChild();
      iIOMetadataNode0.setAttributeNS("&?sCwS=3N%\"KH'U", "&?sCwS=3N%\"KH'U", "&?sCwS=3N%\"KH'U");
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(iIOMetadataNode0, false);
      referenceSubTreeData_DelayedNodeIterator0.next();
      // Undeclared exception!
      try { 
        referenceSubTreeData_DelayedNodeIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.getFirstChild();
      try { 
        iIOMetadataNode0.setIdAttributeNS(".", ".", false);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // Method not supported
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      ReferenceSubTreeData.DelayedNodeIterator referenceSubTreeData_DelayedNodeIterator0 = new ReferenceSubTreeData.DelayedNodeIterator(iIOMetadataNode0, true);
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Consumer<Object> consumer0 = (Consumer<Object>) mock(Consumer.class, new ViolatedAssumptionAnswer());
      referenceSubTreeData_DelayedNodeIterator0.forEachRemaining(consumer0);
      ReferenceSubTreeData referenceSubTreeData0 = new ReferenceSubTreeData(iIOMetadataNode0, true);
      // Undeclared exception!
      try { 
        referenceSubTreeData_DelayedNodeIterator0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceSubTreeData$DelayedNodeIterator", e);
      }
  }
}
