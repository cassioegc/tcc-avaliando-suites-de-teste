/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:30:07 GMT 2021
 */

package org.apache.xml.security.signature;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.signature.ReferenceNotInitializedException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceNotInitializedException_ESTest extends ReferenceNotInitializedException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReferenceNotInitializedException referenceNotInitializedException0 = null;
      try {
        referenceNotInitializedException0 = new ReferenceNotInitializedException((Exception) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.exceptions.XMLSecurityException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      MockException mockException0 = new MockException();
      ReferenceNotInitializedException referenceNotInitializedException0 = new ReferenceNotInitializedException(mockException0, "lc9,ZWgf[kH'0'q", objectArray0);
      ReferenceNotInitializedException referenceNotInitializedException1 = new ReferenceNotInitializedException(referenceNotInitializedException0, "org.apache.xml.security.signature.XMLSignatureException");
      assertFalse(referenceNotInitializedException1.equals((Object)referenceNotInitializedException0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[5];
      ReferenceNotInitializedException referenceNotInitializedException0 = new ReferenceNotInitializedException("", objectArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReferenceNotInitializedException referenceNotInitializedException0 = new ReferenceNotInitializedException();
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      MockException mockException0 = new MockException();
      ReferenceNotInitializedException referenceNotInitializedException0 = new ReferenceNotInitializedException(mockException0, "lc9,ZWgf[kH'0'q", objectArray0);
      ReferenceNotInitializedException referenceNotInitializedException1 = new ReferenceNotInitializedException("", objectArray0, referenceNotInitializedException0);
      assertFalse(referenceNotInitializedException1.equals((Object)referenceNotInitializedException0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      MockException mockException0 = new MockException();
      ReferenceNotInitializedException referenceNotInitializedException0 = new ReferenceNotInitializedException(mockException0, "lc9,ZWgf[kH'0'q", objectArray0);
      ReferenceNotInitializedException referenceNotInitializedException1 = new ReferenceNotInitializedException(referenceNotInitializedException0);
      assertFalse(referenceNotInitializedException1.equals((Object)referenceNotInitializedException0));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ReferenceNotInitializedException referenceNotInitializedException0 = new ReferenceNotInitializedException("?}j6\"ya9n_.@4o?(");
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockException mockException0 = new MockException();
      ReferenceNotInitializedException referenceNotInitializedException0 = new ReferenceNotInitializedException("T:dR%YX*", mockException0);
  }
}
