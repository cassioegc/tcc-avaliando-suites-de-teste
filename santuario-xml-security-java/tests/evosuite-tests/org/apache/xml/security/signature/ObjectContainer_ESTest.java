/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:13:43 GMT 2021
 */

package org.apache.xml.security.signature;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.signature.ObjectContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectContainer_ESTest extends ObjectContainer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      iIOMetadataNode0.setAttribute("Id", "MimeType");
      String string0 = objectContainer0.getId();
      assertEquals("MimeType", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      objectContainer0.setEncoding("Object");
      String string0 = objectContainer0.getEncoding();
      assertEquals("Object", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "\nOriginal Exception was ");
      // Undeclared exception!
      try { 
        objectContainer0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newChild == null!
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("9:,U");
      ObjectContainer objectContainer0 = null;
      try {
        objectContainer0 = new ObjectContainer(iIOMetadataNode0, "9:,U");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "\nOriginal Exception was ");
      String string0 = objectContainer0.getBaseLocalName();
      assertEquals("Object", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      objectContainer0.setEncoding((String) null);
      assertEquals("http://www.w3.org/2000/09/xmldsig#", objectContainer0.getBaseNamespace());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "\nOriginal Exception was ");
      objectContainer0.setMimeType("\nOriginal Exception was ");
      String string0 = objectContainer0.getMimeType();
      assertEquals("\nOriginal Exception was ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      objectContainer0.setMimeType((String) null);
      assertEquals("http://www.w3.org/2000/09/xmldsig#", objectContainer0.getBaseNamespace());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      // Undeclared exception!
      try { 
        objectContainer0.setId("Object");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      objectContainer0.setId((String) null);
      assertEquals("http://www.w3.org/2000/09/xmldsig#", objectContainer0.getBaseNamespace());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      String string0 = objectContainer0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectContainer objectContainer0 = null;
      try {
        objectContainer0 = new ObjectContainer((Document) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      String string0 = objectContainer0.getMimeType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      Node node0 = objectContainer0.appendChild(iIOMetadataNode0);
      assertSame(node0, iIOMetadataNode0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Object");
      ObjectContainer objectContainer0 = new ObjectContainer(iIOMetadataNode0, "Object");
      String string0 = objectContainer0.getEncoding();
      assertEquals("", string0);
  }
}
