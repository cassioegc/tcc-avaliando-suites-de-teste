/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:31:18 GMT 2021
 */

package org.apache.xml.security.signature;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.signature.XMLSignatureInput;
import org.apache.xml.security.signature.XMLSignatureInputDebugger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSignatureInputDebugger_ESTest extends XMLSignatureInputDebugger_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      XMLSignatureInputDebugger xMLSignatureInputDebugger0 = null;
      try {
        xMLSignatureInputDebugger0 = new XMLSignatureInputDebugger((XMLSignatureInput) null, set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.XMLSignatureInputDebugger", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XMLSignatureInputDebugger xMLSignatureInputDebugger0 = null;
      try {
        xMLSignatureInputDebugger0 = new XMLSignatureInputDebugger((XMLSignatureInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.XMLSignatureInputDebugger", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput("");
      XMLSignatureInputDebugger xMLSignatureInputDebugger0 = new XMLSignatureInputDebugger(xMLSignatureInput0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(iIOMetadataNode0);
      xMLSignatureInput0.getNodeSet(false);
      XMLSignatureInputDebugger xMLSignatureInputDebugger0 = new XMLSignatureInputDebugger(xMLSignatureInput0);
      // Undeclared exception!
      try { 
        xMLSignatureInputDebugger0.getHTMLRepresentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.signature.XMLSignatureInputDebugger", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(linkedHashSet0);
      linkedHashSet0.add((Node) null);
      Locale locale0 = new Locale("C9B~*kKN3XAbX6", "VgWU^qB*M4:&($>LhR#", "C9B~*kKN3XAbX6");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      XMLSignatureInputDebugger xMLSignatureInputDebugger0 = new XMLSignatureInputDebugger(xMLSignatureInput0, set0);
      // Undeclared exception!
      try { 
        xMLSignatureInputDebugger0.getHTMLRepresentation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.XMLUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput("");
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      XMLSignatureInputDebugger xMLSignatureInputDebugger0 = new XMLSignatureInputDebugger(xMLSignatureInput0, linkedHashSet0);
      String string0 = xMLSignatureInputDebugger0.getHTMLRepresentation();
      assertFalse(linkedHashSet0.contains(string0));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(linkedHashSet0);
      Locale locale0 = new Locale("C9B~*kKN3XAbX6", "VgWU^qB*M4:&($>LhR#", "C9B~*kKN3XAbX6");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      XMLSignatureInputDebugger xMLSignatureInputDebugger0 = new XMLSignatureInputDebugger(xMLSignatureInput0, set0);
      String string0 = xMLSignatureInputDebugger0.getHTMLRepresentation();
      assertNotNull(string0);
  }
}
