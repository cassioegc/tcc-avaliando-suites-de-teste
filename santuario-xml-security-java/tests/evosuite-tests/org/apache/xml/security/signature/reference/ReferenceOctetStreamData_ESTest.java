/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:28:32 GMT 2021
 */

package org.apache.xml.security.signature.reference;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import org.apache.xml.security.signature.reference.ReferenceOctetStreamData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceOctetStreamData_ESTest extends ReferenceOctetStreamData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      ReferenceOctetStreamData referenceOctetStreamData0 = new ReferenceOctetStreamData(dataInputStream0);
      String string0 = referenceOctetStreamData0.getURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ReferenceOctetStreamData referenceOctetStreamData0 = new ReferenceOctetStreamData(pipedInputStream0, "org.apache.xml.security.signature.reference.ReferenceOctetStreamData", "org.apache.xml.security.signature.reference.ReferenceOctetStreamData");
      String string0 = referenceOctetStreamData0.getURI();
      assertEquals("org.apache.xml.security.signature.reference.ReferenceOctetStreamData", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(pipedInputStream0, pipedInputStream0);
      ReferenceOctetStreamData referenceOctetStreamData0 = new ReferenceOctetStreamData(sequenceInputStream0);
      String string0 = referenceOctetStreamData0.getMimeType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ReferenceOctetStreamData referenceOctetStreamData0 = new ReferenceOctetStreamData(byteArrayInputStream0, "", "");
      String string0 = referenceOctetStreamData0.getMimeType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReferenceOctetStreamData referenceOctetStreamData0 = null;
      try {
        referenceOctetStreamData0 = new ReferenceOctetStreamData((InputStream) null, "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // octetStream is null
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceOctetStreamData", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReferenceOctetStreamData referenceOctetStreamData0 = null;
      try {
        referenceOctetStreamData0 = new ReferenceOctetStreamData((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // octetStream is null
         //
         verifyException("org.apache.xml.security.signature.reference.ReferenceOctetStreamData", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte) (-1));
      ReferenceOctetStreamData referenceOctetStreamData0 = new ReferenceOctetStreamData(byteArrayInputStream0, "", "");
      String string0 = referenceOctetStreamData0.getURI();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ReferenceOctetStreamData referenceOctetStreamData0 = new ReferenceOctetStreamData(pipedInputStream0, "org.apache.xml.security.signature.reference.ReferenceOctetStreamData", "org.apache.xml.security.signature.reference.ReferenceOctetStreamData");
      InputStream inputStream0 = referenceOctetStreamData0.getOctetStream();
      assertSame(inputStream0, pipedInputStream0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      ReferenceOctetStreamData referenceOctetStreamData0 = new ReferenceOctetStreamData(pipedInputStream0, "org.apache.xml.security.signature.reference.ReferenceOctetStreamData", "org.apache.xml.security.signature.reference.ReferenceOctetStreamData");
      String string0 = referenceOctetStreamData0.getMimeType();
      assertEquals("org.apache.xml.security.signature.reference.ReferenceOctetStreamData", string0);
  }
}
