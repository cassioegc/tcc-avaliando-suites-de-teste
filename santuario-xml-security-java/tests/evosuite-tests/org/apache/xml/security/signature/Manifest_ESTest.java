/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:15:00 GMT 2021
 */

package org.apache.xml.security.signature;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.signature.Manifest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Manifest_ESTest extends Manifest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      Manifest manifest0 = null;
      try {
        manifest0 = new Manifest(iIOMetadataNode0, "iIk1%'|SCe0f", true);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Manifest");
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      iIOMetadataNode0.insertBefore(node0, iIOMetadataNode0);
      Manifest manifest0 = new Manifest(iIOMetadataNode0, "Manifest", true);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("dYE0");
      Manifest manifest0 = null;
      try {
        manifest0 = new Manifest(iIOMetadataNode0, "dYE0");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Manifest manifest0 = null;
      try {
        manifest0 = new Manifest((Document) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Manifest");
      Manifest manifest0 = null;
      try {
        manifest0 = new Manifest(iIOMetadataNode0, "Manifest");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.signature.Manifest", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Manifest");
      Manifest manifest0 = null;
      try {
        manifest0 = new Manifest(iIOMetadataNode0, "Manifest", true);
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.signature.Manifest", e);
      }
  }
}
