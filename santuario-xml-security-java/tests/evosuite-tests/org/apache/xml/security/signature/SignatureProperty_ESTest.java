/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:33:41 GMT 2021
 */

package org.apache.xml.security.signature;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.signature.SignatureProperty;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SignatureProperty_ESTest extends SignatureProperty_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      signatureProperty0.setTarget("SignatureProperty");
      String string0 = signatureProperty0.getTarget();
      assertEquals("SignatureProperty", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      // Undeclared exception!
      try { 
        signatureProperty0.appendChild((Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // newChild == null!
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SignatureProperty signatureProperty0 = null;
      try {
        signatureProperty0 = new SignatureProperty((Element) null, "xmlns:");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      String string0 = signatureProperty0.getBaseLocalName();
      assertEquals("SignatureProperty", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      signatureProperty0.setTarget((String) null);
      assertEquals("SignatureProperty", signatureProperty0.getBaseLocalName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      // Undeclared exception!
      try { 
        signatureProperty0.setId("SignatureProperty");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      signatureProperty0.setId((String) null);
      assertEquals("SignatureProperty", signatureProperty0.getBaseURI());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SignatureProperty signatureProperty0 = null;
      try {
        signatureProperty0 = new SignatureProperty((Document) null, (String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      Node node0 = signatureProperty0.appendChild(iIOMetadataNode0);
      assertSame(iIOMetadataNode0, node0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SignatureProperty signatureProperty0 = null;
      try {
        signatureProperty0 = new SignatureProperty((Document) null, "org.apache.xml.security.signature.SignatureProperty", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      String string0 = signatureProperty0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("SignatureProperty");
      SignatureProperty signatureProperty0 = new SignatureProperty(iIOMetadataNode0, "SignatureProperty");
      String string0 = signatureProperty0.getTarget();
      assertEquals("", string0);
  }
}
