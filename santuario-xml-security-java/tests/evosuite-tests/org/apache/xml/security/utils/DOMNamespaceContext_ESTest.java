/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:54:45 GMT 2021
 */

package org.apache.xml.security.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.utils.DOMNamespaceContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.DOMException;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMNamespaceContext_ESTest extends DOMNamespaceContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      dOMNamespaceContext0.setContext((Node) null);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      String string0 = dOMNamespaceContext0.getPrefix("http://www.w3.org/2000/xmlns/");
      assertNotNull(string0);
      assertEquals("xmlns", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMNamespaceContext0.getPrefix("G");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // Method not supported
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      String string0 = dOMNamespaceContext0.getPrefix("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      // Undeclared exception!
      try { 
        dOMNamespaceContext0.getPrefix((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // namespace URI is null
         //
         verifyException("org.apache.xml.security.utils.DOMNamespaceContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      String string0 = dOMNamespaceContext0.getPrefix("http://www.w3.org/XML/1998/namespace");
      assertNotNull(string0);
      assertEquals("xml", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      String string0 = dOMNamespaceContext0.getNamespaceURI("xmlns");
      assertEquals("http://www.w3.org/2000/xmlns/", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      String string0 = dOMNamespaceContext0.getNamespaceURI("xml");
      assertEquals("http://www.w3.org/XML/1998/namespace", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMNamespaceContext0.getNamespaceURI("c");
        fail("Expecting exception: DOMException");
      
      } catch(DOMException e) {
         //
         // Method not supported
         //
         verifyException("javax.imageio.metadata.IIOMetadataNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      String string0 = dOMNamespaceContext0.getNamespaceURI("*|Y-=j$A");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      // Undeclared exception!
      try { 
        dOMNamespaceContext0.getNamespaceURI((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prefix is null
         //
         verifyException("org.apache.xml.security.utils.DOMNamespaceContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      String string0 = dOMNamespaceContext0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext((Node) null);
      // Undeclared exception!
      try { 
        dOMNamespaceContext0.getPrefixes("#s*'YT?#V.W");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.DOMNamespaceContext", e);
      }
  }
}
