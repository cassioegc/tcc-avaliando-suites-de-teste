/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:07:33 GMT 2021
 */

package org.apache.xml.security.utils.resolver.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.signature.XMLSignatureInput;
import org.apache.xml.security.utils.resolver.ResourceResolverContext;
import org.apache.xml.security.utils.resolver.implementations.ResolverXPointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResolverXPointer_ESTest extends ResolverXPointer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Document) null).when(element0).getOwnerDocument();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn(element0, (Element) null).when(attr0).getOwnerElement();
      doReturn("#xpointer(/)").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "#xpointer(/)", true);
      resolverXPointer0.engineResolveURI(resourceResolverContext0);
      // Undeclared exception!
      try { 
        resolverXPointer0.engineResolveURI(resourceResolverContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.resolver.implementations.ResolverXPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("#xpointer(id())").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, ":4[&_9'7YhA?u1N!Do", true);
      // Undeclared exception!
      try { 
        resolverXPointer0.engineCanResolveURI(resourceResolverContext0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      // Undeclared exception!
      try { 
        resolverXPointer0.engineCanResolveURI((ResourceResolverContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.resolver.implementations.ResolverXPointer", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "#xpointer(id(", true);
      boolean boolean0 = resolverXPointer0.engineCanResolveURI(resourceResolverContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("#xpointer(/)").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "#xpointer(/)", false);
      boolean boolean0 = resolverXPointer0.engineCanResolveURI(resourceResolverContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(document0).when(element0).getOwnerDocument();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn(element0).when(attr0).getOwnerElement();
      doReturn("#xpointer(id(7DjQjy_VlCRvJV/(").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "", true);
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      XMLSignatureInput xMLSignatureInput0 = resolverXPointer0.engineResolveURI(resourceResolverContext0);
      assertFalse(xMLSignatureInput0.isElement());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn((Document) null).when(element0).getOwnerDocument();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn(element0).when(attr0).getOwnerElement();
      doReturn("+VtGOcT").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, (String) null, true);
      XMLSignatureInput xMLSignatureInput0 = resolverXPointer0.engineResolveURI(resourceResolverContext0);
      assertFalse(xMLSignatureInput0.isInitialized());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(document0).when(element0).getOwnerDocument();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn(element0).when(attr0).getOwnerElement();
      doReturn("#xpointer(id(#xpointer(id(TD3`T))").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "XMLSignatureInput/OctetStream/", false);
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      XMLSignatureInput xMLSignatureInput0 = resolverXPointer0.engineResolveURI(resourceResolverContext0);
      assertFalse(xMLSignatureInput0.isElement());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("#xpointer(id(7DjQjy_VlCRvJV>())))").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, ">;qq(<", true);
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      boolean boolean0 = resolverXPointer0.engineCanResolveURI(resourceResolverContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      ResolverXPointer resolverXPointer0 = new ResolverXPointer();
      Document document0 = mock(Document.class, new ViolatedAssumptionAnswer());
      doReturn("#xpointer(/)").when(document0).toString();
      Element element0 = mock(Element.class, new ViolatedAssumptionAnswer());
      doReturn(document0).when(element0).getOwnerDocument();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn(element0).when(attr0).getOwnerElement();
      doReturn("#xpointer(/)").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "#xpointer(/)", false);
      XMLSignatureInput xMLSignatureInput0 = resolverXPointer0.engineResolveURI(resourceResolverContext0);
      assertTrue(xMLSignatureInput0.isElement());
  }
}
