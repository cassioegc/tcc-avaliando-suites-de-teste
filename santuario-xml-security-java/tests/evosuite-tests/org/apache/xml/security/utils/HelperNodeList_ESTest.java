/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:18:42 GMT 2021
 */

package org.apache.xml.security.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.utils.HelperNodeList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HelperNodeList_ESTest extends HelperNodeList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      helperNodeList0.appendChild((Node) null);
      Node node0 = helperNodeList0.item(0);
      assertNull(node0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("mf{e J?b$n*/p]H");
      helperNodeList0.appendChild(iIOMetadataNode0);
      Node node0 = helperNodeList0.item(0);
      assertSame(node0, iIOMetadataNode0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      helperNodeList0.appendChild((Node) null);
      int int0 = helperNodeList0.getLength();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList();
      // Undeclared exception!
      try { 
        helperNodeList0.item(0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(false);
      helperNodeList0.appendChild((Node) null);
      // Undeclared exception!
      try { 
        helperNodeList0.getOwnerDocument();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.XMLUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      helperNodeList0.appendChild((Node) null);
      // Undeclared exception!
      try { 
        helperNodeList0.appendChild((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.HelperNodeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      int int0 = helperNodeList0.getLength();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      helperNodeList0.appendChild(iIOMetadataNode0);
      Document document0 = helperNodeList0.getOwnerDocument();
      assertNull(document0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("mf{e J?b$n*/p]H");
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode1, iIOMetadataNode1);
      helperNodeList0.appendChild(node0);
      try { 
        helperNodeList0.appendChild(iIOMetadataNode0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Nodes have not the same Parent
         //
         verifyException("org.apache.xml.security.utils.HelperNodeList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList(true);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("mf{e J?b$n*/p]H");
      helperNodeList0.appendChild(iIOMetadataNode0);
      helperNodeList0.appendChild(iIOMetadataNode0);
      assertEquals(2, helperNodeList0.getLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList();
      // Undeclared exception!
      try { 
        helperNodeList0.item((-1193));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      HelperNodeList helperNodeList0 = new HelperNodeList();
      Document document0 = helperNodeList0.getOwnerDocument();
      assertNull(document0);
  }
}
