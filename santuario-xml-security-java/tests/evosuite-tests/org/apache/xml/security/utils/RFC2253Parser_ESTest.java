/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:58:33 GMT 2021
 */

package org.apache.xml.security.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.utils.RFC2253Parser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RFC2253Parser_ESTest extends RFC2253Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RFC2253Parser.changeWStoRFC("\u0010");
      RFC2253Parser.changeWStoXML("\u0010");
      RFC2253Parser.normalizeV(" ", false);
      RFC2253Parser.semicolonToComma("= n$P$x9k\"o~{h[,9");
      RFC2253Parser.changeWStoXML("= n$P$x9k\"o~{h[,9");
      RFC2253Parser.rfc2253toXMLdsig("");
      RFC2253Parser.xmldsigtoRFC2253("\u0010");
      RFC2253Parser.normalize("{td-{rC8HL_j:hpu8", false);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "=";
      RFC2253Parser.trim("=");
      RFC2253Parser.changeLess32toXML(";Y(<;L~%^e(kB80JVCY");
      RFC2253Parser.trim("*1");
      RFC2253Parser.trim("=");
      boolean boolean0 = false;
      RFC2253Parser.normalizeAT("yH5`y@?iNH#.J(}?");
      RFC2253Parser.xmldsigtoRFC2253("yH5`y@?iNH#.J(}?");
      RFC2253Parser.trim("=");
      RFC2253Parser.xmltoRFC("=");
      // Undeclared exception!
      try { 
        RFC2253Parser.parseRDN("=", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RFC2253Parser.normalizeAT("");
      RFC2253Parser.semicolonToComma("");
      RFC2253Parser.changeWStoRFC("");
      RFC2253Parser.changeLess32toXML("");
      RFC2253Parser.semicolonToComma("0vM+");
      RFC2253Parser.xmldsigtoRFC2253("qTi6X8,MDKuBLG");
      RFC2253Parser.changeWStoXML("");
      String string0 = "";
      RFC2253Parser.trim("");
      String string1 = "";
      RFC2253Parser.rfctoXML("");
      RFC2253Parser.normalize("");
      RFC2253Parser.parseATAV("", false);
      RFC2253Parser.parseATAV("", false);
      RFC2253Parser.normalize("");
      RFC2253Parser.semicolonToComma("~^W1In^\"#F)A;T");
      RFC2253Parser.rfctoXML("");
      RFC2253Parser.normalizeV("", false);
      RFC2253Parser.trim("w'i~THtnA9");
      RFC2253Parser.normalize("");
      // Undeclared exception!
      RFC2253Parser.removeWhiteSpace("", "");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RFC2253Parser.changeWStoRFC("XWHBGPicQ \u0007-]BW?(");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.rfctoXML("XWHBGPicQ \u0007-]BW?(");
      RFC2253Parser.xmldsigtoRFC2253("XWHBGPicQ \u0007-]BW?(");
      String string0 = null;
      RFC2253Parser.xmltoRFC((String) null);
      RFC2253Parser.semicolonToComma("XWHBGPicQ \u0007-]BW?(");
      // Undeclared exception!
      try { 
        RFC2253Parser.parseATAV((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RFC2253Parser.changeLess32toXML("");
      RFC2253Parser.normalize("\"XM388[,", false);
      RFC2253Parser.rfc2253toXMLdsig("\"XM388[,");
      RFC2253Parser.changeWStoXML("K");
      RFC2253Parser.parseRDN("%BuD;+}RF>O'", true);
      RFC2253Parser.parseRDN("\\", true);
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.trim("");
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWhiteSpace("\"XM388[,", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RFC2253Parser.changeLess32toRFC("gF");
      RFC2253Parser.changeWStoRFC("-");
      String string0 = "\\u9jBUJ`{3>o|+q~s/";
      RFC2253Parser.changeLess32toRFC(string0);
      RFC2253Parser.normalize("-");
      RFC2253Parser.changeLess32toXML("");
      RFC2253Parser.trim(string0);
      RFC2253Parser.changeWStoXML(" ");
      String string1 = "";
      RFC2253Parser.semicolonToComma("");
      RFC2253Parser.changeLess32toRFC("");
      RFC2253Parser.normalizeV("", false);
      RFC2253Parser.changeLess32toXML("20");
      RFC2253Parser.rfctoXML((String) null);
      // Undeclared exception!
      try { 
        RFC2253Parser.changeLess32toXML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RFC2253Parser.changeWStoXML("ZcN68|6H)qN]ri");
      RFC2253Parser.changeLess32toXML("ZcN68|6H)qN]ri");
      RFC2253Parser.normalizeV("#UYakq-]s*k+D0$tZ!", true);
      RFC2253Parser.parseATAV("#UYakq-]s*k+D0$tZ!", true);
      RFC2253Parser.normalize("(BE!v7b$U", false);
      RFC2253Parser.semicolonToComma("=");
      RFC2253Parser.changeLess32toXML("");
      RFC2253Parser.parseRDN("ZcN68|6H)qN]ri", true);
      RFC2253Parser.removeWSandReplace("=", "=", "");
      RFC2253Parser.parseATAV("", true);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RFC2253Parser.semicolonToComma("'RD;");
      RFC2253Parser.changeWStoRFC("'RD;");
      boolean boolean0 = false;
      RFC2253Parser.normalizeV("", false);
      RFC2253Parser.removeWhiteSpace("", "'RD;");
      RFC2253Parser.changeLess32toRFC(">WeN7%RQ");
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWSandReplace(">WeN7%RQ", "", "#");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RFC2253Parser.changeLess32toRFC("8");
      RFC2253Parser.changeLess32toXML("8\uFFFF");
      RFC2253Parser.xmltoRFC("yRe?S0XRo0.Tn");
      RFC2253Parser.rfctoXML("8");
      String string0 = "";
      // Undeclared exception!
      RFC2253Parser.removeWhiteSpace("", "");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RFC2253Parser.normalizeV(",", false);
      RFC2253Parser.changeLess32toXML(",");
      RFC2253Parser.normalize(",", false);
      RFC2253Parser.semicolonToComma(",");
      RFC2253Parser.xmltoRFC(",");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.normalizeV("", true);
      RFC2253Parser.normalizeAT("");
      RFC2253Parser.normalize((String) null, true);
      RFC2253Parser.changeWStoRFC("");
      RFC2253Parser.changeLess32toRFC(",");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.normalizeV("", false);
      String string0 = "<TEl#>r9*";
      RFC2253Parser.normalizeV("<TEl#>r9*", true);
      RFC2253Parser.xmldsigtoRFC2253("/+nbc8,");
      RFC2253Parser.normalizeV("/+nbc8,", false);
      RFC2253Parser.normalize("/+nbc8,\uFFFF");
      RFC2253Parser.semicolonToComma("/+nbc8,");
      RFC2253Parser.normalizeV("|Yp=/.e /I#p]|*UA", true);
      RFC2253Parser.rfctoXML("^");
      RFC2253Parser.rfc2253toXMLdsig("XfXQuZ4p9K6");
      RFC2253Parser.xmldsigtoRFC2253("L$k ");
      RFC2253Parser.rfc2253toXMLdsig("");
      RFC2253Parser.parseATAV("UZoG?5oe+xB", true);
      RFC2253Parser.xmltoRFC("aq#5m%]o2xB]<Sk9R");
      RFC2253Parser.normalizeAT("U(Yv");
      // Undeclared exception!
      try { 
        RFC2253Parser.parseATAV((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = "y";
      RFC2253Parser.semicolonToComma("y");
      RFC2253Parser.normalize("(_haS1q@=I/$w");
      RFC2253Parser.changeLess32toXML("y");
      RFC2253Parser.trim("eX^Ju-");
      RFC2253Parser.removeWSandReplace("eX^Ju-", "eX^Ju-", "eX^Ju-");
      RFC2253Parser.changeLess32toRFC("eX^Ju-");
      // Undeclared exception!
      try { 
        RFC2253Parser.changeLess32toXML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = null;
      RFC2253Parser.rfctoXML((String) null);
      // Undeclared exception!
      try { 
        RFC2253Parser.changeWStoRFC((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RFC2253Parser.semicolonToComma("");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.normalize("org.apache.xml.security.utils.RFC2253Parser");
      RFC2253Parser.parseRDN("", false);
      RFC2253Parser.removeWSandReplace("", "w=", "w=");
      RFC2253Parser.parseATAV("", false);
      RFC2253Parser.normalizeAT("");
      RFC2253Parser.changeWStoRFC("");
      // Undeclared exception!
      try { 
        RFC2253Parser.normalizeAT((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      // Undeclared exception!
      try { 
        RFC2253Parser.changeWStoXML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RFC2253Parser.normalizeAT("%'*#IeK");
      RFC2253Parser.xmltoRFC("%'*#IEK");
      String string0 = "org.apache.xml.security.utils.RFC2253Parser";
      RFC2253Parser.xmltoRFC("org.apache.xml.security.utils.RFC2253Parser");
      RFC2253Parser.normalize("8_xD45'1F>:V<q']a", false);
      RFC2253Parser.xmldsigtoRFC2253("org.apache.xml.security.utils.RFC2253Parser");
      RFC2253Parser.parseRDN("%'*#IeK", false);
      RFC2253Parser.xmltoRFC("");
      RFC2253Parser.normalize("org.apache.xml.security.utils.RFC2253Parser", false);
      // Undeclared exception!
      try { 
        RFC2253Parser.parseRDN((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.changeLess32toRFC("n6xiMq>QPZi}A");
      RFC2253Parser.rfc2253toXMLdsig((String) null);
      RFC2253Parser.rfctoXML("");
      RFC2253Parser.changeWStoRFC("0G0/");
      RFC2253Parser.trim("");
      boolean boolean0 = false;
      RFC2253Parser.normalizeV("", false);
      RFC2253Parser.normalizeAT(",");
      // Undeclared exception!
      try { 
        RFC2253Parser.semicolonToComma((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RFC2253Parser.rfc2253toXMLdsig("a\"7pzqT");
      RFC2253Parser.changeWStoXML("a\"7pzqT");
      RFC2253Parser.xmltoRFC("a\"7pzqT");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.rfctoXML("");
      RFC2253Parser.parseRDN("a\"7pzqT", false);
      RFC2253Parser.parseRDN("a\"7pzqT", true);
      String string0 = "";
      RFC2253Parser.changeLess32toXML("");
      // Undeclared exception!
      try { 
        RFC2253Parser.changeLess32toRFC((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RFC2253Parser.changeLess32toRFC("omDp");
      String string0 = "q<=-I";
      RFC2253Parser.removeWSandReplace("q<=-I", "q<=-I", "omDp");
      String string1 = null;
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        RFC2253Parser.parseRDN((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RFC2253Parser.trim("=:");
      // Undeclared exception!
      try { 
        RFC2253Parser.normalize("=:", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RFC2253Parser.semicolonToComma("");
      RFC2253Parser.removeWSandReplace("", "\"%g", "");
      RFC2253Parser.changeLess32toXML("\\");
      String string0 = "=4_XXr";
      RFC2253Parser.removeWSandReplace("=4_XXr", "hj_G", "BI*-N");
      // Undeclared exception!
      try { 
        RFC2253Parser.changeWStoRFC((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.rfc2253toXMLdsig("dCa(E0Td'w");
      RFC2253Parser.normalizeAT("20");
      RFC2253Parser.parseATAV("(,x*?K6", false);
      String string0 = "";
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWSandReplace((String) null, "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RFC2253Parser.changeLess32toRFC(" ");
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWSandReplace("\u0010", "", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RFC2253Parser.xmldsigtoRFC2253("\\");
      RFC2253Parser.normalizeV("\\\uFFFF", false);
      String string0 = "";
      RFC2253Parser.xmltoRFC("");
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        RFC2253Parser.normalizeV((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      String string0 = null;
      String string1 = "iY_W]ynf.:Q\"s\",4";
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWhiteSpace((String) null, "iY_W]ynf.:Q\"s\",4");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        RFC2253Parser.trim((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "=";
      // Undeclared exception!
      try { 
        RFC2253Parser.xmldsigtoRFC2253("=");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RFC2253Parser.rfctoXML(",");
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RFC2253Parser.xmltoRFC("x!5^wk~lYxVX&F");
      RFC2253Parser.rfc2253toXMLdsig("x!5^wk~lYxVX&F");
      RFC2253Parser.changeLess32toRFC(" ");
      RFC2253Parser.removeWhiteSpace(" ", "x!5^wk~lYxVX&F");
      RFC2253Parser.normalizeAT(" ");
      RFC2253Parser.normalize("x!5^wk~lYxVX&F", true);
      RFC2253Parser.changeLess32toXML("_M ]cIK|1!");
      RFC2253Parser.normalizeV("", true);
      RFC2253Parser.changeLess32toXML("");
      RFC2253Parser.parseATAV("_M ]cIK|1!", true);
      RFC2253Parser.changeLess32toRFC("_M ]cIK|1!");
      RFC2253Parser.removeWSandReplace("", "<I", "");
      RFC2253Parser.parseRDN("su*{as6t<sR ", true);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RFC2253Parser.changeWStoRFC("\u0010");
      RFC2253Parser.changeWStoXML("\u0010");
      RFC2253Parser.normalizeV(" ", false);
      RFC2253Parser.semicolonToComma("= n$P$x9k\"o~{h[,9");
      RFC2253Parser.changeWStoXML("= n$P$x9k\"o~{h[,9");
      RFC2253Parser.rfc2253toXMLdsig("");
      RFC2253Parser.xmldsigtoRFC2253("");
      RFC2253Parser.normalize("{td-{rC8HL_j:hpu8", false);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RFC2253Parser.normalizeV(",", false);
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.changeWStoRFC(",");
      RFC2253Parser.xmldsigtoRFC2253(",");
      RFC2253Parser.normalize("i~Hmq8@3f{-in:");
      RFC2253Parser.semicolonToComma("i~Hmq8@3f{-in:");
      // Undeclared exception!
      try { 
        RFC2253Parser.trim((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RFC2253Parser.changeLess32toRFC("^T");
      RFC2253Parser.changeLess32toRFC("DX@U@;DCz-<ij");
      RFC2253Parser.xmldsigtoRFC2253("^T");
      RFC2253Parser.normalize("DX@U@;DCz-<ij", false);
      RFC2253Parser.changeWStoRFC("^T");
      RFC2253Parser.xmldsigtoRFC2253("^T");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RFC2253Parser.parseRDN("", true);
      RFC2253Parser.parseRDN("Pf&U)qat! {uZ1", true);
      RFC2253Parser.semicolonToComma("Pf&U)qat! {uZ1");
      RFC2253Parser.trim("");
      RFC2253Parser.changeLess32toRFC("");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RFC2253Parser.xmltoRFC((String) null);
      RFC2253Parser.xmldsigtoRFC2253("6j{TYd+3r/_");
      RFC2253Parser.removeWhiteSpace("6j{TYd+3r/_", "buo-K8d=]F5RB");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.semicolonToComma("6j{TYd+3r/_");
      RFC2253Parser.semicolonToComma("6j{TYd+3r/_");
      RFC2253Parser.normalize((String) null, true);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RFC2253Parser.removeWhiteSpace(">2", ">2");
      String string0 = "";
      // Undeclared exception!
      RFC2253Parser.removeWSandReplace("", "", ">2");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RFC2253Parser.changeLess32toRFC("=g!:#mH");
      RFC2253Parser.semicolonToComma("=g!:#mH");
      RFC2253Parser.changeWStoXML("=g!:#mH");
      String string0 = "";
      RFC2253Parser.removeWhiteSpace("", "=g!:#mH");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.changeWStoRFC("|mKFqCNB21D");
      RFC2253Parser.normalizeAT("");
      RFC2253Parser.trim("");
      // Undeclared exception!
      try { 
        RFC2253Parser.parseATAV("=g!:#mH", true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RFC2253Parser.normalize("[O,F");
      RFC2253Parser.changeLess32toXML("T1tWaqdI)14XT(8\"");
      RFC2253Parser.changeWStoXML("[O,F");
      RFC2253Parser.xmldsigtoRFC2253("Rp.@");
      RFC2253Parser.normalize("[O,F", false);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RFC2253Parser.changeLess32toRFC("+*B-hC{)C");
      RFC2253Parser.removeWhiteSpace("+*B-hC{)C", "+*B-hC{)C");
      RFC2253Parser.removeWhiteSpace("4,S<hI<nNpE", "+*B-hC{)C");
      boolean boolean0 = true;
      RFC2253Parser.parseRDN("", true);
      RFC2253Parser.changeLess32toRFC("Wr}cQ`HLiR8!,");
      RFC2253Parser.trim("+*B-hC{)C");
      RFC2253Parser.normalize("+*B-hC{)C");
      RFC2253Parser.changeLess32toXML(" ");
      RFC2253Parser.normalizeAT("");
      RFC2253Parser.trim("+*B-hC{)C");
      RFC2253Parser.removeWhiteSpace("4,S<hI<nNpE", "Wr}cQ`HLiR8!,");
      RFC2253Parser.removeWhiteSpace("", "+*B-hC{)C");
      RFC2253Parser.changeWStoXML("+*B-hC{)C");
      RFC2253Parser.changeWStoRFC(" ");
      RFC2253Parser.normalizeV("", false);
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWSandReplace("4,S<hI<nNpE", "", "4,S<hI<nNpE");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RFC2253Parser.parseRDN("", false);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      boolean boolean0 = true;
      RFC2253Parser.normalizeV("", true);
      RFC2253Parser.changeWStoXML("");
      // Undeclared exception!
      RFC2253Parser.removeWhiteSpace("", "");
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RFC2253Parser.normalize("p1", false);
      RFC2253Parser.rfc2253toXMLdsig("");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RFC2253Parser.xmldsigtoRFC2253("tfe>_vUE+!m=#d#;_J");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RFC2253Parser.semicolonToComma(",?VndVk4]s@Bp5");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.removeWSandReplace(",?VndVk4]s@Bp5", "$nc", "");
      RFC2253Parser.changeLess32toXML(",?VndVk4]s@Bp5");
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RFC2253Parser.normalize(" ?kZ#eS8$%Y$E%AVlX^");
      RFC2253Parser.changeWStoRFC(" ?kZ#eS8$%Y$E%AVlX^");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      String string0 = "GQ";
      RFC2253Parser.changeWStoXML("GQ");
      String string1 = "";
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWhiteSpace("GQ", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      String string0 = null;
      // Undeclared exception!
      try { 
        RFC2253Parser.parseATAV((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RFC2253Parser.xmldsigtoRFC2253("");
      RFC2253Parser.semicolonToComma("");
      RFC2253Parser.changeLess32toXML("");
      RFC2253Parser.changeLess32toXML("");
      RFC2253Parser.semicolonToComma("");
      RFC2253Parser.normalize("", false);
      RFC2253Parser.parseATAV("", false);
      // Undeclared exception!
      RFC2253Parser.removeWhiteSpace("", "");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RFC2253Parser.xmldsigtoRFC2253("");
      RFC2253Parser.normalize("#");
      RFC2253Parser.changeLess32toRFC("Q");
      RFC2253Parser.trim("nNwQ9U1s{Z\"wQYe");
      RFC2253Parser.changeLess32toRFC("#");
      String string0 = RFC2253Parser.parseRDN("t ", true);
      assertEquals("t", string0);
      
      RFC2253Parser.changeLess32toXML("U");
      RFC2253Parser.xmldsigtoRFC2253("");
      RFC2253Parser.removeWSandReplace("#", "U", "LAJI");
      RFC2253Parser.normalize("");
      RFC2253Parser.trim("#b;Pf\"c8NP|^UEV");
      String string1 = RFC2253Parser.changeLess32toXML("U");
      assertEquals("U", string1);
      
      RFC2253Parser.semicolonToComma("");
      RFC2253Parser.removeWSandReplace("", "LAJI", "20");
      RFC2253Parser.normalizeV("#", false);
      String string2 = RFC2253Parser.removeWhiteSpace("", "#");
      assertEquals("", string2);
      
      RFC2253Parser.changeLess32toRFC("");
      String string3 = RFC2253Parser.xmldsigtoRFC2253("#b;Pf\"c8NP|^UEV");
      assertEquals("#b,Pf\"c8NP|^UEV", string3);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RFC2253Parser.normalize("");
      String string0 = RFC2253Parser.xmldsigtoRFC2253("[?<wf],lZFM=LB");
      assertEquals("[?<wf],LZFM=LB", string0);
      
      RFC2253Parser.changeLess32toXML("[?<wf],lZFM=LB");
      RFC2253Parser.parseRDN("[?<wf],LZFM=LB", false);
      RFC2253Parser.parseATAV(";", false);
      String string1 = RFC2253Parser.rfc2253toXMLdsig("[?<wf],LZFM=LB");
      assertEquals("[?<wf],LZFM=LB", string1);
      
      RFC2253Parser.normalizeV(";", false);
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      String string2 = RFC2253Parser.changeWStoXML("]\"&");
      assertEquals("]\"&", string2);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RFC2253Parser.xmltoRFC("");
      String string0 = null;
      // Undeclared exception!
      try { 
        RFC2253Parser.trim((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RFC2253Parser.normalizeV("=At/ 7&KAqHCK>Q", false);
      // Undeclared exception!
      try { 
        RFC2253Parser.normalize("=At/ 7&KAqHCK>Q", false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RFC2253Parser.removeWhiteSpace("r5t+.c-c%v@$", "r5t+.c-c%v@$");
      RFC2253Parser rFC2253Parser0 = new RFC2253Parser();
      RFC2253Parser.parseRDN("r5t+.c-c%v@$", false);
      RFC2253Parser.trim("r5t+.c-c%v@$");
      RFC2253Parser.removeWSandReplace("r5t+.c-c%v@$", "r5t+.c-c%v@$", "r5t+.c-c%v@$");
      RFC2253Parser.normalizeAT("\"sfV@N~5V{#%s/ !");
      RFC2253Parser.xmltoRFC("r5t+.c-c%v@$");
      RFC2253Parser.xmltoRFC("r5t+.c-c%v@$");
      RFC2253Parser.normalize("r5t+.c-c%v@$");
      RFC2253Parser.rfctoXML("");
      RFC2253Parser.normalizeV(" L", false);
      RFC2253Parser.xmldsigtoRFC2253("r5t+.c-c%v@$");
      RFC2253Parser.changeLess32toRFC("");
      RFC2253Parser.trim("L");
      RFC2253Parser.changeLess32toXML("\"SFV@N~5V{#%S/ !");
      RFC2253Parser.removeWSandReplace("", "\"SFV@N~5V{#%S/ !", "\"sfV@N~5V{#%s/ !");
      RFC2253Parser.parseRDN("r5t+.c-c%v@$", false);
      RFC2253Parser.changeWStoRFC("");
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWhiteSpace("x", "");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      boolean boolean0 = true;
      RFC2253Parser.normalize("wT5n", true);
      RFC2253Parser.xmltoRFC((String) null);
      String string0 = "T!aL\"we)<C~<.FY";
      // Undeclared exception!
      try { 
        RFC2253Parser.removeWhiteSpace((String) null, "T!aL\"we)<C~<.FY");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.RFC2253Parser", e);
      }
  }
}
