/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:08:44 GMT 2021
 */

package org.apache.xml.security.utils.resolver.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.apache.xml.security.signature.XMLSignatureInput;
import org.apache.xml.security.utils.resolver.ResourceResolverContext;
import org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteURL;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResolverDirectHTTP_ESTest extends ResolverDirectHTTP_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP(hashMap0);
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("!-").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "", true, hashMap0);
      boolean boolean0 = resolverDirectHTTP0.engineCanResolveURI(resourceResolverContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("http://www.w3.org/2009/xmlenc11#").when(attr0).getValue();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.w3.org/2009/xmlenc11");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "http://www.w3.org/2009/xmlenc11#");
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "nE_niVC8IL", false, hashMap0);
      XMLSignatureInput xMLSignatureInput0 = resolverDirectHTTP0.engineResolveURI(resourceResolverContext0);
      assertFalse(xMLSignatureInput0.isNodeSet());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP((Map<String, String>) null);
      // Undeclared exception!
      try { 
        resolverDirectHTTP0.engineResolveURI((ResourceResolverContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      // Undeclared exception!
      try { 
        resolverDirectHTTP0.engineCanResolveURI((ResourceResolverContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("").when(attr0).getValue();
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "", false, (Map<String, String>) null);
      try { 
        resolverDirectHTTP0.engineResolveURI(resourceResolverContext0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.resolver.implementations.ResolverDirectHTTP", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("http://www.w3.org/2009/xmlenc11#", (String) null).when(attr0).getValue();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "nE_niVC8IL", false, hashMap0);
      ResourceResolverContext resourceResolverContext1 = new ResourceResolverContext(resourceResolverContext0.attr, (String) null, true);
      // Undeclared exception!
      try { 
        resolverDirectHTTP0.engineResolveURI(resourceResolverContext1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("R(n\"e&B $(&vbvs", "Content-Type").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "V[jd~M?Dhg3Ve", false);
      Map<String, String> map0 = resourceResolverContext0.getProperties();
      ResourceResolverContext resourceResolverContext1 = new ResourceResolverContext(resourceResolverContext0.attr, "http://santuario.apache.org/c14n/physical", false, map0);
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP((Map<String, String>) null);
      boolean boolean0 = resolverDirectHTTP0.engineCanResolveURI(resourceResolverContext1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("#9[").when(attr0).getValue();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "CanonicalizationMethods", false, hashMap0);
      boolean boolean0 = resolverDirectHTTP0.engineCanResolveURI(resourceResolverContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("h|tp:[G?GY", "").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "h|tp:[G?GY", false);
      Map<String, String> map0 = resourceResolverContext0.getProperties();
      ResourceResolverContext resourceResolverContext1 = new ResourceResolverContext(attr0, "h|tp:[G?GY", true, map0);
      boolean boolean0 = resolverDirectHTTP0.engineCanResolveURI(resourceResolverContext1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext((Attr) null, "kyooarpQl/`'a>", true);
      Map<String, String> map0 = resourceResolverContext0.getProperties();
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP(map0);
      boolean boolean0 = resolverDirectHTTP0.engineCanResolveURI(resourceResolverContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("http://www.w3.org/2009/xmlenc11#").when(attr0).getValue();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "nE_niVC8IL", true, hashMap0);
      boolean boolean0 = resolverDirectHTTP0.engineCanResolveURI(resourceResolverContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP();
      EvoSuiteURL evoSuiteURL0 = new EvoSuiteURL("http://www.w3.org/2009/xmlenc11");
      NetworkHandling.createRemoteTextFile(evoSuiteURL0, "http://www.w3.org/2009/xmlenc11#");
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("http://www.w3.org/2009/xmlenc11#").when(attr0).getValue();
      HashMap<String, String> hashMap0 = new HashMap<String, String>();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, "nE_niVC8IL", true, hashMap0);
      XMLSignatureInput xMLSignatureInput0 = resolverDirectHTTP0.engineResolveURI(resourceResolverContext0);
      assertFalse(xMLSignatureInput0.isNeedsToBeExpanded());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResolverDirectHTTP resolverDirectHTTP0 = new ResolverDirectHTTP((Map<String, String>) null);
      Attr attr0 = mock(Attr.class, new ViolatedAssumptionAnswer());
      doReturn("rDRW O[(>Hb2X9Gn_C").when(attr0).getValue();
      ResourceResolverContext resourceResolverContext0 = new ResourceResolverContext(attr0, (String) null, false, (Map<String, String>) null);
      boolean boolean0 = resolverDirectHTTP0.engineCanResolveURI(resourceResolverContext0);
      assertFalse(boolean0);
  }
}
