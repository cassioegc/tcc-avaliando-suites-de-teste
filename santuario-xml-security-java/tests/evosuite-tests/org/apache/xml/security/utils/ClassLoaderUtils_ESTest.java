/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:40:11 GMT 2021
 */

package org.apache.xml.security.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.net.URL;
import java.util.List;
import org.apache.xml.security.utils.ClassLoaderUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassLoaderUtils_ESTest extends ClassLoaderUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Object> class0 = Object.class;
      List<URL> list0 = ClassLoaderUtils.getResources(" hJf", class0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class<ClassLoaderUtils> class0 = ClassLoaderUtils.class;
      URL uRL0 = ClassLoaderUtils.getResource("%^z~2fR3[&#,].*", class0);
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Class<ClassLoaderUtils> class0 = ClassLoaderUtils.class;
      Class<?> class1 = ClassLoaderUtils.loadClass("org.apache.xml.security.utils.ClassLoaderUtils$1", class0);
      assertEquals(0, class1.getModifiers());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Class<Object> class0 = Object.class;
      Class<?> class1 = ClassLoaderUtils.loadClass("org.apache.xml.security.utils.ClassLoaderUtils", class0);
      assertFalse(class1.isAnnotation());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Class<URL> class0 = URL.class;
      // Undeclared exception!
      try { 
        ClassLoaderUtils.loadClass((String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassLoaderUtils.getResources("9l", (Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ClassLoaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassLoaderUtils.getResourceAsStream("org.apache.xml.security.utils.ClassLoaderUtils$1", (Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ClassLoaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        ClassLoaderUtils.getResource("O>b|&:d JZ", (Class<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ClassLoaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<URL> class0 = URL.class;
      List<URL> list0 = ClassLoaderUtils.getResources("/LVsPV_I}aJDHkR", class0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class<Object> class0 = Object.class;
      URL uRL0 = ClassLoaderUtils.getResource("/`IJ~0", class0);
      assertNull(uRL0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Class<Object> class0 = Object.class;
      URL uRL0 = ClassLoaderUtils.getResource("", class0);
      assertEquals("", uRL0.getAuthority());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Class<URL> class0 = URL.class;
      // Undeclared exception!
      try { 
        ClassLoaderUtils.getResource((String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ClassLoaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<ClassLoaderUtils> class0 = ClassLoaderUtils.class;
      try { 
        ClassLoaderUtils.loadClass("", class0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      try { 
        ClassLoaderUtils.loadClass("OV'[HV", (Class<?>) null);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Class<String> class0 = String.class;
      try { 
        ClassLoaderUtils.loadClass("", class0);
        fail("Expecting exception: ClassNotFoundException");
      
      } catch(ClassNotFoundException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Class<ClassLoaderUtils> class0 = ClassLoaderUtils.class;
      List<URL> list0 = ClassLoaderUtils.getResources("^P", class0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Class<Object> class0 = Object.class;
      List<URL> list0 = ClassLoaderUtils.getResources("", class0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Class<ClassLoaderUtils> class0 = ClassLoaderUtils.class;
      // Undeclared exception!
      try { 
        ClassLoaderUtils.getResources((String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ClassLoaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      InputStream inputStream0 = ClassLoaderUtils.getResourceAsStream("@^8D)o", class0);
      assertNull(inputStream0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Class<ClassLoaderUtils> class0 = ClassLoaderUtils.class;
      // Undeclared exception!
      try { 
        ClassLoaderUtils.getResourceAsStream((String) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ClassLoaderUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      InputStream inputStream0 = ClassLoaderUtils.getResourceAsStream("", (Class<?>) null);
      assertEquals(50, inputStream0.available());
  }
}
