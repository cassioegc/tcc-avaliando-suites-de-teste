/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:11:18 GMT 2021
 */

package org.apache.xml.security.utils.resolver;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.utils.resolver.ResourceResolverException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResourceResolverException_ESTest extends ResourceResolverException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ResourceResolverException resourceResolverException0 = new ResourceResolverException("z>%X\"<gkv;dM4p*dv&", "", "");
      String string0 = resourceResolverException0.getbaseURI();
      assertEquals("", resourceResolverException0.getURI());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockException mockException0 = new MockException();
      ResourceResolverException resourceResolverException0 = new ResourceResolverException(mockException0, "", "", "");
      String string0 = resourceResolverException0.getURI();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ResourceResolverException resourceResolverException0 = new ResourceResolverException((Exception) null, "", "CVlbT`YlC", "", objectArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ResourceResolverException resourceResolverException0 = new ResourceResolverException("<q[BR;mgO/", "t&u}hvY&3z", "t&u}hvY&3z");
      resourceResolverException0.setURI("org.apache.xml.security.utils.resolver.ResourceResolverException: You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.");
      assertEquals("t&u}hvY&3z", resourceResolverException0.getbaseURI());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockException mockException0 = new MockException();
      ResourceResolverException resourceResolverException0 = new ResourceResolverException("", mockException0, (String) null, "");
      String string0 = resourceResolverException0.getURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ResourceResolverException resourceResolverException0 = new ResourceResolverException("<q[BR;mgO/", "t&u}hvY&3z", "t&u}hvY&3z");
      resourceResolverException0.setbaseURI(";-!");
      assertEquals("t&u}hvY&3z", resourceResolverException0.getURI());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      ResourceResolverException resourceResolverException0 = new ResourceResolverException("%)4a_zb];xW5JgL91", objectArray0, (Exception) null, "%)4a_zb];xW5JgL91", (String) null);
      ResourceResolverException resourceResolverException1 = new ResourceResolverException(resourceResolverException0, "d$xnd|*`$C2$OvFR)ue", ".t\"Y7f51CA", "%)4a_zb];xW5JgL91");
      assertFalse(resourceResolverException1.equals((Object)resourceResolverException0));
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      ResourceResolverException resourceResolverException0 = new ResourceResolverException("<q[BR;mgO/", "t&u}hvY&3z", "t&u}hvY&3z");
      String string0 = resourceResolverException0.getURI();
      assertEquals("t&u}hvY&3z", resourceResolverException0.getbaseURI());
      assertEquals("t&u}hvY&3z", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      ResourceResolverException resourceResolverException0 = new ResourceResolverException("<q[BR;mgO/", "t&u}hvY&3z", "t&u}hvY&3z");
      String string0 = resourceResolverException0.getbaseURI();
      assertEquals("t&u}hvY&3z", resourceResolverException0.getURI());
      assertEquals("t&u}hvY&3z", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      ResourceResolverException resourceResolverException0 = new ResourceResolverException((String) null, objectArray0, (String) null, "0Z #a=tf [Dfx'JUE");
      resourceResolverException0.setbaseURI((String) null);
      String string0 = resourceResolverException0.getbaseURI();
      assertNull(string0);
  }
}
