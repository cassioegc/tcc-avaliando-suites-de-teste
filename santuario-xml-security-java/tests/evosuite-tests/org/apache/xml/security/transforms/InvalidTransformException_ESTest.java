/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 16:37:24 GMT 2021
 */

package org.apache.xml.security.transforms;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.transforms.InvalidTransformException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InvalidTransformException_ESTest extends InvalidTransformException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InvalidTransformException invalidTransformException0 = new InvalidTransformException();
      Object[] objectArray0 = new Object[8];
      InvalidTransformException invalidTransformException1 = new InvalidTransformException(invalidTransformException0, "-f]*}@zDL@cXgV", objectArray0);
      assertFalse(invalidTransformException1.equals((Object)invalidTransformException0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InvalidTransformException invalidTransformException0 = new InvalidTransformException();
      InvalidTransformException invalidTransformException1 = new InvalidTransformException("j(UmJb?k#_`1", invalidTransformException0);
      assertFalse(invalidTransformException1.equals((Object)invalidTransformException0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[8];
      InvalidTransformException invalidTransformException0 = new InvalidTransformException("");
      InvalidTransformException invalidTransformException1 = new InvalidTransformException("", objectArray0, invalidTransformException0);
      assertFalse(invalidTransformException1.equals((Object)invalidTransformException0));
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      InvalidTransformException invalidTransformException0 = new InvalidTransformException("Hm*>xRRFHjh0I2Zr>", objectArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InvalidTransformException invalidTransformException0 = new InvalidTransformException();
      InvalidTransformException invalidTransformException1 = new InvalidTransformException(invalidTransformException0, "");
      assertFalse(invalidTransformException1.equals((Object)invalidTransformException0));
  }
}
