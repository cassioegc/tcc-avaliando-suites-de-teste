/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:15:04 GMT 2021
 */

package org.apache.xml.security.encryption;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.encryption.AbstractSerializer;
import org.apache.xml.security.encryption.DocumentSerializer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractSerializer_ESTest extends AbstractSerializer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode1, iIOMetadataNode1);
      byte[] byteArray1 = AbstractSerializer.createContext(byteArray0, node0);
      assertEquals(58, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("a#%7O6 iZEq9");
      Node node0 = iIOMetadataNode0.insertBefore(iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      AbstractSerializer.createContext(byteArray0, node0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        AbstractSerializer.createContext((byte[]) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.OutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("xmlns:a#`%7O6 iZEq9", "9[{hJt1ex(43o>A");
      byte[] byteArray1 = AbstractSerializer.createContext(byteArray0, iIOMetadataNode0);
      assertEquals(96, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttributeNS("*OeCA[FP", "*OeCA[FP", "*OeCA[FP");
      byte[] byteArray1 = AbstractSerializer.createContext(byteArray0, iIOMetadataNode0);
      assertEquals(58, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DocumentSerializer documentSerializer0 = null;
      try {
        documentSerializer0 = new DocumentSerializer("*OeCA[FP", false);
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.c14n.Canonicalizer", e);
      }
  }
}
