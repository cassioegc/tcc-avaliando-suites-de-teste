/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:25:35 GMT 2021
 */

package org.apache.xml.security.exceptions;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.exceptions.XMLSecurityRuntimeException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSecurityRuntimeException_ESTest extends XMLSecurityRuntimeException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockException mockException0 = new MockException((String) null);
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException(mockException0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      MockException mockException0 = new MockException("");
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException("", objectArray0, mockException0);
      String string0 = xMLSecurityRuntimeException0.getMsgID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = null;
      try {
        xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException((Exception) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.exceptions.XMLSecurityRuntimeException", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MockException mockException0 = new MockException("bfa2-!c(~jX%K\";^6W");
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException("bfa2-!c(~jX%K\";^6W", objectArray0, mockException0);
      Exception exception0 = xMLSecurityRuntimeException0.getOriginalException();
      assertSame(mockException0, exception0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException();
      Exception exception0 = xMLSecurityRuntimeException0.getOriginalException();
      assertNull(exception0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      MockException mockException0 = new MockException("bfa2-!c(~jX%K\";^6W");
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException("bfa2-!c(~jX%K\";^6W", objectArray0, mockException0);
      String string0 = xMLSecurityRuntimeException0.toString();
      assertEquals("org.apache.xml.security.exceptions.XMLSecurityRuntimeException: You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.\nOriginal Exception was org.evosuite.runtime.mock.java.lang.MockThrowable: bfa2-!c(~jX%K\";^6W", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[3];
      MockException mockException0 = new MockException("");
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException("", objectArray0, mockException0);
      XMLSecurityRuntimeException xMLSecurityRuntimeException1 = new XMLSecurityRuntimeException(xMLSecurityRuntimeException0);
      String string0 = xMLSecurityRuntimeException1.getMsgID();
      assertNotNull(string0);
      assertEquals("Missing message ID", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException("bfa2-!c(~jX%K\";^6W");
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException();
      String string0 = xMLSecurityRuntimeException0.toString();
      assertNotNull(string0);
      assertEquals("org.apache.xml.security.exceptions.XMLSecurityRuntimeException: Missing message string", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      XMLSecurityRuntimeException xMLSecurityRuntimeException0 = new XMLSecurityRuntimeException("k.|Y.psf:\"h", (Object[]) null);
      XMLSecurityRuntimeException xMLSecurityRuntimeException1 = new XMLSecurityRuntimeException("k.|Y.psf:\"h", xMLSecurityRuntimeException0);
      assertFalse(xMLSecurityRuntimeException1.equals((Object)xMLSecurityRuntimeException0));
  }
}
