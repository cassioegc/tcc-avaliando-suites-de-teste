/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:04:01 GMT 2021
 */

package org.apache.xml.security.algorithms.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.Provider;
import org.apache.xml.security.algorithms.implementations.SignatureDSA;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SignatureDSA_ESTest extends SignatureDSA_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SignatureDSA.SHA256 signatureDSA_SHA256_0 = null;
      try {
        signatureDSA_SHA256_0 = new SignatureDSA.SHA256();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SignatureDSA signatureDSA0 = null;
      try {
        signatureDSA0 = new SignatureDSA();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SignatureDSA signatureDSA0 = null;
      try {
        signatureDSA0 = new SignatureDSA((Provider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }
}
