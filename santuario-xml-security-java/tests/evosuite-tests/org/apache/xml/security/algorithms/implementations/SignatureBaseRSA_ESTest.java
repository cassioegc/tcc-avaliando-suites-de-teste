/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:06:27 GMT 2021
 */

package org.apache.xml.security.algorithms.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.Provider;
import org.apache.xml.security.algorithms.implementations.SignatureBaseRSA;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.security.MockSecureRandom;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SignatureBaseRSA_ESTest extends SignatureBaseRSA_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0 = SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.fromXmlDigestAlgorithm("http://www.w3.org/2001/04/xmldsig-more#sha384");
      assertEquals(SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.SHA384, signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0 = SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.fromDigestAlgorithm("SHA-512");
      assertEquals(SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.SHA512, signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      try { 
        SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.fromXmlDigestAlgorithm("K-yA&bHC}g^V-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing message string
         //
         verifyException("org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASSAPSS$DigestAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockSecureRandom mockSecureRandom0 = new MockSecureRandom();
      Provider provider0 = mockSecureRandom0.getProvider();
      SignatureBaseRSA.SignatureRSASHA1 signatureBaseRSA_SignatureRSASHA1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA1_0 = new SignatureBaseRSA.SignatureRSASHA1(provider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA1 signatureBaseRSA_SignatureRSASHA1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA1_0 = new SignatureBaseRSA.SignatureRSASHA1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASSAPSS signatureBaseRSA_SignatureRSASSAPSS0 = null;
      try {
        signatureBaseRSA_SignatureRSASSAPSS0 = new SignatureBaseRSA.SignatureRSASSAPSS();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockSecureRandom mockSecureRandom0 = new MockSecureRandom();
      Provider provider0 = mockSecureRandom0.getProvider();
      SignatureBaseRSA.SignatureRSASHA3_256MGF1 signatureBaseRSA_SignatureRSASHA3_256MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA3_256MGF1_0 = new SignatureBaseRSA.SignatureRSASHA3_256MGF1(provider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA3_256MGF1 signatureBaseRSA_SignatureRSASHA3_256MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA3_256MGF1_0 = new SignatureBaseRSA.SignatureRSASHA3_256MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA1MGF1 signatureBaseRSA_SignatureRSASHA1MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA1MGF1_0 = new SignatureBaseRSA.SignatureRSASHA1MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA384 signatureBaseRSA_SignatureRSASHA384_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA384_0 = new SignatureBaseRSA.SignatureRSASHA384((Provider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA384 signatureBaseRSA_SignatureRSASHA384_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA384_0 = new SignatureBaseRSA.SignatureRSASHA384();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SignatureBaseRSA.SignatureRSAMD5 signatureBaseRSA_SignatureRSAMD5_0 = null;
      try {
        signatureBaseRSA_SignatureRSAMD5_0 = new SignatureBaseRSA.SignatureRSAMD5();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SignatureBaseRSA.SignatureRSAMD5 signatureBaseRSA_SignatureRSAMD5_0 = null;
      try {
        signatureBaseRSA_SignatureRSAMD5_0 = new SignatureBaseRSA.SignatureRSAMD5((Provider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0 = SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.SHA256;
      int int0 = signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0.getSaltLength();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.fromDigestAlgorithm("-^-ql}T#Y");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Missing message string
         //
         verifyException("org.apache.xml.security.algorithms.implementations.SignatureBaseRSA$SignatureRSASSAPSS$DigestAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0 = SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.fromXmlDigestAlgorithm("http://www.w3.org/2001/04/xmlenc#sha256");
      assertEquals(SignatureBaseRSA.SignatureRSASSAPSS.DigestAlgorithm.SHA256, signatureBaseRSA_SignatureRSASSAPSS_DigestAlgorithm0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA256 signatureBaseRSA_SignatureRSASHA256_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA256_0 = new SignatureBaseRSA.SignatureRSASHA256();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA512 signatureBaseRSA_SignatureRSASHA512_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA512_0 = new SignatureBaseRSA.SignatureRSASHA512();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockSecureRandom mockSecureRandom0 = new MockSecureRandom();
      Provider provider0 = mockSecureRandom0.getProvider();
      SignatureBaseRSA.SignatureRSASHA512 signatureBaseRSA_SignatureRSASHA512_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA512_0 = new SignatureBaseRSA.SignatureRSASHA512(provider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA224 signatureBaseRSA_SignatureRSASHA224_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA224_0 = new SignatureBaseRSA.SignatureRSASHA224();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA224 signatureBaseRSA_SignatureRSASHA224_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA224_0 = new SignatureBaseRSA.SignatureRSASHA224((Provider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MockSecureRandom mockSecureRandom0 = new MockSecureRandom((-4132L));
      Provider provider0 = mockSecureRandom0.getProvider();
      SignatureBaseRSA.SignatureRSASHA3_384MGF1 signatureBaseRSA_SignatureRSASHA3_384MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA3_384MGF1_0 = new SignatureBaseRSA.SignatureRSASHA3_384MGF1(provider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA3_384MGF1 signatureBaseRSA_SignatureRSASHA3_384MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA3_384MGF1_0 = new SignatureBaseRSA.SignatureRSASHA3_384MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA384MGF1 signatureBaseRSA_SignatureRSASHA384MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA384MGF1_0 = new SignatureBaseRSA.SignatureRSASHA384MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MockSecureRandom mockSecureRandom0 = new MockSecureRandom((-168L));
      Provider provider0 = mockSecureRandom0.getProvider();
      SignatureBaseRSA.SignatureRSASHA384MGF1 signatureBaseRSA_SignatureRSASHA384MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA384MGF1_0 = new SignatureBaseRSA.SignatureRSASHA384MGF1(provider0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA224MGF1 signatureBaseRSA_SignatureRSASHA224MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA224MGF1_0 = new SignatureBaseRSA.SignatureRSASHA224MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA256MGF1 signatureBaseRSA_SignatureRSASHA256MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA256MGF1_0 = new SignatureBaseRSA.SignatureRSASHA256MGF1((Provider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA256MGF1 signatureBaseRSA_SignatureRSASHA256MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA256MGF1_0 = new SignatureBaseRSA.SignatureRSASHA256MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SignatureBaseRSA.SignatureRSARIPEMD160 signatureBaseRSA_SignatureRSARIPEMD160_0 = null;
      try {
        signatureBaseRSA_SignatureRSARIPEMD160_0 = new SignatureBaseRSA.SignatureRSARIPEMD160();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA3_224MGF1 signatureBaseRSA_SignatureRSASHA3_224MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA3_224MGF1_0 = new SignatureBaseRSA.SignatureRSASHA3_224MGF1((Provider) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA3_224MGF1 signatureBaseRSA_SignatureRSASHA3_224MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA3_224MGF1_0 = new SignatureBaseRSA.SignatureRSASHA3_224MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA3_512MGF1 signatureBaseRSA_SignatureRSASHA3_512MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA3_512MGF1_0 = new SignatureBaseRSA.SignatureRSASHA3_512MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SignatureBaseRSA.SignatureRSASHA512MGF1 signatureBaseRSA_SignatureRSASHA512MGF1_0 = null;
      try {
        signatureBaseRSA_SignatureRSASHA512MGF1_0 = new SignatureBaseRSA.SignatureRSASHA512MGF1();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.security.Signature", e);
      }
  }
}
