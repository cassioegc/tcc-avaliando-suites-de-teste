/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:00:36 GMT 2021
 */

package org.apache.xml.security.keys.content.x509;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.security.cert.X509Certificate;
import javax.imageio.metadata.IIOMetadataNode;
import javax.security.auth.x500.X500Principal;
import org.apache.xml.security.keys.content.x509.XMLX509IssuerSerial;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLX509IssuerSerial_ESTest extends XMLX509IssuerSerial_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      doReturn((X500Principal) null).when(x509Certificate0).getIssuerX500Principal();
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial((Document) null, x509Certificate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.content.x509.XMLX509IssuerSerial", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial((Document) null, "5", "5");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial((Document) null, "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509IssuerSerial");
      XMLX509IssuerSerial xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "X509IssuerSerial");
      String string0 = xMLX509IssuerSerial0.getBaseLocalName();
      assertEquals("X509IssuerSerial", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509IssuerSerial");
      XMLX509IssuerSerial xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "X509IssuerSerial");
      // Undeclared exception!
      try { 
        xMLX509IssuerSerial0.getSerialNumber();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509IssuerSerial");
      XMLX509IssuerSerial xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "X509IssuerSerial");
      boolean boolean0 = xMLX509IssuerSerial0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509IssuerSerial");
      XMLX509IssuerSerial xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "X509IssuerSerial");
      // Undeclared exception!
      try { 
        xMLX509IssuerSerial0.equals(xMLX509IssuerSerial0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509IssuerSerial");
      XMLX509IssuerSerial xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "X509IssuerSerial");
      // Undeclared exception!
      try { 
        xMLX509IssuerSerial0.getSerialNumberInteger();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509IssuerSerial");
      XMLX509IssuerSerial xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "X509IssuerSerial");
      // Undeclared exception!
      try { 
        xMLX509IssuerSerial0.getIssuerName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial((Document) null, "R2J", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial((Document) null, "bJ?o[L}2:0E>^]<", "{YE/*[zmoe*2\"~?*tr");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"{YE/*[zmo\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509IssuerSerial");
      XMLX509IssuerSerial xMLX509IssuerSerial0 = new XMLX509IssuerSerial(iIOMetadataNode0, "X509IssuerSerial");
      // Undeclared exception!
      try { 
        xMLX509IssuerSerial0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      X500Principal x500Principal0 = new X500Principal("");
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      doReturn(x500Principal0).when(x509Certificate0).getIssuerX500Principal();
      doReturn((BigInteger) null).when(x509Certificate0).getSerialNumber();
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial((Document) null, x509Certificate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ONE;
      XMLX509IssuerSerial xMLX509IssuerSerial0 = null;
      try {
        xMLX509IssuerSerial0 = new XMLX509IssuerSerial((Document) null, "", bigInteger0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }
}
