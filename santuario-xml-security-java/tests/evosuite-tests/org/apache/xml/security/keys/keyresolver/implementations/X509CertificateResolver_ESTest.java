/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:42:43 GMT 2021
 */

package org.apache.xml.security.keys.keyresolver.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.cert.X509Certificate;
import javax.crypto.SecretKey;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver;
import org.apache.xml.security.keys.storage.StorageResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class X509CertificateResolver_ESTest extends X509CertificateResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("_<TL|.");
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      X509Certificate x509Certificate0 = x509CertificateResolver0.engineResolveX509Certificate(iIOMetadataNode0, "_<TL|.", storageResolver0, true);
      assertNull(x509Certificate0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("Missing message ID");
      boolean boolean0 = x509CertificateResolver0.engineCanResolve(iIOMetadataNode0, "Missing message ID", (StorageResolver) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      // Undeclared exception!
      try { 
        x509CertificateResolver0.engineResolveX509Certificate((Element) null, "p&o(S2kqjbK-ECE", (StorageResolver) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      // Undeclared exception!
      try { 
        x509CertificateResolver0.engineResolvePublicKey((Element) null, "k)(A/9bCer>_", (StorageResolver) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PublicKey publicKey0 = x509CertificateResolver0.engineResolvePublicKey(iIOMetadataNode0, "h5?&*-[5p0*GK", (StorageResolver) null, true);
      assertNull(publicKey0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      SecretKey secretKey0 = x509CertificateResolver0.engineResolveSecretKey(iIOMetadataNode0, "h5?&*-[5p0*GK", (StorageResolver) null, true);
      assertNull(secretKey0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PrivateKey privateKey0 = x509CertificateResolver0.engineResolvePrivateKey(iIOMetadataNode0, "h5?&*-[5p0*GK", (StorageResolver) null, true);
      assertNull(privateKey0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      X509CertificateResolver x509CertificateResolver0 = new X509CertificateResolver();
      // Undeclared exception!
      try { 
        x509CertificateResolver0.engineCanResolve((Element) null, "", (StorageResolver) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.keyresolver.implementations.X509CertificateResolver", e);
      }
  }
}
