/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:32:27 GMT 2021
 */

package org.apache.xml.security.keys.keyresolver.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.cert.X509Certificate;
import javax.crypto.SecretKey;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.keys.keyresolver.implementations.X509IssuerSerialResolver;
import org.apache.xml.security.keys.storage.StorageResolver;
import org.apache.xml.security.keys.storage.StorageResolverSpi;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class X509IssuerSerialResolver_ESTest extends X509IssuerSerialResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      X509IssuerSerialResolver x509IssuerSerialResolver0 = new X509IssuerSerialResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("AS=bx`");
      X509Certificate x509Certificate0 = x509IssuerSerialResolver0.engineResolveX509Certificate(iIOMetadataNode0, "xg2hg>D/6?Q|jI", (StorageResolver) null, false);
      assertNull(x509Certificate0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      X509IssuerSerialResolver x509IssuerSerialResolver0 = new X509IssuerSerialResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((StorageResolverSpi) null);
      PublicKey publicKey0 = x509IssuerSerialResolver0.engineResolvePublicKey(iIOMetadataNode0, "_s$E_iR4e,7", storageResolver0, false);
      assertNull(publicKey0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      X509IssuerSerialResolver x509IssuerSerialResolver0 = new X509IssuerSerialResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((StorageResolverSpi) null);
      boolean boolean0 = x509IssuerSerialResolver0.engineCanResolve(iIOMetadataNode0, "_s$E_iR4e,7", storageResolver0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      X509IssuerSerialResolver x509IssuerSerialResolver0 = new X509IssuerSerialResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((StorageResolverSpi) null);
      SecretKey secretKey0 = x509IssuerSerialResolver0.engineResolveSecretKey(iIOMetadataNode0, "_s$E_iR4e,7", storageResolver0, false);
      assertNull(secretKey0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      X509IssuerSerialResolver x509IssuerSerialResolver0 = new X509IssuerSerialResolver();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((StorageResolverSpi) null);
      PrivateKey privateKey0 = x509IssuerSerialResolver0.engineResolvePrivateKey(iIOMetadataNode0, "_s$E_iR4e,7", storageResolver0, false);
      assertNull(privateKey0);
  }
}
