/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:54:49 GMT 2021
 */

package org.apache.xml.security.keys.content;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.PublicKey;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.keys.content.KeyValue;
import org.apache.xml.security.keys.content.keyvalues.DSAKeyValue;
import org.apache.xml.security.keys.content.keyvalues.RSAKeyValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KeyValue_ESTest extends KeyValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      KeyValue keyValue0 = null;
      try {
        keyValue0 = new KeyValue(iIOMetadataNode0, "u4QN.|N/M");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeyValue keyValue0 = null;
      try {
        keyValue0 = new KeyValue((Document) null, (PublicKey) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("KeyValue");
      KeyValue keyValue0 = new KeyValue(iIOMetadataNode0, "]Naftiv@y|~>Z4|0");
      String string0 = keyValue0.getBaseLocalName();
      assertEquals("KeyValue", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      KeyValue keyValue0 = null;
      try {
        keyValue0 = new KeyValue((Document) null, iIOMetadataNode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("KeyValue");
      KeyValue keyValue0 = new KeyValue(iIOMetadataNode0, "KeyValue");
      PublicKey publicKey0 = keyValue0.getPublicKey();
      assertNull(publicKey0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      KeyValue keyValue0 = null;
      try {
        keyValue0 = new KeyValue((Document) null, (DSAKeyValue) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      KeyValue keyValue0 = null;
      try {
        keyValue0 = new KeyValue((Document) null, (RSAKeyValue) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }
}
