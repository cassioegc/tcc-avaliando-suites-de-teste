/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:39:18 GMT 2021
 */

package org.apache.xml.security.keys.keyresolver.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.cert.X509Certificate;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.keys.keyresolver.implementations.SingleKeyResolver;
import org.apache.xml.security.keys.storage.StorageResolver;
import org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SingleKeyResolver_ESTest extends SingleKeyResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setNodeValue("KeyName");
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.appendChild(iIOMetadataNode0);
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PrivateKey privateKey0 = mock(PrivateKey.class, new ViolatedAssumptionAnswer());
      doReturn("KeyName").when(privateKey0).toString();
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("KeyName", privateKey0);
      PrivateKey privateKey1 = singleKeyResolver0.engineResolvePrivateKey(iIOMetadataNode1, "KeyName", storageResolver0, true);
      assertNull(privateKey1.getFormat());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.appendChild(iIOMetadataNode0);
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PrivateKey privateKey0 = mock(PrivateKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("Mp ", privateKey0);
      PrivateKey privateKey1 = singleKeyResolver0.engineResolvePrivateKey(iIOMetadataNode1, "Mp ", storageResolver0, false);
      assertNull(privateKey1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PrivateKey privateKey0 = mock(PrivateKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("Mp ", privateKey0);
      // Undeclared exception!
      try { 
        singleKeyResolver0.engineResolvePrivateKey(iIOMetadataNode0, "Mp ", storageResolver0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.keyresolver.implementations.SingleKeyResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "M ");
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("M ", secretKeySpec0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      SecretKey secretKey0 = singleKeyResolver0.engineResolveSecretKey(iIOMetadataNode0, "M ", storageResolver0, true);
      assertNull(secretKey0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "M ");
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("M ", secretKeySpec0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      // Undeclared exception!
      try { 
        singleKeyResolver0.engineResolveSecretKey(iIOMetadataNode0, "M ", storageResolver0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.keyresolver.implementations.SingleKeyResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("%", publicKey0);
      SecretKey secretKey0 = singleKeyResolver0.engineResolveSecretKey(iIOMetadataNode0, "%", storageResolver0, false);
      assertNull(secretKey0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.appendChild(iIOMetadataNode0);
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      iIOMetadataNode1.setNodeValue("");
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      doReturn("").when(publicKey0).toString();
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("", publicKey0);
      PublicKey publicKey1 = singleKeyResolver0.engineResolvePublicKey(iIOMetadataNode1, "", storageResolver0, false);
      assertNull(publicKey1.getFormat());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      IIOMetadataNode iIOMetadataNode1 = (IIOMetadataNode)iIOMetadataNode0.appendChild(iIOMetadataNode0);
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("%", publicKey0);
      PublicKey publicKey1 = singleKeyResolver0.engineResolvePublicKey(iIOMetadataNode1, "%", storageResolver0, false);
      assertNull(publicKey1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PrivateKey privateKey0 = mock(PrivateKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("Mp ", privateKey0);
      PublicKey publicKey0 = singleKeyResolver0.engineResolvePublicKey(iIOMetadataNode0, "", storageResolver0, false);
      assertNull(publicKey0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PrivateKey privateKey0 = mock(PrivateKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("Mp ", privateKey0);
      X509Certificate x509Certificate0 = singleKeyResolver0.engineResolveX509Certificate(iIOMetadataNode0, "dsig11", storageResolver0, true);
      assertNull(x509Certificate0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("b`\"PB.J9 0&nsu", (SecretKey) null);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PrivateKey privateKey0 = singleKeyResolver0.engineResolvePrivateKey(iIOMetadataNode0, "", (StorageResolver) null, false);
      assertNull(privateKey0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("", publicKey0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      StorageResolver storageResolver0 = new StorageResolver(singleCertificateResolver0);
      // Undeclared exception!
      try { 
        singleKeyResolver0.engineResolvePublicKey(iIOMetadataNode0, "KeyName", storageResolver0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.keyresolver.implementations.SingleKeyResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      StorageResolver storageResolver0 = new StorageResolver((X509Certificate) null);
      PrivateKey privateKey0 = mock(PrivateKey.class, new ViolatedAssumptionAnswer());
      SingleKeyResolver singleKeyResolver0 = new SingleKeyResolver("KeyName", privateKey0);
      boolean boolean0 = singleKeyResolver0.engineCanResolve(iIOMetadataNode0, "KeyName", storageResolver0);
      assertFalse(boolean0);
  }
}
