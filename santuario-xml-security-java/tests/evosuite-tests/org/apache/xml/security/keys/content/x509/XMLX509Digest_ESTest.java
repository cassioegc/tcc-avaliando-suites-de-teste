/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:55:57 GMT 2021
 */

package org.apache.xml.security.keys.content.x509;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.cert.X509Certificate;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.keys.content.x509.XMLX509Digest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLX509Digest_ESTest extends XMLX509Digest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509Digest");
      XMLX509Digest xMLX509Digest0 = new XMLX509Digest(iIOMetadataNode0, "X509Digest");
      Node node0 = iIOMetadataNode0.appendChild(iIOMetadataNode0);
      iIOMetadataNode0.insertBefore(node0, node0);
      // Undeclared exception!
      xMLX509Digest0.getDigestBytes();
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      XMLX509Digest xMLX509Digest0 = null;
      try {
        xMLX509Digest0 = new XMLX509Digest(iIOMetadataNode0, "");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509Digest");
      XMLX509Digest xMLX509Digest0 = new XMLX509Digest(iIOMetadataNode0, "");
      Attr attr0 = xMLX509Digest0.getAlgorithmAttr();
      assertNull(attr0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509Digest");
      XMLX509Digest xMLX509Digest0 = new XMLX509Digest(iIOMetadataNode0, "X509Digest");
      String string0 = xMLX509Digest0.getBaseLocalName();
      assertEquals("X509Digest", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      try { 
        XMLX509Digest.getDigestBytesFromCert(x509Certificate0, "OlgFrithm");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.keys.content.x509.XMLX509Digest", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509Digest");
      XMLX509Digest xMLX509Digest0 = new XMLX509Digest(iIOMetadataNode0, "X509Digest");
      byte[] byteArray0 = xMLX509Digest0.getDigestBytes();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      XMLX509Digest xMLX509Digest0 = null;
      try {
        xMLX509Digest0 = new XMLX509Digest((Document) null, byteArray0, "B(GqKS");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.Signature11ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      XMLX509Digest xMLX509Digest0 = null;
      try {
        xMLX509Digest0 = new XMLX509Digest((Document) null, x509Certificate0, "I9");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.Signature11ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509Digest");
      XMLX509Digest xMLX509Digest0 = new XMLX509Digest(iIOMetadataNode0, "X509Digest");
      // Undeclared exception!
      try { 
        xMLX509Digest0.getAlgorithm();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.content.x509.XMLX509Digest", e);
      }
  }
}
