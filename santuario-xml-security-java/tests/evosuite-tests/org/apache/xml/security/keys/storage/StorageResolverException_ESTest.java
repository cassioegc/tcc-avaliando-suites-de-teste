/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:30:12 GMT 2021
 */

package org.apache.xml.security.keys.storage;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.keys.storage.StorageResolverException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StorageResolverException_ESTest extends StorageResolverException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StorageResolverException storageResolverException0 = null;
      try {
        storageResolverException0 = new StorageResolverException((Exception) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.exceptions.XMLSecurityException", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StorageResolverException storageResolverException0 = new StorageResolverException();
      StorageResolverException storageResolverException1 = new StorageResolverException(storageResolverException0, "org.apache.xml.security.keys.storage.StorageResolverException");
      assertFalse(storageResolverException1.equals((Object)storageResolverException0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Object[] objectArray0 = new Object[2];
      StorageResolverException storageResolverException0 = new StorageResolverException("LiPqm", objectArray0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      StorageResolverException storageResolverException0 = new StorageResolverException();
      StorageResolverException storageResolverException1 = new StorageResolverException("<E.'8dG,Qu!>MPZlW1]", objectArray0, storageResolverException0);
      assertFalse(storageResolverException1.equals((Object)storageResolverException0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockException mockException0 = new MockException("");
      StorageResolverException storageResolverException0 = new StorageResolverException(":$IGI~4-}CMIo%", mockException0);
      StorageResolverException storageResolverException1 = new StorageResolverException(storageResolverException0);
      assertFalse(storageResolverException1.equals((Object)storageResolverException0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockException mockException0 = new MockException("");
      Throwable[] throwableArray0 = mockException0.getSuppressed();
      StorageResolverException storageResolverException0 = new StorageResolverException(":$IGI~4-}CMIo%", mockException0);
      StorageResolverException storageResolverException1 = new StorageResolverException(storageResolverException0, "Missing message ID", throwableArray0);
      assertFalse(storageResolverException1.equals((Object)storageResolverException0));
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StorageResolverException storageResolverException0 = new StorageResolverException((String) null);
  }
}
