/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:38:08 GMT 2021
 */

package org.apache.xml.security.keys.keyresolver.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.cert.X509Certificate;
import javax.crypto.SecretKey;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.keys.keyresolver.implementations.SecretKeyResolver;
import org.apache.xml.security.keys.storage.StorageResolver;
import org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SecretKeyResolver_ESTest extends SecretKeyResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SecretKeyResolver secretKeyResolver0 = new SecretKeyResolver((KeyStore) null, (char[]) null);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.xml.security.keys.storage.implementations.KeyStoreResolver");
      boolean boolean0 = secretKeyResolver0.engineCanResolve(iIOMetadataNode0, "org.apache.xml.security.keys.storage.implementations.KeyStoreResolver", (StorageResolver) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      char[] charArray0 = new char[8];
      SecretKeyResolver secretKeyResolver0 = new SecretKeyResolver((KeyStore) null, charArray0);
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      StorageResolver storageResolver0 = new StorageResolver(singleCertificateResolver0);
      // Undeclared exception!
      try { 
        secretKeyResolver0.engineResolveSecretKey((Element) null, "w3Kw5|CW>{xA", storageResolver0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.keyresolver.implementations.SecretKeyResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      char[] charArray0 = new char[2];
      SecretKeyResolver secretKeyResolver0 = new SecretKeyResolver((KeyStore) null, charArray0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      SecretKey secretKey0 = secretKeyResolver0.engineResolveSecretKey(iIOMetadataNode0, (String) null, (StorageResolver) null, false);
      assertNull(secretKey0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      char[] charArray0 = new char[2];
      SecretKeyResolver secretKeyResolver0 = new SecretKeyResolver((KeyStore) null, charArray0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PublicKey publicKey0 = secretKeyResolver0.engineResolvePublicKey(iIOMetadataNode0, (String) null, (StorageResolver) null, false);
      assertNull(publicKey0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      char[] charArray0 = new char[2];
      SecretKeyResolver secretKeyResolver0 = new SecretKeyResolver((KeyStore) null, charArray0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      X509Certificate x509Certificate0 = secretKeyResolver0.engineResolveX509Certificate(iIOMetadataNode0, (String) null, (StorageResolver) null, false);
      assertNull(x509Certificate0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      char[] charArray0 = new char[2];
      SecretKeyResolver secretKeyResolver0 = new SecretKeyResolver((KeyStore) null, charArray0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PrivateKey privateKey0 = secretKeyResolver0.engineResolvePrivateKey(iIOMetadataNode0, (String) null, (StorageResolver) null, false);
      assertNull(privateKey0);
  }
}
