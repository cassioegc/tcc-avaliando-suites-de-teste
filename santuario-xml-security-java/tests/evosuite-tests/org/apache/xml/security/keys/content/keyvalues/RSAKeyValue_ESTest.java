/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:52:24 GMT 2021
 */

package org.apache.xml.security.keys.content.keyvalues;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.keys.content.keyvalues.RSAKeyValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RSAKeyValue_ESTest extends RSAKeyValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      RSAKeyValue rSAKeyValue0 = null;
      try {
        rSAKeyValue0 = new RSAKeyValue(iIOMetadataNode0, "];njm%");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "JAVACLASS");
      RSAKeyValue rSAKeyValue0 = null;
      try {
        rSAKeyValue0 = new RSAKeyValue((Document) null, secretKeySpec0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("RSAKeyValue");
      RSAKeyValue rSAKeyValue0 = new RSAKeyValue(iIOMetadataNode0, "RSAKeyValue");
      String string0 = rSAKeyValue0.getBaseLocalName();
      assertEquals("RSAKeyValue", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.TEN;
      RSAKeyValue rSAKeyValue0 = null;
      try {
        rSAKeyValue0 = new RSAKeyValue((Document) null, bigInteger0, bigInteger0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("RSAKeyValue");
      RSAKeyValue rSAKeyValue0 = new RSAKeyValue(iIOMetadataNode0, "RSAKeyValue");
      // Undeclared exception!
      try { 
        rSAKeyValue0.getPublicKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }
}
