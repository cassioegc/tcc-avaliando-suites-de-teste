/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:58:18 GMT 2021
 */

package org.apache.xml.security.keys.content.x509;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.cert.X509Certificate;
import java.time.ZoneId;
import java.util.Map;
import javax.imageio.metadata.IIOMetadataNode;
import javax.security.auth.x500.X500Principal;
import org.apache.xml.security.keys.content.x509.XMLX509SubjectName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.w3c.dom.Document;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLX509SubjectName_ESTest extends XMLX509SubjectName_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("P`aXa/");
      XMLX509SubjectName xMLX509SubjectName0 = null;
      try {
        xMLX509SubjectName0 = new XMLX509SubjectName(iIOMetadataNode0, "fgGgHHKa[Jun^*Ihh");
        fail("Expecting exception: Exception");
      
      } catch(Throwable e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.utils.ElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      doReturn((X500Principal) null).when(x509Certificate0).getSubjectX500Principal();
      XMLX509SubjectName xMLX509SubjectName0 = null;
      try {
        xMLX509SubjectName0 = new XMLX509SubjectName((Document) null, x509Certificate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.content.x509.XMLX509SubjectName", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509SubjectName");
      XMLX509SubjectName xMLX509SubjectName0 = new XMLX509SubjectName(iIOMetadataNode0, "X509SubjectName");
      String string0 = xMLX509SubjectName0.getSubjectName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509SubjectName");
      XMLX509SubjectName xMLX509SubjectName0 = new XMLX509SubjectName(iIOMetadataNode0, "X509SubjectName");
      String string0 = xMLX509SubjectName0.getBaseLocalName();
      assertEquals("X509SubjectName", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509SubjectName");
      XMLX509SubjectName xMLX509SubjectName0 = new XMLX509SubjectName(iIOMetadataNode0, "X509SubjectName");
      boolean boolean0 = xMLX509SubjectName0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("X509SubjectName");
      XMLX509SubjectName xMLX509SubjectName0 = new XMLX509SubjectName(iIOMetadataNode0, "X509SubjectName");
      xMLX509SubjectName0.hashCode();
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      X500Principal x500Principal0 = new X500Principal("", map0);
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      doReturn(x500Principal0).when(x509Certificate0).getSubjectX500Principal();
      XMLX509SubjectName xMLX509SubjectName0 = null;
      try {
        xMLX509SubjectName0 = new XMLX509SubjectName((Document) null, x509Certificate0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      XMLX509SubjectName xMLX509SubjectName0 = null;
      try {
        xMLX509SubjectName0 = new XMLX509SubjectName((Document) null, "xmlns");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Document is null
         //
         verifyException("org.apache.xml.security.utils.SignatureElementProxy", e);
      }
  }
}
