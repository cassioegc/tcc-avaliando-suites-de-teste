/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 21:27:49 GMT 2021
 */

package org.apache.xml.security.keys.storage;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.KeyStore;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import java.util.Iterator;
import java.util.NoSuchElementException;
import org.apache.xml.security.keys.storage.StorageResolver;
import org.apache.xml.security.keys.storage.StorageResolverSpi;
import org.apache.xml.security.keys.storage.implementations.SingleCertificateResolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StorageResolver_ESTest extends StorageResolver_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StorageResolver storageResolver0 = new StorageResolver((StorageResolverSpi) null);
      // Undeclared exception!
      try { 
        storageResolver0.getIterator();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.storage.StorageResolver$StorageResolverIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      StorageResolver storageResolver0 = new StorageResolver(singleCertificateResolver0);
      storageResolver0.add((StorageResolverSpi) singleCertificateResolver0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      StorageResolver storageResolver0 = new StorageResolver(singleCertificateResolver0);
      storageResolver0.add((X509Certificate) null);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      Iterator<StorageResolverSpi> iterator0 = (Iterator<StorageResolverSpi>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, false).when(iterator0).hasNext();
      doReturn(singleCertificateResolver0).when(iterator0).next();
      StorageResolver.StorageResolverIterator storageResolver_StorageResolverIterator0 = new StorageResolver.StorageResolverIterator(iterator0);
      storageResolver_StorageResolverIterator0.next();
      boolean boolean0 = storageResolver_StorageResolverIterator0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      Iterator<StorageResolverSpi> iterator0 = (Iterator<StorageResolverSpi>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, true).when(iterator0).hasNext();
      doReturn(singleCertificateResolver0, singleCertificateResolver0).when(iterator0).next();
      StorageResolver.StorageResolverIterator storageResolver_StorageResolverIterator0 = new StorageResolver.StorageResolverIterator(iterator0);
      storageResolver_StorageResolverIterator0.next();
      boolean boolean0 = storageResolver_StorageResolverIterator0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Iterator<StorageResolverSpi> iterator0 = (Iterator<StorageResolverSpi>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      StorageResolver.StorageResolverIterator storageResolver_StorageResolverIterator0 = new StorageResolver.StorageResolverIterator(iterator0);
      // Undeclared exception!
      try { 
        storageResolver_StorageResolverIterator0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.storage.StorageResolver$StorageResolverIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      Iterator<StorageResolverSpi> iterator0 = (Iterator<StorageResolverSpi>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      StorageResolver.StorageResolverIterator storageResolver_StorageResolverIterator0 = null;
      try {
        storageResolver_StorageResolverIterator0 = new StorageResolver.StorageResolverIterator(iterator0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.storage.StorageResolver$StorageResolverIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SingleCertificateResolver singleCertificateResolver0 = new SingleCertificateResolver((X509Certificate) null);
      StorageResolver storageResolver0 = new StorageResolver(singleCertificateResolver0);
      Iterator<Certificate> iterator0 = storageResolver0.getIterator();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      X509Certificate x509Certificate0 = mock(X509Certificate.class, new ViolatedAssumptionAnswer());
      StorageResolver storageResolver0 = new StorageResolver(x509Certificate0);
      // Undeclared exception!
      try { 
        storageResolver0.add((KeyStore) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.storage.implementations.KeyStoreResolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      StorageResolver storageResolver0 = null;
      try {
        storageResolver0 = new StorageResolver((KeyStore) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.keys.storage.implementations.KeyStoreResolver", e);
      }
  }
}
