/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:47:01 GMT 2021
 */

package org.apache.xml.security.stax.impl.stax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.xml.namespace.QName;
import javax.xml.stream.Location;
import javax.xml.stream.events.Attribute;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecCharacters;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecCharactersImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecDTDImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEndDocumentImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEndElementImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEntityDeclarationImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEntityReferenceImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecProcessingInstructionImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartDocumentImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSecEventBaseImpl_ESTest extends XMLSecEventBaseImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl$LocationImpl");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "0WBDFa)");
      // Undeclared exception!
      try { 
        xMLSecAttributeImpl0.getStartElementAtLevel((-1571));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      QName qName0 = QName.valueOf("P_&y)k;U(~{/:/hW");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "P_&y)k;U(~{/:/hW");
      StringWriter stringWriter0 = new StringWriter();
      xMLSecAttributeImpl0.writeAsEncodedUnicode(stringWriter0);
      assertFalse(xMLSecAttributeImpl0.isEntityReference());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = new Boolean("$6K:");
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("$6K:", "$6K:", boolean0, "$6K:");
      xMLSecStartDocumentImpl0.setParentXMLSecStartElement((XMLSecStartElement) null);
      assertFalse(xMLSecStartDocumentImpl0.isAttribute());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, (XMLSecStartElement) null);
      XMLSecEndElementImpl xMLSecEndElementImpl0 = new XMLSecEndElementImpl(qName0, xMLSecStartElementImpl0);
      List<QName> list0 = xMLSecEndElementImpl0.getElementPath();
      xMLSecAttributeImpl0.getElementPath(list0);
      assertTrue(list0.contains(qName0));
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = QName.valueOf("writeAsEncodedUnicode not implemented for ");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      boolean boolean0 = xMLSecStartElementImpl0.isStartElement();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl((String) null);
      XMLSecEntityReferenceImpl xMLSecEntityReferenceImpl0 = new XMLSecEntityReferenceImpl("{?dh'Z", xMLSecEntityDeclarationImpl0, (XMLSecStartElement) null);
      boolean boolean0 = xMLSecEntityReferenceImpl0.isStartElement();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("iU", "iU", boolean0, (String) null);
      boolean boolean1 = xMLSecStartDocumentImpl0.isStartDocument();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      QName qName0 = QName.valueOf("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      boolean boolean0 = xMLSecStartElementImpl0.isStartDocument();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSecProcessingInstructionImpl xMLSecProcessingInstructionImpl0 = new XMLSecProcessingInstructionImpl(")*IRnroyO_M['", "", (XMLSecStartElement) null);
      boolean boolean0 = xMLSecProcessingInstructionImpl0.isProcessingInstruction();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = QName.valueOf("writeAsEncodedUnicode not implemented for ");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      boolean boolean0 = xMLSecStartElementImpl0.isProcessingInstruction();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLSecNamespace xMLSecNamespace0 = XMLSecNamespaceImpl.getInstance((String) null, "");
      boolean boolean0 = ((XMLSecEventBaseImpl) xMLSecNamespace0).isNamespace();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("");
      boolean boolean0 = xMLSecEntityDeclarationImpl0.isNamespace();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("KrN");
      boolean boolean0 = xMLSecEntityDeclarationImpl0.isEntityReference();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      QName qName0 = QName.valueOf("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      boolean boolean0 = xMLSecStartElementImpl0.isEntityReference();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("S=dF:`y_9TI?y~L!CK", "S=dF:`y_9TI?y~L!CK", "S=dF:`y_9TI?y~L!CK");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, (XMLSecStartElement) null);
      XMLSecEndElementImpl xMLSecEndElementImpl0 = new XMLSecEndElementImpl(qName0, xMLSecStartElementImpl0);
      boolean boolean0 = xMLSecEndElementImpl0.isEndElement();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("");
      boolean boolean0 = xMLSecEntityDeclarationImpl0.isEndElement();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLSecEndDocumentImpl xMLSecEndDocumentImpl0 = new XMLSecEndDocumentImpl();
      boolean boolean0 = xMLSecEndDocumentImpl0.isEndDocument();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("");
      boolean boolean0 = xMLSecEntityDeclarationImpl0.isEndDocument();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLSecCharactersImpl xMLSecCharactersImpl0 = new XMLSecCharactersImpl("org.apache.xml.security.stax.impl.stax.XMLSecEntityReferenceImpl", true, true, true, (XMLSecStartElement) null);
      boolean boolean0 = xMLSecCharactersImpl0.isCharacters();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = QName.valueOf("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      boolean boolean0 = xMLSecStartElementImpl0.isCharacters();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      boolean boolean0 = xMLSecAttributeImpl0.isAttribute();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl((String) null);
      boolean boolean0 = xMLSecEntityDeclarationImpl0.isAttribute();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLSecEndDocumentImpl xMLSecEndDocumentImpl0 = new XMLSecEndDocumentImpl();
      XMLSecStartElement xMLSecStartElement0 = xMLSecEndDocumentImpl0.getStartElementAtLevel(59);
      assertNull(xMLSecStartElement0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QName qName0 = QName.valueOf("UL:[5e1Z~ai=FFW");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (List<XMLSecNamespace>) null, (XMLSecStartElement) null);
      XMLSecEndElementImpl xMLSecEndElementImpl0 = new XMLSecEndElementImpl(qName0, xMLSecStartElementImpl0);
      QName qName1 = xMLSecEndElementImpl0.getSchemaType();
      assertNull(qName1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QName qName0 = QName.valueOf(":`");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      XMLSecStartElement xMLSecStartElement0 = xMLSecAttributeImpl0.getParentXMLSecStartElement();
      assertNull(xMLSecStartElement0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QName qName0 = QName.valueOf("By8Vex`I");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElementImpl0);
      XMLSecStartElement xMLSecStartElement0 = xMLSecStartElementImpl1.getParentXMLSecStartElement();
      assertNotNull(xMLSecStartElement0);
      assertEquals(2, xMLSecStartElementImpl1.getDocumentLevel());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLSecProcessingInstructionImpl xMLSecProcessingInstructionImpl0 = new XMLSecProcessingInstructionImpl("=d2@q?\"ny8HNa", "=d2@q?\"ny8HNa", (XMLSecStartElement) null);
      Location location0 = xMLSecProcessingInstructionImpl0.getLocation();
      assertEquals(0, location0.getCharacterOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLSecProcessingInstructionImpl xMLSecProcessingInstructionImpl0 = new XMLSecProcessingInstructionImpl("", "", (XMLSecStartElement) null);
      int int0 = xMLSecProcessingInstructionImpl0.getDocumentLevel();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QName qName0 = new QName((String) null, "org.apache.xml.security.stax.impl.stax.XMLSecEntityDeclarationImpl");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      int int0 = xMLSecStartElementImpl0.getDocumentLevel();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QName qName0 = new QName("8jxq>?4H>fMY|WG", "org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl", "8jxq>?4H>fMY|WG");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElement xMLSecStartElement0 = xMLSecStartElementImpl0.asStartElement();
      assertFalse(xMLSecStartElement0.isStartDocument());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLSecCharactersImpl xMLSecCharactersImpl0 = new XMLSecCharactersImpl((String) null, false, true, true, (XMLSecStartElement) null);
      XMLSecCharacters xMLSecCharacters0 = xMLSecCharactersImpl0.asCharacters();
      assertFalse(xMLSecCharacters0.isStartDocument());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QName qName0 = new QName("", "NoT\"K^U:j#RRjc;Y#");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, (String) null);
      StringWriter stringWriter0 = new StringWriter(1534);
      // Undeclared exception!
      try { 
        xMLSecAttributeImpl0.writeAsEncodedUnicode(stringWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLSecDTDImpl xMLSecDTDImpl0 = new XMLSecDTDImpl("YakAp", (XMLSecStartElement) null);
      // Undeclared exception!
      try { 
        xMLSecDTDImpl0.asCharacters();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("i>@qEBA^t5j[S0{2Z");
      QName qName0 = new QName("http://www.w3.org/2000/xmlns/", "ML=7Dt");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, (XMLSecStartElement) null);
      xMLSecEntityDeclarationImpl0.parentXMLSecStartELement = (XMLSecStartElement) xMLSecStartElementImpl0;
      // Undeclared exception!
      try { 
        xMLSecEntityDeclarationImpl0.getElementPath((List<QName>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Boolean boolean0 = new Boolean("RqB");
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("RqB", "RqB", boolean0, "RqB");
      List<QName> list0 = xMLSecStartDocumentImpl0.getElementPath();
      xMLSecStartDocumentImpl0.getElementPath(list0);
      assertTrue(xMLSecStartDocumentImpl0.encodingSet());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("");
      // Undeclared exception!
      try { 
        xMLSecEntityDeclarationImpl0.getStartElementAtLevel(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QName qName0 = new QName("ZjK", "ZjK", "ZjK");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "ZjK");
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, linkedList0);
      xMLSecAttributeImpl0.setParentXMLSecStartElement(xMLSecStartElementImpl0);
      int int0 = xMLSecAttributeImpl0.getDocumentLevel();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLSecEventBaseImpl.LocationImpl xMLSecEventBaseImpl_LocationImpl0 = new XMLSecEventBaseImpl.LocationImpl();
      int int0 = xMLSecEventBaseImpl_LocationImpl0.getColumnNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLSecEventBaseImpl.LocationImpl xMLSecEventBaseImpl_LocationImpl0 = new XMLSecEventBaseImpl.LocationImpl();
      int int0 = xMLSecEventBaseImpl_LocationImpl0.getCharacterOffset();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLSecEventBaseImpl.LocationImpl xMLSecEventBaseImpl_LocationImpl0 = new XMLSecEventBaseImpl.LocationImpl();
      int int0 = xMLSecEventBaseImpl_LocationImpl0.getLineNumber();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLSecEventBaseImpl.LocationImpl xMLSecEventBaseImpl_LocationImpl0 = new XMLSecEventBaseImpl.LocationImpl();
      String string0 = xMLSecEventBaseImpl_LocationImpl0.getSystemId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLSecEventBaseImpl.LocationImpl xMLSecEventBaseImpl_LocationImpl0 = new XMLSecEventBaseImpl.LocationImpl();
      String string0 = xMLSecEventBaseImpl_LocationImpl0.getPublicId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      // Undeclared exception!
      try { 
        xMLSecAttributeImpl0.asStartElement();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      QName qName0 = new QName("");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecDTDImpl xMLSecDTDImpl0 = new XMLSecDTDImpl("", xMLSecStartElementImpl0);
      // Undeclared exception!
      try { 
        xMLSecDTDImpl0.asEndElement();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecEventBaseImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      Iterator<Attribute> iterator0 = xMLSecStartElementImpl0.getAttributes();
      assertNotNull(iterator0);
  }
}
