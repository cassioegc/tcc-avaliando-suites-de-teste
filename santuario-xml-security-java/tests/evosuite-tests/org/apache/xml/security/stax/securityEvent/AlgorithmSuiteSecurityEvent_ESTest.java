/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:45:15 GMT 2021
 */

package org.apache.xml.security.stax.securityEvent;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.securityEvent.AlgorithmSuiteSecurityEvent;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlgorithmSuiteSecurityEvent_ESTest extends AlgorithmSuiteSecurityEvent_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      algorithmSuiteSecurityEvent0.setKeyLength(2840);
      int int0 = algorithmSuiteSecurityEvent0.getKeyLength();
      assertEquals(2840, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      algorithmSuiteSecurityEvent0.setKeyLength((-396));
      int int0 = algorithmSuiteSecurityEvent0.getKeyLength();
      assertEquals((-396), int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      algorithmSuiteSecurityEvent0.setAlgorithmURI("\u0004q}x!k2|X(kPQ-");
      algorithmSuiteSecurityEvent0.getAlgorithmURI();
      assertFalse(algorithmSuiteSecurityEvent0.isDerivedKey());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      algorithmSuiteSecurityEvent0.setAlgorithmURI("");
      algorithmSuiteSecurityEvent0.getAlgorithmURI();
      assertFalse(algorithmSuiteSecurityEvent0.isDerivedKey());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      XMLSecurityConstants.AlgorithmUsage xMLSecurityConstants_AlgorithmUsage0 = new XMLSecurityConstants.AlgorithmUsage("j6k1fr");
      algorithmSuiteSecurityEvent0.setAlgorithmUsage(xMLSecurityConstants_AlgorithmUsage0);
      algorithmSuiteSecurityEvent0.getAlgorithmUsage();
      assertFalse(algorithmSuiteSecurityEvent0.isDerivedKey());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      assertFalse(algorithmSuiteSecurityEvent0.isDerivedKey());
      
      algorithmSuiteSecurityEvent0.setDerivedKey(true);
      boolean boolean0 = algorithmSuiteSecurityEvent0.isDerivedKey();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      boolean boolean0 = algorithmSuiteSecurityEvent0.isDerivedKey();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      int int0 = algorithmSuiteSecurityEvent0.getKeyLength();
      assertFalse(algorithmSuiteSecurityEvent0.isDerivedKey());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      algorithmSuiteSecurityEvent0.getAlgorithmUsage();
      assertFalse(algorithmSuiteSecurityEvent0.isDerivedKey());
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      AlgorithmSuiteSecurityEvent algorithmSuiteSecurityEvent0 = new AlgorithmSuiteSecurityEvent();
      algorithmSuiteSecurityEvent0.getAlgorithmURI();
      assertFalse(algorithmSuiteSecurityEvent0.isDerivedKey());
  }
}
