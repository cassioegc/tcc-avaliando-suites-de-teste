/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:16:21 GMT 2021
 */

package org.apache.xml.security.stax.impl.securityToken;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import javax.crypto.spec.SecretKeySpec;
import org.apache.xml.security.binding.xmldsig.KeyInfoType;
import org.apache.xml.security.stax.ext.InboundSecurityContext;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.impl.securityToken.SecurityTokenFactoryImpl;
import org.apache.xml.security.stax.securityToken.InboundSecurityToken;
import org.apache.xml.security.stax.securityToken.SecurityTokenConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SecurityTokenFactoryImpl_ESTest extends SecurityTokenFactoryImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeyInfoType keyInfoType0 = new KeyInfoType();
      SecurityTokenConstants.KeyUsage securityTokenConstants_KeyUsage0 = new SecurityTokenConstants.KeyUsage("Decryption");
      SecurityTokenFactoryImpl securityTokenFactoryImpl0 = new SecurityTokenFactoryImpl();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      try { 
        securityTokenFactoryImpl0.getSecurityToken(keyInfoType0, securityTokenConstants_KeyUsage0, xMLSecurityProperties0, (InboundSecurityContext) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.securityToken.SecurityTokenFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      SecurityTokenConstants.KeyUsage securityTokenConstants_KeyUsage0 = new SecurityTokenConstants.KeyUsage("!i7Z;-df9Ptp[bj");
      SecurityTokenFactoryImpl securityTokenFactoryImpl0 = new SecurityTokenFactoryImpl();
      try { 
        securityTokenFactoryImpl0.getSecurityToken((KeyInfoType) null, securityTokenConstants_KeyUsage0, xMLSecurityProperties0, (InboundSecurityContext) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.securityToken.SecurityTokenFactoryImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyInfoType keyInfoType0 = new KeyInfoType();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      SecurityTokenFactoryImpl securityTokenFactoryImpl0 = new SecurityTokenFactoryImpl();
      SecurityTokenConstants.KeyUsage securityTokenConstants_KeyUsage0 = new SecurityTokenConstants.KeyUsage("Decryption");
      byte[] byteArray0 = new byte[9];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, 0, 1, "Decryption");
      xMLSecurityProperties0.setDecryptionKey(secretKeySpec0);
      InboundSecurityToken inboundSecurityToken0 = securityTokenFactoryImpl0.getSecurityToken(keyInfoType0, securityTokenConstants_KeyUsage0, xMLSecurityProperties0, (InboundSecurityContext) null);
      assertNotNull(inboundSecurityToken0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SecurityTokenFactoryImpl securityTokenFactoryImpl0 = new SecurityTokenFactoryImpl();
      KeyInfoType keyInfoType0 = new KeyInfoType();
      SecurityTokenConstants.KeyUsage securityTokenConstants_KeyUsage0 = new SecurityTokenConstants.KeyUsage("Decryption");
      // Undeclared exception!
      try { 
        securityTokenFactoryImpl0.getSecurityToken(keyInfoType0, securityTokenConstants_KeyUsage0, (XMLSecurityProperties) null, (InboundSecurityContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.securityToken.SecurityTokenFactoryImpl", e);
      }
  }
}
