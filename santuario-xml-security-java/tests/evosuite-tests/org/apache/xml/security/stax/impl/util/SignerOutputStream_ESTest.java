/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:23:19 GMT 2021
 */

package org.apache.xml.security.stax.impl.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.stax.impl.algorithms.PKISignatureAlgorithm;
import org.apache.xml.security.stax.impl.algorithms.SignatureAlgorithm;
import org.apache.xml.security.stax.impl.util.SignerOutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SignerOutputStream_ESTest extends SignerOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SignerOutputStream signerOutputStream0 = new SignerOutputStream((SignatureAlgorithm) null);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        signerOutputStream0.write(byteArray0, (-1), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.SignerOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      PKISignatureAlgorithm pKISignatureAlgorithm0 = new PKISignatureAlgorithm("DSA", (String) null);
      SignerOutputStream signerOutputStream0 = new SignerOutputStream(pKISignatureAlgorithm0);
      // Undeclared exception!
      try { 
        signerOutputStream0.write(byteArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.xml.security.exceptions.XMLSecurityException: object not initialized for signature or verification
         // Original Exception was java.security.SignatureException: object not initialized for signature or verification
         //
         verifyException("org.apache.xml.security.stax.impl.util.SignerOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      PKISignatureAlgorithm pKISignatureAlgorithm0 = new PKISignatureAlgorithm("DSA", (String) null);
      SignerOutputStream signerOutputStream0 = new SignerOutputStream(pKISignatureAlgorithm0);
      // Undeclared exception!
      try { 
        signerOutputStream0.write(4010);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.apache.xml.security.exceptions.XMLSecurityException: object not initialized for signature or verification
         // Original Exception was java.security.SignatureException: object not initialized for signature or verification
         //
         verifyException("org.apache.xml.security.stax.impl.util.SignerOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SignerOutputStream signerOutputStream0 = new SignerOutputStream((SignatureAlgorithm) null);
      // Undeclared exception!
      try { 
        signerOutputStream0.write((int) (byte)0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.SignerOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      PKISignatureAlgorithm pKISignatureAlgorithm0 = new PKISignatureAlgorithm("DSA", (String) null);
      SignerOutputStream signerOutputStream0 = new SignerOutputStream(pKISignatureAlgorithm0);
      try { 
        signerOutputStream0.verify(byteArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid XMLDSIG format of DSA signature
         //
         verifyException("org.apache.xml.security.stax.impl.algorithms.PKISignatureAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PKISignatureAlgorithm pKISignatureAlgorithm0 = new PKISignatureAlgorithm("DSA", (String) null);
      SignerOutputStream signerOutputStream0 = new SignerOutputStream(pKISignatureAlgorithm0);
      try { 
        signerOutputStream0.sign();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // object not initialized for signing
         //
         verifyException("org.apache.xml.security.stax.impl.algorithms.PKISignatureAlgorithm", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SignerOutputStream signerOutputStream0 = new SignerOutputStream((SignatureAlgorithm) null);
      // Undeclared exception!
      try { 
        signerOutputStream0.sign();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.SignerOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SignerOutputStream signerOutputStream0 = new SignerOutputStream((SignatureAlgorithm) null);
      byte[] byteArray0 = new byte[10];
      // Undeclared exception!
      try { 
        signerOutputStream0.verify(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.SignerOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SignerOutputStream signerOutputStream0 = new SignerOutputStream((SignatureAlgorithm) null);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        signerOutputStream0.write(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.SignerOutputStream", e);
      }
  }
}
