/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:34:09 GMT 2021
 */

package org.apache.xml.security.stax.ext;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamWriter;
import org.apache.xml.security.stax.ext.OutputProcessorChain;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.impl.DocumentContextImpl;
import org.apache.xml.security.stax.impl.OutboundSecurityContextImpl;
import org.apache.xml.security.stax.impl.OutputProcessorChainImpl;
import org.apache.xml.security.stax.impl.SignaturePartDef;
import org.apache.xml.security.stax.impl.XMLSecurityStreamWriter;
import org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.FinalOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.XMLEncryptOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.XMLSignatureEndingOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.XMLSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractOutputProcessor_ESTest extends AbstractOutputProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      XMLSecNamespace xMLSecNamespace0 = xMLEncryptOutputProcessor0.createNamespace("NQ", "");
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
      assertEquals("", xMLSecNamespace0.getValue());
      assertEquals("NQ", xMLSecNamespace0.getPrefix());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      xMLSignatureOutputProcessor0.init(outputProcessorChainImpl0);
      xMLSignatureOutputProcessor0.createStartElementAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, qName0, (List<XMLSecNamespace>) linkedList0, (List<XMLSecAttribute>) null);
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getSignaturePositionQName();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      xMLSignatureOutputProcessor0.init(outputProcessorChainImpl0);
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      xMLEncryptOutputProcessor0.createEndElementAndOutputAsEvent(outputProcessorChainImpl0, qName0);
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      xMLSignatureOutputProcessor0.init(outputProcessorChainImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      char[] charArray0 = new char[2];
      finalOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, charArray0);
      assertEquals((-1), finalOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      xMLSignatureOutputProcessor0.init(outputProcessorChainImpl0);
      xMLSignatureOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, "");
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      XMLSecurityConstants.Action xMLSecurityConstants_Action0 = new XMLSecurityConstants.Action("Y*@5");
      xMLSignatureEndingOutputProcessor0.setAction(xMLSecurityConstants_Action0, 0);
      int int0 = xMLSignatureEndingOutputProcessor0.getActionOrder();
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
      
      xMLSignatureOutputProcessor0.setAction((XMLSecurityConstants.Action) null, 1);
      int int0 = xMLSignatureOutputProcessor0.getActionOrder();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque1 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, arrayDeque0, arrayDeque1);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, xMLSecStartElementImpl0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (DocumentContextImpl) null);
      try { 
        abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.init(outputProcessorChainImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.init((OutputProcessorChain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, 0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor((XMLStreamWriter) null);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      // Undeclared exception!
      try { 
        finalOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor((OutputStream) null, "");
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      // Undeclared exception!
      try { 
        finalOutputProcessor0.createStartElementAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, (QName) null, true, (List<XMLSecAttribute>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor((XMLStreamWriter) null);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-2594));
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, (Collection<XMLSecNamespace>) null);
      List<XMLSecAttribute> list0 = xMLSecStartElementImpl0.getOnElementDeclaredAttributes();
      // Undeclared exception!
      try { 
        finalOutputProcessor0.createStartElementAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, (QName) null, false, list0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      QName qName0 = new QName("(5LmWSFA`4zp9W&ss[", "(5LmWSFA`4zp9W&ss[", "(5LmWSFA`4zp9W&ss[");
      // Undeclared exception!
      try { 
        xMLEncryptOutputProcessor0.createEndElementAndOutputAsEvent(outputProcessorChainImpl0, qName0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-2692));
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.createEndElementAndOutputAsEvent(outputProcessorChainImpl0, qName0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) null, charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1));
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      // Undeclared exception!
      try { 
        xMLEncryptOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) null, "&99bLe_OKzT|");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1965));
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, (Collection<XMLSecNamespace>) null);
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecAttribute xMLSecAttribute0 = finalOutputProcessor0.createAttribute((QName) null, (String) null);
      linkedList0.add(xMLSecAttribute0);
      // Undeclared exception!
      try { 
        finalOutputProcessor0.addAttributes(xMLSecStartElementImpl0, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      Class<XMLSignatureOutputProcessor> class0 = XMLSignatureOutputProcessor.class;
      xMLSignatureOutputProcessor0.addAfterProcessor(class0);
      xMLSignatureOutputProcessor0.getAfterProcessors();
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      xMLEncryptOutputProcessor0.getAfterProcessors();
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      finalOutputProcessor0.getBeforeProcessors();
      assertEquals((-1), finalOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      Class<AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor> class0 = AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor.class;
      xMLEncryptOutputProcessor0.addBeforeProcessor(class0);
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      xMLEncryptOutputProcessor0.init(outputProcessorChainImpl0);
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      xMLEncryptOutputProcessor0.createCharacters("|>&7K`Jt3w<");
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      int int0 = xMLEncryptOutputProcessor0.getActionOrder();
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSecurityConstants.Phase xMLSecurityConstants_Phase0 = xMLSignatureOutputProcessor0.getPhase();
      xMLSignatureOutputProcessor0.setPhase(xMLSecurityConstants_Phase0);
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      finalOutputProcessor0.getSecurityProperties();
      assertEquals((-1), finalOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, (Collection<XMLSecNamespace>) null);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, xMLSecStartElementImpl0);
      abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.setXMLSecurityProperties(xMLSecurityProperties0);
      assertEquals((-1), abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      finalOutputProcessor0.createEndElement((QName) null);
      assertEquals((-1), finalOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      char[] charArray0 = new char[5];
      xMLEncryptOutputProcessor0.createCharacters(charArray0);
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      finalOutputProcessor0.getAction();
      assertEquals((-1), finalOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      QName qName0 = new QName("org.apache.xml.security.stax.impl.processor.output.FinalOutputProcessor");
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, (Collection<XMLSecNamespace>) null);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, xMLSecStartElementImpl0);
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-459));
      // Undeclared exception!
      try { 
        abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, 0);
      QName qName0 = new QName("T^", "T^", "/rE,=kqF},ug");
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.createStartElementAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, qName0, false, (List<XMLSecAttribute>) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, linkedList0);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor((SignaturePartDef) null, xMLSecStartElementImpl0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      List<XMLSecAttribute> list0 = xMLSecStartElementImpl0.getOnElementDeclaredAttributes();
      // Undeclared exception!
      try { 
        abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.createStartElementAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, qName0, true, list0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      QName qName0 = new QName("%48Y]", ",", "%48Y]");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque1 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, arrayDeque1);
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "%48Y]");
      linkedList0.offer(xMLSecAttributeImpl0);
      xMLSignatureOutputProcessor0.addAttributes(xMLSecStartElementImpl0, linkedList0);
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      xMLEncryptOutputProcessor0.addAttributes(xMLSecStartElementImpl0, linkedList0);
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      QName qName0 = QName.valueOf("%48Y]");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>(4030);
      ArrayDeque<XMLSecNamespace> arrayDeque1 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, arrayDeque1);
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "%48Y]");
      linkedList0.offer(xMLSecAttributeImpl0);
      xMLSignatureOutputProcessor0.addAttributes(xMLSecStartElementImpl0, linkedList0);
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      Class<XMLEncryptOutputProcessor> class0 = XMLEncryptOutputProcessor.class;
      xMLEncryptOutputProcessor0.addAfterProcessor(class0);
      xMLEncryptOutputProcessor0.addAfterProcessor(class0);
      assertEquals((-1), xMLEncryptOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, linkedList0);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor((SignaturePartDef) null, xMLSecStartElementImpl0);
      abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.getBeforeProcessors();
      assertEquals((-1), abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      QName qName0 = new QName("", "");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque1 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, arrayDeque1);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, xMLSecStartElementImpl0);
      Class<XMLSignatureEndingOutputProcessor> class0 = XMLSignatureEndingOutputProcessor.class;
      abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.addBeforeProcessor(class0);
      assertEquals((-1), abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, linkedList0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      List<XMLSecAttribute> list0 = xMLSecStartElementImpl0.getOnElementDeclaredAttributes();
      xMLSignatureOutputProcessor0.init(outputProcessorChainImpl0);
      xMLSignatureOutputProcessor0.createStartElementAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, (QName) null, false, list0);
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        xMLEncryptOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, "c*t^E{;~ ");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      char[] charArray0 = new char[2];
      // Undeclared exception!
      try { 
        finalOutputProcessor0.createCharactersAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, charArray0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      FinalOutputProcessor finalOutputProcessor0 = new FinalOutputProcessor(xMLSecurityStreamWriter0);
      // Undeclared exception!
      try { 
        finalOutputProcessor0.createEndElementAndOutputAsEvent((OutputProcessorChain) null, (QName) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      QName qName0 = QName.valueOf("%48Y]");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.createStartElementAndOutputAsEvent((OutputProcessorChain) outputProcessorChainImpl0, qName0, (List<XMLSecNamespace>) linkedList1, (List<XMLSecAttribute>) linkedList0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }
}
