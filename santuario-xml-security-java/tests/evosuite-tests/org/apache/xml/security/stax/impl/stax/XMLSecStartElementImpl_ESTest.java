/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:56:32 GMT 2021
 */

package org.apache.xml.security.stax.impl.stax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.xml.namespace.NamespaceContext;
import javax.xml.namespace.QName;
import javax.xml.stream.events.Attribute;
import javax.xml.stream.events.Namespace;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSecStartElementImpl_ESTest extends XMLSecStartElementImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, linkedList0, linkedList1);
      xMLSecStartElementImpl0.getNamespacesFromCurrentScope(linkedList1);
      assertFalse(xMLSecStartElementImpl0.isEntityReference());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElement xMLSecStartElement0 = mock(XMLSecStartElement.class, new ViolatedAssumptionAnswer());
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, linkedList0, linkedList1, xMLSecStartElement0);
      List<XMLSecNamespace> list0 = xMLSecStartElementImpl0.getOnElementDeclaredNamespaces();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      QName qName0 = new QName("");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecNamespace xMLSecNamespace0 = xMLSecStartElementImpl0.getElementNamespace();
      xMLSecStartElementImpl0.addNamespace(xMLSecNamespace0);
      List<XMLSecNamespace> list0 = xMLSecStartElementImpl0.getOnElementDeclaredNamespaces();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      QName qName0 = new QName("");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElementImpl0);
      List<XMLSecAttribute> list0 = xMLSecStartElementImpl1.getOnElementDeclaredAttributes();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      QName qName0 = QName.valueOf("<R! i");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      linkedList0.add((XMLSecAttribute) null);
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      List<XMLSecAttribute> list0 = xMLSecStartElementImpl0.getOnElementDeclaredAttributes();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      QName qName0 = new QName("");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      XMLSecNamespace xMLSecNamespace0 = xMLSecAttributeImpl0.getAttributeNamespace();
      linkedList1.addLast(xMLSecNamespace0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      String string0 = xMLSecStartElementImpl0.getNamespaceURI("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, linkedList0);
      QName qName0 = xMLSecStartElementImpl0.getName();
      assertNull(qName0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElement xMLSecStartElement0 = mock(XMLSecStartElement.class, new ViolatedAssumptionAnswer());
      doReturn((-1824)).when(xMLSecStartElement0).getDocumentLevel();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, linkedList0, linkedList1, xMLSecStartElement0);
      int int0 = xMLSecStartElementImpl0.getDocumentLevel();
      assertEquals((-1823), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      QName qName0 = new QName("s<-5.<1!KCUrE");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.writeAsEncodedUnicode((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      QName qName0 = QName.valueOf("<R! i");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getStartElementAtLevel((-1958));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl$1", "org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl$1", "org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl$1");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      List<XMLSecNamespace> list0 = xMLSecStartElementImpl0.getOnElementDeclaredNamespaces();
      xMLSecStartElementImpl0.addNamespace((XMLSecNamespace) null);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getNamespacesFromCurrentScope(list0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", "org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", "oi");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl");
      XMLSecNamespace xMLSecNamespace0 = xMLSecAttributeImpl0.getAttributeNamespace();
      linkedList1.add(xMLSecNamespace0);
      XMLSecStartElement xMLSecStartElement0 = mock(XMLSecStartElement.class, new ViolatedAssumptionAnswer());
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElement0);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getNamespaceURI((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      QName qName0 = QName.valueOf("xmlns");
      LinkedList<XMLSecAttributeImpl> linkedList0 = new LinkedList<XMLSecAttributeImpl>();
      LinkedList<XMLSecAttribute> linkedList1 = new LinkedList<XMLSecAttribute>(linkedList0);
      LinkedList<XMLSecNamespace> linkedList2 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList1, linkedList2);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getElementPath((List<QName>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, linkedList0);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getElementNamespace();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      QName qName0 = new QName("l bB.R&E()6BFxW&5mz");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getAttributesFromCurrentScope((List<XMLSecAttribute>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      QName qName0 = new QName("", "");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      linkedList0.add((XMLSecAttribute) null);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getAttributeByName(qName0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      QName qName0 = QName.valueOf("");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      int int0 = xMLSecStartElementImpl0.getDocumentLevel();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      QName qName0 = new QName("YYl3af|(-enl]tE");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      QName qName1 = xMLSecStartElementImpl0.getName();
      assertSame(qName0, qName1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      QName qName0 = new QName("YYl3af|(-enl]tE");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      List<QName> list0 = xMLSecStartElementImpl0.getElementPath();
      xMLSecStartElementImpl0.getElementPath(list0);
      assertTrue(list0.contains(qName0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      QName qName0 = QName.valueOf("-n=S_");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElement xMLSecStartElement0 = mock(XMLSecStartElement.class, new ViolatedAssumptionAnswer());
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElement0);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      xMLSecStartElementImpl0.addAttribute(xMLSecAttributeImpl0);
      StringWriter stringWriter0 = new StringWriter(1);
      xMLSecStartElementImpl0.writeAsEncodedUnicode(stringWriter0);
      assertEquals("<-n=S_ -n=S_=\"\">", stringWriter0.toString());
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      QName qName0 = new QName("9J6L-", "9J6L-", "9J6L-");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "'ze=cu");
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      StringWriter stringWriter0 = new StringWriter(1);
      xMLSecStartElementImpl0.writeAsEncodedUnicode(stringWriter0);
      assertEquals("<9J6L-:9J6L- 9J6L-:9J6L-=\"'ze=cu\">", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      QName qName0 = new QName("YYl3af|(-enl]tE");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "<~!% D-c &zySzg|L");
      XMLSecNamespace xMLSecNamespace0 = xMLSecAttributeImpl0.getAttributeNamespace();
      xMLSecStartElementImpl0.addNamespace(xMLSecNamespace0);
      StringWriter stringWriter0 = new StringWriter();
      xMLSecStartElementImpl0.writeAsEncodedUnicode(stringWriter0);
      assertEquals("<YYl3af|(-enl]tE xmlns=\"\">", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      QName qName0 = new QName("9J6L-", "9J6L-", "9J6L-");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElementImpl0);
      XMLSecNamespace xMLSecNamespace0 = xMLSecStartElementImpl1.getElementNamespace();
      linkedList1.offerLast(xMLSecNamespace0);
      StringWriter stringWriter0 = new StringWriter(1);
      xMLSecStartElementImpl1.writeAsEncodedUnicode(stringWriter0);
      assertEquals("<9J6L-:9J6L- xmlns:9J6L-=\"9J6L-\">", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      QName qName0 = QName.valueOf(".0By7P,1A5,<I5");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElementImpl0);
      String string0 = xMLSecStartElementImpl1.getNamespaceURI("{7<7wb>");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      QName qName0 = new QName("", "", "9J6L-");
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, linkedList0);
      XMLSecNamespace xMLSecNamespace0 = XMLSecNamespaceImpl.getInstance("", ">SdUR?#L");
      xMLSecStartElementImpl0.addNamespace(xMLSecNamespace0);
      String string0 = xMLSecStartElementImpl0.getNamespaceURI("");
      assertEquals(">SdUR?#L", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      QName qName0 = new QName("", "", "9J6L-");
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      XMLSecNamespace xMLSecNamespace0 = xMLSecAttributeImpl0.getAttributeNamespace();
      linkedList0.add(xMLSecNamespace0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, linkedList0);
      String string0 = xMLSecStartElementImpl0.getNamespaceURI("");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      QName qName0 = QName.valueOf(".0By7P,1A5,<I5");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElementImpl0);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "{7<7wb>");
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      QName qName1 = new QName(".0By7P,1A5,<I5", ".0By7P,1A5,<I5", "=\"");
      Attribute attribute0 = xMLSecStartElementImpl1.getAttributeByName(qName1);
      assertNull(attribute0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "@a'NG");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      xMLSecStartElementImpl0.addAttribute(xMLSecAttributeImpl0);
      Attribute attribute0 = xMLSecStartElementImpl0.getAttributeByName(qName0);
      assertSame(attribute0, xMLSecAttributeImpl0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      QName qName0 = new QName("", "", "9J6L-");
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "");
      XMLSecNamespace xMLSecNamespace0 = xMLSecAttributeImpl0.getAttributeNamespace();
      linkedList0.add(xMLSecNamespace0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, linkedList0);
      xMLSecStartElementImpl0.addNamespace(xMLSecNamespace0);
      assertFalse(xMLSecNamespace0.isProcessingInstruction());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      QName qName0 = QName.valueOf("8(n");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElement xMLSecStartElement0 = mock(XMLSecStartElement.class, new ViolatedAssumptionAnswer());
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (List<XMLSecNamespace>) null, xMLSecStartElement0);
      // Undeclared exception!
      try { 
        xMLSecStartElementImpl0.getNamespacesFromCurrentScope((List<XMLSecNamespace>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "@a'NG");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      Iterator<Namespace> iterator0 = xMLSecStartElementImpl0.getNamespaces();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "@a'NG");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElementImpl0);
      XMLSecNamespace xMLSecNamespace0 = XMLSecNamespaceImpl.getInstance("org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "@a'NG");
      linkedList1.add(xMLSecNamespace0);
      Iterator<Namespace> iterator0 = xMLSecStartElementImpl1.getNamespaces();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "@a'NG");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElementImpl0);
      XMLSecStartElement xMLSecStartElement0 = xMLSecStartElementImpl1.getStartElementAtLevel(1);
      assertNotNull(xMLSecStartElement0);
      assertNotSame(xMLSecStartElement0, xMLSecStartElementImpl1);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "@a'NG");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElement xMLSecStartElement0 = xMLSecStartElementImpl0.getStartElementAtLevel(1);
      assertFalse(xMLSecStartElement0.isEntityReference());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      QName qName0 = new QName("l bB.R&E()6BFxW&5mz");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, (String) null);
      xMLSecStartElementImpl0.addAttribute(xMLSecAttributeImpl0);
      xMLSecStartElementImpl0.addAttribute(xMLSecAttributeImpl0);
      assertFalse(xMLSecAttributeImpl0.isEndDocument());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      QName qName0 = QName.valueOf("xmlns");
      LinkedList<XMLSecAttributeImpl> linkedList0 = new LinkedList<XMLSecAttributeImpl>();
      LinkedList<XMLSecAttribute> linkedList1 = new LinkedList<XMLSecAttribute>(linkedList0);
      LinkedList<XMLSecNamespace> linkedList2 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList1, linkedList2);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, linkedList1, linkedList2, xMLSecStartElementImpl0);
      xMLSecStartElementImpl1.getAttributesFromCurrentScope(linkedList1);
      assertEquals(0, linkedList1.size());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      QName qName0 = new QName("^LerFd5>Qs9(ULcI)T#");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, (Collection<XMLSecNamespace>) null);
      xMLSecStartElementImpl0.getAttributesFromCurrentScope(linkedList0);
      assertFalse(xMLSecStartElementImpl0.isEndElement());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      QName qName0 = new QName("org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl", "@a'NG");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      Iterator<Attribute> iterator0 = xMLSecStartElementImpl0.getAttributes();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      QName qName0 = new QName("9J6L-", "9J6L-", "9J6L-");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      xMLSecStartElementImpl0.getElementNamespace();
      XMLSecNamespace xMLSecNamespace0 = xMLSecStartElementImpl0.getElementNamespace();
      assertEquals("CDATA", xMLSecNamespace0.getDTDType());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      QName qName0 = new QName("9J6L-", "9J6L-", "9J6L-");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "'ze=cu");
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      Iterator<Attribute> iterator0 = xMLSecStartElementImpl0.getAttributes();
      assertNotNull(iterator0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, linkedList0);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl((QName) null, (List<XMLSecAttribute>) null, linkedList0, xMLSecStartElementImpl0);
      assertFalse(xMLSecStartElementImpl1.equals((Object)xMLSecStartElementImpl0));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      QName qName0 = QName.valueOf(".0By7P,1A5,<I5");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      boolean boolean0 = xMLSecStartElementImpl0.isStartElement();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      QName qName0 = QName.valueOf("-n=S_");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElement xMLSecStartElement0 = mock(XMLSecStartElement.class, new ViolatedAssumptionAnswer());
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, xMLSecStartElement0);
      int int0 = xMLSecStartElementImpl0.getEventType();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      QName qName0 = QName.valueOf(".0By7P,1A5,<I5");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElement xMLSecStartElement0 = xMLSecStartElementImpl0.getStartElementAtLevel(1494);
      assertNull(xMLSecStartElement0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      QName qName0 = QName.valueOf(".0By7P,1A5,<I5");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecStartElement xMLSecStartElement0 = xMLSecStartElementImpl0.asStartElement();
      assertFalse(xMLSecStartElement0.isProcessingInstruction());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      QName qName0 = QName.valueOf(".0By7P,1A5,<I5");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      NamespaceContext namespaceContext0 = xMLSecStartElementImpl0.getNamespaceContext();
      assertNotNull(namespaceContext0);
  }
}
