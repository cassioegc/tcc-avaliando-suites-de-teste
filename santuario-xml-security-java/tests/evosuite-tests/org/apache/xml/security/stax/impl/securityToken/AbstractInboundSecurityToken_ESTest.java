/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:10:30 GMT 2021
 */

package org.apache.xml.security.stax.impl.securityToken;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.Key;
import java.util.LinkedList;
import java.util.List;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.QName;
import org.apache.xml.security.binding.xmldsig.DSAKeyValueType;
import org.apache.xml.security.binding.xmldsig.RSAKeyValueType;
import org.apache.xml.security.stax.ext.InboundSecurityContext;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.impl.securityToken.DsaKeyValueSecurityToken;
import org.apache.xml.security.stax.impl.securityToken.KeyNameSecurityToken;
import org.apache.xml.security.stax.impl.securityToken.RsaKeyValueSecurityToken;
import org.apache.xml.security.stax.impl.securityToken.X509IssuerSerialSecurityToken;
import org.apache.xml.security.stax.impl.securityToken.X509SKISecurityToken;
import org.apache.xml.security.stax.impl.securityToken.X509SecurityToken;
import org.apache.xml.security.stax.impl.stax.XMLSecEntityDeclarationImpl;
import org.apache.xml.security.stax.securityToken.InboundSecurityToken;
import org.apache.xml.security.stax.securityToken.SecurityTokenConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractInboundSecurityToken_ESTest extends AbstractInboundSecurityToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = new SecurityTokenConstants.TokenType("J4I]s+#Zq");
      X509SKISecurityToken x509SKISecurityToken0 = new X509SKISecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "n");
      x509SKISecurityToken0.getSecretKey("No keyIdentfierjspecified", (XMLSecurityConstants.AlgorithmUsage) null, "W|,>0");
      assertFalse(x509SKISecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken(rSAKeyValueType0, (InboundSecurityContext) null);
      boolean boolean0 = rsaKeyValueSecurityToken0.isIncludedInMessage();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("", (InboundSecurityContext) null);
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("s>QKh=EAHL,^");
      keyNameSecurityToken0.setXMLSecEvent(xMLSecEntityDeclarationImpl0);
      keyNameSecurityToken0.getXMLSecEvent();
      assertFalse(keyNameSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLSecurityConstants.AlgorithmUsage xMLSecurityConstants_AlgorithmUsage0 = new XMLSecurityConstants.AlgorithmUsage("MW|,>07");
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = new SecurityTokenConstants.TokenType("J4I]s+#Zq");
      X509SKISecurityToken x509SKISecurityToken0 = new X509SKISecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "n");
      x509SKISecurityToken0.getPubKey("'Ezc-HVES.u", xMLSecurityConstants_AlgorithmUsage0, "MW|,>07");
      assertFalse(x509SKISecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("", (InboundSecurityContext) null);
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      keyNameSecurityToken0.setKeyWrappingToken(dsaKeyValueSecurityToken0);
      InboundSecurityToken inboundSecurityToken0 = keyNameSecurityToken0.getKeyWrappingToken();
      assertTrue(inboundSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken(rSAKeyValueType0, (InboundSecurityContext) null);
      byte[] byteArray0 = new byte[1];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "B)0_J8ZDfvK");
      rsaKeyValueSecurityToken0.setSecretKey("B)0_J8ZDfvK", secretKeySpec0);
      Key key0 = rsaKeyValueSecurityToken0.getKey("B)0_J8ZDfvK", (XMLSecurityConstants.AlgorithmUsage) null, (String) null);
      assertTrue(rsaKeyValueSecurityToken0.isIncludedInMessage());
      assertNotNull(key0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      // Undeclared exception!
      try { 
        dsaKeyValueSecurityToken0.setElementPath((List<QName>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      // Undeclared exception!
      try { 
        dsaKeyValueSecurityToken0.getPublicKey("org.apache.xml.security.stax.securityEvent.SecurityEvent", (XMLSecurityConstants.AlgorithmUsage) null, ">fOeH5\"6:(~-q");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken(rSAKeyValueType0, (InboundSecurityContext) null);
      // Undeclared exception!
      try { 
        rsaKeyValueSecurityToken0.getPubKey("|eX9g%INfA:,`stVN&", (XMLSecurityConstants.AlgorithmUsage) null, "}C^5w0!7H}3KP|(q}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigInteger", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken(rSAKeyValueType0, (InboundSecurityContext) null);
      rsaKeyValueSecurityToken0.getKeyWrappingToken();
      assertTrue(rsaKeyValueSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken((RSAKeyValueType) null, (InboundSecurityContext) null);
      XMLSecurityConstants.AlgorithmUsage xMLSecurityConstants_AlgorithmUsage0 = new XMLSecurityConstants.AlgorithmUsage((String) null);
      // Undeclared exception!
      try { 
        rsaKeyValueSecurityToken0.getPublicKey((String) null, xMLSecurityConstants_AlgorithmUsage0, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // correlationID must not be null
         //
         verifyException("org.apache.xml.security.stax.impl.securityToken.AbstractInboundSecurityToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("", (InboundSecurityContext) null);
      // Undeclared exception!
      try { 
        keyNameSecurityToken0.getSecretKey("s>QKh=sEAHL,^", (XMLSecurityConstants.AlgorithmUsage) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // correlationID must not be null
         //
         verifyException("org.apache.xml.security.stax.impl.securityToken.AbstractInboundSecurityToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken(rSAKeyValueType0, (InboundSecurityContext) null);
      byte[] byteArray0 = new byte[1];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "B)0_J8ZDfvK");
      rsaKeyValueSecurityToken0.setSecretKey("B)0_J8ZDfvK", secretKeySpec0);
      Key key0 = rsaKeyValueSecurityToken0.getSecretKey("B)0_J8ZDfvK", (XMLSecurityConstants.AlgorithmUsage) null, "B)0_J8ZDfvK");
      assertNotNull(key0);
      assertTrue(rsaKeyValueSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = dsaKeyValueSecurityToken0.getTokenType();
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = new X509IssuerSerialSecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "org.apache.xml.security.stax.securityEvent.SecurityEvent");
      XMLSecurityConstants.AlgorithmUsage xMLSecurityConstants_AlgorithmUsage0 = new XMLSecurityConstants.AlgorithmUsage((String) null);
      x509IssuerSerialSecurityToken0.getKey((String) null, xMLSecurityConstants_AlgorithmUsage0, (String) null);
      assertFalse(x509IssuerSerialSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken(rSAKeyValueType0, (InboundSecurityContext) null);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = rsaKeyValueSecurityToken0.getTokenType();
      X509SecurityToken x509SecurityToken0 = null;
      try {
        x509SecurityToken0 = new X509SecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "|eX9g%INfA:,`stVN&", (SecurityTokenConstants.KeyIdentifier) null, false);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No keyIdentifier specified
         //
         verifyException("org.apache.xml.security.stax.impl.securityToken.AbstractInboundSecurityToken", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("i87,~8bUQk-f$", (InboundSecurityContext) null);
      keyNameSecurityToken0.addTokenUsage((SecurityTokenConstants.TokenUsage) null);
      keyNameSecurityToken0.addTokenUsage((SecurityTokenConstants.TokenUsage) null);
      assertFalse(keyNameSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      LinkedList<QName> linkedList0 = new LinkedList<QName>();
      dsaKeyValueSecurityToken0.setElementPath(linkedList0);
      assertTrue(dsaKeyValueSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("i87,~8bUQk-f$", (InboundSecurityContext) null);
      boolean boolean0 = keyNameSecurityToken0.isIncludedInMessage();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("n", (InboundSecurityContext) null);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = new SecurityTokenConstants.TokenType("J4I]s+#Zq");
      X509SKISecurityToken x509SKISecurityToken0 = new X509SKISecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "n");
      keyNameSecurityToken0.addWrappedToken(x509SKISecurityToken0);
      assertFalse(x509SKISecurityToken0.isIncludedInMessage());
      assertFalse(keyNameSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("i87,~8bUQk-f$", (InboundSecurityContext) null);
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      keyNameSecurityToken0.setKeyWrappingToken(dsaKeyValueSecurityToken0);
      keyNameSecurityToken0.addTokenUsage((SecurityTokenConstants.TokenUsage) null);
      assertFalse(keyNameSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      RsaKeyValueSecurityToken rsaKeyValueSecurityToken0 = new RsaKeyValueSecurityToken(rSAKeyValueType0, (InboundSecurityContext) null);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = rsaKeyValueSecurityToken0.getTokenType();
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = new X509IssuerSerialSecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "_et\">9R\"'u?nA=Em");
      x509IssuerSerialSecurityToken0.verify();
      assertFalse(x509IssuerSerialSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      List<QName> list0 = dsaKeyValueSecurityToken0.getElementPath();
      assertNull(list0);
      assertTrue(dsaKeyValueSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("", (InboundSecurityContext) null);
      keyNameSecurityToken0.getXMLSecEvent();
      assertFalse(keyNameSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      dsaKeyValueSecurityToken0.getWrappedTokens();
      assertTrue(dsaKeyValueSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = dsaKeyValueSecurityToken0.getTokenType();
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = new X509IssuerSerialSecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "org.apache.xml.security.stax.securityEvent.SecurityEvent");
      x509IssuerSerialSecurityToken0.getKeyIdentifier();
      assertFalse(x509IssuerSerialSecurityToken0.isIncludedInMessage());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("|eX9g%INfA:,`stVN&", (InboundSecurityContext) null);
      keyNameSecurityToken0.getPublicKey("|eX9g%INfA:,`stVN&", (XMLSecurityConstants.AlgorithmUsage) null, "|eX9g%INfA:,`stVN&");
      assertFalse(keyNameSecurityToken0.isIncludedInMessage());
  }
}
