/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:20:14 GMT 2021
 */

package org.apache.xml.security.stax.impl.securityToken;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.stax.ext.InboundSecurityContext;
import org.apache.xml.security.stax.impl.securityToken.KeyNameSecurityToken;
import org.apache.xml.security.stax.securityToken.SecurityTokenConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KeyNameSecurityToken_ESTest extends KeyNameSecurityToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken((String) null, (InboundSecurityContext) null);
      String string0 = keyNameSecurityToken0.getKeyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("", (InboundSecurityContext) null);
      String string0 = keyNameSecurityToken0.getKeyName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("z/\":iamNco", (InboundSecurityContext) null);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = keyNameSecurityToken0.getTokenType();
      assertEquals("KeyNameToken", securityTokenConstants_TokenType0.getName());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      KeyNameSecurityToken keyNameSecurityToken0 = new KeyNameSecurityToken("FX5v7HKx", (InboundSecurityContext) null);
      String string0 = keyNameSecurityToken0.getKeyName();
      assertEquals("FX5v7HKx", string0);
  }
}
