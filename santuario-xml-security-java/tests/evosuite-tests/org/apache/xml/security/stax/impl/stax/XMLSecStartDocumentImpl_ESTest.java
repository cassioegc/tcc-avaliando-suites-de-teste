/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:50:35 GMT 2021
 */

package org.apache.xml.security.stax.impl.stax;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.xml.security.stax.ext.stax.XMLSecStartDocument;
import org.apache.xml.security.stax.impl.stax.XMLSecStartDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSecStartDocumentImpl_ESTest extends XMLSecStartDocumentImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("", "", boolean0, "");
      String string0 = xMLSecStartDocumentImpl0.getVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Boolean boolean0 = new Boolean(false);
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("+yRI+pD18 r r02Wn", "+yRI+pD18 r r02Wn", boolean0, "+yRI+pD18 r r02Wn");
      String string0 = xMLSecStartDocumentImpl0.getSystemId();
      assertEquals("+yRI+pD18 r r02Wn", string0);
      assertEquals("+yRI+pD18 r r02Wn", xMLSecStartDocumentImpl0.getVersion());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Boolean boolean0 = new Boolean("");
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("", "", boolean0, "");
      // Undeclared exception!
      try { 
        xMLSecStartDocumentImpl0.writeAsEncodedUnicode((Writer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecStartDocumentImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("writeAsEncodedUnicode not implemented for ", "writeAsEncodedUnicode not implemented for ", boolean0, "N`M2S2>XJ~6b5");
      boolean boolean1 = xMLSecStartDocumentImpl0.standaloneSet();
      assertEquals("writeAsEncodedUnicode not implemented for ", xMLSecStartDocumentImpl0.getCharacterEncodingScheme());
      assertTrue(boolean1);
      assertEquals("N`M2S2>XJ~6b5", xMLSecStartDocumentImpl0.getVersion());
      assertEquals("writeAsEncodedUnicode not implemented for ", xMLSecStartDocumentImpl0.getSystemId());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("UWe.S", "", (Boolean) null, "UWe.S");
      boolean boolean0 = xMLSecStartDocumentImpl0.standaloneSet();
      assertFalse(boolean0);
      assertEquals("", xMLSecStartDocumentImpl0.getCharacterEncodingScheme());
      assertEquals("UWe.S", xMLSecStartDocumentImpl0.getVersion());
      assertEquals("UWe.S", xMLSecStartDocumentImpl0.getSystemId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("<?xml version=\"");
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("writeAsEncodedUnicode not implemented for ", "<?xml version=\"", boolean0, "H");
      boolean boolean1 = xMLSecStartDocumentImpl0.isStandalone();
      assertEquals("<?xml version=\"", xMLSecStartDocumentImpl0.getCharacterEncodingScheme());
      assertFalse(boolean1);
      assertEquals("H", xMLSecStartDocumentImpl0.getVersion());
      assertEquals("writeAsEncodedUnicode not implemented for ", xMLSecStartDocumentImpl0.getSystemId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf(true);
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("KgJJHXh\"KyT-", "KgJJHXh\"KyT-", boolean0, "");
      boolean boolean1 = xMLSecStartDocumentImpl0.isStandalone();
      assertTrue(boolean1);
      assertEquals("", xMLSecStartDocumentImpl0.getVersion());
      assertEquals("KgJJHXh\"KyT-", xMLSecStartDocumentImpl0.getSystemId());
      assertEquals("KgJJHXh\"KyT-", xMLSecStartDocumentImpl0.getCharacterEncodingScheme());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf("VyD=U7PniL,}'eZu'O)");
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("xmlns:", (String) null, boolean0, "VyD=U7PniL,}'eZu'O)");
      boolean boolean1 = xMLSecStartDocumentImpl0.encodingSet();
      assertEquals("xmlns:", xMLSecStartDocumentImpl0.getSystemId());
      assertFalse(boolean1);
      assertEquals("VyD=U7PniL,}'eZu'O)", xMLSecStartDocumentImpl0.getVersion());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Boolean boolean0 = Boolean.FALSE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl(" standalone=\"yes\"", "org.apache.xml.security.stax.impl.stax.XMLSecStartDocumentImpl", boolean0, "");
      boolean boolean1 = xMLSecStartDocumentImpl0.encodingSet();
      assertEquals("", xMLSecStartDocumentImpl0.getVersion());
      assertTrue(boolean1);
      assertEquals(" standalone=\"yes\"", xMLSecStartDocumentImpl0.getSystemId());
      assertEquals("org.apache.xml.security.stax.impl.stax.XMLSecStartDocumentImpl", xMLSecStartDocumentImpl0.getCharacterEncodingScheme());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("UWe.S", "", (Boolean) null, "UWe.S");
      String string0 = xMLSecStartDocumentImpl0.getCharacterEncodingScheme();
      assertEquals("UWe.S", xMLSecStartDocumentImpl0.getSystemId());
      assertEquals("", string0);
      assertEquals("UWe.S", xMLSecStartDocumentImpl0.getVersion());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("F}hTvkTQ>5k=sOVZ", "F}hTvkTQ>5k=sOVZ", (Boolean) null, "F}hTvkTQ>5k=sOVZ");
      String string0 = xMLSecStartDocumentImpl0.getVersion();
      assertEquals("F}hTvkTQ>5k=sOVZ", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("F}hTvkTQ>5k=sOVZ", "F}hTvkTQ>5k=sOVZ", (Boolean) null, "F}hTvkTQ>5k=sOVZ");
      StringWriter stringWriter0 = new StringWriter(0);
      xMLSecStartDocumentImpl0.writeAsEncodedUnicode(stringWriter0);
      assertEquals("<?xml version=\"F}hTvkTQ>5k=sOVZ\" encoding=\"F}hTvkTQ>5k=sOVZ\" ?>", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("=Vg`+@8s", "=Vg`+@8s", (Boolean) null, "o");
      boolean boolean0 = xMLSecStartDocumentImpl0.isStandalone();
      assertFalse(boolean0);
      assertEquals("o", xMLSecStartDocumentImpl0.getVersion());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Boolean boolean0 = new Boolean((String) null);
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl((String) null, (String) null, boolean0, (String) null);
      StringWriter stringWriter0 = new StringWriter();
      xMLSecStartDocumentImpl0.writeAsEncodedUnicode(stringWriter0);
      assertEquals("<?xml version=\"1.0\" standalone=\"no\" ?>", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Boolean boolean0 = new Boolean((String) null);
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl((String) null, (String) null, boolean0, (String) null);
      String string0 = xMLSecStartDocumentImpl0.getCharacterEncodingScheme();
      assertNotNull(string0);
      assertEquals("1.0", xMLSecStartDocumentImpl0.getVersion());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("", "", boolean0, "");
      xMLSecStartDocumentImpl0.getSystemId();
      assertEquals("", xMLSecStartDocumentImpl0.getVersion());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Boolean boolean0 = new Boolean((String) null);
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl((String) null, (String) null, boolean0, (String) null);
      String string0 = xMLSecStartDocumentImpl0.getSystemId();
      assertNotNull(string0);
      assertEquals("1.0", xMLSecStartDocumentImpl0.getVersion());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("", "", boolean0, "");
      boolean boolean1 = xMLSecStartDocumentImpl0.isStartDocument();
      assertEquals("", xMLSecStartDocumentImpl0.getVersion());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("=Vg`+@8s", "=Vg`+@8s", (Boolean) null, "o");
      int int0 = xMLSecStartDocumentImpl0.getEventType();
      assertEquals("o", xMLSecStartDocumentImpl0.getVersion());
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("", "", boolean0, "");
      StringWriter stringWriter0 = new StringWriter();
      xMLSecStartDocumentImpl0.writeAsEncodedUnicode(stringWriter0);
      assertEquals("<?xml version=\"1.0\" encoding=\"\" standalone=\"yes\" ?>", stringWriter0.toString());
      assertTrue(xMLSecStartDocumentImpl0.standaloneSet());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("", "", boolean0, "");
      XMLSecStartDocument xMLSecStartDocument0 = xMLSecStartDocumentImpl0.asStartDocument();
      assertEquals("", xMLSecStartDocument0.getVersion());
  }
}
