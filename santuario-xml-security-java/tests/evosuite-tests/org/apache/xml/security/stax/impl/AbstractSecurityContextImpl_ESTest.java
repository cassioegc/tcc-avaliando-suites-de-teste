/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:12:30 GMT 2021
 */

package org.apache.xml.security.stax.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.namespace.QName;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.impl.AbstractSecurityContextImpl;
import org.apache.xml.security.stax.impl.InboundSecurityContextImpl;
import org.apache.xml.security.stax.impl.OutboundSecurityContextImpl;
import org.apache.xml.security.stax.impl.processor.output.XMLEncryptOutputProcessor;
import org.apache.xml.security.stax.impl.securityToken.X509IssuerSerialSecurityToken;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.securityEvent.KeyValueTokenSecurityEvent;
import org.apache.xml.security.stax.securityEvent.SecurityEventListener;
import org.apache.xml.security.stax.securityEvent.SignatureValueSecurityEvent;
import org.apache.xml.security.stax.securityToken.InboundSecurityToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractSecurityContextImpl_ESTest extends AbstractSecurityContextImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      Object object0 = new Object();
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = mock(X509IssuerSerialSecurityToken.class, new ViolatedAssumptionAnswer());
      doReturn("javax.xml.stream.supportDTD").when(x509IssuerSerialSecurityToken0).toString();
      outboundSecurityContextImpl0.putAsMap(object0, "javax.xml.stream.supportDTD", x509IssuerSerialSecurityToken0);
      Map<Integer, QName> map0 = outboundSecurityContextImpl0.getAsMap(object0);
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      outboundSecurityContextImpl0.putAsList((Object) null, (String) null);
      List<XMLSecAttribute> list0 = outboundSecurityContextImpl0.getAsList((Object) null);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      outboundSecurityContextImpl0.putAsList((Object) "stax.xmlStructureSizeExceeded", "stax.xmlStructureSizeExceeded");
      ArrayList arrayList0 = (ArrayList)outboundSecurityContextImpl0.get("stax.xmlStructureSizeExceeded");
      assertEquals(1, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl((QName) null, "3#<B");
      XMLEncryptOutputProcessor xMLEncryptOutputProcessor0 = new XMLEncryptOutputProcessor();
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = mock(X509IssuerSerialSecurityToken.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        abstractSecurityContextImpl0.putAsMap((Object) xMLSecAttributeImpl0, (Object) xMLEncryptOutputProcessor0, x509IssuerSerialSecurityToken0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      Integer integer0 = new Integer((-1521));
      abstractSecurityContextImpl0.putAsList((Object) null, integer0);
      // Undeclared exception!
      try { 
        abstractSecurityContextImpl0.putAsMap((Object) null, "FA.W5i'%]h[}).=otL", (Object) "FA.W5i'%]h[}).=otL");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.ArrayList cannot be cast to java.util.Map
         //
         verifyException("org.apache.xml.security.stax.impl.AbstractSecurityContextImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl((QName) null, "Y@J^YhA'\"&resg*J#k");
      XMLSecurityConstants.ContentType xMLSecurityConstants_ContentType0 = XMLSecurityConstants.ContentType.SIGNATURE;
      // Undeclared exception!
      try { 
        abstractSecurityContextImpl0.putAsList((Object) xMLSecAttributeImpl0, xMLSecurityConstants_ContentType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      abstractSecurityContextImpl0.put("V9W!", outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        abstractSecurityContextImpl0.putAsList((Object) "V9W!", (InboundSecurityToken) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.xml.security.stax.impl.OutboundSecurityContextImpl cannot be cast to java.util.List
         //
         verifyException("org.apache.xml.security.stax.impl.AbstractSecurityContextImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl((QName) null, (String) null);
      // Undeclared exception!
      try { 
        abstractSecurityContextImpl0.getAsMap((Object) xMLSecAttributeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = mock(X509IssuerSerialSecurityToken.class, new ViolatedAssumptionAnswer());
      abstractSecurityContextImpl0.putAsList((Object) null, x509IssuerSerialSecurityToken0);
      // Undeclared exception!
      try { 
        abstractSecurityContextImpl0.getAsMap((Object) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.ArrayList cannot be cast to java.util.Map
         //
         verifyException("org.apache.xml.security.stax.impl.AbstractSecurityContextImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl((QName) null, (String) null);
      // Undeclared exception!
      try { 
        outboundSecurityContextImpl0.getAsList((Object) xMLSecAttributeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      Object object0 = new Object();
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = mock(X509IssuerSerialSecurityToken.class, new ViolatedAssumptionAnswer());
      outboundSecurityContextImpl0.putAsMap(object0, "javax.xml.stream.supportDTD", x509IssuerSerialSecurityToken0);
      Integer integer0 = new Integer(8);
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken1 = mock(X509IssuerSerialSecurityToken.class, new ViolatedAssumptionAnswer());
      outboundSecurityContextImpl0.putAsMap(object0, (Object) integer0, x509IssuerSerialSecurityToken1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      abstractSecurityContextImpl0.putAsList((Object) "http://www.w3.org/2000/09/xmldsig#sha1", (InboundSecurityContextImpl) null);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      abstractSecurityContextImpl0.putAsList((Object) "http://www.w3.org/2000/09/xmldsig#sha1", outboundSecurityContextImpl0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      SignatureValueSecurityEvent signatureValueSecurityEvent0 = new SignatureValueSecurityEvent();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      abstractSecurityContextImpl0.addSecurityEventListener(outboundSecurityContextImpl0);
      abstractSecurityContextImpl0.registerSecurityEvent(signatureValueSecurityEvent0);
      assertNull(signatureValueSecurityEvent0.getCorrelationID());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      abstractSecurityContextImpl0.addSecurityEventListener(outboundSecurityContextImpl0);
      KeyValueTokenSecurityEvent keyValueTokenSecurityEvent0 = new KeyValueTokenSecurityEvent();
      abstractSecurityContextImpl0.forwardSecurityEvent(keyValueTokenSecurityEvent0);
      assertNull(keyValueTokenSecurityEvent0.getCorrelationID());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      abstractSecurityContextImpl0.addSecurityEventListener((SecurityEventListener) null);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = abstractSecurityContextImpl0.remove((String) null);
      assertNull(outboundSecurityContextImpl0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      List<Object> list0 = abstractSecurityContextImpl0.getAsList((Object) null);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      Map<X509IssuerSerialSecurityToken, Integer> map0 = abstractSecurityContextImpl0.getAsMap((Object) null);
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      Integer integer0 = abstractSecurityContextImpl0.get("T");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AbstractSecurityContextImpl abstractSecurityContextImpl0 = new AbstractSecurityContextImpl();
      HashMap<String, InboundSecurityToken> hashMap0 = new HashMap<String, InboundSecurityToken>();
      abstractSecurityContextImpl0.put("", hashMap0);
      // Undeclared exception!
      try { 
        abstractSecurityContextImpl0.getAsList((Object) "");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.util.HashMap cannot be cast to java.util.List
         //
         verifyException("org.apache.xml.security.stax.impl.AbstractSecurityContextImpl", e);
      }
  }
}
