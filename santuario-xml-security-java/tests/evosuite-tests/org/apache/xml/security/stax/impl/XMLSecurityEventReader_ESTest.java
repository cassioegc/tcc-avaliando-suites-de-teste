/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:02:10 GMT 2021
 */

package org.apache.xml.security.stax.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.ConcurrentModificationException;
import java.util.Deque;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.events.XMLEvent;
import org.apache.xml.security.stax.ext.stax.XMLSecEvent;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.XMLSecurityEventReader;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecCharactersImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecCommentImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecDTDImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEndDocumentImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartDocumentImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSecurityEventReader_ESTest extends XMLSecurityEventReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecDTDImpl xMLSecDTDImpl0 = new XMLSecDTDImpl("-ckV(_4+1*MP#StT~", (XMLSecStartElement) null);
      arrayDeque0.add(xMLSecDTDImpl0);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-3239));
      xMLSecurityEventReader0.next();
      XMLEvent xMLEvent0 = xMLSecurityEventReader0.peek();
      assertNull(xMLEvent0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<XMLSecEvent> linkedList0 = new LinkedList<XMLSecEvent>();
      QName qName0 = new QName("rP6;9,Oz[o39c", "rP6;9,Oz[o39c");
      linkedList0.addLast((XMLSecEvent) null);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "org.apache.xml.security.stax.impl.XMLSecurityEventReader");
      linkedList0.offerLast(xMLSecAttributeImpl0);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(linkedList0, 1);
      Object object0 = xMLSecurityEventReader0.next();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<XMLSecEvent> linkedList0 = new LinkedList<XMLSecEvent>();
      char[] charArray0 = new char[4];
      XMLSecCharactersImpl xMLSecCharactersImpl0 = new XMLSecCharactersImpl(charArray0, true, false, false, (XMLSecStartElement) null);
      linkedList0.add((XMLSecEvent) xMLSecCharactersImpl0);
      linkedList0.add((XMLSecEvent) null);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(linkedList0, 0);
      xMLSecurityEventReader0.nextEvent();
      XMLSecCharactersImpl xMLSecCharactersImpl1 = (XMLSecCharactersImpl)xMLSecurityEventReader0.next();
      assertFalse(xMLSecCharactersImpl1.isProcessingInstruction());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecEndDocumentImpl xMLSecEndDocumentImpl0 = new XMLSecEndDocumentImpl();
      arrayDeque0.add(xMLSecEndDocumentImpl0);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      arrayDeque0.pop();
      // Undeclared exception!
      try { 
        xMLSecurityEventReader0.peek();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque$DescendingIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<XMLSecEvent> linkedList0 = new LinkedList<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(linkedList0, 0);
      linkedList0.offerFirst((XMLSecEvent) null);
      // Undeclared exception!
      try { 
        xMLSecurityEventReader0.nextEvent();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<XMLSecEvent> linkedList0 = new LinkedList<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(linkedList0, (-10));
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("Rb.81nP_rSH`zFPM1", "", boolean0, "A{U2g<!VPot?GG");
      linkedList0.add((XMLSecEvent) xMLSecStartDocumentImpl0);
      // Undeclared exception!
      try { 
        xMLSecurityEventReader0.next();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLSecurityEventReader xMLSecurityEventReader0 = null;
      try {
        xMLSecurityEventReader0 = new XMLSecurityEventReader((Deque<XMLSecEvent>) null, 62);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      try { 
        xMLSecurityEventReader0.nextEvent();
        fail("Expecting exception: XMLStreamException");
      
      } catch(XMLStreamException e) {
         //
         // java.util.NoSuchElementException
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecEndDocumentImpl xMLSecEndDocumentImpl0 = new XMLSecEndDocumentImpl();
      arrayDeque0.add(xMLSecEndDocumentImpl0);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      xMLSecurityEventReader0.peek();
      XMLEvent xMLEvent0 = xMLSecurityEventReader0.peek();
      assertFalse(xMLEvent0.isProcessingInstruction());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecEndDocumentImpl xMLSecEndDocumentImpl0 = new XMLSecEndDocumentImpl();
      arrayDeque0.add(xMLSecEndDocumentImpl0);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      XMLEvent xMLEvent0 = xMLSecurityEventReader0.peek();
      assertNotNull(xMLEvent0);
      
      boolean boolean0 = xMLSecurityEventReader0.hasNext();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      boolean boolean0 = xMLSecurityEventReader0.hasNext();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecEndDocumentImpl xMLSecEndDocumentImpl0 = new XMLSecEndDocumentImpl();
      arrayDeque0.add(xMLSecEndDocumentImpl0);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      XMLEvent xMLEvent0 = xMLSecurityEventReader0.peek();
      XMLEvent xMLEvent1 = xMLSecurityEventReader0.nextEvent();
      assertSame(xMLEvent1, xMLEvent0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<XMLSecEvent> linkedList0 = new LinkedList<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = null;
      try {
        xMLSecurityEventReader0 = new XMLSecurityEventReader(linkedList0, 3495);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.LinkedList$ListItr", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArrayDeque<XMLSecCommentImpl> arrayDeque0 = new ArrayDeque<XMLSecCommentImpl>();
      ArrayDeque<XMLSecEvent> arrayDeque1 = new ArrayDeque<XMLSecEvent>(arrayDeque0);
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque1, 0);
      try { 
        xMLSecurityEventReader0.getProperty("Ls{n+X.)SPUX.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.lang.UnsupportedOperationException
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-2161));
      // Undeclared exception!
      try { 
        xMLSecurityEventReader0.next();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // java.util.NoSuchElementException
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, 0);
      try { 
        xMLSecurityEventReader0.nextTag();
        fail("Expecting exception: XMLStreamException");
      
      } catch(XMLStreamException e) {
         //
         // java.lang.UnsupportedOperationException
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      xMLSecurityEventReader0.close();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-4626));
      // Undeclared exception!
      try { 
        xMLSecurityEventReader0.remove();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityEventReader xMLSecurityEventReader0 = new XMLSecurityEventReader(arrayDeque0, (-11));
      try { 
        xMLSecurityEventReader0.getElementText();
        fail("Expecting exception: XMLStreamException");
      
      } catch(XMLStreamException e) {
         //
         // java.lang.UnsupportedOperationException
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventReader", e);
      }
  }
}
