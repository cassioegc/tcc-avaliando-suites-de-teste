/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:35:05 GMT 2021
 */

package org.apache.xml.security.stax.impl.resourceResolvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.stax.ext.ResourceResolver;
import org.apache.xml.security.stax.ext.ResourceResolverLookup;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.resourceResolvers.ResolverFilesystem;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResolverFilesystem_ESTest extends ResolverFilesystem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem("#O?bY", "#O?bY");
      try { 
        resolverFilesystem0.getInputStreamFromExternalReference();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // URI is not absolute
         //
         verifyException("org.apache.xml.security.stax.impl.resourceResolvers.ResolverFilesystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem("", "'4FNDO?");
      try { 
        resolverFilesystem0.getInputStreamFromExternalReference();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // URI is not absolute
         //
         verifyException("org.apache.xml.security.stax.impl.resourceResolvers.ResolverFilesystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem("", "");
      try { 
        resolverFilesystem0.getInputStreamFromExternalReference();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // URI is not absolute
         //
         verifyException("org.apache.xml.security.stax.impl.resourceResolvers.ResolverFilesystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem();
      try { 
        resolverFilesystem0.getInputStreamFromExternalReference();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.resourceResolvers.ResolverFilesystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem("fise:org.apache.xml.security.stax.impl.sVax.XMLSecAttributeImpl", "fise:org.apache.xml.security.stax.impl.sVax.XMLSecAttributeImpl");
      ResourceResolverLookup resourceResolverLookup0 = resolverFilesystem0.canResolve("fise:org.apache.xml.security.stax.impl.sVax.XMLSecAttributeImpl", "fise:org.apache.xml.security.stax.impl.sVax.XMLSecAttributeImpl");
      assertNull(resourceResolverLookup0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem();
      ResourceResolverLookup resourceResolverLookup0 = resolverFilesystem0.canResolve("!vjl;zjW`qR", (String) null);
      assertNull(resourceResolverLookup0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem();
      ResourceResolverLookup resourceResolverLookup0 = resolverFilesystem0.canResolve("file:|7Cg}f`Nkc_T?4uj4&", (String) null);
      assertSame(resolverFilesystem0, resourceResolverLookup0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem();
      ResourceResolverLookup resourceResolverLookup0 = resolverFilesystem0.canResolve((String) null, (String) null);
      assertNull(resourceResolverLookup0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem("", "");
      ResolverFilesystem resolverFilesystem1 = (ResolverFilesystem)resolverFilesystem0.canResolve("", "file:");
      assertFalse(resolverFilesystem1.isSameDocumentReference());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem();
      boolean boolean0 = resolverFilesystem0.matches((XMLSecStartElement) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem("", "");
      boolean boolean0 = resolverFilesystem0.isSameDocumentReference();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResolverFilesystem resolverFilesystem0 = new ResolverFilesystem("", "");
      ResourceResolver resourceResolver0 = resolverFilesystem0.newInstance("file:", "");
      assertFalse(resourceResolver0.isSameDocumentReference());
  }
}
