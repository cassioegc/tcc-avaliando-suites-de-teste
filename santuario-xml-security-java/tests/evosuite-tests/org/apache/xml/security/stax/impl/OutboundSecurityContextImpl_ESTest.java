/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:00:47 GMT 2021
 */

package org.apache.xml.security.stax.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.apache.xml.security.stax.impl.OutboundSecurityContextImpl;
import org.apache.xml.security.stax.securityToken.OutboundSecurityToken;
import org.apache.xml.security.stax.securityToken.SecurityTokenProvider;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutboundSecurityContextImpl_ESTest extends OutboundSecurityContextImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      // Undeclared exception!
      try { 
        outboundSecurityContextImpl0.registerSecurityTokenProvider((String) null, (SecurityTokenProvider<OutboundSecurityToken>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Id must not be null
         //
         verifyException("org.apache.xml.security.stax.impl.OutboundSecurityContextImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      outboundSecurityContextImpl0.registerSecurityTokenProvider("5X,XTw(O-D?4w.w|].4.", (SecurityTokenProvider<OutboundSecurityToken>) null);
      List<SecurityTokenProvider<OutboundSecurityToken>> list0 = outboundSecurityContextImpl0.getRegisteredSecurityTokenProviders();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      SecurityTokenProvider<OutboundSecurityToken> securityTokenProvider0 = outboundSecurityContextImpl0.getSecurityTokenProvider((String) null);
      assertNull(securityTokenProvider0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      List<SecurityTokenProvider<OutboundSecurityToken>> list0 = outboundSecurityContextImpl0.getRegisteredSecurityTokenProviders();
      assertEquals(0, list0.size());
  }
}
