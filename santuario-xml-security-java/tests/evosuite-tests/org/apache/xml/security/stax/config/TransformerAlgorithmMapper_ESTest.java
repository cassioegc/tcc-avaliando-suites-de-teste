/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:57:19 GMT 2021
 */

package org.apache.xml.security.stax.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.configuration.TransformAlgorithmsType;
import org.apache.xml.security.stax.config.TransformerAlgorithmMapper;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransformerAlgorithmMapper_ESTest extends TransformerAlgorithmMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Class<Object> class0 = Object.class;
      try { 
        TransformerAlgorithmMapper.init((TransformAlgorithmsType) null, class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.config.TransformerAlgorithmMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TransformAlgorithmsType transformAlgorithmsType0 = new TransformAlgorithmsType();
      XMLSecurityConstants.DIRECTION xMLSecurityConstants_DIRECTION0 = XMLSecurityConstants.DIRECTION.OUT;
      Class<Integer> class0 = Integer.class;
      TransformerAlgorithmMapper.init(transformAlgorithmsType0, class0);
      try { 
        TransformerAlgorithmMapper.getTransformerClass("h~", xMLSecurityConstants_DIRECTION0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.config.TransformerAlgorithmMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XMLSecurityConstants.DIRECTION xMLSecurityConstants_DIRECTION0 = XMLSecurityConstants.DIRECTION.OUT;
      // Undeclared exception!
      try { 
        TransformerAlgorithmMapper.getTransformerClass("h~", xMLSecurityConstants_DIRECTION0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.config.TransformerAlgorithmMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      XMLSecurityConstants.DIRECTION xMLSecurityConstants_DIRECTION0 = XMLSecurityConstants.DIRECTION.IN;
      // Undeclared exception!
      try { 
        TransformerAlgorithmMapper.getTransformerClass("6QEz+b42-_hR", xMLSecurityConstants_DIRECTION0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.config.TransformerAlgorithmMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        TransformerAlgorithmMapper.getTransformerClass("h", (XMLSecurityConstants.DIRECTION) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.config.TransformerAlgorithmMapper", e);
      }
  }
}
