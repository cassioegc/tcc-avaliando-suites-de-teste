/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:00:22 GMT 2021
 */

package org.apache.xml.security.stax.impl.processor.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.NoSuchElementException;
import javax.xml.namespace.QName;
import org.apache.xml.security.stax.ext.OutboundSecurityContext;
import org.apache.xml.security.stax.ext.OutputProcessorChain;
import org.apache.xml.security.stax.ext.SecurePart;
import org.apache.xml.security.stax.ext.Transformer;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecEvent;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.DocumentContextImpl;
import org.apache.xml.security.stax.impl.OutboundSecurityContextImpl;
import org.apache.xml.security.stax.impl.OutputProcessorChainImpl;
import org.apache.xml.security.stax.impl.SignaturePartDef;
import org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.XMLSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractSignatureOutputProcessor_ESTest extends AbstractSignatureOutputProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      try { 
        xMLSignatureOutputProcessor0.createMessageDigestOutputStream("http://www.w3.og/2001/10/xml-exc-c14n#");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      xMLSignatureOutputProcessor0.verifySignatureParts(outputProcessorChainImpl0);
      assertEquals((-1), xMLSignatureOutputProcessor0.getActionOrder());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl((QName) null, (Collection<XMLSecAttribute>) null, arrayDeque0);
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      xMLSignatureOutputProcessor0.init(outputProcessorChainImpl0);
      xMLSignatureOutputProcessor0.processEvent(xMLSecStartElementImpl0, outputProcessorChainImpl0);
      assertFalse(xMLSecStartElementImpl0.isEndElement());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      xMLSignatureOutputProcessor0.doFinalInternal(outputProcessorChainImpl0);
      assertEquals(XMLSecurityConstants.Phase.PROCESSING, xMLSignatureOutputProcessor0.getPhase());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, (XMLSecStartElement) null);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.processEvent((XMLSecEvent) null, outputProcessorChainImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor$InternalSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, arrayDeque0);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, xMLSecStartElementImpl0);
      xMLSignatureOutputProcessor0.setActiveInternalSignatureOutputProcessor(abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor1 = xMLSignatureOutputProcessor0.getActiveInternalSignatureOutputProcessor();
      assertEquals(XMLSecurityConstants.Phase.PROCESSING, abstractSignatureOutputProcessor_InternalSignatureOutputProcessor1.getPhase());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.verifySignatureParts((OutputProcessorChain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.processEvent((XMLSecEvent) null, (OutputProcessorChain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.XMLSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      QName qName0 = QName.valueOf("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "mE-wVF8^0");
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.processEvent(xMLSecAttributeImpl0, outputProcessorChainImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      QName qName0 = new QName("/");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque1 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, arrayDeque1);
      XMLSecNamespace xMLSecNamespace0 = xMLSecStartElementImpl0.getElementNamespace();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1));
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.processEvent(xMLSecNamespace0, outputProcessorChainImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl((OutboundSecurityContext) null, documentContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.doFinalInternal(outputProcessorChainImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      xMLSignatureOutputProcessor0.init(outputProcessorChainImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl((OutboundSecurityContext) null, 0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      SecurePart.Modifier securePart_Modifier0 = SecurePart.Modifier.Element;
      SecurePart securePart0 = new SecurePart("O:S4:_u0", securePart_Modifier0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.digestExternalReference(outputProcessorChainImpl0, securePart0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.config.ResourceResolverMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      List<SignaturePartDef> list0 = xMLSignatureOutputProcessor0.getSignaturePartDefList();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, arrayDeque0);
      String[] stringArray0 = new String[7];
      xMLSignatureOutputProcessor0.setXMLSecurityProperties(xMLSecurityProperties0);
      signaturePartDef0.setTransforms(stringArray0);
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.buildTransformerChain(byteArrayOutputStream0, signaturePartDef0, xMLSecStartElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.config.TransformerAlgorithmMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      String[] stringArray0 = new String[1];
      signaturePartDef0.setTransforms(stringArray0);
      QName qName0 = new QName("FMv==|)%QyC9~wuA>?", "FMv==|)%QyC9~wuA>?");
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, arrayDeque0);
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.buildTransformerChain(byteArrayOutputStream0, signaturePartDef0, xMLSecStartElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, arrayDeque0);
      Transformer transformer0 = xMLSignatureOutputProcessor0.buildTransformerChain(byteArrayOutputStream0, signaturePartDef0, xMLSecStartElementImpl0);
      assertNotNull(transformer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      QName qName0 = new QName("http://www.w3.org/2001/10/xml-exc-c14n#");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, arrayDeque0);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, xMLSecStartElementImpl0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1734));
      try { 
        abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.init(outputProcessorChainImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.getActiveInternalSignatureOutputProcessor();
      assertNull(abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-2540));
      // Undeclared exception!
      try { 
        xMLSignatureOutputProcessor0.doFinal(outputProcessorChainImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
