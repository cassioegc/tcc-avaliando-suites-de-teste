/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:06:53 GMT 2021
 */

package org.apache.xml.security.stax.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.namespace.NamespaceContext;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;
import javax.xml.stream.events.XMLEvent;
import javax.xml.stream.util.EventReaderDelegate;
import org.apache.xml.security.stax.ext.OutboundSecurityContext;
import org.apache.xml.security.stax.ext.OutputProcessor;
import org.apache.xml.security.stax.ext.OutputProcessorChain;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecCharacters;
import org.apache.xml.security.stax.ext.stax.XMLSecEndElement;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.impl.DocumentContextImpl;
import org.apache.xml.security.stax.impl.OutboundSecurityContextImpl;
import org.apache.xml.security.stax.impl.OutputProcessorChainImpl;
import org.apache.xml.security.stax.impl.SignaturePartDef;
import org.apache.xml.security.stax.impl.XMLSecurityEventWriter;
import org.apache.xml.security.stax.impl.XMLSecurityStreamWriter;
import org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.XMLSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecCharactersImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecCommentImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecDTDImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEndDocumentImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEntityDeclarationImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEntityReferenceImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecNamespaceImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecProcessingInstructionImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartDocumentImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.apache.xml.security.utils.DOMNamespaceContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSecurityEventWriter_ESTest extends XMLSecurityEventWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1324));
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      xMLSecurityEventWriter0.setPrefix((String) null, "ZPf>WKP/o");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-4462));
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      xMLSecurityEventWriter0.setPrefix("[ym", "[ym");
      String string0 = xMLSecurityEventWriter0.getPrefix("[ym");
      assertEquals("[ym", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      xMLSecurityEventWriter0.setDefaultNamespace("`iG[Id");
      String string0 = xMLSecurityEventWriter0.getPrefix("`iG[Id");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.setPrefix("cU7w-QuY2}b.^3rtUe?", "cU7w-QuY2}b.^3rtUe?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("a/p2 >)2N");
      DOMNamespaceContext dOMNamespaceContext0 = new DOMNamespaceContext(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.setNamespaceContext(dOMNamespaceContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl((OutboundSecurityContext) null, documentContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.setNamespaceContext((NamespaceContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // context must not be null
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.setDefaultNamespace((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.getPrefix("0[[");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.getNamespaceContext();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.flush();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      LinkedList<OutputProcessor> linkedList0 = new LinkedList<OutputProcessor>();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0, (-2077), linkedList0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.close();
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -2077, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      xMLSecurityStreamWriter0.writeStartElement((String) null, (String) null, "");
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.close();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-781));
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.close();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("");
      QName qName0 = new QName("");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      xMLSecurityStreamWriter0.writeEmptyElement((String) null, (String) null, (String) null);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, linkedList0);
      XMLSecEntityReferenceImpl xMLSecEntityReferenceImpl0 = new XMLSecEntityReferenceImpl("", xMLSecEntityDeclarationImpl0, xMLSecStartElementImpl0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecEntityReferenceImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // local part cannot be \"null\" when creating a QName
         //
         verifyException("javax.xml.namespace.QName", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-781));
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      char[] charArray0 = new char[6];
      XMLSecCharacters xMLSecCharacters0 = xMLSignatureOutputProcessor0.createCharacters(charArray0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecCharacters0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0, 0, (List<OutputProcessor>) null);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      EventReaderDelegate eventReaderDelegate0 = new EventReaderDelegate();
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEventReader) eventReaderDelegate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("javax.xml.stream.util.EventReaderDelegate", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      XMLSecNamespace xMLSecNamespace0 = XMLSecNamespaceImpl.getInstance("IssuerSerial", "org.apache.xml.security.stax.impl.XMLSecurityEventWriter");
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecNamespace0);
        fail("Expecting exception: XMLStreamException");
      
      } catch(XMLStreamException e) {
         //
         // No open start element.
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl((OutboundSecurityContext) null);
      QName qName0 = QName.valueOf("a/p2 >)2N");
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, ".J3.8Vl#UXH#-@+qG");
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecAttributeImpl0);
        fail("Expecting exception: XMLStreamException");
      
      } catch(XMLStreamException e) {
         //
         // No open start element.
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("&", (String) null, boolean0, "org.apache.xml.security.stax.impl.XMLSecurityEventWriter");
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecStartDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("org.apache.xml.security.stax.impl.stax.XMLSecEndElementImpl");
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecEntityDeclarationImpl0);
        fail("Expecting exception: XMLStreamException");
      
      } catch(XMLStreamException e) {
         //
         // Illegal event
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      QName qName0 = new QName((String) null, "org.apache.xml.security.binding.xmlenc.EncryptionMethodType", "org.apache.xml.security.binding.xmlenc.EncryptionMethodType");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, linkedList0);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor((SignaturePartDef) null, xMLSecStartElementImpl0);
      XMLSecNamespace xMLSecNamespace0 = abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.createNamespace("-+>y7y", (String) null);
      linkedList0.add(xMLSecNamespace0);
      XMLSecStartElementImpl xMLSecStartElementImpl1 = new XMLSecStartElementImpl(qName0, arrayDeque0, linkedList0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      xMLSecurityEventWriter0.add((XMLEvent) xMLSecStartElementImpl1);
      assertEquals(1, xMLSecStartElementImpl1.getDocumentLevel());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      QName qName0 = new QName("jWr");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, arrayDeque0);
      XMLSecCharactersImpl xMLSecCharactersImpl0 = new XMLSecCharactersImpl((char[]) null, true, true, true, xMLSecStartElementImpl0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecCharactersImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      QName qName0 = new QName("UR6%");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      XMLSecDTDImpl xMLSecDTDImpl0 = new XMLSecDTDImpl("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", xMLSecStartElementImpl0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecDTDImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      QName qName0 = new QName((String) null, "org.apache.xml.security.binding.xmlenc.EncryptionMethodType", "org.apache.xml.security.binding.xmlenc.EncryptionMethodType");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, (String) null);
      arrayDeque0.add(xMLSecAttributeImpl0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, linkedList0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      xMLSecurityEventWriter0.add((XMLEvent) xMLSecStartElementImpl0);
      assertFalse(xMLSecStartElementImpl0.isNamespace());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("");
      QName qName0 = new QName("");
      ArrayDeque<XMLSecAttribute> arrayDeque0 = new ArrayDeque<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, arrayDeque0, linkedList0);
      XMLSecEntityReferenceImpl xMLSecEntityReferenceImpl0 = new XMLSecEntityReferenceImpl("", xMLSecEntityDeclarationImpl0, xMLSecStartElementImpl0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecEntityReferenceImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl((OutboundSecurityContext) null, (DocumentContextImpl) null);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      XMLSecEndDocumentImpl xMLSecEndDocumentImpl0 = new XMLSecEndDocumentImpl();
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecEndDocumentImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Boolean boolean0 = Boolean.TRUE;
      XMLSecStartDocumentImpl xMLSecStartDocumentImpl0 = new XMLSecStartDocumentImpl("&", "&", boolean0, "&");
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter((XMLStreamWriter) null);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecStartDocumentImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, 0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      QName qName0 = new QName("\"vH9O$+Z", "", "\"vH9O$+Z");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque0 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, arrayDeque0);
      XMLSecCommentImpl xMLSecCommentImpl0 = new XMLSecCommentImpl("\"vH9O$+Z", xMLSecStartElementImpl0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecCommentImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      QName qName0 = new QName("jDlT&n/,", "", "iac%rFIC;d+dA");
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, (Collection<XMLSecNamespace>) null);
      XMLSecProcessingInstructionImpl xMLSecProcessingInstructionImpl0 = new XMLSecProcessingInstructionImpl("", "", xMLSecStartElementImpl0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecProcessingInstructionImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      QName qName0 = new QName(")3)");
      LinkedList<XMLSecNamespace> linkedList0 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, (Collection<XMLSecAttribute>) null, linkedList0);
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor((SignaturePartDef) null, xMLSecStartElementImpl0);
      XMLSecEndElement xMLSecEndElement0 = abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.createEndElement(qName0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) xMLSecEndElement0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityStreamWriter$Element", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1324));
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.add((XMLEvent) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // XMLEvent must be an instance of XMLSecEvent
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityEventWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1324));
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      NamespaceContext namespaceContext0 = xMLSecurityStreamWriter0.getNamespaceContext();
      xMLSecurityEventWriter0.setNamespaceContext(namespaceContext0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      // Undeclared exception!
      try { 
        xMLSecurityEventWriter0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.XMLSecurityStreamWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-32));
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      xMLSecurityEventWriter0.flush();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-32));
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      NamespaceContext namespaceContext0 = xMLSecurityEventWriter0.getNamespaceContext();
      assertNotNull(namespaceContext0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0, 0, (List<OutputProcessor>) null);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      XMLSecurityEventWriter xMLSecurityEventWriter0 = new XMLSecurityEventWriter(xMLSecurityStreamWriter0);
      String string0 = xMLSecurityEventWriter0.getPrefix("}F'$QsF^),Aph3\"");
      assertNull(string0);
  }
}
