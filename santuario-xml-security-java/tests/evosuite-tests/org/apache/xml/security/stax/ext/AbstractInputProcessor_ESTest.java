/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:25:54 GMT 2021
 */

package org.apache.xml.security.stax.ext;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayDeque;
import java.util.LinkedList;
import java.util.Set;
import javax.xml.namespace.QName;
import javax.xml.stream.events.Attribute;
import org.apache.xml.security.stax.ext.InboundSecurityContext;
import org.apache.xml.security.stax.ext.InputProcessorChain;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecEvent;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.DocumentContextImpl;
import org.apache.xml.security.stax.impl.InputProcessorChainImpl;
import org.apache.xml.security.stax.impl.SignaturePartDef;
import org.apache.xml.security.stax.impl.processor.input.LogInputProcessor;
import org.apache.xml.security.stax.impl.processor.input.XMLSecurityInputProcessor;
import org.apache.xml.security.stax.impl.processor.output.AbstractSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.XMLSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractInputProcessor_ESTest extends AbstractInputProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LogInputProcessor logInputProcessor0 = new LogInputProcessor((XMLSecurityProperties) null);
      XMLSecurityProperties xMLSecurityProperties0 = logInputProcessor0.getSecurityProperties();
      assertNull(xMLSecurityProperties0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      XMLSecurityInputProcessor xMLSecurityInputProcessor0 = new XMLSecurityInputProcessor(xMLSecurityProperties0);
      xMLSecurityProperties0.setSignatureGenerateIds(false);
      XMLSecurityProperties xMLSecurityProperties1 = xMLSecurityInputProcessor0.getSecurityProperties();
      assertFalse(xMLSecurityProperties1.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignaturePosition(725);
      XMLSecurityInputProcessor xMLSecurityInputProcessor0 = new XMLSecurityInputProcessor(xMLSecurityProperties0);
      XMLSecurityProperties xMLSecurityProperties1 = xMLSecurityInputProcessor0.getSecurityProperties();
      assertFalse(xMLSecurityProperties1.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      XMLSecurityInputProcessor xMLSecurityInputProcessor0 = new XMLSecurityInputProcessor(xMLSecurityProperties0);
      xMLSecurityProperties0.setSignaturePosition((-137));
      XMLSecurityProperties xMLSecurityProperties1 = xMLSecurityInputProcessor0.getSecurityProperties();
      assertFalse(xMLSecurityProperties1.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      AbstractSignatureOutputProcessor.InternalSignatureOutputProcessor abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0 = xMLSignatureOutputProcessor0.new InternalSignatureOutputProcessor(signaturePartDef0, (XMLSecStartElement) null);
      XMLSecAttribute xMLSecAttribute0 = abstractSignatureOutputProcessor_InternalSignatureOutputProcessor0.createAttribute(qName0, "org.apache.xml.security.stax.ext.AbstractInputProcessor");
      linkedList0.add(xMLSecAttribute0);
      ArrayDeque<XMLSecNamespace> arrayDeque1 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, arrayDeque1);
      Attribute attribute0 = xMLSecurityInputProcessor_InternalReplayProcessor0.getReferenceIDAttribute(xMLSecStartElementImpl0);
      assertTrue(attribute0.isSpecified());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      // Undeclared exception!
      try { 
        xMLSecurityInputProcessor_InternalReplayProcessor0.getReferenceIDAttribute((XMLSecStartElement) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractInputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      XMLSecurityInputProcessor xMLSecurityInputProcessor0 = new XMLSecurityInputProcessor(xMLSecurityProperties0);
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      InputProcessorChainImpl inputProcessorChainImpl0 = new InputProcessorChainImpl((InboundSecurityContext) null, documentContextImpl0);
      try { 
        xMLSecurityInputProcessor0.doFinal(inputProcessorChainImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.processor.input.XMLSecurityInputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      // Undeclared exception!
      try { 
        xMLSecurityInputProcessor_InternalReplayProcessor0.doFinal((InputProcessorChain) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractInputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      InputProcessorChainImpl inputProcessorChainImpl0 = new InputProcessorChainImpl((InboundSecurityContext) null, 29);
      // Undeclared exception!
      try { 
        xMLSecurityInputProcessor_InternalReplayProcessor0.doFinal(inputProcessorChainImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 29, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      XMLSecurityInputProcessor xMLSecurityInputProcessor0 = new XMLSecurityInputProcessor(xMLSecurityProperties0);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl((QName) null, "CU{^XFI}J?GQGl");
      // Undeclared exception!
      try { 
        xMLSecurityInputProcessor0.addBeforeProcessor(xMLSecAttributeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl((QName) null, "<?P-7k I\"S=q3");
      // Undeclared exception!
      try { 
        xMLSecurityInputProcessor_InternalReplayProcessor0.addAfterProcessor(xMLSecAttributeImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LogInputProcessor logInputProcessor0 = new LogInputProcessor((XMLSecurityProperties) null);
      Set<Object> set0 = logInputProcessor0.getAfterProcessors();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      XMLSecurityConstants.Phase xMLSecurityConstants_Phase0 = XMLSecurityConstants.Phase.PROCESSING;
      xMLSecurityInputProcessor_InternalReplayProcessor0.setPhase(xMLSecurityConstants_Phase0);
      assertEquals(XMLSecurityConstants.Phase.PROCESSING, xMLSecurityInputProcessor_InternalReplayProcessor0.getPhase());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      XMLSecurityConstants.Phase xMLSecurityConstants_Phase0 = xMLSecurityInputProcessor_InternalReplayProcessor0.getPhase();
      assertEquals(XMLSecurityConstants.Phase.PROCESSING, xMLSecurityConstants_Phase0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      xMLSecurityInputProcessor_InternalReplayProcessor0.addBeforeProcessor(arrayDeque0);
      Set<Object> set0 = xMLSecurityInputProcessor_InternalReplayProcessor0.getBeforeProcessors();
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      Set<Object> set0 = xMLSecurityInputProcessor_InternalReplayProcessor0.getBeforeProcessors();
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      xMLSecurityInputProcessor_InternalReplayProcessor0.addAfterProcessor(arrayDeque0);
      Set<Object> set0 = xMLSecurityInputProcessor_InternalReplayProcessor0.getAfterProcessors();
      assertEquals(1, set0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      QName qName0 = xMLSecurityProperties0.getIdAttributeNS();
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      ArrayDeque<XMLSecNamespace> arrayDeque1 = new ArrayDeque<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, arrayDeque1);
      Attribute attribute0 = xMLSecurityInputProcessor_InternalReplayProcessor0.getReferenceIDAttribute(xMLSecStartElementImpl0);
      assertNull(attribute0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecurityInputProcessor.InternalReplayProcessor xMLSecurityInputProcessor_InternalReplayProcessor0 = new XMLSecurityInputProcessor.InternalReplayProcessor(xMLSecurityProperties0, arrayDeque0);
      InputProcessorChainImpl inputProcessorChainImpl0 = new InputProcessorChainImpl((InboundSecurityContext) null, (-1));
      // Undeclared exception!
      try { 
        xMLSecurityInputProcessor_InternalReplayProcessor0.doFinal(inputProcessorChainImpl0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
