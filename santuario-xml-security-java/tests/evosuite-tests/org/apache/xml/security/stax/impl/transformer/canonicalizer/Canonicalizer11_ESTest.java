/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:27:18 GMT 2021
 */

package org.apache.xml.security.stax.impl.transformer.canonicalizer;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import javax.xml.namespace.QName;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecEvent;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.apache.xml.security.stax.impl.transformer.canonicalizer.Canonicalizer11;
import org.apache.xml.security.stax.impl.transformer.canonicalizer.CanonicalizerBase;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Canonicalizer11_ESTest extends Canonicalizer11_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Canonicalizer11 canonicalizer11_0 = new Canonicalizer11(true);
      QName qName0 = new QName("xml", "xml", "xml");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "~!M*rse*S7Yg4");
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, (XMLSecStartElement) null);
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      CanonicalizerBase.C14NStack<XMLSecEvent> canonicalizerBase_C14NStack0 = new CanonicalizerBase.C14NStack<XMLSecEvent>();
      // Undeclared exception!
      try { 
        canonicalizer11_0.getInitialUtilizedAttributes(xMLSecStartElementImpl0, canonicalizerBase_C14NStack0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.transformer.canonicalizer.Canonicalizer11", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QName qName0 = new QName("xmb", "xmb", "xmb");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "xmb");
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, (XMLSecStartElement) null);
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      Canonicalizer11 canonicalizer11_0 = new Canonicalizer11(true);
      // Undeclared exception!
      try { 
        canonicalizer11_0.transform((XMLSecEvent) xMLSecStartElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.transformer.canonicalizer.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QName qName0 = new QName("xml", "xml", "xml");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "xml");
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, (XMLSecStartElement) null);
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      Canonicalizer11 canonicalizer11_0 = new Canonicalizer11(true);
      // Undeclared exception!
      try { 
        canonicalizer11_0.transform((XMLSecEvent) xMLSecStartElementImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.transformer.canonicalizer.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Canonicalizer11 canonicalizer11_0 = new Canonicalizer11(false);
      QName qName0 = new QName("", "P#)M'X,pP/{");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1, (XMLSecStartElement) null);
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "P#)M'X,pP/{");
      linkedList0.add((XMLSecAttribute) xMLSecAttributeImpl0);
      List<XMLSecAttribute> list0 = canonicalizer11_0.getInitialUtilizedAttributes(xMLSecStartElementImpl0, (CanonicalizerBase.C14NStack<XMLSecEvent>) null);
      assertFalse(list0.isEmpty());
  }
}
