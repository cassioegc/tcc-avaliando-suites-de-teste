/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:37:51 GMT 2021
 */

package org.apache.xml.security.stax.ext;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import javax.xml.stream.XMLStreamWriter;
import org.apache.xml.security.stax.ext.OutboundXMLSec;
import org.apache.xml.security.stax.ext.OutputProcessorChain;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.impl.OutboundSecurityContextImpl;
import org.apache.xml.security.stax.impl.OutputProcessorChainImpl;
import org.apache.xml.security.stax.impl.XMLSecurityStreamWriter;
import org.apache.xml.security.stax.securityEvent.SecurityEventListener;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OutboundXMLSec_ESTest extends OutboundXMLSec_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      XMLStreamWriter xMLStreamWriter0 = outboundXMLSec0.processOutMessage((OutputStream) pipedOutputStream0, (String) null);
      assertNotNull(xMLStreamWriter0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec((XMLSecurityProperties) null);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter(outputProcessorChainImpl0);
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((XMLStreamWriter) xMLSecurityStreamWriter0, "nBQ'UE", (SecurityEventListener) outboundSecurityContextImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((XMLStreamWriter) null, "", (SecurityEventListener) outboundSecurityContextImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not supported as output
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec((XMLSecurityProperties) null);
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((XMLStreamWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((XMLStreamWriter) null, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not supported as output
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("stax.encryption.encryptionKeyMissing");
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      try { 
        outboundXMLSec0.processOutMessage((OutputStream) mockPrintStream0, "org.apache.xml.security.stax.ext.OutboundXMLSec", (SecurityEventListener) outboundSecurityContextImpl0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.io.UnsupportedEncodingException: org.apache.xml.security.stax.ext.OutboundXMLSec
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.FinalOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec((XMLSecurityProperties) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(",& 2|;{?&hf#xT.");
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((OutputStream) mockFileOutputStream0, "org.apache.xml.security.binding.xmldsig11.ECKeyValueType", (SecurityEventListener) outboundSecurityContextImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((OutputStream) null, "llm%DM", (SecurityEventListener) outboundSecurityContextImpl0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not supported as output
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("signature.Verification.MultipleIDs");
      try { 
        outboundXMLSec0.processOutMessage((OutputStream) mockPrintStream0, ";{*b]v9;C]-");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // java.io.UnsupportedEncodingException: ;{*b]v9;C]-
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.FinalOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec((XMLSecurityProperties) null);
      MockFile mockFile0 = new MockFile("0qc2LYR4", "0qc2LYR4");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((OutputStream) mockPrintStream0, "%zO>dA$?[Q}@Q|kQWa");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      xMLSecurityProperties0.addAction((XMLSecurityConstants.Action) null);
      XMLSecurityStreamWriter xMLSecurityStreamWriter0 = new XMLSecurityStreamWriter((OutputProcessorChain) null);
      XMLStreamWriter xMLStreamWriter0 = outboundXMLSec0.processOutMessage((XMLStreamWriter) xMLSecurityStreamWriter0, "org.apache.xml.security.stax.ext.OutboundXMLSec$2");
      assertNotSame(xMLSecurityStreamWriter0, xMLStreamWriter0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      // Undeclared exception!
      try { 
        outboundXMLSec0.processOutMessage((OutputStream) null, "org.apache.xml.security.stax.ext.OutboundXMLSec$2");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // null is not supported as output
         //
         verifyException("org.apache.xml.security.stax.ext.OutboundXMLSec", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      XMLStreamWriter xMLStreamWriter0 = outboundXMLSec0.processOutMessage((OutputStream) pipedOutputStream0, (String) null, (SecurityEventListener) outboundSecurityContextImpl0);
      XMLStreamWriter xMLStreamWriter1 = outboundXMLSec0.processOutMessage(xMLStreamWriter0, (String) null);
      assertNotSame(xMLStreamWriter0, xMLStreamWriter1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      OutboundXMLSec outboundXMLSec0 = new OutboundXMLSec(xMLSecurityProperties0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      XMLStreamWriter xMLStreamWriter0 = outboundXMLSec0.processOutMessage((OutputStream) pipedOutputStream0, (String) null, (SecurityEventListener) outboundSecurityContextImpl0);
      XMLStreamWriter xMLStreamWriter1 = outboundXMLSec0.processOutMessage(xMLStreamWriter0, (String) null, (SecurityEventListener) outboundSecurityContextImpl0);
      assertNotSame(xMLStreamWriter0, xMLStreamWriter1);
  }
}
