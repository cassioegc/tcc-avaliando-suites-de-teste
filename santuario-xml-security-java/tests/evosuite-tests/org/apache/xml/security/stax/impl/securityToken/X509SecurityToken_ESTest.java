/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 19:15:08 GMT 2021
 */

package org.apache.xml.security.stax.impl.securityToken;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.xml.security.binding.xmldsig.DSAKeyValueType;
import org.apache.xml.security.stax.ext.InboundSecurityContext;
import org.apache.xml.security.stax.impl.securityToken.DsaKeyValueSecurityToken;
import org.apache.xml.security.stax.impl.securityToken.X509IssuerSerialSecurityToken;
import org.apache.xml.security.stax.impl.securityToken.X509SecurityToken;
import org.apache.xml.security.stax.securityToken.SecurityTokenConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class X509SecurityToken_ESTest extends X509SecurityToken_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SecurityTokenConstants.KeyIdentifier securityTokenConstants_KeyIdentifier0 = new SecurityTokenConstants.KeyIdentifier("`^i('!qC)0`)~O.#>");
      X509SecurityToken x509SecurityToken0 = new X509SecurityToken((SecurityTokenConstants.TokenType) null, (InboundSecurityContext) null, "`^i('!qC)0`)~O.#>", securityTokenConstants_KeyIdentifier0, true);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = x509SecurityToken0.getTokenType();
      assertNull(securityTokenConstants_TokenType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = new SecurityTokenConstants.TokenType("org.apache.xml.security3stax.impl.securityToken.X509SecurityToken");
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = new X509IssuerSerialSecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "org.apache.xml.security3stax.impl.securityToken.X509SecurityToken");
      boolean boolean0 = x509IssuerSerialSecurityToken0.isAsymmetric();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = new SecurityTokenConstants.TokenType("org.apache.xml.security3stax.impl.securityToken.X509SecurityToken");
      X509IssuerSerialSecurityToken x509IssuerSerialSecurityToken0 = new X509IssuerSerialSecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "org.apache.xml.security3stax.impl.securityToken.X509SecurityToken");
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType1 = x509IssuerSerialSecurityToken0.getTokenType();
      assertSame(securityTokenConstants_TokenType1, securityTokenConstants_TokenType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      DsaKeyValueSecurityToken dsaKeyValueSecurityToken0 = new DsaKeyValueSecurityToken(dSAKeyValueType0, (InboundSecurityContext) null);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = dsaKeyValueSecurityToken0.getTokenType();
      X509SecurityToken x509SecurityToken0 = null;
      try {
        x509SecurityToken0 = new X509SecurityToken(securityTokenConstants_TokenType0, (InboundSecurityContext) null, "m[LO&", (SecurityTokenConstants.KeyIdentifier) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No keyIdentifier specified
         //
         verifyException("org.apache.xml.security.stax.impl.securityToken.AbstractInboundSecurityToken", e);
      }
  }
}
