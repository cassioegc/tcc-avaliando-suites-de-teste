/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:03:48 GMT 2021
 */

package org.apache.xml.security.stax.impl.processor.output;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.cert.X509Certificate;
import java.util.ArrayDeque;
import java.util.Deque;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import javax.xml.namespace.QName;
import org.apache.xml.security.stax.ext.OutputProcessorChain;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.ext.stax.XMLSecAttribute;
import org.apache.xml.security.stax.ext.stax.XMLSecEvent;
import org.apache.xml.security.stax.ext.stax.XMLSecNamespace;
import org.apache.xml.security.stax.ext.stax.XMLSecStartElement;
import org.apache.xml.security.stax.impl.DocumentContextImpl;
import org.apache.xml.security.stax.impl.OutboundSecurityContextImpl;
import org.apache.xml.security.stax.impl.OutputProcessorChainImpl;
import org.apache.xml.security.stax.impl.SignaturePartDef;
import org.apache.xml.security.stax.impl.algorithms.SignatureAlgorithm;
import org.apache.xml.security.stax.impl.processor.output.XMLSignatureEndingOutputProcessor;
import org.apache.xml.security.stax.impl.processor.output.XMLSignatureOutputProcessor;
import org.apache.xml.security.stax.impl.securityToken.GenericOutboundSecurityToken;
import org.apache.xml.security.stax.impl.stax.XMLSecEndElementImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEntityDeclarationImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecStartElementImpl;
import org.apache.xml.security.stax.securityToken.SecurityTokenConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSignatureEndingOutputProcessor_ESTest extends XMLSignatureEndingOutputProcessor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      QName qName0 = new QName("");
      XMLSecEndElementImpl xMLSecEndElementImpl0 = new XMLSecEndElementImpl(qName0, (XMLSecStartElement) null);
      arrayDeque0.addFirst(xMLSecEndElementImpl0);
      outputProcessorChainImpl0.addProcessor(xMLSignatureEndingOutputProcessor0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.flushBufferAndCallbackAfterHeader(outputProcessorChainImpl0, arrayDeque0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayDeque", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSignatureEndingOutputProcessor0.setXMLSecurityProperties(xMLSecurityProperties0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.processHeaderEvent(outputProcessorChainImpl0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.flushBufferAndCallbackAfterHeader(outputProcessorChainImpl0, (Deque<XMLSecEvent>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.XMLSignatureEndingOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, (-1));
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl((String) null);
      arrayDeque0.add(xMLSecEntityDeclarationImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.flushBufferAndCallbackAfterHeader(outputProcessorChainImpl0, arrayDeque0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      String[] stringArray0 = new String[0];
      signaturePartDef0.setTransforms(stringArray0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.createTransformsStructureForSignature((OutputProcessorChain) null, signaturePartDef0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.AbstractOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = null;
      try {
        xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor((XMLSignatureOutputProcessor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureEndingOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, 1357);
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      String[] stringArray0 = new String[7];
      signaturePartDef0.setTransforms(stringArray0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.createTransformsStructureForSignature(outputProcessorChainImpl0, signaturePartDef0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1357, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      SignaturePartDef signaturePartDef0 = new SignaturePartDef();
      xMLSignatureEndingOutputProcessor0.createTransformsStructureForSignature(outputProcessorChainImpl0, signaturePartDef0);
      assertFalse(signaturePartDef0.isExcludeVisibleC14Nprefixes());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = new SecurityTokenConstants.TokenType("r(KJ7}C*ZQ8ZR7");
      GenericOutboundSecurityToken genericOutboundSecurityToken0 = new GenericOutboundSecurityToken("r(KJ7}C*ZQ8ZR7", securityTokenConstants_TokenType0);
      X509Certificate[] x509CertificateArray0 = new X509Certificate[5];
      genericOutboundSecurityToken0.setX509Certificates(x509CertificateArray0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.createKeyInfoStructureForSignature((OutputProcessorChain) null, genericOutboundSecurityToken0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.XMLSignatureEndingOutputProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      SecurityTokenConstants.TokenType securityTokenConstants_TokenType0 = new SecurityTokenConstants.TokenType("r(KJ7}C%ZQ8Za7");
      GenericOutboundSecurityToken genericOutboundSecurityToken0 = new GenericOutboundSecurityToken("r(KJ7}C%ZQ8Za7", securityTokenConstants_TokenType0);
      xMLSignatureEndingOutputProcessor0.createKeyInfoStructureForSignature((OutputProcessorChain) null, genericOutboundSecurityToken0, false);
      assertFalse(genericOutboundSecurityToken0.isAsymmetric());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      ArrayDeque<XMLSecEvent> arrayDeque0 = new ArrayDeque<XMLSecEvent>();
      QName qName0 = new QName("");
      XMLSecEndElementImpl xMLSecEndElementImpl0 = new XMLSecEndElementImpl(qName0, (XMLSecStartElement) null);
      arrayDeque0.addFirst(xMLSecEndElementImpl0);
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.flushBufferAndCallbackAfterHeader(outputProcessorChainImpl0, arrayDeque0);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      QName qName0 = new QName("`.3.132.0.16", "`.3.132.0.16", "`.3.132.0.16");
      LinkedList<XMLSecAttribute> linkedList0 = new LinkedList<XMLSecAttribute>();
      LinkedList<XMLSecNamespace> linkedList1 = new LinkedList<XMLSecNamespace>();
      XMLSecStartElementImpl xMLSecStartElementImpl0 = new XMLSecStartElementImpl(qName0, linkedList0, linkedList1);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      DocumentContextImpl documentContextImpl0 = new DocumentContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0, documentContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.newSignedInfoProcessor((SignatureAlgorithm) null, "`.3.132.0.16", xMLSecStartElementImpl0, outputProcessorChainImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureEndingOutputProcessor$SignedInfoProcessor", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLSignatureOutputProcessor xMLSignatureOutputProcessor0 = new XMLSignatureOutputProcessor();
      XMLSignatureEndingOutputProcessor xMLSignatureEndingOutputProcessor0 = new XMLSignatureEndingOutputProcessor(xMLSignatureOutputProcessor0);
      OutboundSecurityContextImpl outboundSecurityContextImpl0 = new OutboundSecurityContextImpl();
      OutputProcessorChainImpl outputProcessorChainImpl0 = new OutputProcessorChainImpl(outboundSecurityContextImpl0);
      // Undeclared exception!
      try { 
        xMLSignatureEndingOutputProcessor0.processHeaderEvent(outputProcessorChainImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.output.AbstractSignatureEndingOutputProcessor", e);
      }
  }
}
