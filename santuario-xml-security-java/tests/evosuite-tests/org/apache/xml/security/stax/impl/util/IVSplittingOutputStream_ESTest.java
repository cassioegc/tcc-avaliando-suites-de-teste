/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:20:39 GMT 2021
 */

package org.apache.xml.security.stax.impl.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import java.security.Key;
import javax.crypto.Cipher;
import org.apache.xml.security.stax.impl.util.IVSplittingOutputStream;
import org.apache.xml.security.stax.impl.util.ReplaceableOuputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IVSplittingOutputStream_ESTest extends IVSplittingOutputStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      File file0 = MockFile.createTempFile("http://www.w3.org/2009/xmlenc11#aes192-gcm", "2OGyMk}TxEk");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, 2);
      // Undeclared exception!
      try { 
        iVSplittingOutputStream0.write((byte[]) null, 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream((OutputStream) null, (Cipher) null, (Key) null, 1);
      iVSplittingOutputStream0.write(50);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        iVSplittingOutputStream0.write(byteArray0, 1, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.IVSplittingOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream((OutputStream) null, (Cipher) null, (Key) null, 0);
      byte[] byteArray0 = iVSplittingOutputStream0.getIv();
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream((OutputStream) null, (Cipher) null, (Key) null, 0);
      byte[] byteArray0 = new byte[6];
      // Undeclared exception!
      try { 
        iVSplittingOutputStream0.write(byteArray0, (-2533), (int) (byte)24);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      File file0 = MockFile.createTempFile("http://www.w3.org/2009/xmlenc11#aes192-gcm", "2OGyMk}TxEk");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      IVSplittingOutputStream iVSplittingOutputStream0 = null;
      try {
        iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, (-9));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.IVSplittingOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockFile mockFile0 = new MockFile("http://www.w3.org/2009/xmlenc11#aes192-gcm", "http://www.w3.org/2009/xmlenc11#aes192-gcm");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, 15);
      byte[] byteArray0 = new byte[1];
      iVSplittingOutputStream0.write(byteArray0, 0, 1);
      assertFalse(iVSplittingOutputStream0.isIVComplete());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream((OutputStream) null, (Cipher) null, (Key) null, 1);
      byte[] byteArray0 = new byte[2];
      // Undeclared exception!
      try { 
        iVSplittingOutputStream0.write(byteArray0, 1, 50);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.IVSplittingOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockFile mockFile0 = new MockFile("http://www.w3.org/2009/xmlenc11#aes192-gcm", "http://www.w3.org/2009/xmlenc11#aes192-gcm");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, 15);
      byte[] byteArray0 = new byte[1];
      iVSplittingOutputStream0.write(byteArray0);
      assertFalse(iVSplittingOutputStream0.isIVComplete());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("p2cBTTZ'2eF00R");
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, 2);
      iVSplittingOutputStream0.write(2);
      ReplaceableOuputStream replaceableOuputStream0 = new ReplaceableOuputStream(iVSplittingOutputStream0);
      assertFalse(iVSplittingOutputStream0.isIVComplete());
      
      replaceableOuputStream0.write((int) (byte)31);
      boolean boolean0 = iVSplittingOutputStream0.isIVComplete();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("p2cBTTZ'2eF00R");
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, 2);
      boolean boolean0 = iVSplittingOutputStream0.isIVComplete();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream((OutputStream) null, (Cipher) null, (Key) null, 1);
      byte[] byteArray0 = iVSplittingOutputStream0.getIv();
      assertEquals(1, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("p2cBTTZ'2eF00R");
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, 2);
      byte[] byteArray0 = new byte[5];
      // Undeclared exception!
      try { 
        iVSplittingOutputStream0.write(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.IVSplittingOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("p2cBTTZ'2eF00R");
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream(mockFileOutputStream0, (Cipher) null, (Key) null, 2);
      ReplaceableOuputStream replaceableOuputStream0 = new ReplaceableOuputStream(iVSplittingOutputStream0);
      iVSplittingOutputStream0.setParentOutputStream(replaceableOuputStream0);
      assertFalse(iVSplittingOutputStream0.isIVComplete());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IVSplittingOutputStream iVSplittingOutputStream0 = new IVSplittingOutputStream((OutputStream) null, (Cipher) null, (Key) null, 1);
      iVSplittingOutputStream0.write(1);
      // Undeclared exception!
      try { 
        iVSplittingOutputStream0.write(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.util.IVSplittingOutputStream", e);
      }
  }
}
