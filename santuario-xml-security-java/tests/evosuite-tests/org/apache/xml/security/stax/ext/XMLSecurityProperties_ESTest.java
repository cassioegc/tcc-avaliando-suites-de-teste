/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:32:37 GMT 2021
 */

package org.apache.xml.security.stax.ext;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.Key;
import java.security.cert.X509Certificate;
import java.security.spec.MGF1ParameterSpec;
import java.util.LinkedList;
import java.util.List;
import javax.crypto.spec.SecretKeySpec;
import javax.xml.namespace.QName;
import org.apache.xml.security.stax.ext.InputProcessor;
import org.apache.xml.security.stax.ext.SecurePart;
import org.apache.xml.security.stax.ext.XMLSecurityConstants;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.securityToken.SecurityTokenConstants;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLSecurityProperties_ESTest extends XMLSecurityProperties_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      LinkedList<SecurityTokenConstants.KeyIdentifier> linkedList0 = new LinkedList<SecurityTokenConstants.KeyIdentifier>();
      xMLSecurityProperties0.setSignatureKeyIdentifiers(linkedList0);
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      
      xMLSecurityProperties0.setUseSingleCert(false);
      boolean boolean0 = xMLSecurityProperties0.isUseSingleCert();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      
      xMLSecurityProperties0.setSkipDocumentEvents(true);
      boolean boolean0 = xMLSecurityProperties0.isSkipDocumentEvents();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      
      xMLSecurityProperties0.setSignatureGenerateIds(false);
      boolean boolean0 = xMLSecurityProperties0.isSignatureGenerateIds();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      
      xMLSecurityProperties0.setDisableSchemaValidation(true);
      boolean boolean0 = xMLSecurityProperties0.isDisableSchemaValidation();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      byte[] byteArray0 = new byte[4];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, 0, 1, "z_~Y");
      xMLSecurityProperties0.setSignatureVerificationKey(secretKeySpec0);
      xMLSecurityProperties0.getSignatureVerificationKey();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      SecurePart.Modifier securePart_Modifier0 = SecurePart.Modifier.Element;
      SecurePart securePart0 = new SecurePart("HXaeR}UHgFadZ+t!%5", securePart_Modifier0);
      xMLSecurityProperties0.addSignaturePart(securePart0);
      xMLSecurityProperties0.getSignatureSecureParts();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = QName.valueOf("");
      xMLSecurityProperties0.setSignaturePositionQName(qName0);
      xMLSecurityProperties0.getSignaturePositionQName();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignaturePosition(1);
      int int0 = xMLSecurityProperties0.getSignaturePosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignaturePosition((-11));
      int int0 = xMLSecurityProperties0.getSignaturePosition();
      assertEquals((-11), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureKeyName("QhSfa}T,^vU\"6");
      xMLSecurityProperties0.getSignatureKeyName();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureKeyName("");
      xMLSecurityProperties0.getSignatureKeyName();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureKeyIdentifier((SecurityTokenConstants.KeyIdentifier) null);
      xMLSecurityProperties0.getSignatureKeyIdentifiers();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      SecurityTokenConstants.KeyIdentifier securityTokenConstants_KeyIdentifier0 = new SecurityTokenConstants.KeyIdentifier("R3|JuDhVUM?9UM9");
      xMLSecurityProperties0.setSignatureKeyIdentifier(securityTokenConstants_KeyIdentifier0);
      SecurityTokenConstants.KeyIdentifier securityTokenConstants_KeyIdentifier1 = xMLSecurityProperties0.getSignatureKeyIdentifier();
      assertNotNull(securityTokenConstants_KeyIdentifier1);
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureDigestAlgorithm("nR0cuK");
      xMLSecurityProperties0.getSignatureDigestAlgorithm();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureDigestAlgorithm("");
      xMLSecurityProperties0.getSignatureDigestAlgorithm();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      X509Certificate[] x509CertificateArray0 = new X509Certificate[4];
      xMLSecurityProperties0.setSignatureCerts(x509CertificateArray0);
      xMLSecurityProperties0.getSignatureCerts();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureCanonicalizationAlgorithm("%(Id0FN:)|qqE");
      xMLSecurityProperties0.getSignatureCanonicalizationAlgorithm();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureCanonicalizationAlgorithm("");
      xMLSecurityProperties0.getSignatureCanonicalizationAlgorithm();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureAlgorithm("u66?!-(");
      xMLSecurityProperties0.getSignatureAlgorithm();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureAlgorithm("");
      xMLSecurityProperties0.getSignatureAlgorithm();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionSymAlgorithm("R3|JuDhVUM?9UM9");
      xMLSecurityProperties0.getEncryptionSymAlgorithm();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionSymAlgorithm("");
      xMLSecurityProperties0.getEncryptionSymAlgorithm();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      byte[] byteArray0 = new byte[8];
      xMLSecurityProperties0.setEncryptionKeyTransportOAEPParams(byteArray0);
      xMLSecurityProperties0.getEncryptionKeyTransportOAEPParams();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyTransportMGFAlgorithm("Lb^Fx@6iB^},Ht");
      xMLSecurityProperties0.getEncryptionKeyTransportMGFAlgorithm();
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyTransportMGFAlgorithm("");
      xMLSecurityProperties0.getEncryptionKeyTransportMGFAlgorithm();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyTransportDigestAlgorithm("Q3fSM'");
      xMLSecurityProperties0.getEncryptionKeyTransportDigestAlgorithm();
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyTransportDigestAlgorithm("");
      xMLSecurityProperties0.getEncryptionKeyTransportDigestAlgorithm();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyTransportAlgorithm("9J3nXz");
      xMLSecurityProperties0.getEncryptionKeyTransportAlgorithm();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyTransportAlgorithm("");
      xMLSecurityProperties0.getEncryptionKeyTransportAlgorithm();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyName("h0&t9g");
      xMLSecurityProperties0.getEncryptionKeyName();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKeyName("");
      xMLSecurityProperties0.getEncryptionKeyName();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      SecurityTokenConstants.KeyIdentifier securityTokenConstants_KeyIdentifier0 = new SecurityTokenConstants.KeyIdentifier("k)]F7 J@o4ibv89");
      xMLSecurityProperties0.setEncryptionKeyIdentifier(securityTokenConstants_KeyIdentifier0);
      xMLSecurityProperties0.getEncryptionKeyIdentifier();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      MGF1ParameterSpec mGF1ParameterSpec0 = MGF1ParameterSpec.SHA256;
      xMLSecurityProperties0.setAlgorithmParameterSpec(mGF1ParameterSpec0);
      xMLSecurityProperties0.getAlgorithmParameterSpec();
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setActions((List<XMLSecurityConstants.Action>) null);
      xMLSecurityProperties0.getActions();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      XMLSecurityConstants.Action xMLSecurityConstants_Action0 = new XMLSecurityConstants.Action("dI'RRxA1B@iTn2");
      xMLSecurityProperties0.addAction(xMLSecurityConstants_Action0);
      xMLSecurityProperties0.getActions();
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = null;
      try {
        xMLSecurityProperties0 = new XMLSecurityProperties((XMLSecurityProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.XMLSecurityProperties", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureKeyIdentifier();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      
      xMLSecurityProperties0.setAddExcC14NInclusivePrefixes(true);
      boolean boolean0 = xMLSecurityProperties0.isAddExcC14NInclusivePrefixes();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      boolean boolean0 = xMLSecurityProperties0.isSkipDocumentEvents();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(boolean0);
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      QName qName0 = QName.valueOf("n)R0uK");
      xMLSecurityProperties0.setIdAttributeNS(qName0);
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      
      xMLSecurityProperties0.setSignaturePositionStart(true);
      boolean boolean0 = xMLSecurityProperties0.isSignaturePositionStart();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      boolean boolean0 = xMLSecurityProperties0.isUseSingleCert();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionUseThisCertificate();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionSecureParts();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      boolean boolean0 = xMLSecurityProperties0.isSignatureIncludeDigestTransform();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(boolean0);
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.addInputProcessor((InputProcessor) null);
      xMLSecurityProperties0.getInputProcessorList();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionTransportKey();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      
      xMLSecurityProperties0.setSignatureIncludeDigestTransform(false);
      boolean boolean0 = xMLSecurityProperties0.isSignatureIncludeDigestTransform();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      boolean boolean0 = xMLSecurityProperties0.isSignaturePositionStart();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(boolean0);
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionKeyTransportAlgorithm();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionKey();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureKeyIdentifiers();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureSecureParts();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      SecurePart.Modifier securePart_Modifier0 = SecurePart.Modifier.Content;
      SecurePart securePart0 = new SecurePart(securePart_Modifier0);
      xMLSecurityProperties0.addEncryptionPart(securePart0);
      xMLSecurityProperties0.getEncryptionSecureParts();
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      boolean boolean0 = xMLSecurityProperties0.isDisableSchemaValidation();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(boolean0);
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      byte[] byteArray0 = new byte[5];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "http://www.w3.org/2007/05/xmldsig-more#kw-seed128");
      xMLSecurityProperties0.addKeyNameMapping("http://www.w3.org/2007/05/xmldsig-more#kw-seed128", secretKeySpec0);
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setSignatureKey((Key) null);
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionKeyTransportMGFAlgorithm();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      XMLSecurityProperties xMLSecurityProperties1 = new XMLSecurityProperties(xMLSecurityProperties0);
      assertFalse(xMLSecurityProperties1.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties1.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties1.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties1.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties1.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties1.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties1.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureVerificationKey();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      X509Certificate[] x509CertificateArray0 = new X509Certificate[0];
      xMLSecurityProperties0.setSignatureCerts(x509CertificateArray0);
      xMLSecurityProperties0.getSignatureCerts();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureCanonicalizationAlgorithm();
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      // Undeclared exception!
      try { 
        xMLSecurityProperties0.setSignatureKeyIdentifiers((List<SecurityTokenConstants.KeyIdentifier>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionKeyName();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getDecryptionKey();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      boolean boolean0 = xMLSecurityProperties0.isSignatureGenerateIds();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(boolean0);
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getIdAttributeNS();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getActions();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignaturePositionQName();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureKey();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getAlgorithmParameterSpec();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionKey((Key) null);
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setDecryptionKey((Key) null);
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionKeyTransportDigestAlgorithm();
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionTransportKey((Key) null);
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      int int0 = xMLSecurityProperties0.getSignaturePosition();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertEquals(0, int0);
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionKeyTransportOAEPParams();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureKeyName();
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureAlgorithm();
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionKeyIdentifier();
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      boolean boolean0 = xMLSecurityProperties0.isAddExcC14NInclusivePrefixes();
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(boolean0);
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.setEncryptionUseThisCertificate((X509Certificate) null);
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getInputProcessorList();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getKeyNameMap();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureDigestAlgorithm();
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getEncryptionSymAlgorithm();
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLSecurityProperties0.getSignatureCerts();
      assertFalse(xMLSecurityProperties0.isAddExcC14NInclusivePrefixes());
      assertTrue(xMLSecurityProperties0.isSignatureIncludeDigestTransform());
      assertFalse(xMLSecurityProperties0.isSkipDocumentEvents());
      assertFalse(xMLSecurityProperties0.isSignaturePositionStart());
      assertTrue(xMLSecurityProperties0.isSignatureGenerateIds());
      assertTrue(xMLSecurityProperties0.isUseSingleCert());
      assertFalse(xMLSecurityProperties0.isDisableSchemaValidation());
  }
}
