/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 20:06:22 GMT 2021
 */

package org.apache.xml.security.stax.impl.processor.input;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Deque;
import javax.xml.namespace.QName;
import org.apache.xml.security.binding.xmlenc.EncryptedKeyType;
import org.apache.xml.security.binding.xmlenc.EncryptionMethodType;
import org.apache.xml.security.stax.ext.InboundSecurityContext;
import org.apache.xml.security.stax.ext.InputProcessorChain;
import org.apache.xml.security.stax.ext.XMLSecurityProperties;
import org.apache.xml.security.stax.ext.stax.XMLSecEvent;
import org.apache.xml.security.stax.impl.InputProcessorChainImpl;
import org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler;
import org.apache.xml.security.stax.impl.stax.XMLSecAttributeImpl;
import org.apache.xml.security.stax.impl.stax.XMLSecEntityDeclarationImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XMLEncryptedKeyInputHandler_ESTest extends XMLEncryptedKeyInputHandler_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      XMLEncryptedKeyInputHandler xMLEncryptedKeyInputHandler0 = new XMLEncryptedKeyInputHandler();
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      EncryptionMethodType encryptionMethodType0 = new EncryptionMethodType();
      encryptedKeyType0.setEncryptionMethod(encryptionMethodType0);
      encryptedKeyType0.setId("$~cBEFO:Q");
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("$~cBEFO:Q");
      // Undeclared exception!
      try { 
        xMLEncryptedKeyInputHandler0.handle((InputProcessorChain) null, encryptedKeyType0, (XMLSecEvent) xMLSecEntityDeclarationImpl0, (XMLSecurityProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      XMLEncryptedKeyInputHandler xMLEncryptedKeyInputHandler0 = new XMLEncryptedKeyInputHandler();
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      QName qName0 = new QName("org.apache.xml.security.binding.xmldsig11.ECKeyValueType");
      XMLSecAttributeImpl xMLSecAttributeImpl0 = new XMLSecAttributeImpl(qName0, "org.apache.xml.security.binding.xmldsig11.ECKeyValueType");
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      try { 
        xMLEncryptedKeyInputHandler0.handle((InputProcessorChain) null, encryptedKeyType0, (XMLSecEvent) xMLSecAttributeImpl0, xMLSecurityProperties0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      XMLEncryptedKeyInputHandler xMLEncryptedKeyInputHandler0 = new XMLEncryptedKeyInputHandler();
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      EncryptionMethodType encryptionMethodType0 = new EncryptionMethodType();
      encryptedKeyType0.setEncryptionMethod(encryptionMethodType0);
      XMLSecEntityDeclarationImpl xMLSecEntityDeclarationImpl0 = new XMLSecEntityDeclarationImpl("$~cBEFO:Q");
      // Undeclared exception!
      try { 
        xMLEncryptedKeyInputHandler0.handle((InputProcessorChain) null, encryptedKeyType0, (XMLSecEvent) xMLSecEntityDeclarationImpl0, (XMLSecurityProperties) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      InputProcessorChainImpl inputProcessorChainImpl0 = new InputProcessorChainImpl((InboundSecurityContext) null, (-1713));
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      Integer integer0 = Integer.valueOf((-1713));
      XMLEncryptedKeyInputHandler xMLEncryptedKeyInputHandler0 = new XMLEncryptedKeyInputHandler();
      // Undeclared exception!
      try { 
        xMLEncryptedKeyInputHandler0.handle((InputProcessorChain) inputProcessorChainImpl0, xMLSecurityProperties0, (Deque<XMLSecEvent>) null, integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.stax.ext.XMLSecurityConstants", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      XMLEncryptedKeyInputHandler xMLEncryptedKeyInputHandler0 = new XMLEncryptedKeyInputHandler();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      try { 
        xMLEncryptedKeyInputHandler0.getBytesFromAttachment("org.apache.xml.security.binding.xmldsig11.FieldIDType", xMLSecurityProperties0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.stax.impl.processor.input.XMLEncryptedKeyInputHandler", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      XMLEncryptedKeyInputHandler xMLEncryptedKeyInputHandler0 = new XMLEncryptedKeyInputHandler();
      InputProcessorChainImpl inputProcessorChainImpl0 = new InputProcessorChainImpl((InboundSecurityContext) null, (-1811));
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      XMLSecurityProperties xMLSecurityProperties0 = new XMLSecurityProperties();
      xMLEncryptedKeyInputHandler0.handleReferenceList(inputProcessorChainImpl0, encryptedKeyType0, xMLSecurityProperties0);
      assertNull(xMLSecurityProperties0.getEncryptionKeyTransportMGFAlgorithm());
  }
}
