/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:40:46 GMT 2021
 */

package org.apache.xml.security.c14n;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.c14n.InvalidCanonicalizerException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InvalidCanonicalizerException_ESTest extends InvalidCanonicalizerException_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InvalidCanonicalizerException invalidCanonicalizerException0 = new InvalidCanonicalizerException("");
      InvalidCanonicalizerException invalidCanonicalizerException1 = new InvalidCanonicalizerException(invalidCanonicalizerException0, "&(<np.d");
      assertFalse(invalidCanonicalizerException1.equals((Object)invalidCanonicalizerException0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InvalidCanonicalizerException invalidCanonicalizerException0 = new InvalidCanonicalizerException();
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockException mockException0 = new MockException("");
      InvalidCanonicalizerException invalidCanonicalizerException0 = new InvalidCanonicalizerException("tujPdSJ({mt6H3qq3'I", mockException0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockException mockException0 = new MockException("");
      StackTraceElement[] stackTraceElementArray0 = mockException0.getStackTrace();
      InvalidCanonicalizerException invalidCanonicalizerException0 = new InvalidCanonicalizerException("", stackTraceElementArray0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      InvalidCanonicalizerException invalidCanonicalizerException0 = new InvalidCanonicalizerException("JL5a+1R,\"hM");
      InvalidCanonicalizerException invalidCanonicalizerException1 = new InvalidCanonicalizerException("JL5a+1R,\"hM", (Object[]) null, invalidCanonicalizerException0);
      assertFalse(invalidCanonicalizerException1.equals((Object)invalidCanonicalizerException0));
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      InvalidCanonicalizerException invalidCanonicalizerException0 = new InvalidCanonicalizerException("JL5a+1R,\"hM");
      InvalidCanonicalizerException invalidCanonicalizerException1 = new InvalidCanonicalizerException(invalidCanonicalizerException0, "JL5a+1R,\"hM", (Object[]) null);
      assertFalse(invalidCanonicalizerException1.equals((Object)invalidCanonicalizerException0));
  }
}
