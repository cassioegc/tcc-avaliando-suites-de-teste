/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:32:28 GMT 2021
 */

package org.apache.xml.security.c14n.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.OutputStream;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.c14n.implementations.Canonicalizer11_OmitComments;
import org.apache.xml.security.c14n.implementations.Canonicalizer11_WithComments;
import org.apache.xml.security.c14n.implementations.Canonicalizer20010315OmitComments;
import org.apache.xml.security.c14n.implementations.Canonicalizer20010315WithComments;
import org.apache.xml.security.c14n.implementations.NameSpaceSymbTable;
import org.apache.xml.security.signature.XMLSignatureInput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Canonicalizer20010315_ESTest extends Canonicalizer20010315_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/2000/xmlns/");
      Canonicalizer20010315WithComments canonicalizer20010315WithComments0 = new Canonicalizer20010315WithComments();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      File file0 = MockFile.createTempFile("http://www.w3.org/2000/xmlns/", "http://www.w3.org/XML/1998/namespace");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      // Undeclared exception!
      try { 
        canonicalizer20010315WithComments0.outputAttributesSubtree(iIOMetadataNode0, (NameSpaceSymbTable) null, hashMap0, mockFileOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Canonicalizer11_WithComments canonicalizer11_WithComments0 = new Canonicalizer11_WithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      // Undeclared exception!
      try { 
        canonicalizer11_WithComments0.outputAttributes(iIOMetadataNode0, (NameSpaceSymbTable) null, (Map<String, byte[]>) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Canonicalizer11_WithComments canonicalizer11_WithComments0 = new Canonicalizer11_WithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/2000/xmlns/");
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      MockPrintStream mockPrintStream0 = new MockPrintStream(",LlD6 \"76d");
      // Undeclared exception!
      try { 
        canonicalizer11_WithComments0.outputAttributes(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockPrintStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Canonicalizer20010315OmitComments canonicalizer20010315OmitComments0 = new Canonicalizer20010315OmitComments();
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      // Undeclared exception!
      try { 
        canonicalizer20010315OmitComments0.handleParent((Element) null, nameSpaceSymbTable0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Canonicalizer11_WithComments canonicalizer11_WithComments0 = new Canonicalizer11_WithComments();
      // Undeclared exception!
      try { 
        canonicalizer11_WithComments0.circumventBugIfNeeded((XMLSignatureInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Canonicalizer20010315WithComments canonicalizer20010315WithComments0 = new Canonicalizer20010315WithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      canonicalizer20010315WithComments0.handleParent(iIOMetadataNode0, nameSpaceSymbTable0);
      assertEquals("http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments", canonicalizer20010315WithComments0.engineGetURI());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Canonicalizer11_OmitComments canonicalizer11_OmitComments0 = new Canonicalizer11_OmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("xmlns");
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      iIOMetadataNode0.setAttribute("http://www.w3.org/2000/xmlns/", "xmlns");
      canonicalizer11_OmitComments0.handleParent(iIOMetadataNode0, nameSpaceSymbTable0);
      assertEquals(0, nameSpaceSymbTable0.getLevel());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Canonicalizer20010315OmitComments canonicalizer20010315OmitComments0 = new Canonicalizer20010315OmitComments();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput("http://www.w3.org/XML/1998/namespace");
      canonicalizer20010315OmitComments0.circumventBugIfNeeded(xMLSignatureInput0);
      assertTrue(xMLSignatureInput0.isPreCalculatedDigest());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Canonicalizer20010315WithComments canonicalizer20010315WithComments0 = new Canonicalizer20010315WithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      MockPrintStream mockPrintStream0 = new MockPrintStream("xmlns");
      nameSpaceSymbTable0.push();
      canonicalizer20010315WithComments0.outputAttributes(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockPrintStream0);
      assertEquals(1, nameSpaceSymbTable0.getLevel());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Canonicalizer20010315OmitComments canonicalizer20010315OmitComments0 = new Canonicalizer20010315OmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      MockPrintStream mockPrintStream0 = new MockPrintStream("http://www.w3.org/2000/xmlns/");
      canonicalizer20010315OmitComments0.outputAttributesSubtree(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockPrintStream0);
      canonicalizer20010315OmitComments0.outputAttributesSubtree(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockPrintStream0);
      assertEquals(0, nameSpaceSymbTable0.getLevel());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Canonicalizer11_OmitComments canonicalizer11_OmitComments0 = new Canonicalizer11_OmitComments();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("xml");
      try { 
        canonicalizer11_OmitComments0.engineCanonicalizeSubTree((Node) null, "SF<I", false, (OutputStream) mockFileOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Canonicalizer20010315WithComments canonicalizer20010315WithComments0 = new Canonicalizer20010315WithComments();
      MockPrintStream mockPrintStream0 = new MockPrintStream("xmlns");
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      try { 
        canonicalizer20010315WithComments0.engineCanonicalizeXPathNodeSet((Set<Node>) linkedHashSet0, "", (OutputStream) mockPrintStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Canonicalizer20010315OmitComments canonicalizer20010315OmitComments0 = new Canonicalizer20010315OmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      MockPrintStream mockPrintStream0 = new MockPrintStream("http://www.w3.org/2000/xmlns/");
      try { 
        canonicalizer20010315OmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "xml", (OutputStream) mockPrintStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library.
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315", e);
      }
  }
}
