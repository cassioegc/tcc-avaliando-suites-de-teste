/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:37:19 GMT 2021
 */

package org.apache.xml.security.c14n.implementations;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.Map;
import java.util.Set;
import javax.imageio.metadata.IIOMetadataNode;
import org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclOmitComments;
import org.apache.xml.security.c14n.implementations.Canonicalizer20010315ExclWithComments;
import org.apache.xml.security.c14n.implementations.NameSpaceSymbTable;
import org.apache.xml.security.signature.XMLSignatureInput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Canonicalizer20010315Excl_ESTest extends Canonicalizer20010315Excl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttributeNS("/p`t3A|E", "http://www.w3.org/2000/xmlns/", (String) null);
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      iIOMetadataNode0.setAttribute("http://www.w3.org/XML/1998/namespace", "xmlns");
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2);
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.outputAttributes(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, byteArrayOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      iIOMetadataNode0.setAttributeNS("http://www.w3.org/XML/1998/namespace", "xmlns", "http://www.w3.org/2000/xmlns/");
      iIOMetadataNode0.setAttribute("http://www.w3.org/XML/1998/namespace", "xmlns");
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.outputAttributesSubtree(iIOMetadataNode0, nameSpaceSymbTable0, (Map<String, byte[]>) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      MockPrintStream mockPrintStream0 = new MockPrintStream("xmlns");
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("ElementProxy.nullElement");
      linkedHashSet0.add(iIOMetadataNode0);
      canonicalizer20010315ExclOmitComments0.engineCanonicalizeXPathNodeSet((Set<Node>) linkedHashSet0, "=~=#i|]-", (OutputStream) mockPrintStream0);
      assertEquals("http://www.w3.org/2001/10/xml-exc-c14n#", canonicalizer20010315ExclOmitComments0.engineGetURI());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("http://www.w3.org/2000/xmlns/");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0, true);
      canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) null, (OutputStream) mockPrintStream0);
      assertEquals("http://www.w3.org/2001/10/xml-exc-c14n#", canonicalizer20010315ExclOmitComments0.engineGetURI());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("xmlns");
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(":ab.h~igx", false);
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.outputAttributesSubtree(iIOMetadataNode0, (NameSpaceSymbTable) null, hashMap0, dataOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1Gf/0EBq^y-6.qxZXkx");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1240);
      bufferedOutputStream0.close();
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      iIOMetadataNode0.setAttributeNS("hD:nZbHR", "xmlns", "http://www.w3.org/2000/xmlns/");
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      try { 
        canonicalizer20010315ExclOmitComments0.outputAttributesSubtree(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockFileOutputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      MockPrintStream mockPrintStream0 = new MockPrintStream("TransformAlgorithm");
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.engineCanonicalizeXPathNodeSet((Set<Node>) linkedHashSet0, "TransformAlgorithm", (OutputStream) mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library. Original message was \"\"
         //
         verifyException("org.apache.xml.security.utils.XMLUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("http://www.w3.org/XML/1998/namespace", true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "http://www.w3.org/2001/10/xml-exc-c14n#WithComments", true, (OutputStream) mockFileOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Simulated IOException
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/XML/1998/namespace");
      MockPrintStream mockPrintStream0 = new MockPrintStream("c14n.Canonicalizer.RelativeNamespace");
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "xmlns", true, (OutputStream) mockPrintStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create nullNode: java.lang.NullPointerException
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.engineCanonicalizeSubTree((Node) null, "", true, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("http://www.w3.org/XML/1998/namespace", true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("http:/www.w3.org/XML/1998/namespace");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      try { 
        canonicalizer20010315ExclWithComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "http://www.w3.org/2000/xmlns/", (Node) null, (OutputStream) mockFileOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Simulated IOException
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) null, "ResourceBundles", (Node) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "BX 9`*_2F)^eWGiN+P", (OutputStream) pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/2001/10/xml-exc-c14n#");
      File file0 = MockFile.createTempFile("http://www.w3.org/2000/xmlns/", (String) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "/>unh&l", true, (OutputStream) mockFileOutputStream0);
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "xmlns", (OutputStream) filterOutputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create nullNode: java.lang.NullPointerException
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(2556);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0, true);
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "", (OutputStream) mockPrintStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.UtfHelpper", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, (OutputStream) pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0);
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(bufferedInputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("xml");
      try { 
        canonicalizer20010315ExclWithComments0.engineCanonicalize(xMLSignatureInput0, "xmlns", (OutputStream) mockPrintStream0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Pipe not connected
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      LinkedHashSet<Node> linkedHashSet0 = new LinkedHashSet<Node>();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(linkedHashSet0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("http://www.w3.org/2000/xmlns/");
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.engineCanonicalize(xMLSignatureInput0, "xml", (OutputStream) mockPrintStream0, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // You must initialize the xml-security library correctly before you use it. Call the static method \"org.apache.xml.security.Init.init();\" to do that before you use any functionality from that library. Original message was \"\"
         //
         verifyException("org.apache.xml.security.utils.XMLUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.circumventBugIfNeeded((XMLSignatureInput) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.Canonicalizer20010315Excl", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "u}", (Node) iIOMetadataNode0, (OutputStream) pipedOutputStream0);
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput("xmlns");
      xMLSignatureInput0.setNeedsToBeExpanded(true);
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.circumventBugIfNeeded(xMLSignatureInput0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // getNodeSet() called but no input data present
         //
         verifyException("org.apache.xml.security.signature.XMLSignatureInput", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput("xmlns");
      xMLSignatureInput0.setNeedsToBeExpanded(true);
      canonicalizer20010315ExclOmitComments0.circumventBugIfNeeded(xMLSignatureInput0);
      assertFalse(xMLSignatureInput0.isExcludeComments());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(iIOMetadataNode0);
      Set<Node> set0 = xMLSignatureInput0.getNodeSet(false);
      XMLSignatureInput xMLSignatureInput1 = new XMLSignatureInput(set0);
      iIOMetadataNode0.setAttribute("xmlns", "O$={1%|JI(n2l3");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1Gf/0EBq^y-6.qxZXkx");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1229);
      canonicalizer20010315ExclOmitComments0.engineCanonicalize(xMLSignatureInput1, "1Gf/0EBq^y-6.qxZXkx", (OutputStream) bufferedOutputStream0, false);
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.outputAttributes(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, bufferedOutputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create nullNode: java.lang.NullPointerException
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.setAttribute("xmlns", "O$={1%|JI(n2l3");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1Gf/0EBq^y-6.qxZXkx");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1229);
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      canonicalizer20010315ExclOmitComments0.outputAttributes(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, bufferedOutputStream0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/2001/10/xml-exc-c14n#");
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      File file0 = MockFile.createTempFile("http://www.w3.org/2000/xmlns/", (String) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "/>unh&l", true, (OutputStream) mockFileOutputStream0);
      canonicalizer20010315ExclOmitComments0.outputAttributes(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockFileOutputStream0);
      assertEquals(83L, file0.length());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(iIOMetadataNode0);
      Set<Node> set0 = xMLSignatureInput0.getNodeSet(false);
      XMLSignatureInput xMLSignatureInput1 = new XMLSignatureInput(set0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("xmlns");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1229);
      canonicalizer20010315ExclOmitComments0.engineCanonicalize(xMLSignatureInput1, "xml", (OutputStream) bufferedOutputStream0, false);
      IIOMetadataNode iIOMetadataNode1 = new IIOMetadataNode();
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      canonicalizer20010315ExclOmitComments0.outputAttributes(iIOMetadataNode1, nameSpaceSymbTable0, hashMap0, bufferedOutputStream0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("http://www.w3.org/XML/1998/namespace", true);
      canonicalizer20010315ExclWithComments0.engineCanonicalizeSubTree((Node) null, "xmlns", true, (OutputStream) mockFileOutputStream0);
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      nameSpaceSymbTable0.outputNodePush();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.outputAttributesSubtree(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockFileOutputStream0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to create nullNode: java.lang.NullPointerException
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/XML/1998/namespace");
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      MockPrintStream mockPrintStream0 = new MockPrintStream("c14n.Canonicalizer.RelativeNamespace");
      canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "", true, (OutputStream) mockPrintStream0);
      canonicalizer20010315ExclOmitComments0.outputAttributesSubtree(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockPrintStream0);
      assertEquals(0, nameSpaceSymbTable0.getLevel());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1Gf/0EBq^y-6.qxZXkx");
      NameSpaceSymbTable nameSpaceSymbTable0 = new NameSpaceSymbTable();
      iIOMetadataNode0.setAttributeNS("hD:nZbHR", "xmlns", "http://www.w3.org/2000/xmlns/");
      HashMap<String, byte[]> hashMap0 = new HashMap<String, byte[]>();
      canonicalizer20010315ExclOmitComments0.outputAttributesSubtree(iIOMetadataNode0, nameSpaceSymbTable0, hashMap0, mockFileOutputStream0);
      assertFalse(hashMap0.isEmpty());
      assertEquals(1, hashMap0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      XMLSignatureInput xMLSignatureInput0 = new XMLSignatureInput(iIOMetadataNode0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("1Gf/0EBq^y-6.qxZXkx");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0, 1240);
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalize(xMLSignatureInput0, "1Gf/0EBq^y-6.qxZXkx", (OutputStream) bufferedOutputStream0, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.UtfHelpper", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Canonicalizer20010315ExclWithComments canonicalizer20010315ExclWithComments0 = new Canonicalizer20010315ExclWithComments();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("G&EvWw( S7+?JJFzAK");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockFileOutputStream0);
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclWithComments0.engineCanonicalizeXPathNodeSet((Set<Node>) null, "G&EvWw( S7+?JJFzAK", (OutputStream) bufferedOutputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.utils.XMLUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/2001/10/xml-exc-c14n#");
      File file0 = MockFile.createTempFile("http://www.w3.org/2000/xmlns/", (String) null);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(file0, true);
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream(mockFileOutputStream0);
      canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) iIOMetadataNode0, "xmlns", (OutputStream) filterOutputStream0);
      assertEquals(83L, file0.length());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Canonicalizer20010315ExclOmitComments canonicalizer20010315ExclOmitComments0 = new Canonicalizer20010315ExclOmitComments();
      // Undeclared exception!
      try { 
        canonicalizer20010315ExclOmitComments0.engineCanonicalizeSubTree((Node) null, (OutputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.xml.security.c14n.implementations.CanonicalizerBase", e);
      }
  }
}
