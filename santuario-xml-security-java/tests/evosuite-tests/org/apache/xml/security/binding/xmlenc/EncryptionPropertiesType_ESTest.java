/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:59:17 GMT 2021
 */

package org.apache.xml.security.binding.xmlenc;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.xml.security.binding.xmlenc.EncryptionPropertiesType;
import org.apache.xml.security.binding.xmlenc.EncryptionPropertyType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EncryptionPropertiesType_ESTest extends EncryptionPropertiesType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EncryptionPropertiesType encryptionPropertiesType0 = new EncryptionPropertiesType();
      encryptionPropertiesType0.setId("org.apache.xml.security.binding.xmlenc.EncryptionPropertiesType");
      assertEquals("org.apache.xml.security.binding.xmlenc.EncryptionPropertiesType", encryptionPropertiesType0.getId());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EncryptionPropertiesType encryptionPropertiesType0 = new EncryptionPropertiesType();
      encryptionPropertiesType0.id = "c6";
      String string0 = encryptionPropertiesType0.getId();
      assertEquals("c6", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EncryptionPropertiesType encryptionPropertiesType0 = new EncryptionPropertiesType();
      encryptionPropertiesType0.id = "";
      String string0 = encryptionPropertiesType0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EncryptionPropertiesType encryptionPropertiesType0 = new EncryptionPropertiesType();
      LinkedList<EncryptionPropertyType> linkedList0 = new LinkedList<EncryptionPropertyType>();
      EncryptionPropertyType encryptionPropertyType0 = new EncryptionPropertyType();
      linkedList0.offerFirst(encryptionPropertyType0);
      encryptionPropertiesType0.encryptionProperty = (List<EncryptionPropertyType>) linkedList0;
      List<EncryptionPropertyType> list0 = encryptionPropertiesType0.getEncryptionProperty();
      assertTrue(list0.contains(encryptionPropertyType0));
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EncryptionPropertiesType encryptionPropertiesType0 = new EncryptionPropertiesType();
      encryptionPropertiesType0.getEncryptionProperty();
      List<EncryptionPropertyType> list0 = encryptionPropertiesType0.getEncryptionProperty();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EncryptionPropertiesType encryptionPropertiesType0 = new EncryptionPropertiesType();
      String string0 = encryptionPropertiesType0.getId();
      assertNull(string0);
  }
}
