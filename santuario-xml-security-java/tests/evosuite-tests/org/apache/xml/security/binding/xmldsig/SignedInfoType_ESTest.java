/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:39:29 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.xml.security.binding.xmldsig.CanonicalizationMethodType;
import org.apache.xml.security.binding.xmldsig.ReferenceType;
import org.apache.xml.security.binding.xmldsig.SignatureMethodType;
import org.apache.xml.security.binding.xmldsig.SignedInfoType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SignedInfoType_ESTest extends SignedInfoType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      SignatureMethodType signatureMethodType0 = new SignatureMethodType();
      signedInfoType0.setSignatureMethod(signatureMethodType0);
      SignatureMethodType signatureMethodType1 = signedInfoType0.getSignatureMethod();
      assertSame(signatureMethodType1, signatureMethodType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      LinkedList<ReferenceType> linkedList0 = new LinkedList<ReferenceType>();
      signedInfoType0.reference = (List<ReferenceType>) linkedList0;
      ReferenceType referenceType0 = new ReferenceType();
      linkedList0.offerLast(referenceType0);
      List<ReferenceType> list0 = signedInfoType0.getReference();
      assertTrue(list0.contains(referenceType0));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      signedInfoType0.setId("org.apache.xml.security.binding.xmldsig.SignedInfoType");
      String string0 = signedInfoType0.getId();
      assertEquals("org.apache.xml.security.binding.xmldsig.SignedInfoType", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      signedInfoType0.id = "";
      String string0 = signedInfoType0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      CanonicalizationMethodType canonicalizationMethodType0 = new CanonicalizationMethodType();
      signedInfoType0.setCanonicalizationMethod(canonicalizationMethodType0);
      CanonicalizationMethodType canonicalizationMethodType1 = signedInfoType0.getCanonicalizationMethod();
      assertNull(canonicalizationMethodType1.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      List<ReferenceType> list0 = signedInfoType0.getReference();
      List<ReferenceType> list1 = signedInfoType0.getReference();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      SignatureMethodType signatureMethodType0 = signedInfoType0.getSignatureMethod();
      assertNull(signatureMethodType0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      CanonicalizationMethodType canonicalizationMethodType0 = signedInfoType0.getCanonicalizationMethod();
      assertNull(canonicalizationMethodType0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      SignedInfoType signedInfoType0 = new SignedInfoType();
      String string0 = signedInfoType0.getId();
      assertNull(string0);
  }
}
