/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:52:12 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig11;

import org.junit.Test;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.apache.xml.security.binding.xmldsig11.TnBFieldParamsType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TnBFieldParamsType_ESTest extends TnBFieldParamsType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TnBFieldParamsType tnBFieldParamsType0 = new TnBFieldParamsType();
      byte[] byteArray0 = new byte[9];
      byteArray0[7] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      tnBFieldParamsType0.setK(bigInteger0);
      BigInteger bigInteger1 = tnBFieldParamsType0.getK();
      assertEquals((byte)0, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TnBFieldParamsType tnBFieldParamsType0 = new TnBFieldParamsType();
      BigInteger bigInteger0 = BigInteger.ZERO;
      tnBFieldParamsType0.setK(bigInteger0);
      BigInteger bigInteger1 = tnBFieldParamsType0.getK();
      assertEquals((short)0, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TnBFieldParamsType tnBFieldParamsType0 = new TnBFieldParamsType();
      BigInteger bigInteger0 = BigInteger.TEN;
      tnBFieldParamsType0.setK(bigInteger0);
      BigInteger bigInteger1 = tnBFieldParamsType0.getK();
      assertEquals((byte)10, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TnBFieldParamsType tnBFieldParamsType0 = new TnBFieldParamsType();
      byte[] byteArray0 = new byte[9];
      byteArray0[8] = (byte) (-1);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      tnBFieldParamsType0.setK(bigInteger0);
      BigInteger bigInteger1 = tnBFieldParamsType0.getK();
      assertSame(bigInteger1, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TnBFieldParamsType tnBFieldParamsType0 = new TnBFieldParamsType();
      BigInteger bigInteger0 = tnBFieldParamsType0.getK();
      assertNull(bigInteger0);
  }
}
