/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:58:11 GMT 2021
 */

package org.apache.xml.security.binding.excc14n;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.xml.security.binding.excc14n.InclusiveNamespaces;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InclusiveNamespaces_ESTest extends InclusiveNamespaces_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      InclusiveNamespaces inclusiveNamespaces0 = new InclusiveNamespaces();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      inclusiveNamespaces0.prefixList = (List<String>) linkedList0;
      linkedList0.add("QMIBMhDQp9S=3Luc");
      List<String> list0 = inclusiveNamespaces0.getPrefixList();
      assertTrue(list0.contains("QMIBMhDQp9S=3Luc"));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InclusiveNamespaces inclusiveNamespaces0 = new InclusiveNamespaces();
      inclusiveNamespaces0.getPrefixList();
      List<String> list0 = inclusiveNamespaces0.getPrefixList();
      assertEquals(0, list0.size());
  }
}
