/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:41:01 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.binding.xmldsig.RetrievalMethodType;
import org.apache.xml.security.binding.xmldsig.TransformsType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RetrievalMethodType_ESTest extends RetrievalMethodType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      retrievalMethodType0.uri = "FG6j\".`FU'#X_";
      String string0 = retrievalMethodType0.getURI();
      assertEquals("FG6j\".`FU'#X_", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      retrievalMethodType0.setType("");
      String string0 = retrievalMethodType0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      TransformsType transformsType0 = new TransformsType();
      retrievalMethodType0.transforms = transformsType0;
      TransformsType transformsType1 = retrievalMethodType0.getTransforms();
      assertSame(transformsType1, transformsType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      retrievalMethodType0.setType("-(H");
      String string0 = retrievalMethodType0.getType();
      assertEquals("-(H", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      String string0 = retrievalMethodType0.getURI();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      retrievalMethodType0.setURI("");
      String string0 = retrievalMethodType0.getURI();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      String string0 = retrievalMethodType0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      TransformsType transformsType0 = retrievalMethodType0.getTransforms();
      assertNull(transformsType0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      TransformsType transformsType0 = new TransformsType();
      retrievalMethodType0.setTransforms(transformsType0);
      assertNull(retrievalMethodType0.getURI());
  }
}
