/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:42:10 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.xml.security.binding.xmldsig.DigestMethodType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DigestMethodType_ESTest extends DigestMethodType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DigestMethodType digestMethodType0 = new DigestMethodType();
      digestMethodType0.setAlgorithm("");
      assertEquals("", digestMethodType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DigestMethodType digestMethodType0 = new DigestMethodType();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) "");
      digestMethodType0.content = (List<Object>) linkedList0;
      List<Object> list0 = digestMethodType0.getContent();
      assertTrue(list0.contains(""));
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DigestMethodType digestMethodType0 = new DigestMethodType();
      digestMethodType0.algorithm = "?8Z1";
      String string0 = digestMethodType0.getAlgorithm();
      assertEquals("?8Z1", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DigestMethodType digestMethodType0 = new DigestMethodType();
      digestMethodType0.algorithm = "";
      String string0 = digestMethodType0.getAlgorithm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      DigestMethodType digestMethodType0 = new DigestMethodType();
      digestMethodType0.getContent();
      List<Object> list0 = digestMethodType0.getContent();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      DigestMethodType digestMethodType0 = new DigestMethodType();
      String string0 = digestMethodType0.getAlgorithm();
      assertNull(string0);
  }
}
