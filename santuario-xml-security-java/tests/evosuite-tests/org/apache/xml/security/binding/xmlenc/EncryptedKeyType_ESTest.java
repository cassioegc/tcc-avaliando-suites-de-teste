/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:04:21 GMT 2021
 */

package org.apache.xml.security.binding.xmlenc;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.binding.xmlenc.EncryptedKeyType;
import org.apache.xml.security.binding.xmlenc.ReferenceList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EncryptedKeyType_ESTest extends EncryptedKeyType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.recipient = "L2M}V";
      String string0 = encryptedKeyType0.getRecipient();
      assertEquals("L2M}V", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.setRecipient("");
      String string0 = encryptedKeyType0.getRecipient();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.setCarriedKeyName("-+");
      String string0 = encryptedKeyType0.getCarriedKeyName();
      assertEquals("-+", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.carriedKeyName = "";
      String string0 = encryptedKeyType0.getCarriedKeyName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      ReferenceList referenceList0 = encryptedKeyType0.getReferenceList();
      assertNull(referenceList0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      String string0 = encryptedKeyType0.getCarriedKeyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      String string0 = encryptedKeyType0.getRecipient();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      ReferenceList referenceList0 = new ReferenceList();
      encryptedKeyType0.setReferenceList(referenceList0);
      ReferenceList referenceList1 = encryptedKeyType0.getReferenceList();
      assertSame(referenceList1, referenceList0);
  }
}
