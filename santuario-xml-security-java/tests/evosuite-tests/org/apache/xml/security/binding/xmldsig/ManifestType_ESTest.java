/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:29:56 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.xml.security.binding.xmldsig.ManifestType;
import org.apache.xml.security.binding.xmldsig.ReferenceType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ManifestType_ESTest extends ManifestType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ManifestType manifestType0 = new ManifestType();
      LinkedList<ReferenceType> linkedList0 = new LinkedList<ReferenceType>();
      ReferenceType referenceType0 = new ReferenceType();
      linkedList0.add(referenceType0);
      manifestType0.reference = (List<ReferenceType>) linkedList0;
      List<ReferenceType> list0 = manifestType0.getReference();
      assertTrue(list0.contains(referenceType0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ManifestType manifestType0 = new ManifestType();
      manifestType0.id = "e` +k'";
      String string0 = manifestType0.getId();
      assertEquals("e` +k'", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ManifestType manifestType0 = new ManifestType();
      manifestType0.setId("");
      String string0 = manifestType0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ManifestType manifestType0 = new ManifestType();
      List<ReferenceType> list0 = manifestType0.getReference();
      List<ReferenceType> list1 = manifestType0.getReference();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ManifestType manifestType0 = new ManifestType();
      String string0 = manifestType0.getId();
      assertNull(string0);
  }
}
