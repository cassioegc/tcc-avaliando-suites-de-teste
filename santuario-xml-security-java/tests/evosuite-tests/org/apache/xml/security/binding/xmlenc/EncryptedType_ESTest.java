/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:04:11 GMT 2021
 */

package org.apache.xml.security.binding.xmlenc;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.binding.xmldsig.KeyInfoType;
import org.apache.xml.security.binding.xmlenc.CipherDataType;
import org.apache.xml.security.binding.xmlenc.EncryptedDataType;
import org.apache.xml.security.binding.xmlenc.EncryptedKeyType;
import org.apache.xml.security.binding.xmlenc.EncryptionMethodType;
import org.apache.xml.security.binding.xmlenc.EncryptionPropertiesType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EncryptedType_ESTest extends EncryptedType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      CipherDataType cipherDataType0 = new CipherDataType();
      encryptedDataType0.setCipherData(cipherDataType0);
      assertNull(encryptedDataType0.getEncoding());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      encryptedDataType0.type = "org.apache.xml.security.binding.xmlenc.EncryptedType";
      String string0 = encryptedDataType0.getType();
      assertEquals("org.apache.xml.security.binding.xmlenc.EncryptedType", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      encryptedDataType0.setType("");
      String string0 = encryptedDataType0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      encryptedDataType0.setMimeType("org.apache.xml.security.binding.xmlenc.EncryptedKeyType");
      String string0 = encryptedDataType0.getMimeType();
      assertEquals("org.apache.xml.security.binding.xmlenc.EncryptedKeyType", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.mimeType = "";
      String string0 = encryptedKeyType0.getMimeType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      KeyInfoType keyInfoType0 = new KeyInfoType();
      encryptedKeyType0.setKeyInfo(keyInfoType0);
      KeyInfoType keyInfoType1 = encryptedKeyType0.getKeyInfo();
      assertNull(keyInfoType1.getId());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.setId("l5P/A");
      String string0 = encryptedKeyType0.getId();
      assertEquals("l5P/A", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      encryptedDataType0.setId("");
      String string0 = encryptedDataType0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      EncryptionPropertiesType encryptionPropertiesType0 = new EncryptionPropertiesType();
      encryptedKeyType0.setEncryptionProperties(encryptionPropertiesType0);
      EncryptionPropertiesType encryptionPropertiesType1 = encryptedKeyType0.getEncryptionProperties();
      assertSame(encryptionPropertiesType1, encryptionPropertiesType0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      EncryptionMethodType encryptionMethodType0 = new EncryptionMethodType();
      encryptedKeyType0.encryptionMethod = encryptionMethodType0;
      EncryptionMethodType encryptionMethodType1 = encryptedKeyType0.getEncryptionMethod();
      assertNull(encryptionMethodType1.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.encoding = "&YixxPN,i5hLYOs[)/";
      String string0 = encryptedKeyType0.getEncoding();
      assertEquals("&YixxPN,i5hLYOs[)/", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      encryptedKeyType0.setEncoding("");
      String string0 = encryptedKeyType0.getEncoding();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      CipherDataType cipherDataType0 = new CipherDataType();
      encryptedKeyType0.cipherData = cipherDataType0;
      CipherDataType cipherDataType1 = encryptedKeyType0.getCipherData();
      assertSame(cipherDataType1, cipherDataType0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      String string0 = encryptedKeyType0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      CipherDataType cipherDataType0 = encryptedDataType0.getCipherData();
      assertNull(cipherDataType0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      EncryptionPropertiesType encryptionPropertiesType0 = encryptedDataType0.getEncryptionProperties();
      assertNull(encryptionPropertiesType0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      String string0 = encryptedKeyType0.getMimeType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      KeyInfoType keyInfoType0 = encryptedDataType0.getKeyInfo();
      assertNull(keyInfoType0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      String string0 = encryptedKeyType0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      EncryptionMethodType encryptionMethodType0 = encryptedKeyType0.getEncryptionMethod();
      assertNull(encryptionMethodType0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EncryptedDataType encryptedDataType0 = new EncryptedDataType();
      EncryptionMethodType encryptionMethodType0 = new EncryptionMethodType();
      encryptedDataType0.setEncryptionMethod(encryptionMethodType0);
      assertNull(encryptionMethodType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EncryptedKeyType encryptedKeyType0 = new EncryptedKeyType();
      String string0 = encryptedKeyType0.getEncoding();
      assertNull(string0);
  }
}
