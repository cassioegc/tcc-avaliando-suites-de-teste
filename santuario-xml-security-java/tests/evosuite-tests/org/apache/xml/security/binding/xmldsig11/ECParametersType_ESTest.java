/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:51:39 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig11;

import org.junit.Test;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.apache.xml.security.binding.xmldsig11.CurveType;
import org.apache.xml.security.binding.xmldsig11.ECParametersType;
import org.apache.xml.security.binding.xmldsig11.ECValidationDataType;
import org.apache.xml.security.binding.xmldsig11.FieldIDType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ECParametersType_ESTest extends ECParametersType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = new byte[0];
      eCParametersType0.setOrder(byteArray0);
      byte[] byteArray1 = eCParametersType0.getOrder();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      CurveType curveType0 = new CurveType();
      eCParametersType0.setCurve(curveType0);
      CurveType curveType1 = eCParametersType0.getCurve();
      assertSame(curveType1, curveType0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = new byte[6];
      byteArray0[4] = (byte) (-24);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      eCParametersType0.coFactor = bigInteger0;
      BigInteger bigInteger1 = eCParametersType0.getCoFactor();
      assertEquals((short) (-6144), bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      BigInteger bigInteger0 = BigInteger.ZERO;
      eCParametersType0.coFactor = bigInteger0;
      BigInteger bigInteger1 = eCParametersType0.getCoFactor();
      assertEquals((byte)0, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      BigInteger bigInteger0 = BigInteger.ONE;
      eCParametersType0.setCoFactor(bigInteger0);
      BigInteger bigInteger1 = eCParametersType0.getCoFactor();
      assertEquals((short)1, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-100);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      eCParametersType0.setCoFactor(bigInteger0);
      BigInteger bigInteger1 = eCParametersType0.getCoFactor();
      assertSame(bigInteger1, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = new byte[7];
      eCParametersType0.setBase(byteArray0);
      byte[] byteArray1 = eCParametersType0.getBase();
      assertEquals(7, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = new byte[0];
      eCParametersType0.setBase(byteArray0);
      byte[] byteArray1 = eCParametersType0.getBase();
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      ECValidationDataType eCValidationDataType0 = eCParametersType0.getValidationData();
      assertNull(eCValidationDataType0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      CurveType curveType0 = eCParametersType0.getCurve();
      assertNull(curveType0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      BigInteger bigInteger0 = eCParametersType0.getCoFactor();
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = eCParametersType0.getOrder();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      FieldIDType fieldIDType0 = new FieldIDType();
      eCParametersType0.setFieldID(fieldIDType0);
      FieldIDType fieldIDType1 = eCParametersType0.getFieldID();
      assertSame(fieldIDType1, fieldIDType0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = new byte[1];
      eCParametersType0.setOrder(byteArray0);
      byte[] byteArray1 = eCParametersType0.getOrder();
      assertSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      byte[] byteArray0 = eCParametersType0.getBase();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      ECValidationDataType eCValidationDataType0 = new ECValidationDataType();
      eCParametersType0.setValidationData(eCValidationDataType0);
      ECValidationDataType eCValidationDataType1 = eCParametersType0.getValidationData();
      assertSame(eCValidationDataType1, eCValidationDataType0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ECParametersType eCParametersType0 = new ECParametersType();
      FieldIDType fieldIDType0 = eCParametersType0.getFieldID();
      assertNull(fieldIDType0);
  }
}
