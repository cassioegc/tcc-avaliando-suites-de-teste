/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:13:13 GMT 2021
 */

package org.apache.xml.security.binding.xmlenc11;

import org.junit.Test;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.apache.xml.security.binding.xmlenc11.AlgorithmIdentifierType;
import org.apache.xml.security.binding.xmlenc11.PBKDF2ParameterType;
import org.apache.xml.security.binding.xmlenc11.PRFAlgorithmIdentifierType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PBKDF2ParameterType_ESTest extends PBKDF2ParameterType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = new PBKDF2ParameterType.Salt();
      AlgorithmIdentifierType algorithmIdentifierType0 = new AlgorithmIdentifierType();
      pBKDF2ParameterType_Salt0.setOtherSource(algorithmIdentifierType0);
      assertNull(algorithmIdentifierType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PRFAlgorithmIdentifierType pRFAlgorithmIdentifierType0 = new PRFAlgorithmIdentifierType();
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      pBKDF2ParameterType0.setPRF(pRFAlgorithmIdentifierType0);
      assertNull(pRFAlgorithmIdentifierType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = new PBKDF2ParameterType.Salt();
      pBKDF2ParameterType0.salt = pBKDF2ParameterType_Salt0;
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt1 = pBKDF2ParameterType0.getSalt();
      assertSame(pBKDF2ParameterType_Salt1, pBKDF2ParameterType_Salt0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      PRFAlgorithmIdentifierType pRFAlgorithmIdentifierType0 = new PRFAlgorithmIdentifierType();
      pBKDF2ParameterType0.prf = pRFAlgorithmIdentifierType0;
      PRFAlgorithmIdentifierType pRFAlgorithmIdentifierType1 = pBKDF2ParameterType0.getPRF();
      assertNull(pRFAlgorithmIdentifierType1.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = new PBKDF2ParameterType.Salt();
      byte[] byteArray0 = new byte[4];
      pBKDF2ParameterType_Salt0.setSpecified(byteArray0);
      byteArray0[2] = (byte) (-59);
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = new BigInteger(pBKDF2ParameterType_Salt0.specified);
      pBKDF2ParameterType0.setKeyLength(bigInteger0);
      BigInteger bigInteger1 = pBKDF2ParameterType0.getKeyLength();
      assertEquals((byte)0, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = BigInteger.ZERO;
      pBKDF2ParameterType0.keyLength = bigInteger0;
      BigInteger bigInteger1 = pBKDF2ParameterType0.getKeyLength();
      assertSame(bigInteger1, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-59);
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      pBKDF2ParameterType0.iterationCount = bigInteger0;
      BigInteger bigInteger1 = pBKDF2ParameterType0.getIterationCount();
      assertEquals((byte)0, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = BigInteger.ONE;
      pBKDF2ParameterType0.setIterationCount(bigInteger0);
      BigInteger bigInteger1 = pBKDF2ParameterType0.getIterationCount();
      assertEquals((byte)1, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-89);
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      pBKDF2ParameterType0.iterationCount = bigInteger0;
      BigInteger bigInteger1 = pBKDF2ParameterType0.getIterationCount();
      assertEquals((short)167, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = new PBKDF2ParameterType.Salt();
      byte[] byteArray0 = pBKDF2ParameterType_Salt0.getSpecified();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = new PBKDF2ParameterType.Salt();
      AlgorithmIdentifierType algorithmIdentifierType0 = pBKDF2ParameterType_Salt0.getOtherSource();
      assertNull(algorithmIdentifierType0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = new PBKDF2ParameterType.Salt();
      byte[] byteArray0 = new byte[4];
      pBKDF2ParameterType_Salt0.setSpecified(byteArray0);
      byteArray0[3] = (byte) (-89);
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = new BigInteger(pBKDF2ParameterType_Salt0.specified);
      pBKDF2ParameterType0.setKeyLength(bigInteger0);
      BigInteger bigInteger1 = pBKDF2ParameterType0.getKeyLength();
      assertEquals((byte) (-89), bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = pBKDF2ParameterType0.getKeyLength();
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      PRFAlgorithmIdentifierType pRFAlgorithmIdentifierType0 = pBKDF2ParameterType0.getPRF();
      assertNull(pRFAlgorithmIdentifierType0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = pBKDF2ParameterType0.getIterationCount();
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      BigInteger bigInteger0 = BigInteger.ONE;
      pBKDF2ParameterType0.setKeyLength(bigInteger0);
      BigInteger bigInteger1 = pBKDF2ParameterType0.getKeyLength();
      assertEquals((short)1, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      pBKDF2ParameterType0.setIterationCount(bigInteger0);
      BigInteger bigInteger1 = pBKDF2ParameterType0.getIterationCount();
      assertSame(bigInteger1, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = new PBKDF2ParameterType.Salt();
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      pBKDF2ParameterType0.setSalt(pBKDF2ParameterType_Salt0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = pBKDF2ParameterType0.getSalt();
      assertNull(pBKDF2ParameterType_Salt0);
  }
}
