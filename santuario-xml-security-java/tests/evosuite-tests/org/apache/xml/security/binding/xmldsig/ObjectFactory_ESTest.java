/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:43:27 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig;

import org.junit.Test;
import static org.junit.Assert.*;
import java.math.BigInteger;
import javax.xml.bind.JAXBElement;
import org.apache.xml.security.binding.xmldsig.CanonicalizationMethodType;
import org.apache.xml.security.binding.xmldsig.DSAKeyValueType;
import org.apache.xml.security.binding.xmldsig.DigestMethodType;
import org.apache.xml.security.binding.xmldsig.KeyInfoType;
import org.apache.xml.security.binding.xmldsig.KeyValueType;
import org.apache.xml.security.binding.xmldsig.ManifestType;
import org.apache.xml.security.binding.xmldsig.ObjectFactory;
import org.apache.xml.security.binding.xmldsig.ObjectType;
import org.apache.xml.security.binding.xmldsig.PGPDataType;
import org.apache.xml.security.binding.xmldsig.RSAKeyValueType;
import org.apache.xml.security.binding.xmldsig.ReferenceType;
import org.apache.xml.security.binding.xmldsig.RetrievalMethodType;
import org.apache.xml.security.binding.xmldsig.SPKIDataType;
import org.apache.xml.security.binding.xmldsig.SignatureMethodType;
import org.apache.xml.security.binding.xmldsig.SignaturePropertiesType;
import org.apache.xml.security.binding.xmldsig.SignaturePropertyType;
import org.apache.xml.security.binding.xmldsig.SignatureType;
import org.apache.xml.security.binding.xmldsig.SignatureValueType;
import org.apache.xml.security.binding.xmldsig.SignedInfoType;
import org.apache.xml.security.binding.xmldsig.TransformType;
import org.apache.xml.security.binding.xmldsig.TransformsType;
import org.apache.xml.security.binding.xmldsig.X509DataType;
import org.apache.xml.security.binding.xmldsig.X509IssuerSerialType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectFactory_ESTest extends ObjectFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignatureValueType signatureValueType0 = objectFactory0.createSignatureValueType();
      assertNull(signatureValueType0.getId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      RetrievalMethodType retrievalMethodType0 = objectFactory0.createRetrievalMethodType();
      assertNull(retrievalMethodType0.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignatureMethodType signatureMethodType0 = objectFactory0.createSignatureMethodType();
      assertNull(signatureMethodType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<String> jAXBElement0 = objectFactory0.createX509DataTypeX509SubjectName("");
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ObjectType objectType0 = objectFactory0.createObjectType();
      JAXBElement<ObjectType> jAXBElement0 = objectFactory0.createObject(objectType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      KeyValueType keyValueType0 = new KeyValueType();
      JAXBElement<KeyValueType> jAXBElement0 = objectFactory0.createKeyValue(keyValueType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ReferenceType referenceType0 = objectFactory0.createReferenceType();
      JAXBElement<ReferenceType> jAXBElement0 = objectFactory0.createReference(referenceType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      TransformsType transformsType0 = objectFactory0.createTransformsType();
      assertNotNull(transformsType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DigestMethodType digestMethodType0 = objectFactory0.createDigestMethodType();
      assertNull(digestMethodType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      CanonicalizationMethodType canonicalizationMethodType0 = objectFactory0.createCanonicalizationMethodType();
      assertNull(canonicalizationMethodType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignaturePropertiesType signaturePropertiesType0 = new SignaturePropertiesType();
      JAXBElement<SignaturePropertiesType> jAXBElement0 = objectFactory0.createSignatureProperties(signaturePropertiesType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SPKIDataType sPKIDataType0 = objectFactory0.createSPKIDataType();
      assertNotNull(sPKIDataType0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      byte[] byteArray0 = new byte[6];
      JAXBElement<byte[]> jAXBElement0 = objectFactory0.createSPKIDataTypeSPKISexp(byteArray0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      RetrievalMethodType retrievalMethodType0 = new RetrievalMethodType();
      JAXBElement<RetrievalMethodType> jAXBElement0 = objectFactory0.createRetrievalMethod(retrievalMethodType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DSAKeyValueType dSAKeyValueType0 = objectFactory0.createDSAKeyValueType();
      assertNotNull(dSAKeyValueType0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignatureType signatureType0 = objectFactory0.createSignatureType();
      assertNull(signatureType0.getId());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignaturePropertyType signaturePropertyType0 = new SignaturePropertyType();
      JAXBElement<SignaturePropertyType> jAXBElement0 = objectFactory0.createSignatureProperty(signaturePropertyType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DigestMethodType digestMethodType0 = new DigestMethodType();
      JAXBElement<DigestMethodType> jAXBElement0 = objectFactory0.createDigestMethod(digestMethodType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      byte[] byteArray0 = new byte[0];
      JAXBElement<byte[]> jAXBElement0 = objectFactory0.createX509DataTypeX509SKI(byteArray0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignaturePropertiesType signaturePropertiesType0 = objectFactory0.createSignaturePropertiesType();
      assertNull(signaturePropertiesType0.getId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      byte[] byteArray0 = new byte[6];
      JAXBElement<byte[]> jAXBElement0 = objectFactory0.createX509DataTypeX509CRL(byteArray0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      byte[] byteArray0 = new byte[5];
      JAXBElement<byte[]> jAXBElement0 = objectFactory0.createPGPDataTypePGPKeyPacket(byteArray0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PGPDataType pGPDataType0 = objectFactory0.createPGPDataType();
      JAXBElement<PGPDataType> jAXBElement0 = objectFactory0.createPGPData(pGPDataType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignaturePropertyType signaturePropertyType0 = objectFactory0.createSignaturePropertyType();
      assertNull(signaturePropertyType0.getTarget());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<SignatureValueType> jAXBElement0 = objectFactory0.createSignatureValue((SignatureValueType) null);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<SignedInfoType> jAXBElement0 = objectFactory0.createSignedInfo((SignedInfoType) null);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DSAKeyValueType dSAKeyValueType0 = new DSAKeyValueType();
      JAXBElement<DSAKeyValueType> jAXBElement0 = objectFactory0.createDSAKeyValue(dSAKeyValueType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      X509IssuerSerialType x509IssuerSerialType0 = objectFactory0.createX509IssuerSerialType();
      JAXBElement<X509IssuerSerialType> jAXBElement0 = objectFactory0.createX509DataTypeX509IssuerSerial(x509IssuerSerialType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      TransformType transformType0 = objectFactory0.createTransformType();
      JAXBElement<TransformType> jAXBElement0 = objectFactory0.createTransform(transformType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ManifestType manifestType0 = objectFactory0.createManifestType();
      JAXBElement<ManifestType> jAXBElement0 = objectFactory0.createManifest(manifestType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<String> jAXBElement0 = objectFactory0.createMgmtData("X509IssuerSerial");
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<byte[]> jAXBElement0 = objectFactory0.createX509DataTypeX509Certificate((byte[]) null);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      byte[] byteArray0 = new byte[9];
      JAXBElement<byte[]> jAXBElement0 = objectFactory0.createPGPDataTypePGPKeyID(byteArray0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SPKIDataType sPKIDataType0 = new SPKIDataType();
      JAXBElement<SPKIDataType> jAXBElement0 = objectFactory0.createSPKIData(sPKIDataType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignatureMethodType signatureMethodType0 = new SignatureMethodType();
      JAXBElement<SignatureMethodType> jAXBElement0 = objectFactory0.createSignatureMethod(signatureMethodType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      CanonicalizationMethodType canonicalizationMethodType0 = new CanonicalizationMethodType();
      JAXBElement<CanonicalizationMethodType> jAXBElement0 = objectFactory0.createCanonicalizationMethod(canonicalizationMethodType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<String> jAXBElement0 = objectFactory0.createTransformTypeXPath("SPKIData");
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      byte[] byteArray0 = new byte[0];
      JAXBElement<byte[]> jAXBElement0 = objectFactory0.createDigestValue(byteArray0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      KeyInfoType keyInfoType0 = objectFactory0.createKeyInfoType();
      JAXBElement<KeyInfoType> jAXBElement0 = objectFactory0.createKeyInfo(keyInfoType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      RSAKeyValueType rSAKeyValueType0 = objectFactory0.createRSAKeyValueType();
      assertNotNull(rSAKeyValueType0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      BigInteger bigInteger0 = BigInteger.ONE;
      JAXBElement<BigInteger> jAXBElement0 = objectFactory0.createSignatureMethodTypeHMACOutputLength(bigInteger0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      KeyValueType keyValueType0 = objectFactory0.createKeyValueType();
      assertNotNull(keyValueType0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      RSAKeyValueType rSAKeyValueType0 = new RSAKeyValueType();
      JAXBElement<RSAKeyValueType> jAXBElement0 = objectFactory0.createRSAKeyValue(rSAKeyValueType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      X509DataType x509DataType0 = objectFactory0.createX509DataType();
      JAXBElement<X509DataType> jAXBElement0 = objectFactory0.createX509Data(x509DataType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<TransformsType> jAXBElement0 = objectFactory0.createTransforms((TransformsType) null);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<String> jAXBElement0 = objectFactory0.createKeyName((String) null);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignatureType signatureType0 = new SignatureType();
      JAXBElement<SignatureType> jAXBElement0 = objectFactory0.createSignature(signatureType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SignedInfoType signedInfoType0 = objectFactory0.createSignedInfoType();
      assertNull(signedInfoType0.getId());
  }
}
