/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:14:20 GMT 2021
 */

package org.apache.xml.security.binding.xop;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import javax.xml.namespace.QName;
import org.apache.xml.security.binding.xop.Include;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Include_ESTest extends Include_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Include include0 = new Include();
      include0.setHref("");
      String string0 = include0.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Include include0 = new Include();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) include0);
      include0.any = (List<Object>) linkedList0;
      List<Object> list0 = include0.getAny();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Include include0 = new Include();
      List<Object> list0 = include0.getAny();
      List<Object> list1 = include0.getAny();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Include include0 = new Include();
      Map<QName, String> map0 = include0.getOtherAttributes();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Include include0 = new Include();
      include0.setHref("&WX^8'<I~<e");
      String string0 = include0.getHref();
      assertEquals("&WX^8'<I~<e", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Include include0 = new Include();
      String string0 = include0.getHref();
      assertNull(string0);
  }
}
