/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:51:06 GMT 2021
 */

package org.apache.xml.security.binding.xmldsig;

import org.junit.Test;
import static org.junit.Assert.*;
import java.math.BigInteger;
import org.apache.xml.security.binding.xmldsig.X509IssuerSerialType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class X509IssuerSerialType_ESTest extends X509IssuerSerialType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      X509IssuerSerialType x509IssuerSerialType0 = new X509IssuerSerialType();
      BigInteger bigInteger0 = BigInteger.ZERO;
      x509IssuerSerialType0.setX509SerialNumber(bigInteger0);
      BigInteger bigInteger1 = x509IssuerSerialType0.getX509SerialNumber();
      assertSame(bigInteger1, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      X509IssuerSerialType x509IssuerSerialType0 = new X509IssuerSerialType();
      byte[] byteArray0 = new byte[7];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigInteger bigInteger1 = bigInteger0.not();
      x509IssuerSerialType0.setX509SerialNumber(bigInteger1);
      BigInteger bigInteger2 = x509IssuerSerialType0.getX509SerialNumber();
      assertEquals((byte) (-1), bigInteger2.byteValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      X509IssuerSerialType x509IssuerSerialType0 = new X509IssuerSerialType();
      x509IssuerSerialType0.setX509IssuerName("?%wu*IeZ#aQcYlZB?)I");
      String string0 = x509IssuerSerialType0.getX509IssuerName();
      assertEquals("?%wu*IeZ#aQcYlZB?)I", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      X509IssuerSerialType x509IssuerSerialType0 = new X509IssuerSerialType();
      BigInteger bigInteger0 = BigInteger.TEN;
      x509IssuerSerialType0.setX509SerialNumber(bigInteger0);
      BigInteger bigInteger1 = x509IssuerSerialType0.getX509SerialNumber();
      assertEquals((byte)10, bigInteger1.byteValue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      X509IssuerSerialType x509IssuerSerialType0 = new X509IssuerSerialType();
      BigInteger bigInteger0 = x509IssuerSerialType0.getX509SerialNumber();
      assertNull(bigInteger0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      X509IssuerSerialType x509IssuerSerialType0 = new X509IssuerSerialType();
      x509IssuerSerialType0.setX509IssuerName("");
      String string0 = x509IssuerSerialType0.getX509IssuerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      X509IssuerSerialType x509IssuerSerialType0 = new X509IssuerSerialType();
      String string0 = x509IssuerSerialType0.getX509IssuerName();
      assertNull(string0);
  }
}
