/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 18:12:56 GMT 2021
 */

package org.apache.xml.security.binding.xmlenc11;

import org.junit.Test;
import static org.junit.Assert.*;
import javax.xml.bind.JAXBElement;
import org.apache.xml.security.binding.xmlenc11.AlgorithmIdentifierType;
import org.apache.xml.security.binding.xmlenc11.ConcatKDFParamsType;
import org.apache.xml.security.binding.xmlenc11.DerivedKeyType;
import org.apache.xml.security.binding.xmlenc11.KeyDerivationMethodType;
import org.apache.xml.security.binding.xmlenc11.MGFType;
import org.apache.xml.security.binding.xmlenc11.ObjectFactory;
import org.apache.xml.security.binding.xmlenc11.PBKDF2ParameterType;
import org.apache.xml.security.binding.xmlenc11.PRFAlgorithmIdentifierType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectFactory_ESTest extends ObjectFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PBKDF2ParameterType pBKDF2ParameterType0 = new PBKDF2ParameterType();
      JAXBElement<PBKDF2ParameterType> jAXBElement0 = objectFactory0.createPBKDF2Params(pBKDF2ParameterType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PRFAlgorithmIdentifierType pRFAlgorithmIdentifierType0 = objectFactory0.createPRFAlgorithmIdentifierType();
      assertNull(pRFAlgorithmIdentifierType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PBKDF2ParameterType pBKDF2ParameterType0 = objectFactory0.createPBKDF2ParameterType();
      assertNotNull(pBKDF2ParameterType0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ConcatKDFParamsType concatKDFParamsType0 = objectFactory0.createConcatKDFParamsType();
      assertNotNull(concatKDFParamsType0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      DerivedKeyType derivedKeyType0 = objectFactory0.createDerivedKeyType();
      assertNull(derivedKeyType0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      KeyDerivationMethodType keyDerivationMethodType0 = objectFactory0.createKeyDerivationMethodType();
      assertNull(keyDerivationMethodType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AlgorithmIdentifierType algorithmIdentifierType0 = objectFactory0.createAlgorithmIdentifierType();
      assertNull(algorithmIdentifierType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      MGFType mGFType0 = new MGFType();
      JAXBElement<MGFType> jAXBElement0 = objectFactory0.createMGF(mGFType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      MGFType mGFType0 = objectFactory0.createMGFType();
      assertNull(mGFType0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<DerivedKeyType> jAXBElement0 = objectFactory0.createDerivedKey((DerivedKeyType) null);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ConcatKDFParamsType concatKDFParamsType0 = new ConcatKDFParamsType();
      JAXBElement<ConcatKDFParamsType> jAXBElement0 = objectFactory0.createConcatKDFParams(concatKDFParamsType0);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JAXBElement<KeyDerivationMethodType> jAXBElement0 = objectFactory0.createKeyDerivationMethod((KeyDerivationMethodType) null);
      assertNotNull(jAXBElement0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PBKDF2ParameterType.Salt pBKDF2ParameterType_Salt0 = objectFactory0.createPBKDF2ParameterTypeSalt();
      assertNotNull(pBKDF2ParameterType_Salt0);
  }
}
