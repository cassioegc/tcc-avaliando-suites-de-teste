/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:26:00 GMT 2021
 */

package org.apache.xml.security.configuration;

import org.junit.Test;
import static org.junit.Assert.*;
import javax.xml.bind.JAXBElement;
import org.apache.xml.security.configuration.AlgorithmType;
import org.apache.xml.security.configuration.ConfigurationType;
import org.apache.xml.security.configuration.HandlerType;
import org.apache.xml.security.configuration.JCEAlgorithmMappingsType;
import org.apache.xml.security.configuration.ObjectFactory;
import org.apache.xml.security.configuration.PropertiesType;
import org.apache.xml.security.configuration.PropertyType;
import org.apache.xml.security.configuration.ResolverType;
import org.apache.xml.security.configuration.ResourceResolversType;
import org.apache.xml.security.configuration.SecurityHeaderHandlersType;
import org.apache.xml.security.configuration.TransformAlgorithmType;
import org.apache.xml.security.configuration.TransformAlgorithmsType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ObjectFactory_ESTest extends ObjectFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      JCEAlgorithmMappingsType jCEAlgorithmMappingsType0 = objectFactory0.createJCEAlgorithmMappingsType();
      assertNotNull(jCEAlgorithmMappingsType0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      TransformAlgorithmsType transformAlgorithmsType0 = objectFactory0.createTransformAlgorithmsType();
      assertNotNull(transformAlgorithmsType0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PropertiesType propertiesType0 = objectFactory0.createPropertiesType();
      assertNotNull(propertiesType0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ResolverType resolverType0 = objectFactory0.createResolverType();
      assertNull(resolverType0.getDESCRIPTION());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      AlgorithmType algorithmType0 = objectFactory0.createAlgorithmType();
      assertNull(algorithmType0.getJCEName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      SecurityHeaderHandlersType securityHeaderHandlersType0 = objectFactory0.createSecurityHeaderHandlersType();
      assertNotNull(securityHeaderHandlersType0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      TransformAlgorithmType transformAlgorithmType0 = objectFactory0.createTransformAlgorithmType();
      assertNull(transformAlgorithmType0.getJAVACLASS());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      HandlerType handlerType0 = objectFactory0.createHandlerType();
      assertNull(handlerType0.getJAVACLASS());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ResourceResolversType resourceResolversType0 = objectFactory0.createResourceResolversType();
      assertNotNull(resourceResolversType0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      PropertyType propertyType0 = objectFactory0.createPropertyType();
      assertNull(propertyType0.getVAL());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ObjectFactory objectFactory0 = new ObjectFactory();
      ConfigurationType configurationType0 = objectFactory0.createConfigurationType();
      JAXBElement<ConfigurationType> jAXBElement0 = objectFactory0.createConfiguration(configurationType0);
      assertNotNull(jAXBElement0);
  }
}
