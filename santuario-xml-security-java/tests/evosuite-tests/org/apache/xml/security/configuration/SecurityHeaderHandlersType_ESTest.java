/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:21:01 GMT 2021
 */

package org.apache.xml.security.configuration;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import org.apache.xml.security.configuration.HandlerType;
import org.apache.xml.security.configuration.SecurityHeaderHandlersType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SecurityHeaderHandlersType_ESTest extends SecurityHeaderHandlersType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SecurityHeaderHandlersType securityHeaderHandlersType0 = new SecurityHeaderHandlersType();
      LinkedList<HandlerType> linkedList0 = new LinkedList<HandlerType>();
      HandlerType handlerType0 = new HandlerType();
      linkedList0.push(handlerType0);
      securityHeaderHandlersType0.handler = (List<HandlerType>) linkedList0;
      List<HandlerType> list0 = securityHeaderHandlersType0.getHandler();
      assertTrue(list0.contains(handlerType0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SecurityHeaderHandlersType securityHeaderHandlersType0 = new SecurityHeaderHandlersType();
      securityHeaderHandlersType0.getHandler();
      List<HandlerType> list0 = securityHeaderHandlersType0.getHandler();
      assertEquals(0, list0.size());
  }
}
