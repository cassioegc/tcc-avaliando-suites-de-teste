/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 17:21:10 GMT 2021
 */

package org.apache.xml.security.configuration;

import org.junit.Test;
import static org.junit.Assert.*;
import org.apache.xml.security.configuration.InOutAttrType;
import org.apache.xml.security.configuration.TransformAlgorithmType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransformAlgorithmType_ESTest extends TransformAlgorithmType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.setValue("44zN3Zzf");
      String string0 = transformAlgorithmType0.getValue();
      assertEquals("44zN3Zzf", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.setValue("");
      String string0 = transformAlgorithmType0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.uri = "p.g>s48&sTTwv*";
      String string0 = transformAlgorithmType0.getURI();
      assertEquals("p.g>s48&sTTwv*", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.uri = "";
      String string0 = transformAlgorithmType0.getURI();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.javaclass = null;
      transformAlgorithmType0.javaclass = "IN";
      String string0 = transformAlgorithmType0.getJAVACLASS();
      assertEquals("IN", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.setJAVACLASS("");
      String string0 = transformAlgorithmType0.getJAVACLASS();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      String string0 = transformAlgorithmType0.getJAVACLASS();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      InOutAttrType inOutAttrType0 = InOutAttrType.OUT;
      transformAlgorithmType0.setINOUT(inOutAttrType0);
      InOutAttrType inOutAttrType1 = transformAlgorithmType0.getINOUT();
      assertSame(inOutAttrType1, inOutAttrType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.getINOUT();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      String string0 = transformAlgorithmType0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      transformAlgorithmType0.setURI("X5&VE)~Z<Ow?.cpJ");
      assertNull(transformAlgorithmType0.getINOUT());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TransformAlgorithmType transformAlgorithmType0 = new TransformAlgorithmType();
      String string0 = transformAlgorithmType0.getURI();
      assertNull(string0);
  }
}
