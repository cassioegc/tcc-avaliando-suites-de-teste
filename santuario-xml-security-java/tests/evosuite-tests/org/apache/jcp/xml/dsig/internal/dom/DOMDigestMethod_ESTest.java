/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 23:01:27 GMT 2021
 */

package org.apache.jcp.xml.dsig.internal.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.security.InvalidAlgorithmParameterException;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.ECGenParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import javax.xml.crypto.dsig.spec.DigestMethodParameterSpec;
import org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMDigestMethod_ESTest extends DOMDigestMethod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DOMDigestMethod.WHIRLPOOL dOMDigestMethod_WHIRLPOOL0 = new DOMDigestMethod.WHIRLPOOL((AlgorithmParameterSpec) null);
      String string0 = dOMDigestMethod_WHIRLPOOL0.getMessageDigestAlgorithm();
      assertEquals("WHIRLPOOL", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("kl=");
      DOMDigestMethod.WHIRLPOOL dOMDigestMethod_WHIRLPOOL0 = new DOMDigestMethod.WHIRLPOOL(iIOMetadataNode0);
      String string0 = dOMDigestMethod_WHIRLPOOL0.getAlgorithm();
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#whirlpool", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.SHA512 dOMDigestMethod_SHA512_0 = new DOMDigestMethod.SHA512(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA512_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmlenc#sha512", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMDigestMethod.SHA3_384 dOMDigestMethod_SHA3_384_0 = new DOMDigestMethod.SHA3_384(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA3_384_0.getAlgorithm();
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-384", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.SHA3_224 dOMDigestMethod_SHA3_224_0 = new DOMDigestMethod.SHA3_224(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA3_224_0.getAlgorithm();
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-224", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DOMDigestMethod.SHA256 dOMDigestMethod_SHA256_0 = new DOMDigestMethod.SHA256((AlgorithmParameterSpec) null);
      String string0 = dOMDigestMethod_SHA256_0.getMessageDigestAlgorithm();
      assertEquals("SHA-256", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.SHA224 dOMDigestMethod_SHA224_0 = new DOMDigestMethod.SHA224(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA224_0.getMessageDigestAlgorithm();
      assertEquals("SHA-224", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("rxM?evzxw5|-G+>");
      DOMDigestMethod.SHA224 dOMDigestMethod_SHA224_0 = new DOMDigestMethod.SHA224(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA224_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#sha224", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.SHA1 dOMDigestMethod_SHA1_0 = new DOMDigestMethod.SHA1(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA1_0.getMessageDigestAlgorithm();
      assertEquals("SHA-1", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      // Undeclared exception!
      try { 
        DOMDigestMethod.unmarshal(iIOMetadataNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.RIPEMD160 dOMDigestMethod_RIPEMD160_0 = new DOMDigestMethod.RIPEMD160(iIOMetadataNode0);
      byte[] byteArray0 = new byte[1];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "");
      DOMSignContext dOMSignContext0 = new DOMSignContext(secretKeySpec0, iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMDigestMethod_RIPEMD160_0.marshal(iIOMetadataNode0, "", dOMSignContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DOMDigestMethod.RIPEMD160 dOMDigestMethod_RIPEMD160_0 = new DOMDigestMethod.RIPEMD160((AlgorithmParameterSpec) null);
      assertEquals("http://www.w3.org/2001/04/xmlenc#ripemd160", dOMDigestMethod_RIPEMD160_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DOMDigestMethod.SHA256 dOMDigestMethod_SHA256_0 = new DOMDigestMethod.SHA256((AlgorithmParameterSpec) null);
      String string0 = dOMDigestMethod_SHA256_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmlenc#sha256", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DOMDigestMethod.SHA384 dOMDigestMethod_SHA384_0 = new DOMDigestMethod.SHA384((AlgorithmParameterSpec) null);
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#sha384", dOMDigestMethod_SHA384_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DOMDigestMethod.SHA3_256 dOMDigestMethod_SHA3_256_0 = new DOMDigestMethod.SHA3_256((AlgorithmParameterSpec) null);
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-256", dOMDigestMethod_SHA3_256_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.SHA3_224 dOMDigestMethod_SHA3_224_0 = new DOMDigestMethod.SHA3_224(iIOMetadataNode0);
      DOMDigestMethod.SHA3_224 dOMDigestMethod_SHA3_224_1 = new DOMDigestMethod.SHA3_224(iIOMetadataNode0);
      boolean boolean0 = dOMDigestMethod_SHA3_224_0.equals(dOMDigestMethod_SHA3_224_1);
      assertTrue(boolean0);
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-224", dOMDigestMethod_SHA3_224_1.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/2007/05/xmldsig-more#whirlpool");
      DOMDigestMethod.WHIRLPOOL dOMDigestMethod_WHIRLPOOL0 = new DOMDigestMethod.WHIRLPOOL(iIOMetadataNode0);
      boolean boolean0 = dOMDigestMethod_WHIRLPOOL0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4/hkX:r(M-7");
      iIOMetadataNode0.appendChild(iIOMetadataNode0);
      DOMDigestMethod.SHA512 dOMDigestMethod_SHA512_0 = null;
      try {
        dOMDigestMethod_SHA512_0 = new DOMDigestMethod.SHA512(iIOMetadataNode0);
        fail("Expecting exception: MarshalException");
      
      } catch(Throwable e) {
         //
         // no parameters should be specified for the SHA-512 DigestMethod algorithm
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4/hkX:r(M-7");
      DOMDigestMethod.SHA512 dOMDigestMethod_SHA512_0 = new DOMDigestMethod.SHA512(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA512_0.getMessageDigestAlgorithm();
      assertEquals("SHA-512", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DOMDigestMethod.SHA512 dOMDigestMethod_SHA512_0 = new DOMDigestMethod.SHA512((AlgorithmParameterSpec) null);
      dOMDigestMethod_SHA512_0.hashCode();
      assertEquals("http://www.w3.org/2001/04/xmlenc#sha512", dOMDigestMethod_SHA512_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ECGenParameterSpec eCGenParameterSpec0 = new ECGenParameterSpec(" Fg1mxB");
      DOMDigestMethod.SHA256 dOMDigestMethod_SHA256_0 = null;
      try {
        dOMDigestMethod_SHA256_0 = new DOMDigestMethod.SHA256(eCGenParameterSpec0);
        fail("Expecting exception: InvalidAlgorithmParameterException");
      
      } catch(Throwable e) {
         //
         // params must be of type DigestMethodParameterSpec
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.SHA224 dOMDigestMethod_SHA224_0 = new DOMDigestMethod.SHA224(iIOMetadataNode0);
      try { 
        dOMDigestMethod_SHA224_0.marshalParams(iIOMetadataNode0, "http://www.w3.org/2007/05/xmldsig-more#sha3-384");
        fail("Expecting exception: MarshalException");
      
      } catch(MarshalException e) {
         //
         // no parameters should be specified for the SHA-224 DigestMethod algorithm
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DOMDigestMethod.SHA224 dOMDigestMethod_SHA224_0 = new DOMDigestMethod.SHA224((AlgorithmParameterSpec) null);
      dOMDigestMethod_SHA224_0.hashCode();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#sha224", dOMDigestMethod_SHA224_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4/hkX:r(M-7");
      DOMDigestMethod.SHA3_512 dOMDigestMethod_SHA3_512_0 = new DOMDigestMethod.SHA3_512(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA3_512_0.getAlgorithm();
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-512", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DOMDigestMethod.SHA3_512 dOMDigestMethod_SHA3_512_0 = new DOMDigestMethod.SHA3_512((AlgorithmParameterSpec) null);
      String string0 = dOMDigestMethod_SHA3_512_0.getMessageDigestAlgorithm();
      assertEquals("SHA3-512", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4/hkX:r(M-7");
      DOMDigestMethod.SHA3_256 dOMDigestMethod_SHA3_256_0 = new DOMDigestMethod.SHA3_256(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA3_256_0.getMessageDigestAlgorithm();
      assertEquals("SHA3-256", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("S%h1>vb@%\u0005x");
      DOMDigestMethod.SHA3_256 dOMDigestMethod_SHA3_256_0 = new DOMDigestMethod.SHA3_256(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA3_256_0.getAlgorithm();
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-256", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4/hkX:r(M-7");
      DOMDigestMethod.SHA384 dOMDigestMethod_SHA384_0 = new DOMDigestMethod.SHA384(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA384_0.getMessageDigestAlgorithm();
      assertEquals("SHA-384", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("S%h1>vb@%\u0005x");
      DOMDigestMethod.SHA384 dOMDigestMethod_SHA384_0 = new DOMDigestMethod.SHA384(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA384_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#sha384", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("S%h1>vb@%\u0005x");
      DOMDigestMethod.SHA3_224 dOMDigestMethod_SHA3_224_0 = new DOMDigestMethod.SHA3_224(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA3_224_0.getMessageDigestAlgorithm();
      assertEquals("SHA3-224", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DOMDigestMethod.SHA3_224 dOMDigestMethod_SHA3_224_0 = new DOMDigestMethod.SHA3_224((AlgorithmParameterSpec) null);
      dOMDigestMethod_SHA3_224_0.hashCode();
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-224", dOMDigestMethod_SHA3_224_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMDigestMethod.SHA3_224 dOMDigestMethod_SHA3_224_0 = new DOMDigestMethod.SHA3_224(iIOMetadataNode0);
      boolean boolean0 = dOMDigestMethod_SHA3_224_0.equals(dOMDigestMethod_SHA3_224_0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("4/hkX:r(M-7");
      DOMDigestMethod.RIPEMD160 dOMDigestMethod_RIPEMD160_0 = new DOMDigestMethod.RIPEMD160(iIOMetadataNode0);
      String string0 = dOMDigestMethod_RIPEMD160_0.getMessageDigestAlgorithm();
      assertEquals("RIPEMD160", string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMDigestMethod.RIPEMD160 dOMDigestMethod_RIPEMD160_0 = new DOMDigestMethod.RIPEMD160(iIOMetadataNode0);
      String string0 = dOMDigestMethod_RIPEMD160_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmlenc#ripemd160", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMDigestMethod.SHA3_384 dOMDigestMethod_SHA3_384_0 = new DOMDigestMethod.SHA3_384(iIOMetadataNode0);
      String string0 = dOMDigestMethod_SHA3_384_0.getMessageDigestAlgorithm();
      assertEquals("SHA3-384", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.jcp.xml.dsig.internal.dom.DOMStructure");
      DOMDigestMethod.SHA3_384 dOMDigestMethod_SHA3_384_0 = new DOMDigestMethod.SHA3_384(iIOMetadataNode0);
      dOMDigestMethod_SHA3_384_0.checkParams((DigestMethodParameterSpec) null);
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-384", dOMDigestMethod_SHA3_384_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("http://www.w3.org/2007/05/xmldsig-more#whirlpool");
      DOMDigestMethod.WHIRLPOOL dOMDigestMethod_WHIRLPOOL0 = new DOMDigestMethod.WHIRLPOOL(iIOMetadataNode0);
      DOMDigestMethod.SHA3_384 dOMDigestMethod_SHA3_384_0 = new DOMDigestMethod.SHA3_384((AlgorithmParameterSpec) null);
      boolean boolean0 = dOMDigestMethod_WHIRLPOOL0.equals(dOMDigestMethod_SHA3_384_0);
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#whirlpool", dOMDigestMethod_WHIRLPOOL0.getAlgorithm());
      assertFalse(boolean0);
      assertEquals("http://www.w3.org/2007/05/xmldsig-more#sha3-384", dOMDigestMethod_SHA3_384_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DOMDigestMethod.WHIRLPOOL dOMDigestMethod_WHIRLPOOL0 = new DOMDigestMethod.WHIRLPOOL((AlgorithmParameterSpec) null);
      AlgorithmParameterSpec algorithmParameterSpec0 = dOMDigestMethod_WHIRLPOOL0.getParameterSpec();
      assertNull(algorithmParameterSpec0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DOMDigestMethod.SHA1 dOMDigestMethod_SHA1_0 = new DOMDigestMethod.SHA1((AlgorithmParameterSpec) null);
      String string0 = dOMDigestMethod_SHA1_0.getAlgorithm();
      assertEquals("http://www.w3.org/2000/09/xmldsig#sha1", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("OhE;OwGM=N  {j`b");
      DOMDigestMethod.SHA1 dOMDigestMethod_SHA1_0 = new DOMDigestMethod.SHA1(iIOMetadataNode0);
      DOMDigestMethod.SHA256 dOMDigestMethod_SHA256_0 = new DOMDigestMethod.SHA256(iIOMetadataNode0);
      boolean boolean0 = dOMDigestMethod_SHA1_0.equals(dOMDigestMethod_SHA256_0);
      assertEquals("http://www.w3.org/2001/04/xmlenc#sha256", dOMDigestMethod_SHA256_0.getAlgorithm());
      assertEquals("http://www.w3.org/2000/09/xmldsig#sha1", dOMDigestMethod_SHA1_0.getAlgorithm());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("OhE;OwGM=N  {j`b");
      DOMDigestMethod.SHA1 dOMDigestMethod_SHA1_0 = new DOMDigestMethod.SHA1(iIOMetadataNode0);
      try { 
        dOMDigestMethod_SHA1_0.unmarshalParams(iIOMetadataNode0);
        fail("Expecting exception: MarshalException");
      
      } catch(MarshalException e) {
         //
         // no parameters should be specified for the SHA-1 DigestMethod algorithm
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod", e);
      }
  }
}
