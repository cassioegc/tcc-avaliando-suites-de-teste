/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:43:43 GMT 2021
 */

package org.apache.jcp.xml.dsig.internal.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.crypto.KeySelector;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import org.apache.jcp.xml.dsig.internal.dom.DOMX509Data;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMX509Data_ESTest extends DOMX509Data_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2n@VJDJ0D<1");
      Node node0 = iIOMetadataNode0.cloneNode(true);
      iIOMetadataNode0.appendChild(node0);
      DOMX509Data dOMX509Data0 = new DOMX509Data(iIOMetadataNode0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      DOMX509Data dOMX509Data0 = new DOMX509Data(iIOMetadataNode0);
      byte[] byteArray0 = new byte[7];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "khiMpo");
      KeySelector keySelector0 = KeySelector.singletonKeySelector(secretKeySpec0);
      DOMSignContext dOMSignContext0 = new DOMSignContext(keySelector0, iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMX509Data0.marshal(iIOMetadataNode0, "content cannot be empty", dOMSignContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("2n@VJDJ0D<1");
      DOMX509Data dOMX509Data0 = new DOMX509Data(iIOMetadataNode0);
      LinkedList<XMLStructure> linkedList0 = new LinkedList<XMLStructure>();
      linkedList0.add((XMLStructure) dOMX509Data0);
      boolean boolean0 = dOMX509Data0.equalsContent(linkedList0, linkedList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DOMX509Data dOMX509Data0 = null;
      try {
        dOMX509Data0 = new DOMX509Data((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509Data", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("Xq$<_h^y :");
      DOMX509Data dOMX509Data0 = null;
      try {
        dOMX509Data0 = new DOMX509Data(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // improperly specified input name: Xq$<_h^y :
         //
         verifyException("javax.security.auth.x500.X500Principal", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMX509Data dOMX509Data0 = new DOMX509Data(iIOMetadataNode0);
      boolean boolean0 = dOMX509Data0.equals(iIOMetadataNode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(0);
      linkedList0.offerFirst(integer0);
      DOMX509Data dOMX509Data0 = null;
      try {
        dOMX509Data0 = new DOMX509Data(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // content[0] is not a valid X509Data type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509Data", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<String> linkedList0 = new LinkedList<String>();
      linkedList0.add("");
      DOMX509Data dOMX509Data0 = new DOMX509Data(linkedList0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DOMX509Data dOMX509Data0 = null;
      try {
        dOMX509Data0 = new DOMX509Data((List<?>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // content cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509Data", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMX509Data dOMX509Data0 = null;
      try {
        dOMX509Data0 = new DOMX509Data(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // content cannot be empty
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509Data", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMX509Data dOMX509Data0 = new DOMX509Data(iIOMetadataNode0);
      dOMX509Data0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMX509Data dOMX509Data0 = new DOMX509Data(iIOMetadataNode0);
      List<Object> list0 = dOMX509Data0.getContent();
      assertTrue(list0.isEmpty());
  }
}
