/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:42:30 GMT 2021
 */

package org.apache.jcp.xml.dsig.internal.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.security.KeyException;
import java.security.PublicKey;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.keyinfo.KeyInfo;
import javax.xml.crypto.dsig.keyinfo.KeyName;
import javax.xml.crypto.dsig.keyinfo.PGPData;
import javax.xml.crypto.dsig.keyinfo.RetrievalMethod;
import javax.xml.crypto.dsig.keyinfo.X509Data;
import javax.xml.crypto.dsig.keyinfo.X509IssuerSerial;
import org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMKeyInfoFactory_ESTest extends DOMKeyInfoFactory_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.offerFirst("");
      X509Data x509Data0 = dOMKeyInfoFactory0.newX509Data(linkedList0);
      assertNotNull(x509Data0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      RetrievalMethod retrievalMethod0 = dOMKeyInfoFactory0.newRetrievalMethod("", "", (List) linkedList0);
      assertEquals("", retrievalMethod0.getType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-34);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      PGPData pGPData0 = dOMKeyInfoFactory0.newPGPData(byteArray0, (List) linkedList0);
      assertNotNull(pGPData0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      byte[] byteArray0 = new byte[8];
      PGPData pGPData0 = dOMKeyInfoFactory0.newPGPData(byteArray0);
      assertNotNull(pGPData0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      javax.xml.crypto.dom.DOMStructure dOMStructure0 = new javax.xml.crypto.dom.DOMStructure(iIOMetadataNode0);
      linkedList0.add(dOMStructure0);
      KeyInfo keyInfo0 = dOMKeyInfoFactory0.newKeyInfo((List) linkedList0, "org.apache.xml.security.utils.ElementProxy");
      assertEquals("org.apache.xml.security.utils.ElementProxy", keyInfo0.getId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newX509IssuerSerial("org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA224", (BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // serialNumber cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509IssuerSerial", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      BigInteger bigInteger0 = BigInteger.TEN;
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newX509IssuerSerial("e", bigInteger0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // improperly specified input name: e
         //
         verifyException("javax.security.auth.x500.X500Principal", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newX509Data((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // content cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509Data", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      linkedList0.add((Object) "EC");
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newX509Data(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // improperly specified input name: EC
         //
         verifyException("javax.security.auth.x500.X500Principal", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      linkedList0.add(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newX509Data(linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // content[0] is not a valid X509Data type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509Data", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      linkedList0.add(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newRetrievalMethod("Document implementation must support DOM Level 2 and be namespace aware", "Document implementation must support DOM Level 2 and be namespace aware", (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // transforms[0] is not a valid type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMRetrievalMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newRetrievalMethod("(F_\u0005V1>0/ #WUMU");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 3: (F_\u0005V1>0/ #WUMU
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMRetrievalMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      byte[] byteArray0 = new byte[3];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newPGPData(byteArray0, byteArray0, (List) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keyId must be 8 bytes long
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      byte[] byteArray0 = new byte[2];
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newPGPData(byteArray0, (List) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keypacket must be at least 3 bytes long
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      byte[] byteArray0 = new byte[0];
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      Integer integer0 = new Integer(1024);
      linkedList0.add((Object) integer0);
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newPGPData(byteArray0, (List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // other[0] is not a valid PGPData type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newPGPData((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // keyId cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyValue((PublicKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyName((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyName", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyInfo((List) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // content cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      Integer integer0 = new Integer(1024);
      linkedList0.add(integer0);
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyInfo((List) linkedList0, "K]3\"@f0pF9");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // content[0] is not a valid KeyInfo type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyInfo((List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // content cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      linkedList0.add(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyInfo((List) linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // content[0] is not a valid KeyInfo type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale locale0 = Locale.PRC;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newRetrievalMethod((String) null, (String) null, list0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // uri must not be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newRetrievalMethod("Document implementation must support DOM Level 2 and be namespace aware", "Document implementation must support DOM Level 2 and be namespace aware", (List) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal character in path at index 8: Document implementation must support DOM Level 2 and be namespace aware
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMRetrievalMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("xmlStructure must be of type DOMStructure");
      javax.xml.crypto.dom.DOMStructure dOMStructure0 = new javax.xml.crypto.dom.DOMStructure(iIOMetadataNode0);
      try { 
        dOMKeyInfoFactory0.unmarshalKeyInfo(dOMStructure0);
        fail("Expecting exception: MarshalException");
      
      } catch(MarshalException e) {
         //
         // Document implementation must support DOM Level 2 and be namespace aware
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      javax.xml.crypto.dom.DOMStructure dOMStructure0 = new javax.xml.crypto.dom.DOMStructure(iIOMetadataNode0);
      try { 
        dOMKeyInfoFactory0.unmarshalKeyInfo(dOMStructure0);
        fail("Expecting exception: MarshalException");
      
      } catch(MarshalException e) {
         //
         // Document implementation must support DOM Level 2 and be namespace aware
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.unmarshalKeyInfo((XMLStructure) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // xmlStructure cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      KeyName keyName0 = dOMKeyInfoFactory0.newKeyName("x8`b:mp");
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.unmarshalKeyInfo(keyName0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // xmlStructure must be of type DOMStructure
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.isFeatureSupported((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      boolean boolean0 = dOMKeyInfoFactory0.isFeatureSupported("EC");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newRetrievalMethod((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // uri must not be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      doReturn("EC").when(publicKey0).getAlgorithm();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyValue(publicKey0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.security.PublicKey$MockitoMock$1013356078 cannot be cast to java.security.interfaces.ECPublicKey
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      doReturn("RSA").when(publicKey0).getAlgorithm();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyValue(publicKey0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.security.PublicKey$MockitoMock$1013356078 cannot be cast to java.security.interfaces.RSAPublicKey
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      doReturn("DSA").when(publicKey0).getAlgorithm();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyValue(publicKey0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // codegen.java.security.PublicKey$MockitoMock$1013356078 cannot be cast to java.security.interfaces.DSAPublicKey
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      PublicKey publicKey0 = mock(PublicKey.class, new ViolatedAssumptionAnswer());
      doReturn("-M3").when(publicKey0).getAlgorithm();
      try { 
        dOMKeyInfoFactory0.newKeyValue(publicKey0);
        fail("Expecting exception: KeyException");
      
      } catch(KeyException e) {
         //
         // unsupported key algorithm: -M3
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyInfo((List) linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // content cannot be empty
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<XMLStructure> linkedList0 = new LinkedList<XMLStructure>();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newPGPData((byte[]) null, (List) linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // keyPacket cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newKeyInfo((List) linkedList0, "))%N?>gW,aWt.'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // content cannot be empty
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      BigInteger bigInteger0 = BigInteger.ONE;
      X509IssuerSerial x509IssuerSerial0 = dOMKeyInfoFactory0.newX509IssuerSerial("", bigInteger0);
      assertEquals("", x509IssuerSerial0.getIssuerName());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      RetrievalMethod retrievalMethod0 = dOMKeyInfoFactory0.newRetrievalMethod("EC");
      assertNull(retrievalMethod0.getType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      byte[] byteArray0 = new byte[1];
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newPGPData(byteArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keyId must be 8 bytes long
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.getURIDereferencer();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class org.apache.jcp.xml.dsig.internal.dom.DOMURIDereferencer
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMKeyInfoFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      LinkedList<IIOMetadataNode> linkedList0 = new LinkedList<IIOMetadataNode>();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newX509Data(linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // content cannot be empty
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMX509Data", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DOMKeyInfoFactory dOMKeyInfoFactory0 = new DOMKeyInfoFactory();
      // Undeclared exception!
      try { 
        dOMKeyInfoFactory0.newPGPData((byte[]) null, (byte[]) null, (List) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // keyId cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }
}
