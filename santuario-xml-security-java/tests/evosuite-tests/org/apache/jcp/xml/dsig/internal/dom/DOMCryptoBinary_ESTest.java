/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:52:53 GMT 2021
 */

package org.apache.jcp.xml.dsig.internal.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.security.spec.RSAKeyGenParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.crypto.KeySelector;
import javax.xml.crypto.MarshalException;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import org.apache.jcp.xml.dsig.internal.dom.DOMCryptoBinary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMCryptoBinary_ESTest extends DOMCryptoBinary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      BigInteger bigInteger0 = BigInteger.ZERO;
      DOMCryptoBinary dOMCryptoBinary0 = new DOMCryptoBinary(bigInteger0);
      BigInteger bigInteger1 = dOMCryptoBinary0.getBigNum();
      assertSame(bigInteger1, bigInteger0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-2);
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      DOMCryptoBinary dOMCryptoBinary0 = new DOMCryptoBinary(bigInteger0);
      BigInteger bigInteger1 = dOMCryptoBinary0.getBigNum();
      assertEquals((short) (-2), bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DOMCryptoBinary dOMCryptoBinary0 = null;
      try {
        dOMCryptoBinary0 = new DOMCryptoBinary((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMCryptoBinary", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      DOMCryptoBinary dOMCryptoBinary0 = null;
      try {
        dOMCryptoBinary0 = new DOMCryptoBinary((BigInteger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // bigNum is null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMCryptoBinary", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BigInteger bigInteger0 = RSAKeyGenParameterSpec.F4;
      DOMCryptoBinary dOMCryptoBinary0 = new DOMCryptoBinary(bigInteger0);
      BigInteger bigInteger1 = dOMCryptoBinary0.getBigNum();
      assertEquals((short)1, bigInteger1.shortValue());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMCryptoBinary dOMCryptoBinary0 = null;
      try {
        dOMCryptoBinary0 = new DOMCryptoBinary(iIOMetadataNode0);
        fail("Expecting exception: MarshalException");
      
      } catch(Throwable e) {
         //
         // java.lang.ClassCastException: javax.imageio.metadata.IIOMetadataNode cannot be cast to org.w3c.dom.Text
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMCryptoBinary", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      BigInteger bigInteger0 = RSAKeyGenParameterSpec.F4;
      DOMCryptoBinary dOMCryptoBinary0 = new DOMCryptoBinary(bigInteger0);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      byte[] byteArray0 = new byte[8];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "");
      KeySelector keySelector0 = KeySelector.singletonKeySelector(secretKeySpec0);
      DOMSignContext dOMSignContext0 = new DOMSignContext(keySelector0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMCryptoBinary0.marshal((Node) null, "", dOMSignContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMUtils", e);
      }
  }
}
