/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:57:42 GMT 2021
 */

package org.apache.jcp.xml.dsig.internal.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.dom.DOMValidateContext;
import org.apache.jcp.xml.dsig.internal.dom.DOMPGPData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;
import org.w3c.dom.Node;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMPGPData_ESTest extends DOMPGPData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      byte[] byteArray0 = new byte[3];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA256");
      DOMValidateContext dOMValidateContext0 = new DOMValidateContext(secretKeySpec0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMPGPData0.marshal(iIOMetadataNode0, "org.apache.jcp.xml.dsig.internal.dom.DOMDigestMethod$SHA256", dOMValidateContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData((Element) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-19);
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMPGPData dOMPGPData0 = new DOMPGPData(byteArray0, linkedList0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-40);
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, byteArray1, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keypacket tag is invalid: must be 6, 14, 5, or 7
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-94);
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, (List<? extends XMLStructure>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // old keypacket tag format is unsupported
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      byte[] byteArray0 = dOMPGPData0.getKeyPacket();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-2);
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMPGPData dOMPGPData0 = new DOMPGPData(byteArray0, byteArray1, linkedList0);
      byte[] byteArray2 = dOMPGPData0.getKeyPacket();
      assertFalse(byteArray2.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      byte[] byteArray0 = dOMPGPData0.getKeyId();
      assertNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte) (-2);
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMPGPData dOMPGPData0 = new DOMPGPData(byteArray0, byteArray1, linkedList0);
      byte[] byteArray2 = dOMPGPData0.getKeyId();
      assertFalse(byteArray2.equals((Object)byteArray1));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      iIOMetadataNode0.insertBefore(iIOMetadataNode0, (Node) null);
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMPGPData dOMPGPData0 = new DOMPGPData(byteArray0, (byte[]) null, linkedList0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      linkedList0.add((javax.xml.crypto.dom.DOMStructure) null);
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, byteArray0, linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // other[0] is not a valid PGPData type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("esM^:Y6*8ULE7v>GH");
      javax.xml.crypto.dom.DOMStructure dOMStructure0 = new javax.xml.crypto.dom.DOMStructure(iIOMetadataNode0);
      linkedList0.add(dOMStructure0);
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, byteArray0, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keypacket tag is invalid: bit 7 is not set
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, byteArray0, (List<? extends XMLStructure>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keypacket tag is invalid: bit 7 is not set
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData((byte[]) null, (byte[]) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // keyId cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, byteArray0, (List<? extends XMLStructure>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keyId must be 8 bytes long
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      javax.xml.crypto.dom.DOMStructure dOMStructure0 = new javax.xml.crypto.dom.DOMStructure(iIOMetadataNode0);
      linkedList0.add(dOMStructure0);
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, linkedList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keypacket tag is invalid: bit 7 is not set
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      linkedList0.add((javax.xml.crypto.dom.DOMStructure) null);
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, linkedList0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // other[0] is not a valid PGPData type
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData(byteArray0, (List<? extends XMLStructure>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // keypacket must be at least 3 bytes long
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<javax.xml.crypto.dom.DOMStructure> linkedList0 = new LinkedList<javax.xml.crypto.dom.DOMStructure>();
      DOMPGPData dOMPGPData0 = null;
      try {
        dOMPGPData0 = new DOMPGPData((byte[]) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // keyPacket cannot be null
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMPGPData", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      List<XMLStructure> list0 = dOMPGPData0.getExternalElements();
      assertEquals(0, list0.size());
  }
}
