/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 23:02:42 GMT 2021
 */

package org.apache.jcp.xml.dsig.internal.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.List;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.crypto.KeySelector;
import javax.xml.crypto.XMLStructure;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import org.apache.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod;
import org.apache.jcp.xml.dsig.internal.dom.DOMPGPData;
import org.apache.jcp.xml.dsig.internal.dom.DOMSignatureMethod;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMStructure_ESTest extends DOMStructure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("]iZVib;q");
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      LinkedList<XMLStructure> linkedList0 = new LinkedList<XMLStructure>();
      LinkedList<XMLStructure> linkedList1 = new LinkedList<XMLStructure>();
      linkedList1.add((XMLStructure) dOMPGPData0);
      boolean boolean0 = dOMPGPData0.equalsContent(linkedList0, linkedList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      boolean boolean0 = dOMPGPData0.isFeatureSupported("org.apache.jcp.xml.dsig.internal.dom.DOMStructure");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSignatureMethod.SHA512withECDSA dOMSignatureMethod_SHA512withECDSA0 = new DOMSignatureMethod.SHA512withECDSA(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMSignatureMethod_SHA512withECDSA0.isFeatureSupported((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMStructure", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("=t6RGRSq");
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMPGPData0.equalsContent((List<XMLStructure>) null, (List<XMLStructure>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMStructure", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("]iZVib;q");
      DOMSignatureMethod.SHA1withRSAandMGF1 dOMSignatureMethod_SHA1withRSAandMGF1_0 = new DOMSignatureMethod.SHA1withRSAandMGF1(iIOMetadataNode0);
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      LinkedList<XMLStructure> linkedList0 = new LinkedList<XMLStructure>();
      linkedList0.add((XMLStructure) dOMSignatureMethod_SHA1withRSAandMGF1_0);
      LinkedList<XMLStructure> linkedList1 = new LinkedList<XMLStructure>();
      linkedList1.add((XMLStructure) dOMPGPData0);
      boolean boolean0 = dOMPGPData0.equalsContent(linkedList0, linkedList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("]iZVib;q");
      DOMSignatureMethod.SHA1withRSAandMGF1 dOMSignatureMethod_SHA1withRSAandMGF1_0 = new DOMSignatureMethod.SHA1withRSAandMGF1(iIOMetadataNode0);
      LinkedList<XMLStructure> linkedList0 = new LinkedList<XMLStructure>();
      linkedList0.add((XMLStructure) dOMSignatureMethod_SHA1withRSAandMGF1_0);
      boolean boolean0 = dOMSignatureMethod_SHA1withRSAandMGF1_0.equalsContent(linkedList0, linkedList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMSignatureMethod.SHA1withRSAandMGF1 dOMSignatureMethod_SHA1withRSAandMGF1_0 = new DOMSignatureMethod.SHA1withRSAandMGF1(iIOMetadataNode0);
      DOMPGPData dOMPGPData0 = new DOMPGPData(iIOMetadataNode0);
      LinkedList<XMLStructure> linkedList0 = new LinkedList<XMLStructure>();
      linkedList0.add((XMLStructure) dOMSignatureMethod_SHA1withRSAandMGF1_0);
      LinkedList<XMLStructure> linkedList1 = new LinkedList<XMLStructure>();
      boolean boolean0 = dOMPGPData0.equalsContent(linkedList0, linkedList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMHMACSignatureMethod.SHA384 dOMHMACSignatureMethod_SHA384_0 = new DOMHMACSignatureMethod.SHA384(iIOMetadataNode0);
      byte[] byteArray0 = new byte[8];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "");
      KeySelector keySelector0 = KeySelector.singletonKeySelector(secretKeySpec0);
      DOMSignContext dOMSignContext0 = new DOMSignContext(keySelector0, iIOMetadataNode0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMHMACSignatureMethod_SHA384_0.marshal(iIOMetadataNode0, "", dOMSignContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMUtils", e);
      }
  }
}
