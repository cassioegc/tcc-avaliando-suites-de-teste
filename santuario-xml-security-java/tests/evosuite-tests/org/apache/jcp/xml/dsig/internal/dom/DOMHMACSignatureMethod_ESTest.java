/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 13 22:46:22 GMT 2021
 */

package org.apache.jcp.xml.dsig.internal.dom;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.math.BigInteger;
import java.security.InvalidAlgorithmParameterException;
import java.security.spec.AlgorithmParameterSpec;
import java.security.spec.RSAKeyGenParameterSpec;
import java.util.HashMap;
import javax.crypto.spec.SecretKeySpec;
import javax.imageio.metadata.IIOMetadataNode;
import javax.xml.crypto.dsig.SignedInfo;
import javax.xml.crypto.dsig.XMLValidateContext;
import javax.xml.crypto.dsig.dom.DOMSignContext;
import javax.xml.crypto.dsig.spec.HMACParameterSpec;
import javax.xml.crypto.dsig.spec.SignatureMethodParameterSpec;
import javax.xml.crypto.dsig.spec.XPathFilterParameterSpec;
import org.apache.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod;
import org.apache.jcp.xml.dsig.internal.dom.DOMRSAPSSSignatureMethod;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.w3c.dom.Element;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DOMHMACSignatureMethod_ESTest extends DOMHMACSignatureMethod_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.SHA512 dOMHMACSignatureMethod_SHA512_0 = new DOMHMACSignatureMethod.SHA512(iIOMetadataNode0);
      HMACParameterSpec hMACParameterSpec0 = new HMACParameterSpec((-1398));
      boolean boolean0 = dOMHMACSignatureMethod_SHA512_0.paramsEqual(hMACParameterSpec0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DOMHMACSignatureMethod.SHA384 dOMHMACSignatureMethod_SHA384_0 = new DOMHMACSignatureMethod.SHA384((AlgorithmParameterSpec) null);
      AlgorithmParameterSpec algorithmParameterSpec0 = dOMHMACSignatureMethod_SHA384_0.getParameterSpec();
      assertNull(algorithmParameterSpec0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      HMACParameterSpec hMACParameterSpec0 = new HMACParameterSpec(2484);
      DOMHMACSignatureMethod.SHA224 dOMHMACSignatureMethod_SHA224_0 = new DOMHMACSignatureMethod.SHA224(hMACParameterSpec0);
      AlgorithmParameterSpec algorithmParameterSpec0 = dOMHMACSignatureMethod_SHA224_0.getParameterSpec();
      assertSame(algorithmParameterSpec0, hMACParameterSpec0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.SHA1 dOMHMACSignatureMethod_SHA1_0 = new DOMHMACSignatureMethod.SHA1(iIOMetadataNode0);
      assertEquals("http://www.w3.org/2000/09/xmldsig#hmac-sha1", dOMHMACSignatureMethod_SHA1_0.getAlgorithm());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.SHA512 dOMHMACSignatureMethod_SHA512_0 = new DOMHMACSignatureMethod.SHA512(iIOMetadataNode0);
      HMACParameterSpec hMACParameterSpec0 = new HMACParameterSpec(2787);
      boolean boolean0 = dOMHMACSignatureMethod_SHA512_0.paramsEqual(hMACParameterSpec0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.RIPEMD160 dOMHMACSignatureMethod_RIPEMD160_0 = new DOMHMACSignatureMethod.RIPEMD160(iIOMetadataNode0);
      BigInteger bigInteger0 = RSAKeyGenParameterSpec.F0;
      HashMap<Object, String> hashMap0 = new HashMap<Object, String>();
      XPathFilterParameterSpec xPathFilterParameterSpec0 = new XPathFilterParameterSpec("7s\u0003WK#1;n", hashMap0);
      RSAKeyGenParameterSpec rSAKeyGenParameterSpec0 = new RSAKeyGenParameterSpec(224, bigInteger0, xPathFilterParameterSpec0);
      boolean boolean0 = dOMHMACSignatureMethod_RIPEMD160_0.paramsEqual(rSAKeyGenParameterSpec0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMHMACSignatureMethod.SHA224 dOMHMACSignatureMethod_SHA224_0 = new DOMHMACSignatureMethod.SHA224(iIOMetadataNode0);
      byte[] byteArray0 = new byte[3];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "Vm");
      DOMSignContext dOMSignContext0 = new DOMSignContext(secretKeySpec0, iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMHMACSignatureMethod_SHA224_0.sign(secretKeySpec0, (SignedInfo) null, dOMSignContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DOMHMACSignatureMethod.SHA256 dOMHMACSignatureMethod_SHA256_0 = new DOMHMACSignatureMethod.SHA256((AlgorithmParameterSpec) null);
      HMACParameterSpec hMACParameterSpec0 = new HMACParameterSpec(2484);
      dOMHMACSignatureMethod_SHA256_0.checkParams(hMACParameterSpec0);
      boolean boolean0 = dOMHMACSignatureMethod_SHA256_0.paramsEqual(hMACParameterSpec0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DOMHMACSignatureMethod.SHA256 dOMHMACSignatureMethod_SHA256_0 = new DOMHMACSignatureMethod.SHA256((AlgorithmParameterSpec) null);
      dOMHMACSignatureMethod_SHA256_0.getAlgorithmType();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.SHA512 dOMHMACSignatureMethod_SHA512_0 = new DOMHMACSignatureMethod.SHA512(iIOMetadataNode0);
      // Undeclared exception!
      try { 
        dOMHMACSignatureMethod_SHA512_0.unmarshalParams(iIOMetadataNode0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DOMHMACSignatureMethod.SHA1 dOMHMACSignatureMethod_SHA1_0 = new DOMHMACSignatureMethod.SHA1((AlgorithmParameterSpec) null);
      boolean boolean0 = dOMHMACSignatureMethod_SHA1_0.paramsEqual((AlgorithmParameterSpec) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DOMHMACSignatureMethod.SHA256 dOMHMACSignatureMethod_SHA256_0 = new DOMHMACSignatureMethod.SHA256((AlgorithmParameterSpec) null);
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("org.apache.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod$SHA256");
      // Undeclared exception!
      try { 
        dOMHMACSignatureMethod_SHA256_0.marshalParams(iIOMetadataNode0, "S");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DOMHMACSignatureMethod.SHA1 dOMHMACSignatureMethod_SHA1_0 = new DOMHMACSignatureMethod.SHA1((AlgorithmParameterSpec) null);
      String string0 = dOMHMACSignatureMethod_SHA1_0.getJCAAlgorithm();
      assertEquals("HmacSHA1", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DOMHMACSignatureMethod.SHA1 dOMHMACSignatureMethod_SHA1_0 = new DOMHMACSignatureMethod.SHA1((AlgorithmParameterSpec) null);
      String string0 = dOMHMACSignatureMethod_SHA1_0.getAlgorithm();
      assertEquals("http://www.w3.org/2000/09/xmldsig#hmac-sha1", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DOMHMACSignatureMethod.SHA1 dOMHMACSignatureMethod_SHA1_0 = new DOMHMACSignatureMethod.SHA1((AlgorithmParameterSpec) null);
      int int0 = dOMHMACSignatureMethod_SHA1_0.getDigestLength();
      assertEquals(160, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMHMACSignatureMethod.SHA384 dOMHMACSignatureMethod_SHA384_0 = new DOMHMACSignatureMethod.SHA384(iIOMetadataNode0);
      int int0 = dOMHMACSignatureMethod_SHA384_0.getDigestLength();
      assertEquals(384, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DOMHMACSignatureMethod.SHA384 dOMHMACSignatureMethod_SHA384_0 = new DOMHMACSignatureMethod.SHA384((AlgorithmParameterSpec) null);
      DOMRSAPSSSignatureMethod.RSAPSS dOMRSAPSSSignatureMethod_RSAPSS0 = new DOMRSAPSSSignatureMethod.RSAPSS((AlgorithmParameterSpec) null);
      SignatureMethodParameterSpec signatureMethodParameterSpec0 = dOMRSAPSSSignatureMethod_RSAPSS0.unmarshalParams((Element) null);
      try { 
        dOMHMACSignatureMethod_SHA384_0.checkParams(signatureMethodParameterSpec0);
        fail("Expecting exception: InvalidAlgorithmParameterException");
      
      } catch(InvalidAlgorithmParameterException e) {
         //
         // params must be of type HMACParameterSpec
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.SHA384 dOMHMACSignatureMethod_SHA384_0 = new DOMHMACSignatureMethod.SHA384(iIOMetadataNode0);
      String string0 = dOMHMACSignatureMethod_SHA384_0.getJCAAlgorithm();
      assertEquals("HmacSHA384", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMHMACSignatureMethod.SHA384 dOMHMACSignatureMethod_SHA384_0 = new DOMHMACSignatureMethod.SHA384(iIOMetadataNode0);
      String string0 = dOMHMACSignatureMethod_SHA384_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#hmac-sha384", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DOMHMACSignatureMethod.SHA256 dOMHMACSignatureMethod_SHA256_0 = new DOMHMACSignatureMethod.SHA256((AlgorithmParameterSpec) null);
      String string0 = dOMHMACSignatureMethod_SHA256_0.getJCAAlgorithm();
      assertEquals("HmacSHA256", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DOMHMACSignatureMethod.SHA256 dOMHMACSignatureMethod_SHA256_0 = new DOMHMACSignatureMethod.SHA256((AlgorithmParameterSpec) null);
      int int0 = dOMHMACSignatureMethod_SHA256_0.getDigestLength();
      assertEquals(256, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.SHA256 dOMHMACSignatureMethod_SHA256_0 = new DOMHMACSignatureMethod.SHA256(iIOMetadataNode0);
      String string0 = dOMHMACSignatureMethod_SHA256_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#hmac-sha256", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMHMACSignatureMethod.SHA224 dOMHMACSignatureMethod_SHA224_0 = new DOMHMACSignatureMethod.SHA224(iIOMetadataNode0);
      String string0 = dOMHMACSignatureMethod_SHA224_0.getJCAAlgorithm();
      assertEquals("HmacSHA224", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMHMACSignatureMethod.SHA224 dOMHMACSignatureMethod_SHA224_0 = new DOMHMACSignatureMethod.SHA224(iIOMetadataNode0);
      int int0 = dOMHMACSignatureMethod_SHA224_0.getDigestLength();
      assertEquals(224, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode("");
      DOMHMACSignatureMethod.SHA224 dOMHMACSignatureMethod_SHA224_0 = new DOMHMACSignatureMethod.SHA224(iIOMetadataNode0);
      String string0 = dOMHMACSignatureMethod_SHA224_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#hmac-sha224", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DOMHMACSignatureMethod.RIPEMD160 dOMHMACSignatureMethod_RIPEMD160_0 = new DOMHMACSignatureMethod.RIPEMD160((AlgorithmParameterSpec) null);
      String string0 = dOMHMACSignatureMethod_RIPEMD160_0.getJCAAlgorithm();
      assertEquals("HMACRIPEMD160", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.RIPEMD160 dOMHMACSignatureMethod_RIPEMD160_0 = new DOMHMACSignatureMethod.RIPEMD160(iIOMetadataNode0);
      byte[] byteArray0 = new byte[1];
      SecretKeySpec secretKeySpec0 = new SecretKeySpec(byteArray0, "7s\u0003WK#1;n");
      // Undeclared exception!
      try { 
        dOMHMACSignatureMethod_RIPEMD160_0.verify(secretKeySpec0, (SignedInfo) null, byteArray0, (XMLValidateContext) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DOMHMACSignatureMethod.RIPEMD160 dOMHMACSignatureMethod_RIPEMD160_0 = new DOMHMACSignatureMethod.RIPEMD160((AlgorithmParameterSpec) null);
      int int0 = dOMHMACSignatureMethod_RIPEMD160_0.getDigestLength();
      assertEquals(160, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DOMHMACSignatureMethod.RIPEMD160 dOMHMACSignatureMethod_RIPEMD160_0 = new DOMHMACSignatureMethod.RIPEMD160((AlgorithmParameterSpec) null);
      String string0 = dOMHMACSignatureMethod_RIPEMD160_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#hmac-ripemd160", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode((String) null);
      DOMHMACSignatureMethod.SHA512 dOMHMACSignatureMethod_SHA512_0 = new DOMHMACSignatureMethod.SHA512(iIOMetadataNode0);
      String string0 = dOMHMACSignatureMethod_SHA512_0.getJCAAlgorithm();
      assertEquals("HmacSHA512", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      IIOMetadataNode iIOMetadataNode0 = new IIOMetadataNode();
      DOMHMACSignatureMethod.SHA512 dOMHMACSignatureMethod_SHA512_0 = new DOMHMACSignatureMethod.SHA512(iIOMetadataNode0);
      String string0 = dOMHMACSignatureMethod_SHA512_0.getAlgorithm();
      assertEquals("http://www.w3.org/2001/04/xmldsig-more#hmac-sha512", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DOMHMACSignatureMethod.SHA512 dOMHMACSignatureMethod_SHA512_0 = new DOMHMACSignatureMethod.SHA512((AlgorithmParameterSpec) null);
      int int0 = dOMHMACSignatureMethod_SHA512_0.getDigestLength();
      assertEquals(512, int0);
  }
}
