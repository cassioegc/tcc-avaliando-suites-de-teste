/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:08:01 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.GlossaryImportResult;
import com.ibm.watson.data.client.model.ImportMessage;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GlossaryImportResult_ESTest extends GlossaryImportResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      glossaryImportResult0.workflowId("");
      String string0 = glossaryImportResult0.getWorkflowId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      glossaryImportResult0.putOperationsCountItem("cgfM0E.v:nVdlFm", hashMap0);
      Map<String, Map<String, Long>> map0 = glossaryImportResult0.getOperationsCount();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      Stack<ImportMessage> stack0 = new Stack<ImportMessage>();
      GlossaryImportResult glossaryImportResult1 = glossaryImportResult0.messages(stack0);
      List<ImportMessage> list0 = glossaryImportResult1.getMessages();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      ImportMessage importMessage0 = new ImportMessage();
      GlossaryImportResult glossaryImportResult1 = glossaryImportResult0.addMessagesItem(importMessage0);
      List<ImportMessage> list0 = glossaryImportResult1.getMessages();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      ImportMessage importMessage0 = new ImportMessage();
      glossaryImportResult0.addMessagesItem(importMessage0);
      String string0 = glossaryImportResult0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      GlossaryImportResult glossaryImportResult1 = new GlossaryImportResult();
      assertTrue(glossaryImportResult1.equals((Object)glossaryImportResult0));
      
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      glossaryImportResult1.putOperationsCountItem("N", hashMap0);
      boolean boolean0 = glossaryImportResult1.equals(glossaryImportResult0);
      assertFalse(glossaryImportResult1.equals((Object)glossaryImportResult0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      GlossaryImportResult glossaryImportResult1 = new GlossaryImportResult();
      boolean boolean0 = glossaryImportResult1.equals(glossaryImportResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      boolean boolean0 = glossaryImportResult0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      boolean boolean0 = glossaryImportResult0.equals(glossaryImportResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      boolean boolean0 = glossaryImportResult0.equals("!t,=_hkYd)nVJw");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      HashMap<String, Long> hashMap0 = new HashMap<String, Long>();
      GlossaryImportResult glossaryImportResult1 = glossaryImportResult0.putOperationsCountItem("!t,=_hkYd)nVJw", hashMap0);
      GlossaryImportResult glossaryImportResult2 = glossaryImportResult0.putOperationsCountItem("!t,=_hkYd)nVJw", hashMap0);
      assertSame(glossaryImportResult2, glossaryImportResult1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      ImportMessage importMessage0 = new ImportMessage();
      GlossaryImportResult glossaryImportResult1 = glossaryImportResult0.addMessagesItem(importMessage0);
      GlossaryImportResult glossaryImportResult2 = new GlossaryImportResult();
      boolean boolean0 = glossaryImportResult2.equals(glossaryImportResult1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      ArrayList<ImportMessage> arrayList0 = new ArrayList<ImportMessage>();
      glossaryImportResult0.setMessages(arrayList0);
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      String string0 = glossaryImportResult0.getWorkflowId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      glossaryImportResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      ArrayList<ImportMessage> arrayList0 = new ArrayList<ImportMessage>();
      GlossaryImportResult glossaryImportResult1 = glossaryImportResult0.messages(arrayList0);
      glossaryImportResult1.addMessagesItem((ImportMessage) null);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      Map<String, Map<String, Long>> map0 = glossaryImportResult0.getOperationsCount();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      HashMap<String, Map<String, Long>> hashMap0 = new HashMap<String, Map<String, Long>>();
      glossaryImportResult0.setOperationsCount(hashMap0);
      Map<String, Map<String, Long>> map0 = glossaryImportResult0.getOperationsCount();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      GlossaryImportResult glossaryImportResult1 = glossaryImportResult0.operationsCount((Map<String, Map<String, Long>>) null);
      assertSame(glossaryImportResult0, glossaryImportResult1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      glossaryImportResult0.workflowId("J@");
      GlossaryImportResult glossaryImportResult1 = new GlossaryImportResult();
      boolean boolean0 = glossaryImportResult0.equals(glossaryImportResult1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      List<ImportMessage> list0 = glossaryImportResult0.getMessages();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GlossaryImportResult glossaryImportResult0 = new GlossaryImportResult();
      glossaryImportResult0.setWorkflowId("!t,=_hkYd)nVJw");
      String string0 = glossaryImportResult0.getWorkflowId();
      assertEquals("!t,=_hkYd)nVJw", string0);
  }
}
