/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:11:12 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.ReferenceDataValueEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceDataValueEntity_ESTest extends ReferenceDataValueEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      referenceDataValueEntity0.setValue("Sn^XC&^>g&w");
      Object object0 = referenceDataValueEntity0.getValue();
      assertEquals("Sn^XC&^>g&w", object0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      ReferenceDataValueEntity referenceDataValueEntity1 = referenceDataValueEntity0.description("    description: ");
      String string0 = referenceDataValueEntity1.getDescription();
      assertEquals("    description: ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      referenceDataValueEntity0.setDescription("");
      String string0 = referenceDataValueEntity0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      referenceDataValueEntity0.setCode("    description: ");
      String string0 = referenceDataValueEntity0.getCode();
      assertEquals("    description: ", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      referenceDataValueEntity0.code("");
      String string0 = referenceDataValueEntity0.getCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      // Undeclared exception!
      try { 
        referenceDataValueEntity0.toString((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.ReferenceDataValueEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      StringBuilder stringBuilder0 = new StringBuilder(877);
      referenceDataValueEntity0.toString(stringBuilder0);
      assertEquals("    code: null\n    value: null\n    description: null\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      Object object0 = new Object();
      String string0 = referenceDataValueEntity0.toIndentedString(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      ReferenceDataValueEntity referenceDataValueEntity1 = new ReferenceDataValueEntity();
      boolean boolean0 = referenceDataValueEntity0.equals(referenceDataValueEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      boolean boolean0 = referenceDataValueEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      boolean boolean0 = referenceDataValueEntity0.equals(referenceDataValueEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      Object object0 = new Object();
      boolean boolean0 = referenceDataValueEntity0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      referenceDataValueEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      Object object0 = referenceDataValueEntity0.getValue();
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      String string0 = referenceDataValueEntity0.toString();
      assertEquals("class ResponseReferenceDataValueEntity {\n    code: null\n    value: null\n    description: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      String string0 = referenceDataValueEntity0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      String string0 = referenceDataValueEntity0.getCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ReferenceDataValueEntity referenceDataValueEntity0 = new ReferenceDataValueEntity();
      ReferenceDataValueEntity referenceDataValueEntity1 = referenceDataValueEntity0.value("");
      assertSame(referenceDataValueEntity0, referenceDataValueEntity1);
  }
}
