/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:40:21 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.RDSResource;
import com.ibm.watson.data.client.model.RDVImportInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RDSResource_ESTest extends RDSResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDSResource0.log(rDVImportInfo0);
      RDVImportInfo rDVImportInfo1 = rDSResource0.getLog();
      assertNull(rDVImportInfo1.getValuesSkipped());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      RDSResource rDSResource1 = new RDSResource();
      boolean boolean0 = rDSResource0.equals(rDSResource1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      rDSResource0.globalId("pEuLI<)");
      RDSResource rDSResource1 = new RDSResource();
      boolean boolean0 = rDSResource0.equals(rDSResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      boolean boolean0 = rDSResource0.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      boolean boolean0 = rDSResource0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      boolean boolean0 = rDSResource0.equals(rDSResource0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      RDVImportInfo rDVImportInfo0 = rDSResource0.getLog();
      assertNull(rDVImportInfo0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDSResource0.log(rDVImportInfo0);
      RDSResource rDSResource1 = new RDSResource();
      boolean boolean0 = rDSResource0.equals(rDSResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      String string0 = rDSResource0.toString();
      assertEquals("class RDSResource {\n    href: null\n    artifactId: null\n    versionId: null\n    workflowId: null\n    globalId: null\n    entityType: null\n    log: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      rDSResource0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RDSResource rDSResource0 = new RDSResource();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDSResource0.setLog(rDVImportInfo0);
      assertNull(rDSResource0.getVersionId());
  }
}
