/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:40:11 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.Member;
import com.ibm.watson.data.client.model.MemberHeader;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Member_ESTest extends Member_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Member member0 = new Member();
      member0.setRole("t");
      String string0 = member0.getRole();
      assertEquals("t", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Member member0 = new Member();
      Member member1 = member0.href("com.fasterxml.jackson.annotation.JsonInclude$Include");
      String string0 = member1.getHref();
      assertEquals("com.fasterxml.jackson.annotation.JsonInclude$Include", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Member member0 = new Member();
      Member member1 = member0.createTime("Ch8P");
      String string0 = member1.getCreateTime();
      assertEquals("Ch8P", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Member member0 = new Member();
      Member member1 = member0.createTime("");
      String string0 = member1.getCreateTime();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Member member0 = new Member();
      member0.accessGroupId("com.fasterxml.jackson.annotation.JsonInclude$Include");
      String string0 = member0.getAccessGroupId();
      assertEquals("com.fasterxml.jackson.annotation.JsonInclude$Include", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Member member0 = new Member();
      member0.setAccessGroupId("");
      String string0 = member0.getAccessGroupId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Member member0 = new Member();
      Member member1 = new Member();
      assertTrue(member1.equals((Object)member0));
      
      member1.href("J2BiWjiu<.sj?|KK");
      boolean boolean0 = member0.equals(member1);
      assertFalse(member1.equals((Object)member0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Member member0 = new Member();
      member0.setAccessGroupId("");
      member0.role("");
      Member member1 = new Member();
      member1.setAccessGroupId("");
      boolean boolean0 = member0.equals(member1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Member member0 = new Member();
      member0.setAccessGroupId("");
      Member member1 = new Member();
      assertFalse(member1.equals((Object)member0));
      
      member1.setAccessGroupId("");
      boolean boolean0 = member0.equals(member1);
      assertTrue(member1.equals((Object)member0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Member member0 = new Member();
      MemberHeader memberHeader0 = member0.userIamId("");
      Member member1 = new Member();
      boolean boolean0 = memberHeader0.equals(member1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Member member0 = new Member();
      boolean boolean0 = member0.equals("class Member {\n    userId: null\n    userIamId: null\n    accessGroupId: null\n    role: null\n    href: null\n    createTime: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Member member0 = new Member();
      boolean boolean0 = member0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Member member0 = new Member();
      boolean boolean0 = member0.equals(member0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Member member0 = new Member();
      String string0 = member0.getRole();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Member member0 = new Member();
      String string0 = member0.getAccessGroupId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Member member0 = new Member();
      member0.setAccessGroupId("");
      Member member1 = new Member();
      boolean boolean0 = member0.equals(member1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Member member0 = new Member();
      Member member1 = member0.href("");
      String string0 = member1.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Member member0 = new Member();
      member0.setCreateTime("class Member {\n    userId: null\n    userIamId: null\n    accessGroupId: null\n    role: null\n    href: null\n    createTime: null\n}");
      assertNull(member0.getUserId());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Member member0 = new Member();
      String string0 = member0.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Member member0 = new Member();
      member0.setHref("]2\nj ");
      assertNull(member0.getUserIamId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Member member0 = new Member();
      member0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Member member0 = new Member();
      String string0 = member0.getCreateTime();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Member member0 = new Member();
      member0.createTime("");
      Member member1 = new Member();
      boolean boolean0 = member0.equals(member1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Member member0 = new Member();
      member0.role("");
      String string0 = member0.getRole();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Member member0 = new Member();
      String string0 = member0.toString();
      assertEquals("class Member {\n    userId: null\n    userIamId: null\n    accessGroupId: null\n    role: null\n    href: null\n    createTime: null\n}", string0);
  }
}
