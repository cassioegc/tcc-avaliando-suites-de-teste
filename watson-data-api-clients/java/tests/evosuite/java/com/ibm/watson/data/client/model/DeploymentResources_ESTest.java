/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:09:22 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.DeploymentResource;
import com.ibm.watson.data.client.model.DeploymentResources;
import com.ibm.watson.data.client.model.DeploymentResourcesDetails;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeploymentResources_ESTest extends DeploymentResources_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      LinkedList<DeploymentResource> linkedList0 = new LinkedList<DeploymentResource>();
      deploymentResources0.resources(linkedList0);
      List<DeploymentResource> list0 = deploymentResources0.getResources();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResource deploymentResource0 = new DeploymentResource();
      deploymentResources0.addResourcesItem(deploymentResource0);
      List<DeploymentResource> list0 = deploymentResources0.getResources();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResource deploymentResource0 = new DeploymentResource();
      DeploymentResources deploymentResources1 = deploymentResources0.addResourcesItem(deploymentResource0);
      DeploymentResourcesDetails deploymentResourcesDetails0 = new DeploymentResourcesDetails();
      deploymentResources1.system(deploymentResourcesDetails0);
      DeploymentResources deploymentResources2 = new DeploymentResources();
      DeploymentResources deploymentResources3 = deploymentResources2.addResourcesItem(deploymentResource0);
      boolean boolean0 = deploymentResources1.equals(deploymentResources3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResource deploymentResource0 = new DeploymentResource();
      DeploymentResources deploymentResources1 = deploymentResources0.addResourcesItem(deploymentResource0);
      DeploymentResources deploymentResources2 = new DeploymentResources();
      assertFalse(deploymentResources2.equals((Object)deploymentResources0));
      
      DeploymentResources deploymentResources3 = deploymentResources2.addResourcesItem(deploymentResource0);
      boolean boolean0 = deploymentResources1.equals(deploymentResources3);
      assertTrue(deploymentResources2.equals((Object)deploymentResources0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      Long long0 = new Long(45L);
      deploymentResources0.totalCount(long0);
      DeploymentResources deploymentResources1 = new DeploymentResources();
      boolean boolean0 = deploymentResources0.equals(deploymentResources1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResource deploymentResource0 = new DeploymentResource();
      boolean boolean0 = deploymentResources0.equals(deploymentResource0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      boolean boolean0 = deploymentResources0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      boolean boolean0 = deploymentResources0.equals(deploymentResources0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResource deploymentResource0 = new DeploymentResource();
      DeploymentResources deploymentResources1 = deploymentResources0.addResourcesItem(deploymentResource0);
      DeploymentResources deploymentResources2 = new DeploymentResources();
      boolean boolean0 = deploymentResources1.equals(deploymentResources2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResource deploymentResource0 = new DeploymentResource();
      deploymentResources0.addResourcesItem(deploymentResource0);
      DeploymentResources deploymentResources1 = deploymentResources0.addResourcesItem(deploymentResource0);
      assertNull(deploymentResources1.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResourcesDetails deploymentResourcesDetails0 = new DeploymentResourcesDetails();
      DeploymentResources deploymentResources1 = deploymentResources0.system(deploymentResourcesDetails0);
      DeploymentResourcesDetails deploymentResourcesDetails1 = deploymentResources1.getSystem();
      assertSame(deploymentResourcesDetails1, deploymentResourcesDetails0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      String string0 = deploymentResources0.toString();
      assertEquals("class DeploymentResources {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    previous: null\n    resources: null\n    system: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      deploymentResources0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResourcesDetails deploymentResourcesDetails0 = new DeploymentResourcesDetails();
      deploymentResources0.setSystem(deploymentResourcesDetails0);
      assertNull(deploymentResources0.getTotalCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      DeploymentResourcesDetails deploymentResourcesDetails0 = deploymentResources0.getSystem();
      assertNull(deploymentResourcesDetails0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      deploymentResources0.setResources((List<DeploymentResource>) null);
      assertNull(deploymentResources0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DeploymentResources deploymentResources0 = new DeploymentResources();
      List<DeploymentResource> list0 = deploymentResources0.getResources();
      DeploymentResources deploymentResources1 = deploymentResources0.resources(list0);
      assertSame(deploymentResources0, deploymentResources1);
  }
}
