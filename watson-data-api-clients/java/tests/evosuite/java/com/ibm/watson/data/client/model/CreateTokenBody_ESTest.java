/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:50:38 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.CreateTokenBody;
import com.ibm.watson.data.client.model.TokenScope;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CreateTokenBody_ESTest extends CreateTokenBody_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      createTokenBody0.scopes((List<TokenScope>) null);
      List<TokenScope> list0 = createTokenBody0.getScopes();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      createTokenBody0.setName("|0G]l D2<0W9,t2{");
      String string0 = createTokenBody0.getName();
      assertEquals("|0G]l D2<0W9,t2{", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      TokenScope tokenScope0 = new TokenScope();
      CreateTokenBody createTokenBody1 = createTokenBody0.scopes((List<TokenScope>) null);
      // Undeclared exception!
      try { 
        createTokenBody1.addScopesItem(tokenScope0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.CreateTokenBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      CreateTokenBody createTokenBody1 = new CreateTokenBody();
      boolean boolean0 = createTokenBody0.equals(createTokenBody1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      createTokenBody0.name("class CreateTokenBody {\n    name: null\n    scopes: java.util.ArrayList@0000000002\n}");
      CreateTokenBody createTokenBody1 = new CreateTokenBody();
      boolean boolean0 = createTokenBody1.equals(createTokenBody0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      TokenScope tokenScope0 = new TokenScope();
      boolean boolean0 = createTokenBody0.equals(tokenScope0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      boolean boolean0 = createTokenBody0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      boolean boolean0 = createTokenBody0.equals(createTokenBody0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      LinkedList<TokenScope> linkedList0 = new LinkedList<TokenScope>();
      TokenScope tokenScope0 = new TokenScope();
      linkedList0.add(tokenScope0);
      CreateTokenBody createTokenBody1 = createTokenBody0.scopes(linkedList0);
      CreateTokenBody createTokenBody2 = new CreateTokenBody();
      boolean boolean0 = createTokenBody1.equals(createTokenBody2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      createTokenBody0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      createTokenBody0.name("");
      String string0 = createTokenBody0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      String string0 = createTokenBody0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      TokenScope tokenScope0 = new TokenScope();
      CreateTokenBody createTokenBody1 = createTokenBody0.addScopesItem(tokenScope0);
      List<TokenScope> list0 = createTokenBody1.getScopes();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      List<TokenScope> list0 = createTokenBody0.getScopes();
      createTokenBody0.setScopes(list0);
      assertNull(createTokenBody0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateTokenBody createTokenBody0 = new CreateTokenBody();
      String string0 = createTokenBody0.getName();
      assertNull(string0);
  }
}
