/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:32:51 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AssetPublishedFrom;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AssetPublishedFrom_ESTest extends AssetPublishedFrom_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      assetPublishedFrom0.setSourceUrl("1mM!TbBg9$");
      String string0 = assetPublishedFrom0.getSourceUrl();
      assertEquals("1mM!TbBg9$", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      AssetPublishedFrom assetPublishedFrom1 = assetPublishedFrom0.sourceUrl("");
      String string0 = assetPublishedFrom1.getSourceUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      assetPublishedFrom0.projectId("com.fasterxml.jackson.annotation.JsonInclude$Include");
      String string0 = assetPublishedFrom0.getProjectId();
      assertEquals("com.fasterxml.jackson.annotation.JsonInclude$Include", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      assetPublishedFrom0.setProjectId("");
      String string0 = assetPublishedFrom0.getProjectId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      AssetPublishedFrom assetPublishedFrom1 = new AssetPublishedFrom();
      boolean boolean0 = assetPublishedFrom0.equals(assetPublishedFrom1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      boolean boolean0 = assetPublishedFrom0.equals("com.fasterxml.jackson.annotation.JsonInclude$Include");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      boolean boolean0 = assetPublishedFrom0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      boolean boolean0 = assetPublishedFrom0.equals(assetPublishedFrom0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      assetPublishedFrom0.sourceUrl("com.fasterxml.jackson.annotation.JsonInclude$Include");
      AssetPublishedFrom assetPublishedFrom1 = new AssetPublishedFrom();
      boolean boolean0 = assetPublishedFrom0.equals(assetPublishedFrom1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      String string0 = assetPublishedFrom0.getProjectId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      String string0 = assetPublishedFrom0.toString();
      assertEquals("class AssetPublishedFrom {\n    projectId: null\n    sourceUrl: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      assetPublishedFrom0.setSourceUrl("1mM!TbBg9$");
      String string0 = assetPublishedFrom0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      assetPublishedFrom0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      assetPublishedFrom0.projectId("com.fasterxml.jackson.annotation.JsonInclude$Include");
      AssetPublishedFrom assetPublishedFrom1 = new AssetPublishedFrom();
      boolean boolean0 = assetPublishedFrom0.equals(assetPublishedFrom1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AssetPublishedFrom assetPublishedFrom0 = new AssetPublishedFrom();
      String string0 = assetPublishedFrom0.getSourceUrl();
      assertNull(string0);
  }
}
