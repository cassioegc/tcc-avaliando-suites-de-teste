/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 20:28:30 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.CreateUserParamsBody;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CreateUserParamsBody_ESTest extends CreateUserParamsBody_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.setUserRoles((List<String>) null);
      List<String> list0 = createUserParamsBody0.getUserRoles();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.addUserRolesItem("]C\":>kq(asMDb67E");
      List<String> list0 = createUserParamsBody0.getUserRoles();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.userName("QB8l");
      String string0 = createUserParamsBody0.getUserName();
      assertEquals("QB8l", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      CreateUserParamsBody createUserParamsBody1 = createUserParamsBody0.userName("");
      String string0 = createUserParamsBody1.getUserName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      CreateUserParamsBody createUserParamsBody1 = createUserParamsBody0.email("Ls4X1ct,|A~kuU_3>");
      String string0 = createUserParamsBody1.getEmail();
      assertEquals("Ls4X1ct,|A~kuU_3>", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.setEmail("");
      String string0 = createUserParamsBody0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      CreateUserParamsBody createUserParamsBody1 = createUserParamsBody0.displayName("");
      String string0 = createUserParamsBody1.getDisplayName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, 506);
      List<String> list0 = xmlTest0.getExcludedGroups();
      createUserParamsBody0.userRoles(list0);
      // Undeclared exception!
      try { 
        createUserParamsBody0.addUserRolesItem("$f`XIz}x ^z0mvRl");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.setUserRoles((List<String>) null);
      // Undeclared exception!
      try { 
        createUserParamsBody0.addUserRolesItem("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.CreateUserParamsBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      CreateUserParamsBody createUserParamsBody1 = new CreateUserParamsBody();
      boolean boolean0 = createUserParamsBody1.equals(createUserParamsBody0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.userName("}I`b|rA=ka&{");
      CreateUserParamsBody createUserParamsBody1 = new CreateUserParamsBody();
      boolean boolean0 = createUserParamsBody1.equals(createUserParamsBody0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      CreateUserParamsBody createUserParamsBody1 = new CreateUserParamsBody();
      assertTrue(createUserParamsBody1.equals((Object)createUserParamsBody0));
      
      createUserParamsBody0.email("class CreateUserParamsBody {\n    displayName: null\n    email: null\n    userName: null\n    userRoles: java.util.ArrayList@0000000002\n}");
      boolean boolean0 = createUserParamsBody1.equals(createUserParamsBody0);
      assertFalse(createUserParamsBody1.equals((Object)createUserParamsBody0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.displayName("");
      CreateUserParamsBody createUserParamsBody1 = new CreateUserParamsBody();
      boolean boolean0 = createUserParamsBody1.equals(createUserParamsBody0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      boolean boolean0 = createUserParamsBody0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      boolean boolean0 = createUserParamsBody0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      boolean boolean0 = createUserParamsBody0.equals(createUserParamsBody0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      String string0 = createUserParamsBody0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      String string0 = createUserParamsBody0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.setUserName("_L~");
      assertEquals("_L~", createUserParamsBody0.getUserName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.setDisplayName("9hGf9^*wk");
      String string0 = createUserParamsBody0.getDisplayName();
      assertEquals("9hGf9^*wk", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      List<String> list0 = createUserParamsBody0.getUserRoles();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      CreateUserParamsBody createUserParamsBody1 = createUserParamsBody0.addUserRolesItem("]C\":>kq(asMDb67E");
      CreateUserParamsBody createUserParamsBody2 = new CreateUserParamsBody();
      boolean boolean0 = createUserParamsBody2.equals(createUserParamsBody1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      String string0 = createUserParamsBody0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      String string0 = createUserParamsBody0.getDisplayName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CreateUserParamsBody createUserParamsBody0 = new CreateUserParamsBody();
      createUserParamsBody0.hashCode();
  }
}
