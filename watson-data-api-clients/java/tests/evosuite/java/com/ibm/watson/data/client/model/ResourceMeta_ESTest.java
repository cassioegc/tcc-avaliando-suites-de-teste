/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:14:32 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.ResourceMeta;
import com.ibm.watson.data.client.model.ResourceMetaBaseCommitInfo;
import java.util.Date;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResourceMeta_ESTest extends ResourceMeta_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      Stack<String> stack0 = new Stack<String>();
      ResourceMeta resourceMeta1 = resourceMeta0.tags(stack0);
      List<String> list0 = resourceMeta1.getTags();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = resourceMeta0.addTagsItem("CdOEA3Y6*3,G");
      List<String> list0 = resourceMeta1.getTags();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.spaceId("v{");
      String string0 = resourceMeta0.getSpaceId();
      assertEquals("v{", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = resourceMeta0.spaceId("");
      String string0 = resourceMeta1.getSpaceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.rev("close() must be invoked after the channel is closed.");
      String string0 = resourceMeta0.getRev();
      assertEquals("close() must be invoked after the channel is closed.", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.setRev("");
      String string0 = resourceMeta0.getRev();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.setProjectId("");
      String string0 = resourceMeta0.getProjectId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.owner("\n");
      String string0 = resourceMeta0.getOwner();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.owner("");
      String string0 = resourceMeta0.getOwner();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.setName("charset");
      String string0 = resourceMeta0.getName();
      assertEquals("charset", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = resourceMeta0.name("");
      String string0 = resourceMeta1.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      MockDate mockDate0 = new MockDate();
      resourceMeta0.modifiedAt(mockDate0);
      Date date0 = resourceMeta0.getModifiedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.id("T\"=!0!f8Ft)s/Bak");
      String string0 = resourceMeta0.getId();
      assertEquals("T\"=!0!f8Ft)s/Bak", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.description("");
      String string0 = resourceMeta0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      MockDate mockDate0 = new MockDate(45, 45, 4096, 4096, 0, 4096);
      ResourceMeta resourceMeta1 = resourceMeta0.createdAt(mockDate0);
      Date date0 = resourceMeta1.getCreatedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.setRev("");
      String string0 = resourceMeta0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = resourceMeta0.spaceId("");
      ResourceMeta resourceMeta2 = new ResourceMeta();
      resourceMeta0.setId("");
      resourceMeta2.setId("");
      boolean boolean0 = resourceMeta2.equals(resourceMeta1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      assertTrue(resourceMeta1.equals((Object)resourceMeta0));
      
      resourceMeta0.setId("");
      resourceMeta0.addTagsItem("");
      resourceMeta1.setId("");
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      resourceMeta0.setId("");
      resourceMeta1.setId("");
      assertTrue(resourceMeta1.equals((Object)resourceMeta0));
      
      resourceMeta1.parentId("f)=6");
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      assertTrue(resourceMeta1.equals((Object)resourceMeta0));
      
      resourceMeta0.setId("");
      MockDate mockDate0 = new MockDate(4096L);
      resourceMeta1.setModifiedAt(mockDate0);
      resourceMeta1.setId("");
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      resourceMeta0.setId("");
      resourceMeta1.setId("");
      assertTrue(resourceMeta1.equals((Object)resourceMeta0));
      
      MockDate mockDate0 = new MockDate(0, 1898, 255);
      resourceMeta0.setCreatedAt(mockDate0);
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      resourceMeta0.setId("byx2Sn<';8Ny");
      resourceMeta1.setId("byx2Sn<';8Ny");
      assertTrue(resourceMeta1.equals((Object)resourceMeta0));
      
      resourceMeta0.setOwner("lzB# g4TLIJ2RD'lNkY");
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(resourceMeta1.equals((Object)resourceMeta0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      resourceMeta0.setId("");
      resourceMeta1.setId("");
      resourceMeta0.rev("");
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(resourceMeta1.equals((Object)resourceMeta0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      resourceMeta0.setId("NS1r#vajDO");
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = new ResourceMeta();
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      boolean boolean0 = resourceMeta0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      boolean boolean0 = resourceMeta0.equals(resourceMeta0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      boolean boolean0 = resourceMeta0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMetaBaseCommitInfo resourceMetaBaseCommitInfo0 = resourceMeta0.getCommitInfo();
      assertNull(resourceMetaBaseCommitInfo0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getRev();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.id("");
      String string0 = resourceMeta0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getOwner();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMetaBaseCommitInfo resourceMetaBaseCommitInfo0 = new ResourceMetaBaseCommitInfo();
      resourceMeta0.setCommitInfo(resourceMetaBaseCommitInfo0);
      assertNull(resourceMeta0.getOwner());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      Date date0 = resourceMeta0.getModifiedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMetaBaseCommitInfo resourceMetaBaseCommitInfo0 = new ResourceMetaBaseCommitInfo();
      ResourceMeta resourceMeta1 = resourceMeta0.commitInfo(resourceMetaBaseCommitInfo0);
      ResourceMetaBaseCommitInfo resourceMetaBaseCommitInfo1 = resourceMeta1.getCommitInfo();
      assertSame(resourceMetaBaseCommitInfo0, resourceMetaBaseCommitInfo1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getProjectId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.setName("");
      ResourceMeta resourceMeta1 = new ResourceMeta();
      resourceMeta0.setId("");
      resourceMeta1.setId("");
      boolean boolean0 = resourceMeta1.equals(resourceMeta0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      ResourceMeta resourceMeta1 = resourceMeta0.description("");
      ResourceMeta resourceMeta2 = new ResourceMeta();
      resourceMeta0.setId("");
      resourceMeta2.setId("");
      boolean boolean0 = resourceMeta2.equals(resourceMeta1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      Date date0 = resourceMeta0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.setDescription("syscall:sendfile(...)");
      String string0 = resourceMeta0.getDescription();
      assertEquals("syscall:sendfile(...)", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getParentId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.hashCode();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.projectId("syscall:sendfile(...)");
      String string0 = resourceMeta0.getProjectId();
      assertEquals("syscall:sendfile(...)", string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.parentId("");
      String string0 = resourceMeta0.getParentId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      Vector<String> vector0 = new Vector<String>();
      resourceMeta0.setTags(vector0);
      assertEquals(10, vector0.capacity());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getSpaceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      List<String> list0 = resourceMeta0.getTags();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      resourceMeta0.setParentId("    parentId: ");
      String string0 = resourceMeta0.getParentId();
      assertEquals("    parentId: ", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = "source cleanup handler cannot be null";
      resourceMeta0.rev("source cleanup handler cannot be null");
      XmlSuite xmlSuite0 = mock(XmlSuite.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(xmlSuite0).getTests();
      XmlTest xmlTest0 = null;
      try {
        xmlTest0 = new XmlTest(xmlSuite0, (int) xmlSuite0.DEFAULT_DATA_PROVIDER_THREAD_COUNT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.testng.xml.XmlTest", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResourceMeta resourceMeta0 = new ResourceMeta();
      String string0 = resourceMeta0.getDescription();
      assertNull(string0);
  }
}
