/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:26:30 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.FailedRule;
import com.ibm.watson.data.client.model.ImportRuleResponse;
import com.ibm.watson.data.client.model.ImportedRule;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImportRuleResponse_ESTest extends ImportRuleResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      ImportRuleResponse importRuleResponse1 = importRuleResponse0.importedList((List<ImportedRule>) null);
      List<ImportedRule> list0 = importRuleResponse1.getImportedList();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      importRuleResponse0.failed((List<FailedRule>) null);
      List<FailedRule> list0 = importRuleResponse0.getFailed();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      ImportRuleResponse importRuleResponse1 = importRuleResponse0.importedList((List<ImportedRule>) null);
      ImportedRule importedRule0 = new ImportedRule();
      // Undeclared exception!
      try { 
        importRuleResponse1.addImportedListItem(importedRule0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.ImportRuleResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      FailedRule failedRule0 = new FailedRule();
      importRuleResponse0.setFailed((List<FailedRule>) null);
      // Undeclared exception!
      try { 
        importRuleResponse0.addFailedItem(failedRule0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.ImportRuleResponse", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      importRuleResponse0.failed((List<FailedRule>) null);
      String string0 = importRuleResponse0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      ImportRuleResponse importRuleResponse1 = importRuleResponse0.failed((List<FailedRule>) null);
      ImportRuleResponse importRuleResponse2 = new ImportRuleResponse();
      assertFalse(importRuleResponse2.equals((Object)importRuleResponse0));
      
      importRuleResponse2.setFailed((List<FailedRule>) null);
      boolean boolean0 = importRuleResponse0.equals(importRuleResponse2);
      assertTrue(importRuleResponse2.equals((Object)importRuleResponse1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      ImportRuleResponse importRuleResponse1 = importRuleResponse0.addImportedListItem((ImportedRule) null);
      ImportRuleResponse importRuleResponse2 = new ImportRuleResponse();
      boolean boolean0 = importRuleResponse1.equals(importRuleResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      Object object0 = new Object();
      boolean boolean0 = importRuleResponse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      boolean boolean0 = importRuleResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      boolean boolean0 = importRuleResponse0.equals(importRuleResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      importRuleResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      FailedRule failedRule0 = new FailedRule();
      importRuleResponse0.addFailedItem(failedRule0);
      List<FailedRule> list0 = importRuleResponse0.getFailed();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      ImportedRule importedRule0 = new ImportedRule();
      importRuleResponse0.addImportedListItem(importedRule0);
      List<ImportedRule> list0 = importRuleResponse0.getImportedList();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      List<FailedRule> list0 = importRuleResponse0.getFailed();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      ImportRuleResponse importRuleResponse1 = importRuleResponse0.failed((List<FailedRule>) null);
      ImportRuleResponse importRuleResponse2 = new ImportRuleResponse();
      boolean boolean0 = importRuleResponse1.equals(importRuleResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImportRuleResponse importRuleResponse0 = new ImportRuleResponse();
      List<ImportedRule> list0 = importRuleResponse0.getImportedList();
      importRuleResponse0.setImportedList(list0);
      assertTrue(list0.isEmpty());
  }
}
