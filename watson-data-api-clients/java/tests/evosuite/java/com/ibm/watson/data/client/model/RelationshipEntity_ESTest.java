/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:32:50 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AbstractRelationshipEntity;
import com.ibm.watson.data.client.model.RelationshipEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RelationshipEntity_ESTest extends RelationshipEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.targetName("p1Kg;gOj;xsbj");
      String string0 = relationshipEntity0.getTargetName();
      assertEquals("p1Kg;gOj;xsbj", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      RelationshipEntity relationshipEntity1 = relationshipEntity0.targetName("");
      String string0 = relationshipEntity1.getTargetName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      RelationshipEntity relationshipEntity1 = relationshipEntity0.targetId("]_T");
      String string0 = relationshipEntity1.getTargetId();
      assertEquals("]_T", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      RelationshipEntity relationshipEntity1 = relationshipEntity0.targetId("");
      String string0 = relationshipEntity1.getTargetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.targetHref("p1Kg;gOj;xsbj");
      String string0 = relationshipEntity0.getTargetHref();
      assertEquals("p1Kg;gOj;xsbj", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      RelationshipEntity relationshipEntity1 = relationshipEntity0.targetGlobalId("]_T");
      String string0 = relationshipEntity1.getTargetGlobalId();
      assertEquals("]_T", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.targetGlobalId("");
      String string0 = relationshipEntity0.getTargetGlobalId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.setTargetHref("");
      RelationshipEntity relationshipEntity1 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity0.equals(relationshipEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.targetName("\n");
      RelationshipEntity relationshipEntity1 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity0.equals(relationshipEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      RelationshipEntity relationshipEntity1 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity0.equals(relationshipEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.targetId("");
      RelationshipEntity relationshipEntity1 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity0.equals(relationshipEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      AbstractRelationshipEntity abstractRelationshipEntity0 = relationshipEntity0.sourceType("g9e;aVN+3^d>i-F\"");
      RelationshipEntity relationshipEntity1 = new RelationshipEntity();
      boolean boolean0 = abstractRelationshipEntity0.equals(relationshipEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity0.equals("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity0.equals(relationshipEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      RelationshipEntity relationshipEntity1 = relationshipEntity0.targetGlobalId("]_T");
      RelationshipEntity relationshipEntity2 = new RelationshipEntity();
      boolean boolean0 = relationshipEntity1.equals(relationshipEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.setTargetGlobalId("M=j2Z+");
      assertNull(relationshipEntity0.getTargetHref());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.targetHref("");
      String string0 = relationshipEntity0.getTargetHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      String string0 = relationshipEntity0.getTargetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      String string0 = relationshipEntity0.getTargetName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.setTargetId("]_T");
      assertEquals("]_T", relationshipEntity0.getTargetId());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      String string0 = relationshipEntity0.getTargetGlobalId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.setTargetName("class AbstractRelationshipEntity {\n");
      assertNull(relationshipEntity0.getDescription());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      relationshipEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      String string0 = relationshipEntity0.toString();
      assertEquals("class RelationshipEntity {\n    description: null\n    relationshipType: null\n    sourceType: null\n    targetType: null\n    targetId: null\n    targetGlobalId: null\n    targetName: null\n    targetHref: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RelationshipEntity relationshipEntity0 = new RelationshipEntity();
      String string0 = relationshipEntity0.getTargetHref();
      assertNull(string0);
  }
}
