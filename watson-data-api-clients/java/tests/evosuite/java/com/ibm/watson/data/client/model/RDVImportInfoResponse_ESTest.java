/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:43:08 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.RDVImportInfo;
import com.ibm.watson.data.client.model.RDVImportInfoResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RDVImportInfoResponse_ESTest extends RDVImportInfoResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfoResponse0.importInfo(rDVImportInfo0);
      RDVImportInfo rDVImportInfo1 = rDVImportInfoResponse0.getImportInfo();
      assertNull(rDVImportInfo1.getValuesSkipped());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      RDVImportInfoResponse rDVImportInfoResponse1 = new RDVImportInfoResponse();
      boolean boolean0 = rDVImportInfoResponse0.equals(rDVImportInfoResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfoResponse0.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      boolean boolean0 = rDVImportInfoResponse0.equals(rDVImportInfoResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      boolean boolean0 = rDVImportInfoResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      String string0 = rDVImportInfoResponse0.toString();
      assertEquals("class RDVImportInfoResponse {\n    importInfo: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfoResponse0.setImportInfo(rDVImportInfo0);
      assertNull(rDVImportInfo0.getValuesInserted());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      RDVImportInfoResponse rDVImportInfoResponse1 = rDVImportInfoResponse0.importInfo(rDVImportInfo0);
      String string0 = rDVImportInfoResponse1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      rDVImportInfoResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      RDVImportInfoResponse rDVImportInfoResponse0 = new RDVImportInfoResponse();
      RDVImportInfo rDVImportInfo0 = rDVImportInfoResponse0.getImportInfo();
      assertNull(rDVImportInfo0);
  }
}
