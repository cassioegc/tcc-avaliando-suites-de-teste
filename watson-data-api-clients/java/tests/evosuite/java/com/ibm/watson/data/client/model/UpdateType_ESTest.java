/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:35:25 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AssetTypeField;
import com.ibm.watson.data.client.model.AssetTypeProperty;
import com.ibm.watson.data.client.model.AssetTypeRelationship;
import com.ibm.watson.data.client.model.ExternalAssetPreview;
import com.ibm.watson.data.client.model.UpdateType;
import com.ibm.watson.data.client.model.enums.DeleteTarget;
import com.ibm.watson.data.client.model.enums.PropagationType;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.testng.internal.DynamicGraph;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;
import reactor.netty.http.server.HttpServerState;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UpdateType_ESTest extends UpdateType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      assertNull(updateType0.getDescription());
      
      UpdateType updateType1 = updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      UpdateType updateType2 = updateType1.putPropertiesItem("", (AssetTypeProperty) null);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      updateType2.hashCode();
      UpdateType updateType3 = updateType1.externalAssetPreview((ExternalAssetPreview) null);
      updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      UpdateType updateType4 = updateType1.fields(arrayList0);
      updateType0.toString();
      UpdateType updateType5 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      boolean boolean0 = updateType5.equals(updateType3);
      assertFalse(boolean0);
      
      PropagationType propagationType0 = PropagationType.IGNORE;
      updateType5.setExternalAssetPreview((ExternalAssetPreview) null);
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.onCloneTarget(propagationType0);
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlParametersFixed("+6wpV");
      updateType4.externalAssetPreview(externalAssetPreview1);
      updateType1.equals(updateType5);
      System.setCurrentTimeMillis(0L);
      updateType1.getFields();
      updateType2.addRelationshipsItem(assetTypeRelationship1);
      List<AssetTypeRelationship> list0 = updateType2.getRelationships();
      updateType4.relationships(list0);
      assertFalse(updateType0.equals((Object)updateType5));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      System.setCurrentTimeMillis(896L);
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      UpdateType updateType2 = updateType1.properties(hashMap0);
      updateType2.hashCode();
      UpdateType updateType3 = updateType2.externalAssetPreview((ExternalAssetPreview) null);
      updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      arrayList0.clear();
      Random.setNextRandom(5);
      updateType0.toString();
      UpdateType updateType4 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      boolean boolean0 = updateType4.equals(updateType3);
      assertFalse(boolean0);
      
      assetTypeRelationship0.key("");
      updateType0.hashCode();
      updateType4.setExternalAssetPreview((ExternalAssetPreview) null);
      UpdateType updateType5 = updateType4.putPropertiesItem("", (AssetTypeProperty) null);
      updateType2.equals(updateType4);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(5);
      updateType1.getFields();
      assertTrue(updateType1.equals((Object)updateType4));
      
      AssetTypeRelationship assetTypeRelationship1 = new AssetTypeRelationship();
      updateType1.addRelationshipsItem(assetTypeRelationship1);
      assertFalse(updateType0.equals((Object)updateType5));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      System.setCurrentTimeMillis(896L);
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      UpdateType updateType2 = updateType1.putPropertiesItem("", (AssetTypeProperty) null);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      UpdateType updateType3 = updateType2.properties(hashMap0);
      updateType2.hashCode();
      UpdateType updateType4 = updateType3.externalAssetPreview((ExternalAssetPreview) null);
      updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      arrayList0.clear();
      updateType1.fields(arrayList0);
      Random.setNextRandom(5);
      updateType0.toString();
      UpdateType updateType5 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      boolean boolean0 = updateType5.equals(updateType4);
      assertFalse(boolean0);
      
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.key("");
      PropagationType propagationType0 = PropagationType.IGNORE;
      updateType5.setExternalAssetPreview((ExternalAssetPreview) null);
      AssetTypeRelationship assetTypeRelationship2 = assetTypeRelationship1.onCloneTarget(propagationType0);
      UpdateType updateType6 = updateType5.addRelationshipsItem(assetTypeRelationship2);
      AssetTypeField assetTypeField0 = new AssetTypeField();
      Boolean boolean1 = XmlSuite.DEFAULT_SKIP_FAILED_INVOCATION_COUNTS;
      AssetTypeField assetTypeField1 = assetTypeField0.isSearchableAcrossTypes(boolean1);
      AssetTypeField assetTypeField2 = assetTypeField1.key("d):,*R");
      AssetTypeField assetTypeField3 = assetTypeField2.facet(boolean1);
      AssetTypeField assetTypeField4 = assetTypeField3.isArray(boolean1);
      updateType6.addFieldsItem(assetTypeField4);
      updateType3.equals(updateType5);
      System.setCurrentTimeMillis(5);
      System.setCurrentTimeMillis(5);
      System.setCurrentTimeMillis(5);
      updateType1.getFields();
      updateType2.addRelationshipsItem(assetTypeRelationship0);
      assertFalse(updateType0.equals((Object)updateType5));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      System.setCurrentTimeMillis(896L);
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      UpdateType updateType2 = updateType1.putPropertiesItem("", (AssetTypeProperty) null);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      UpdateType updateType3 = updateType2.properties(hashMap0);
      updateType2.hashCode();
      updateType3.externalAssetPreview((ExternalAssetPreview) null);
      updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      arrayList0.clear();
      UpdateType updateType4 = updateType1.fields(arrayList0);
      updateType4.setDescription("");
      Random.setNextRandom(5);
      updateType0.toString();
      UpdateType updateType5 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.key("");
      PropagationType propagationType0 = PropagationType.IGNORE;
      AssetTypeRelationship assetTypeRelationship2 = assetTypeRelationship1.onCloneTarget(propagationType0);
      UpdateType updateType6 = updateType5.addRelationshipsItem(assetTypeRelationship2);
      boolean boolean0 = updateType3.equals(updateType5);
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(5);
      updateType1.getFields();
      AssetTypeRelationship assetTypeRelationship3 = new AssetTypeRelationship();
      updateType2.addRelationshipsItem(assetTypeRelationship3);
      assertFalse(updateType0.equals((Object)updateType6));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      System.setCurrentTimeMillis(896L);
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      UpdateType updateType2 = updateType1.putPropertiesItem("", (AssetTypeProperty) null);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      UpdateType updateType3 = updateType2.properties(hashMap0);
      updateType3.externalAssetPreview((ExternalAssetPreview) null);
      updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      arrayList0.clear();
      updateType1.fields(arrayList0);
      Random.setNextRandom(5);
      updateType0.toString();
      UpdateType updateType4 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      assetTypeRelationship0.key("");
      boolean boolean0 = updateType3.equals(updateType4);
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(5);
      updateType1.getFields();
      AssetTypeRelationship assetTypeRelationship1 = new AssetTypeRelationship();
      updateType2.addRelationshipsItem(assetTypeRelationship1);
      assertFalse(updateType0.equals((Object)updateType4));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      System.setCurrentTimeMillis(896L);
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      UpdateType updateType2 = updateType1.putPropertiesItem("", (AssetTypeProperty) null);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      UpdateType updateType3 = updateType2.properties(hashMap0);
      updateType2.hashCode();
      updateType3.externalAssetPreview((ExternalAssetPreview) null);
      updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      arrayList0.clear();
      updateType1.fields(arrayList0);
      Random.setNextRandom(5);
      updateType0.toString();
      UpdateType updateType4 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.key("");
      PropagationType propagationType0 = PropagationType.IGNORE;
      AssetTypeRelationship assetTypeRelationship2 = assetTypeRelationship1.onCloneTarget(propagationType0);
      UpdateType updateType5 = updateType4.addRelationshipsItem(assetTypeRelationship2);
      boolean boolean0 = updateType3.equals(updateType4);
      assertFalse(boolean0);
      
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(0L);
      System.setCurrentTimeMillis(5);
      updateType1.getFields();
      AssetTypeRelationship assetTypeRelationship3 = new AssetTypeRelationship();
      updateType2.addRelationshipsItem(assetTypeRelationship3);
      assertFalse(updateType0.equals((Object)updateType5));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      String string0 = "";
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      AssetTypeField assetTypeField1 = assetTypeField0.type((String) null);
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      xmlTest0.getThreadCount();
      Boolean boolean0 = xmlTest0.getPreserveOrder();
      AssetTypeField assetTypeField2 = assetTypeField1.isSearchableAcrossTypes(boolean0);
      AssetTypeField assetTypeField3 = assetTypeField2.searchPath((String) null);
      updateType0.addFieldsItem(assetTypeField3);
      assetTypeProperty0.setProperties(hashMap0);
      LinkedList<AssetTypeRelationship> linkedList0 = new LinkedList<AssetTypeRelationship>();
      updateType0.relationships(linkedList0);
      hashMap0.put("", assetTypeProperty0);
      hashMap0.put("}", assetTypeProperty0);
      UpdateType updateType1 = updateType0.properties(hashMap0);
      // Undeclared exception!
      try { 
        updateType1.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      Map<String, AssetTypeProperty> map0 = updateType0.getProperties();
      assertNull(map0);
      
      updateType0.setProperties((Map<String, AssetTypeProperty>) null);
      updateType0.hashCode();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      Object object0 = new Object();
      UpdateType updateType1 = updateType0.relationships((List<AssetTypeRelationship>) null);
      updateType1.setRelationships((List<AssetTypeRelationship>) null);
      assetTypeField0.equals(object0);
      UpdateType updateType2 = updateType0.addFieldsItem(assetTypeField0);
      updateType0.toString();
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlParametersFixed("Nt^$-$OgEBD|s$g(?");
      updateType2.setExternalAssetPreview(externalAssetPreview1);
      updateType2.setExternalAssetPreview(externalAssetPreview0);
      UpdateType updateType3 = updateType2.description("B5#ZQ}dJa9g>923%EC");
      updateType3.toString();
      updateType0.fields((List<AssetTypeField>) null);
      updateType2.getFields();
      UpdateType updateType4 = updateType0.externalAssetPreview(externalAssetPreview0);
      assertSame(updateType4, updateType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      UpdateType updateType1 = updateType0.addFieldsItem(assetTypeField0);
      String string0 = "efqx[1!5<#<')*VT";
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType2 = updateType1.putPropertiesItem("efqx[1!5<#<')*VT", assetTypeProperty0);
      UpdateType updateType3 = updateType2.fields((List<AssetTypeField>) null);
      UpdateType updateType4 = updateType3.description("efqx[1!5<#<')*VT");
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      UpdateType updateType5 = updateType4.addRelationshipsItem(assetTypeRelationship0);
      DeleteTarget deleteTarget0 = DeleteTarget.DISCONNECT;
      assetTypeRelationship0.setOnDeleteTarget(deleteTarget0);
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.addUrlParametersFromAssetAttributesItem("");
      updateType5.externalAssetPreview(externalAssetPreview1);
      UpdateType updateType6 = updateType3.description("");
      updateType4.hashCode();
      updateType6.addRelationshipsItem(assetTypeRelationship0);
      // Undeclared exception!
      try { 
        updateType3.addFieldsItem(assetTypeField0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.UpdateType", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      UpdateType updateType1 = updateType0.addFieldsItem(assetTypeField0);
      UpdateType updateType2 = updateType1.description("%?lb%B");
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.baseClientUrl("sW$n");
      UpdateType updateType3 = updateType2.externalAssetPreview(externalAssetPreview1);
      UpdateType updateType4 = updateType3.relationships((List<AssetTypeRelationship>) null);
      updateType4.getProperties();
      UpdateType updateType5 = updateType4.properties((Map<String, AssetTypeProperty>) null);
      boolean boolean0 = updateType5.equals(updateType1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      Vector<AssetTypeRelationship> vector0 = new Vector<AssetTypeRelationship>();
      UpdateType updateType1 = updateType0.relationships(vector0);
      LinkedList<AssetTypeField> linkedList0 = new LinkedList<AssetTypeField>();
      updateType1.setFields(linkedList0);
      UpdateType updateType2 = updateType1.fields(linkedList0);
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      DeleteTarget deleteTarget0 = DeleteTarget.IGNORE;
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.onDeleteTarget(deleteTarget0);
      PropagationType propagationType0 = PropagationType.CASCADE;
      AssetTypeRelationship assetTypeRelationship2 = assetTypeRelationship1.onDelete(propagationType0);
      UpdateType updateType3 = updateType2.addRelationshipsItem(assetTypeRelationship2);
      UpdateType updateType4 = updateType3.description("    relationships: ");
      updateType4.relationships(vector0);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      updateType4.setProperties(hashMap0);
      Map<String, AssetTypeProperty> map0 = updateType1.getProperties();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      assetTypeProperty0.setMinimum(updateType0);
      UpdateType updateType1 = updateType0.putPropertiesItem("T[,PP+bvy>I", assetTypeProperty0);
      updateType1.toString();
      String string0 = updateType0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.fields((List<AssetTypeField>) null);
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType2 = updateType1.putPropertiesItem((String) null, assetTypeProperty0);
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      UpdateType updateType3 = updateType2.externalAssetPreview(externalAssetPreview0);
      updateType2.putPropertiesItem("JpQ8(f.U>-=", assetTypeProperty0);
      updateType2.equals(externalAssetPreview0);
      UpdateType updateType4 = updateType3.description("(5)H/i");
      updateType4.getExternalAssetPreview();
      String string0 = updateType0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      assetTypeProperty0.getProperties();
      assetTypeProperty0.properties((Map<String, AssetTypeProperty>) null);
      assetTypeProperty0.getProperties();
      updateType0.properties((Map<String, AssetTypeProperty>) null);
      updateType0.equals((Object) null);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      Boolean boolean0 = Boolean.TRUE;
      AssetTypeField assetTypeField1 = assetTypeField0.isArray(boolean0);
      AssetTypeField assetTypeField2 = assetTypeField1.type("\n    ");
      AssetTypeField assetTypeField3 = assetTypeField2.searchPath("\n    ");
      arrayList0.add(assetTypeField3);
      updateType0.fields(arrayList0);
      updateType0.toString();
      updateType0.setDescription("");
      assertEquals("", updateType0.getDescription());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      UpdateType updateType1 = updateType0.addFieldsItem(assetTypeField0);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      HashMap<String, AssetTypeProperty> hashMap1 = new HashMap<String, AssetTypeProperty>(hashMap0);
      UpdateType updateType2 = updateType1.properties(hashMap1);
      UpdateType updateType3 = updateType2.description("");
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType4 = updateType3.putPropertiesItem("", assetTypeProperty0);
      ArrayList<AssetTypeRelationship> arrayList0 = new ArrayList<AssetTypeRelationship>();
      UpdateType updateType5 = updateType4.relationships(arrayList0);
      List<AssetTypeRelationship> list0 = updateType5.getRelationships();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.description("");
      LinkedList<AssetTypeRelationship> linkedList0 = new LinkedList<AssetTypeRelationship>();
      UpdateType updateType2 = updateType1.relationships(linkedList0);
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlParametersFromAssetAttributes((List<String>) null);
      UpdateType updateType3 = updateType2.externalAssetPreview(externalAssetPreview1);
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      PropagationType propagationType0 = PropagationType.IGNORE;
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.onDelete(propagationType0);
      AssetTypeField assetTypeField0 = new AssetTypeField();
      AssetTypeField assetTypeField1 = assetTypeField0.isArray((Boolean) null);
      AssetTypeField assetTypeField2 = assetTypeField1.type("^*5^}3;oLx2");
      AssetTypeField assetTypeField3 = assetTypeField2.searchPath("sk;owve\"q\"iDJ");
      AssetTypeField assetTypeField4 = assetTypeField3.key("wD,@{&");
      updateType2.addFieldsItem(assetTypeField4);
      UpdateType updateType4 = updateType3.addRelationshipsItem(assetTypeRelationship1);
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      UpdateType updateType5 = updateType4.properties(hashMap0);
      updateType5.setExternalAssetPreview(externalAssetPreview0);
      String string0 = updateType4.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.description("com.ibm.watson.data.client.model.UpdateType");
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      UpdateType updateType2 = updateType1.addRelationshipsItem(assetTypeRelationship0);
      AssetTypeField assetTypeField0 = new AssetTypeField();
      UpdateType updateType3 = updateType2.addFieldsItem(assetTypeField0);
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType4 = updateType3.putPropertiesItem("HbPi1\"+U8?D>:", assetTypeProperty0);
      UpdateType updateType5 = updateType4.fields((List<AssetTypeField>) null);
      ExternalAssetPreview externalAssetPreview0 = updateType5.getExternalAssetPreview();
      assertNull(externalAssetPreview0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.description("\n    ");
      updateType0.getDescription();
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType2 = updateType0.putPropertiesItem("\n    ", assetTypeProperty0);
      updateType1.getDescription();
      List<AssetTypeField> list0 = updateType2.getFields();
      HttpServerState httpServerState0 = HttpServerState.REQUEST_RECEIVED;
      updateType0.equals(httpServerState0);
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list1 = xmlSuite0.getExcludedGroups();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlParametersFromAssetAttributes(list1);
      ExternalAssetPreview externalAssetPreview2 = externalAssetPreview1.urlParametersFixed("\n    ");
      externalAssetPreview2.equals(list0);
      xmlSuite0.addListener("");
      ExternalAssetPreview externalAssetPreview3 = externalAssetPreview2.urlPathFromAssetAttributes("\n    ");
      ExternalAssetPreview externalAssetPreview4 = externalAssetPreview3.baseClientUrl("\n    ");
      updateType2.setExternalAssetPreview(externalAssetPreview4);
      updateType0.getDescription();
      List<AssetTypeField> list2 = updateType0.getFields();
      assertTrue(list2.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.description("");
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType2 = updateType1.putPropertiesItem("", assetTypeProperty0);
      List<AssetTypeField> list0 = updateType1.getFields();
      UpdateType updateType3 = updateType2.fields(list0);
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.targetAssetType("");
      DeleteTarget deleteTarget0 = DeleteTarget.DISCONNECT;
      AssetTypeRelationship assetTypeRelationship2 = assetTypeRelationship1.onDeleteTarget(deleteTarget0);
      UpdateType updateType4 = updateType3.addRelationshipsItem(assetTypeRelationship2);
      List<AssetTypeRelationship> list1 = updateType4.getRelationships();
      assertTrue(list1.contains(assetTypeRelationship1));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.externalAssetPreview((ExternalAssetPreview) null);
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType2 = updateType1.putPropertiesItem("%!A}D^=:2Il2_", assetTypeProperty0);
      UpdateType updateType3 = updateType2.description("");
      Vector<AssetTypeRelationship> vector0 = new Vector<AssetTypeRelationship>();
      UpdateType updateType4 = updateType3.relationships(vector0);
      Map<String, AssetTypeProperty> map0 = updateType0.getProperties();
      UpdateType updateType5 = updateType4.properties(map0);
      List<AssetTypeField> list0 = updateType5.getFields();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.description((String) null);
      AssetTypeField assetTypeField0 = new AssetTypeField();
      Boolean boolean0 = Boolean.valueOf(true);
      AssetTypeField assetTypeField1 = assetTypeField0.facet(boolean0);
      AssetTypeField assetTypeField2 = assetTypeField1.key((String) null);
      UpdateType updateType2 = updateType1.addFieldsItem(assetTypeField2);
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      DeleteTarget deleteTarget0 = DeleteTarget.DISCONNECT;
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.onDeleteTarget(deleteTarget0);
      PropagationType propagationType0 = PropagationType.CASCADE;
      AssetTypeRelationship assetTypeRelationship2 = assetTypeRelationship1.onCloneTarget(propagationType0);
      UpdateType updateType3 = updateType2.addRelationshipsItem(assetTypeRelationship2);
      List<AssetTypeField> list0 = updateType0.getFields();
      updateType3.setFields(list0);
      assertSame(updateType2, updateType3);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      UpdateType updateType1 = updateType0.addFieldsItem(assetTypeField0);
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      UpdateType updateType2 = updateType1.addRelationshipsItem(assetTypeRelationship0);
      LinkedList<AssetTypeRelationship> linkedList0 = new LinkedList<AssetTypeRelationship>();
      UpdateType updateType3 = updateType2.relationships(linkedList0);
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType4 = updateType3.putPropertiesItem("", assetTypeProperty0);
      UpdateType updateType5 = updateType4.description("");
      List<AssetTypeRelationship> list0 = updateType5.getRelationships();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      updateType0.getProperties();
      UpdateType updateType1 = updateType0.properties((Map<String, AssetTypeProperty>) null);
      DynamicGraph<AssetTypeRelationship> dynamicGraph0 = new DynamicGraph<AssetTypeRelationship>();
      List<AssetTypeRelationship> list0 = dynamicGraph0.getFreeNodes();
      UpdateType updateType2 = updateType1.relationships(list0);
      AssetTypeField assetTypeField0 = new AssetTypeField();
      updateType1.addFieldsItem(assetTypeField0);
      updateType1.toString();
      updateType2.setRelationships(list0);
      updateType2.getRelationships();
      updateType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType1 = updateType0.putPropertiesItem("Received redirect location: {}", assetTypeProperty0);
      updateType1.setRelationships((List<AssetTypeRelationship>) null);
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlPathFromAssetAttributes("Received redirect location: {}");
      updateType1.setExternalAssetPreview(externalAssetPreview1);
      assertSame(updateType0, updateType1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      updateType0.setDescription("");
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType1 = updateType0.putPropertiesItem("", assetTypeProperty0);
      assertSame(updateType1, updateType0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.targetAssetType((String) null);
      UpdateType updateType1 = updateType0.addRelationshipsItem(assetTypeRelationship1);
      List<AssetTypeRelationship> list0 = updateType1.getRelationships();
      UpdateType updateType2 = updateType1.relationships(list0);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      UpdateType updateType3 = updateType2.fields(arrayList0);
      ExternalAssetPreview externalAssetPreview0 = updateType3.getExternalAssetPreview();
      assertNull(externalAssetPreview0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.externalAssetPreview((ExternalAssetPreview) null);
      updateType1.getRelationships();
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      assetTypeProperty0.getProperties();
      updateType1.setProperties((Map<String, AssetTypeProperty>) null);
      assertSame(updateType0, updateType1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.description("OlA#9UAtWB ");
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      UpdateType updateType2 = updateType1.addRelationshipsItem(assetTypeRelationship0);
      ArrayList<AssetTypeField> arrayList0 = new ArrayList<AssetTypeField>();
      UpdateType updateType3 = updateType2.fields(arrayList0);
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType4 = updateType3.putPropertiesItem("OlA#9UAtWB ", assetTypeProperty0);
      Map<String, AssetTypeProperty> map0 = updateType4.getProperties();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      updateType0.getProperties();
      updateType0.properties((Map<String, AssetTypeProperty>) null);
      updateType0.toString();
      updateType0.equals("class UpdateType {\n    description: null\n    fields: java.util.ArrayList@0000000002\n    externalAssetPreview: null\n    relationships: null\n    properties: null\n}");
      updateType0.getProperties();
      updateType0.setProperties((Map<String, AssetTypeProperty>) null);
      Vector<AssetTypeField> vector0 = new Vector<AssetTypeField>();
      updateType0.setFields(vector0);
      assertEquals("[]", vector0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      updateType0.equals("\n    ");
      updateType0.hashCode();
      updateType0.setProperties((Map<String, AssetTypeProperty>) null);
      updateType0.getFields();
      Map<String, AssetTypeProperty> map0 = updateType0.getProperties();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      Boolean boolean0 = Boolean.valueOf(true);
      AssetTypeField assetTypeField1 = assetTypeField0.isSearchableAcrossTypes(boolean0);
      updateType0.addFieldsItem(assetTypeField1);
      List<AssetTypeRelationship> list0 = updateType0.getRelationships();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      updateType0.description(" x=");
      updateType0.getDescription();
      ExternalAssetPreview externalAssetPreview0 = updateType0.getExternalAssetPreview();
      assertNull(externalAssetPreview0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.putPropertiesItem("", (AssetTypeProperty) null);
      UpdateType updateType2 = new UpdateType();
      AssetTypeField assetTypeField0 = new AssetTypeField();
      updateType0.addFieldsItem(assetTypeField0);
      boolean boolean0 = updateType1.equals(updateType2);
      assertFalse(boolean0);
      
      updateType1.getFields();
      assertFalse(updateType0.equals((Object)updateType2));
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      boolean boolean0 = updateType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      HashMap<String, AssetTypeProperty> hashMap0 = new HashMap<String, AssetTypeProperty>();
      UpdateType updateType1 = updateType0.properties((Map<String, AssetTypeProperty>) null);
      UpdateType updateType2 = updateType1.externalAssetPreview((ExternalAssetPreview) null);
      updateType2.toString();
      updateType2.description("");
      UpdateType updateType3 = new UpdateType();
      boolean boolean0 = updateType1.equals(updateType3);
      assertFalse(boolean0);
      
      updateType0.getFields();
      assertFalse(updateType0.equals((Object)updateType3));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = new UpdateType();
      boolean boolean0 = updateType0.equals(updateType1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = updateType0.putPropertiesItem("]@PY1?Ca", (AssetTypeProperty) null);
      updateType1.hashCode();
      updateType0.putPropertiesItem("]@PY1?Ca", (AssetTypeProperty) null);
      UpdateType updateType2 = new UpdateType();
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      boolean boolean0 = updateType2.equals(updateType0);
      assertFalse(boolean0);
      
      PropagationType propagationType0 = PropagationType.CASCADE;
      AssetTypeRelationship assetTypeRelationship1 = assetTypeRelationship0.onCloneTarget(propagationType0);
      updateType2.addRelationshipsItem(assetTypeRelationship1);
      boolean boolean1 = updateType0.equals(updateType2);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      ExternalAssetPreview externalAssetPreview0 = updateType0.getExternalAssetPreview();
      assertNull(externalAssetPreview0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      List<AssetTypeRelationship> list0 = updateType0.getRelationships();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      Vector<AssetTypeField> vector0 = new Vector<AssetTypeField>();
      updateType0.setFields(vector0);
      updateType0.setDescription("y=I");
      assertEquals("y=I", updateType0.getDescription());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      AssetTypeProperty assetTypeProperty0 = new AssetTypeProperty();
      UpdateType updateType1 = updateType0.putPropertiesItem("null", assetTypeProperty0);
      Stack<AssetTypeField> stack0 = new Stack<AssetTypeField>();
      UpdateType updateType2 = updateType1.fields(stack0);
      AssetTypeRelationship assetTypeRelationship0 = new AssetTypeRelationship();
      UpdateType updateType3 = new UpdateType();
      ArrayList<AssetTypeRelationship> arrayList0 = new ArrayList<AssetTypeRelationship>();
      UpdateType updateType4 = updateType2.relationships(arrayList0);
      updateType3.setRelationships(arrayList0);
      boolean boolean0 = updateType4.equals(updateType0);
      assertTrue(boolean0);
      
      updateType3.getDescription();
      UpdateType updateType5 = updateType0.addRelationshipsItem(assetTypeRelationship0);
      assertFalse(updateType5.equals((Object)updateType3));
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      UpdateType updateType1 = new UpdateType();
      assertTrue(updateType1.equals((Object)updateType0));
      
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      updateType1.setExternalAssetPreview(externalAssetPreview0);
      boolean boolean0 = updateType1.equals(updateType0);
      assertFalse(updateType1.equals((Object)updateType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      UpdateType updateType0 = new UpdateType();
      updateType0.equals("\n    ");
      updateType0.setProperties((Map<String, AssetTypeProperty>) null);
      assertNull(updateType0.getDescription());
  }
}
