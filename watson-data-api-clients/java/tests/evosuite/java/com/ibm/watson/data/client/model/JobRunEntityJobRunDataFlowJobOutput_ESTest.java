/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:47:39 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.JobRunEntityJobRunDataFlowJobOutput;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JobRunEntityJobRunDataFlowJobOutput_ESTest extends JobRunEntityJobRunDataFlowJobOutput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = Long.getLong("", 0L);
      jobRunEntityJobRunDataFlowJobOutput0.totalRowsWritten(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsWritten();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(1L);
      jobRunEntityJobRunDataFlowJobOutput0.totalRowsWritten(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsWritten();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long((-1L));
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.totalRowsWritten(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput1.getTotalRowsWritten();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long((-1854L));
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.totalRowsRead(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput1.getTotalRowsRead();
      assertEquals((-1854L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      jobRunEntityJobRunDataFlowJobOutput0.totalRowsRead(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsRead();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(1L);
      jobRunEntityJobRunDataFlowJobOutput0.setTotalRowsRead(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsRead();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      jobRunEntityJobRunDataFlowJobOutput0.setTotalBytesWritten(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalBytesWritten();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(1L);
      jobRunEntityJobRunDataFlowJobOutput0.totalBytesWritten(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalBytesWritten();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long((-1L));
      jobRunEntityJobRunDataFlowJobOutput0.totalBytesWritten(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalBytesWritten();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long((-83L));
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.totalBytesRead(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput1.getTotalBytesRead();
      assertEquals((-83L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      jobRunEntityJobRunDataFlowJobOutput0.totalBytesRead(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getTotalBytesRead();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(1L);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.totalBytesRead(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput1.getTotalBytesRead();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long((-1L));
      jobRunEntityJobRunDataFlowJobOutput0.engineElapsedSecs(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput0.getEngineElapsedSecs();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(1L);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.engineElapsedSecs(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput1.getEngineElapsedSecs();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.totalBytesRead(long0);
      String string0 = jobRunEntityJobRunDataFlowJobOutput1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = new JobRunEntityJobRunDataFlowJobOutput();
      assertTrue(jobRunEntityJobRunDataFlowJobOutput1.equals((Object)jobRunEntityJobRunDataFlowJobOutput0));
      
      Long long0 = new Long((-2039L));
      jobRunEntityJobRunDataFlowJobOutput1.setEngineElapsedSecs(long0);
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput1.equals(jobRunEntityJobRunDataFlowJobOutput0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = new JobRunEntityJobRunDataFlowJobOutput();
      assertTrue(jobRunEntityJobRunDataFlowJobOutput1.equals((Object)jobRunEntityJobRunDataFlowJobOutput0));
      
      jobRunEntityJobRunDataFlowJobOutput0.totalRowsWritten(long0);
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput0.equals(jobRunEntityJobRunDataFlowJobOutput1);
      assertFalse(jobRunEntityJobRunDataFlowJobOutput1.equals((Object)jobRunEntityJobRunDataFlowJobOutput0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = new JobRunEntityJobRunDataFlowJobOutput();
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput0.equals(jobRunEntityJobRunDataFlowJobOutput1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput0.equals(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput0.equals(jobRunEntityJobRunDataFlowJobOutput0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.totalRowsRead(long0);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput2 = new JobRunEntityJobRunDataFlowJobOutput();
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput1.equals(jobRunEntityJobRunDataFlowJobOutput2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      jobRunEntityJobRunDataFlowJobOutput0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.engineElapsedSecs(long0);
      Long long1 = jobRunEntityJobRunDataFlowJobOutput1.getEngineElapsedSecs();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long((-4L));
      jobRunEntityJobRunDataFlowJobOutput0.setTotalBytesRead(long0);
      assertNull(jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsRead());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      jobRunEntityJobRunDataFlowJobOutput0.totalBytesWritten(long0);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = new JobRunEntityJobRunDataFlowJobOutput();
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput0.equals(jobRunEntityJobRunDataFlowJobOutput1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = jobRunEntityJobRunDataFlowJobOutput0.getTotalBytesRead();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsWritten();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      jobRunEntityJobRunDataFlowJobOutput0.setTotalRowsWritten((Long) null);
      assertNull(jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsWritten());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = new Long(0L);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRunDataFlowJobOutput0.totalBytesRead(long0);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput2 = new JobRunEntityJobRunDataFlowJobOutput();
      boolean boolean0 = jobRunEntityJobRunDataFlowJobOutput1.equals(jobRunEntityJobRunDataFlowJobOutput2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = jobRunEntityJobRunDataFlowJobOutput0.getEngineElapsedSecs();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = jobRunEntityJobRunDataFlowJobOutput0.getTotalBytesWritten();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      Long long0 = jobRunEntityJobRunDataFlowJobOutput0.getTotalRowsRead();
      assertNull(long0);
  }
}
