/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:24:39 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ValueCount;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValueCount_ESTest extends ValueCount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      valueCount0.setValue("AUTO");
      String string0 = valueCount0.getValue();
      assertEquals("AUTO", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      Long long0 = new Long(971L);
      valueCount0.setCount(long0);
      Long long1 = valueCount0.getCount();
      assertEquals(971L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      Long long0 = new Long(0L);
      valueCount0.setCount(long0);
      Long long1 = valueCount0.getCount();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      Long long0 = new Long((-2247L));
      valueCount0.setCount(long0);
      Long long1 = valueCount0.getCount();
      assertEquals((-2247L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      Long long0 = new Long((-97L));
      valueCount0.setCount(long0);
      ValueCount valueCount1 = new ValueCount();
      boolean boolean0 = valueCount0.equals(valueCount1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      valueCount0.setValue("NON_NUU");
      ValueCount valueCount1 = new ValueCount();
      boolean boolean0 = valueCount0.equals(valueCount1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      ValueCount valueCount1 = new ValueCount();
      boolean boolean0 = valueCount0.equals(valueCount1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      boolean boolean0 = valueCount0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      boolean boolean0 = valueCount0.equals(valueCount0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      boolean boolean0 = valueCount0.equals("class ValueCount {\n    value: null\n    count: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      Long long0 = valueCount0.getCount();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      valueCount0.setValue("");
      String string0 = valueCount0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      String string0 = valueCount0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      valueCount0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ValueCount valueCount0 = new ValueCount();
      Long long0 = Long.valueOf((-41L));
      valueCount0.setCount(long0);
      String string0 = valueCount0.toString();
      assertNotNull(string0);
  }
}
