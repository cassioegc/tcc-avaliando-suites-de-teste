/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:48:38 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.NewReferenceDataValueEntity;
import com.ibm.watson.data.client.model.NewRelationship;
import com.ibm.watson.data.client.model.ReferenceDataValuesList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceDataValuesList_ESTest extends ReferenceDataValuesList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      Stack<NewReferenceDataValueEntity> stack0 = new Stack<NewReferenceDataValueEntity>();
      referenceDataValuesList0.setValues(stack0);
      List<NewReferenceDataValueEntity> list0 = referenceDataValuesList0.getValues();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      NewReferenceDataValueEntity newReferenceDataValueEntity0 = new NewReferenceDataValueEntity();
      referenceDataValuesList0.addValuesItem(newReferenceDataValueEntity0);
      List<NewReferenceDataValueEntity> list0 = referenceDataValuesList0.getValues();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      NewReferenceDataValueEntity newReferenceDataValueEntity0 = new NewReferenceDataValueEntity();
      newReferenceDataValueEntity0.value(newReferenceDataValueEntity0);
      referenceDataValuesList0.addValuesItem(newReferenceDataValueEntity0);
      // Undeclared exception!
      try { 
        referenceDataValuesList0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      LinkedList<NewReferenceDataValueEntity> linkedList0 = new LinkedList<NewReferenceDataValueEntity>();
      ReferenceDataValuesList referenceDataValuesList1 = referenceDataValuesList0.values(linkedList0);
      String string0 = referenceDataValuesList1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      NewRelationship newRelationship0 = new NewRelationship();
      boolean boolean0 = referenceDataValuesList0.equals(newRelationship0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      boolean boolean0 = referenceDataValuesList0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      boolean boolean0 = referenceDataValuesList0.equals(referenceDataValuesList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      LinkedList<NewReferenceDataValueEntity> linkedList0 = new LinkedList<NewReferenceDataValueEntity>();
      ReferenceDataValuesList referenceDataValuesList1 = referenceDataValuesList0.values(linkedList0);
      ReferenceDataValuesList referenceDataValuesList2 = new ReferenceDataValuesList();
      boolean boolean0 = referenceDataValuesList1.equals(referenceDataValuesList2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      List<NewReferenceDataValueEntity> list0 = referenceDataValuesList0.getValues();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      LinkedList<NewReferenceDataValueEntity> linkedList0 = new LinkedList<NewReferenceDataValueEntity>();
      ReferenceDataValuesList referenceDataValuesList1 = referenceDataValuesList0.values(linkedList0);
      referenceDataValuesList1.addValuesItem((NewReferenceDataValueEntity) null);
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      referenceDataValuesList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReferenceDataValuesList referenceDataValuesList0 = new ReferenceDataValuesList();
      String string0 = referenceDataValuesList0.toString();
      assertEquals("class ReferenceDataValuesList {\n    values: null\n}", string0);
  }
}
