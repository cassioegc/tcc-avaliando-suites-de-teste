/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:11:28 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ConnectionActions;
import com.ibm.watson.data.client.model.DatasourceTypeAction;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionActions_ESTest extends ConnectionActions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      DatasourceTypeAction datasourceTypeAction0 = new DatasourceTypeAction();
      ConnectionActions connectionActions1 = connectionActions0.addActionsItem(datasourceTypeAction0);
      List<DatasourceTypeAction> list0 = connectionActions1.getActions();
      assertTrue(list0.contains(datasourceTypeAction0));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      DatasourceTypeAction datasourceTypeAction0 = new DatasourceTypeAction();
      ConnectionActions connectionActions1 = connectionActions0.addActionsItem(datasourceTypeAction0);
      String string0 = connectionActions1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      ConnectionActions connectionActions1 = new ConnectionActions();
      boolean boolean0 = connectionActions0.equals(connectionActions1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      boolean boolean0 = connectionActions0.equals("class ConnectionActions {\n    actions: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      boolean boolean0 = connectionActions0.equals(connectionActions0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      boolean boolean0 = connectionActions0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      DatasourceTypeAction datasourceTypeAction0 = new DatasourceTypeAction();
      ConnectionActions connectionActions1 = connectionActions0.addActionsItem(datasourceTypeAction0);
      ConnectionActions connectionActions2 = connectionActions1.addActionsItem(datasourceTypeAction0);
      assertSame(connectionActions1, connectionActions2);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      String string0 = connectionActions0.toString();
      assertEquals("class ConnectionActions {\n    actions: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      List<DatasourceTypeAction> list0 = connectionActions0.getActions();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      connectionActions0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      connectionActions0.setActions((List<DatasourceTypeAction>) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionActions connectionActions0 = new ConnectionActions();
      LinkedList<DatasourceTypeAction> linkedList0 = new LinkedList<DatasourceTypeAction>();
      ConnectionActions connectionActions1 = connectionActions0.actions(linkedList0);
      List<DatasourceTypeAction> list0 = connectionActions1.getActions();
      assertTrue(list0.isEmpty());
  }
}
