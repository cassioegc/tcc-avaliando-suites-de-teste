/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 14:30:42 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.BaseRov;
import com.ibm.watson.data.client.model.ConnectionEntity;
import com.ibm.watson.data.client.model.ConnectionInteractionProperties;
import com.ibm.watson.data.client.model.DatasourceTypeProperty;
import com.ibm.watson.data.client.model.enums.AssetCategory;
import com.ibm.watson.data.client.model.enums.ConnectionFlag;
import io.netty.channel.Channel;
import io.netty.channel.ChannelDuplexHandler;
import io.netty.channel.ChannelPromise;
import io.netty.channel.DefaultChannelProgressivePromise;
import io.netty.channel.DefaultEventLoop;
import io.netty.channel.DelegatingChannelPromiseNotifier;
import io.netty.channel.epoll.EpollSocketChannel;
import io.netty.handler.logging.LogLevel;
import io.netty.handler.logging.LoggingHandler;
import io.netty.util.concurrent.ImmediateEventExecutor;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.Callable;
import java.util.concurrent.PriorityBlockingQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.testng.xml.XmlClass;
import org.testng.xml.XmlDefine;
import org.testng.xml.XmlMethodSelectors;
import org.testng.xml.XmlRun;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionEntity_ESTest extends ConnectionEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      assertNull(connectionEntity0.getOwnerId());
      
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem("tpV3#3m][g1`)j;~");
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.addChildSourceSystemsItem(map0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity3 = connectionEntity2.rov(baseRov0);
      ConnectionFlag connectionFlag0 = ConnectionFlag.INTERNAL_USE_ONLY;
      connectionEntity3.addFlagsItem(connectionFlag0);
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      ConnectionEntity connectionEntity4 = connectionEntity3.putSourceSystemItem("", connectionEntity1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "tpV3#3m][g1`)j;~");
      List<String> list0 = xmlTest0.getIncludedGroups();
      ConnectionEntity connectionEntity5 = connectionEntity3.tags(list0);
      ConnectionFlag connectionFlag1 = ConnectionFlag.INTERNAL_USE_ONLY;
      ConnectionEntity connectionEntity6 = connectionEntity5.addFlagsItem(connectionFlag1);
      Object object0 = new Object();
      connectionEntity6.putSourceSystemItem("tpV3#3m][g1`)j;~", object0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Random.setNextRandom(0);
      Stack<ConnectionFlag> stack0 = new Stack<ConnectionFlag>();
      ConnectionEntity connectionEntity7 = connectionEntity0.flags(stack0);
      connectionEntity3.name("tpV3#3m][g1`)j;~");
      connectionEntity0.putSourceSystemItem("tpV3#3m][g1`)j;~", baseRov0);
      connectionEntity7.properties(map0);
      // Undeclared exception!
      try { 
        connectionEntity4.addTagsItem("tpV3#3m][g1`)j;~");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      DatasourceTypeProperty datasourceTypeProperty0 = new DatasourceTypeProperty();
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.addSourceItem(datasourceTypeProperty0);
      ConnectionInteractionProperties connectionInteractionProperties2 = connectionInteractionProperties1.addTargetItem(datasourceTypeProperty0);
      Vector<DatasourceTypeProperty> vector0 = new Vector<DatasourceTypeProperty>();
      ConnectionInteractionProperties connectionInteractionProperties3 = connectionInteractionProperties2.source(vector0);
      ConnectionInteractionProperties connectionInteractionProperties4 = connectionInteractionProperties3.target(vector0);
      connectionEntity1.interactionProperties(connectionInteractionProperties4);
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity2 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties5 = new ConnectionInteractionProperties();
      connectionEntity0.equals(connectionEntity3);
      connectionEntity2.rov(baseRov0);
      connectionEntity2.interactionProperties(connectionInteractionProperties5);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity1 = new ConnectionEntity();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      DatasourceTypeProperty datasourceTypeProperty0 = new DatasourceTypeProperty();
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.addTargetItem(datasourceTypeProperty0);
      ArrayList<DatasourceTypeProperty> arrayList0 = new ArrayList<DatasourceTypeProperty>();
      ConnectionInteractionProperties connectionInteractionProperties2 = connectionInteractionProperties1.source(arrayList0);
      ConnectionInteractionProperties connectionInteractionProperties3 = connectionInteractionProperties2.addSourceItem(datasourceTypeProperty0);
      ConnectionInteractionProperties connectionInteractionProperties4 = connectionInteractionProperties3.target(arrayList0);
      connectionEntity1.setInteractionProperties(connectionInteractionProperties4);
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      ConnectionInteractionProperties connectionInteractionProperties5 = new ConnectionInteractionProperties();
      connectionInteractionProperties5.toString();
      connectionEntity0.equals(connectionEntity1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity2.toString();
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity2.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.childSourceSystems(stack0);
      Vector<ConnectionFlag> vector0 = new Vector<ConnectionFlag>();
      connectionEntity3.flags(vector0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity2.equals(connectionEntity3);
      connectionEntity1.getTags();
      connectionEntity2.childSourceSystems((List<Map<String, Object>>) null);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity1 = connectionEntity0.rov(baseRov0);
      ConnectionEntity connectionEntity2 = connectionEntity1.ownerId(" T/oN~_>?H+DH$T6BDJ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      connectionEntity2.toString();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity1.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.childSourceSystems(stack0);
      Vector<ConnectionFlag> vector0 = new Vector<ConnectionFlag>();
      connectionEntity1.setFlags(vector0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity1.equals(connectionEntity3);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity0.equals(connectionEntity2);
      assertTrue(connectionEntity2.equals((Object)connectionEntity1));
      
      ConnectionEntity connectionEntity3 = connectionEntity2.name(" T/oN~_>?H+DH$T6BDJ");
      assertFalse(connectionEntity3.equals((Object)connectionEntity1));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity0.equals(connectionEntity2);
      ConnectionEntity connectionEntity3 = connectionEntity1.rov(baseRov0);
      connectionEntity3.name(" T/oN~_>?H+DH$T6BDJ");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem("");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity0.setGatewayId("");
      ConnectionEntity connectionEntity2 = connectionEntity1.assetCategory(assetCategory0);
      ConnectionEntity connectionEntity3 = connectionEntity2.putSourceSystemItem("", "");
      connectionEntity0.putSourceSystemItem("rh8O[m:Ty?8x", connectionEntity2);
      ConnectionEntity connectionEntity4 = connectionEntity1.addTagsItem("");
      connectionEntity4.getGatewayId();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      connectionEntity3.addChildSourceSystemsItem(hashMap0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      AssetCategory assetCategory0 = AssetCategory.USER;
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity1.assetCategory(assetCategory0);
      ConnectionEntity connectionEntity3 = connectionEntity0.childSourceSystems(stack0);
      connectionEntity1.putPropertiesItem("; usedDirectMemory: ", connectionEntity2);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity0.equals(connectionEntity2);
      connectionEntity1.rov(baseRov0);
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      connectionEntity3.addFlagsItem(connectionFlag0);
      Vector<ConnectionFlag> vector0 = new Vector<ConnectionFlag>();
      connectionEntity3.flags(vector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      connectionEntity0.properties((Map<String, Object>) null);
      connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity1 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity1.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity0.equals(connectionEntity1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      AssetCategory assetCategory0 = AssetCategory.USER;
      connectionEntity1.setAssetCategory(assetCategory0);
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity2 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity0.getDescription();
      connectionEntity2.putSourceSystemItem("\n", (Object) null);
      connectionEntity2.addTagsItem("})QD:Xq.`cgz");
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity0.equals(connectionEntity3);
      connectionEntity2.rov(baseRov0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem("    name: ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "    name: ");
      connectionEntity0.getSourceSystem();
      connectionEntity2.toString();
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      connectionEntity1.setGatewayId("    datasourceType: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "    name: ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity2.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity2.equals(connectionEntity3);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      ConnectionEntity connectionEntity3 = connectionEntity2.ownerId("    name: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity3.toString();
      connectionEntity2.datasourceType("    name: ");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity4 = new ConnectionEntity();
      connectionEntity2.getDescription();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity2.equals(connectionEntity4);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      connectionEntity0.getSourceSystem();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity0.equals(connectionEntity2);
      connectionEntity1.rov(baseRov0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      AssetCategory assetCategory0 = AssetCategory.USER;
      connectionEntity1.setAssetCategory(assetCategory0);
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity2 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity0.equals(connectionEntity3);
      connectionEntity2.rov(baseRov0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.originCountry(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity2.toString();
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity2.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.originCountry(")c&N\"II9<rpUlmE2");
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity2.equals(connectionEntity3);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity1 = connectionEntity0.originCountry("    datasourceType: ");
      connectionEntity1.toString();
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      connectionEntity1.getDescription();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionEntity1.equals(connectionEntity2);
      connectionEntity1.getFlags();
      connectionEntity0.flags((List<ConnectionFlag>) null);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity2.toString();
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity2.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      connectionEntity2.equals(connectionEntity3);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      ConnectionEntity connectionEntity3 = connectionEntity2.ownerId("    name: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity3.toString();
      connectionEntity3.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity4 = new ConnectionEntity();
      connectionEntity2.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity3.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      LinkedList<DatasourceTypeProperty> linkedList0 = new LinkedList<DatasourceTypeProperty>();
      connectionInteractionProperties0.toString();
      connectionEntity2.equals(connectionEntity4);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      ConnectionEntity connectionEntity3 = connectionEntity2.ownerId("    name: ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity4 = connectionEntity3.name(")c&N\"II9<rpUlmE2");
      connectionEntity0.getSourceSystem();
      connectionEntity3.toString();
      connectionEntity4.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity5 = new ConnectionEntity();
      connectionEntity2.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity3.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.addSourceItem((DatasourceTypeProperty) null);
      LinkedList<DatasourceTypeProperty> linkedList0 = new LinkedList<DatasourceTypeProperty>();
      connectionInteractionProperties0.toString();
      connectionInteractionProperties1.setTarget(linkedList0);
      ConnectionInteractionProperties connectionInteractionProperties2 = connectionInteractionProperties1.target(linkedList0);
      ConnectionInteractionProperties connectionInteractionProperties3 = connectionInteractionProperties2.addTargetItem((DatasourceTypeProperty) null);
      ConnectionInteractionProperties connectionInteractionProperties4 = connectionInteractionProperties3.source(linkedList0);
      connectionEntity1.interactionProperties(connectionInteractionProperties4);
      connectionEntity2.equals(connectionEntity5);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      FileSystemHandling.shouldAllThrowIOExceptions();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem(hashMap0);
      ConnectionEntity connectionEntity2 = connectionEntity1.flags((List<ConnectionFlag>) null);
      connectionEntity1.getTags();
      connectionEntity0.setTags((List<String>) null);
      ConnectionEntity connectionEntity3 = connectionEntity2.addTagsItem("C;n\"hY2i5bI");
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConnectionEntity connectionEntity4 = connectionEntity3.sourceSystem(hashMap0);
      connectionEntity3.addChildSourceSystemsItem(hashMap0);
      ConnectionEntity connectionEntity5 = connectionEntity4.ownerId("C;n\"hY2i5bI");
      connectionEntity0.originCountry("#FE\fyA|n%");
      ConnectionEntity connectionEntity6 = connectionEntity5.putSourceSystemItem("p8+HpyQ~p", connectionEntity1);
      ConnectionEntity connectionEntity7 = connectionEntity0.putPropertiesItem("c*Z[zq1A3", (Object) null);
      Vector<java.util.Locale.LanguageRange> vector0 = new Vector<java.util.Locale.LanguageRange>();
      connectionEntity2.description("");
      java.util.Locale.FilteringMode locale_FilteringMode0 = java.util.Locale.FilteringMode.AUTOSELECT_FILTERING;
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) vector0, (Collection<String>) null, locale_FilteringMode0);
      connectionEntity7.setTags(list0);
      connectionEntity3.getGatewayId();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "#FE\fyA|n%");
      ChannelDuplexHandler channelDuplexHandler0 = new ChannelDuplexHandler();
      connectionEntity1.setSourceSystem(hashMap0);
      connectionEntity5.putPropertiesItem("c*Z[zq1A3", channelDuplexHandler0);
      connectionEntity6.toString();
      connectionEntity5.getDescription();
      connectionEntity0.sourceSystem(hashMap0);
      connectionEntity0.addChildSourceSystemsItem(hashMap0);
      connectionEntity5.getTags();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.setOriginCountry("_(x");
      ArrayList<ConnectionFlag> arrayList0 = new ArrayList<ConnectionFlag>();
      ConnectionEntity connectionEntity1 = connectionEntity0.flags(arrayList0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x]0");
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      arrayList0.add(connectionFlag0);
      connectionEntity0.toString();
      List<ConnectionFlag> list0 = connectionEntity0.getFlags();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConnectionEntity connectionEntity2 = connectionEntity0.flags(list0);
      ConnectionEntity connectionEntity3 = connectionEntity0.properties((Map<String, Object>) null);
      connectionEntity3.equals((Object) null);
      connectionEntity0.getDescription();
      ConnectionEntity connectionEntity4 = connectionEntity2.addTagsItem((String) null);
      connectionEntity4.datasourceType("");
      connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity5 = connectionEntity2.sourceSystem((Map<String, Object>) null);
      connectionEntity3.ownerId("");
      connectionEntity1.getDatasourceType();
      connectionEntity5.toString();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType("");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity0.setAssetCategory(assetCategory0);
      connectionEntity1.getSourceSystem();
      connectionEntity0.setSourceSystem((Map<String, Object>) null);
      connectionEntity1.getInteractionProperties();
      ConnectionFlag connectionFlag0 = ConnectionFlag.PERSONAL_CREDENTIALS;
      AssetCategory assetCategory1 = AssetCategory.SYSTEM;
      connectionEntity0.setInteractionProperties((ConnectionInteractionProperties) null);
      connectionEntity1.setAssetCategory(assetCategory1);
      ConnectionEntity connectionEntity2 = connectionEntity1.addFlagsItem(connectionFlag0);
      BaseRov baseRov0 = new BaseRov();
      baseRov0.toString();
      connectionEntity0.setName("");
      connectionEntity2.setRov(baseRov0);
      connectionEntity2.getGatewayId();
      connectionEntity2.getSourceSystem();
      connectionEntity2.sourceSystem((Map<String, Object>) null);
      ConnectionEntity connectionEntity3 = connectionEntity0.sourceSystem((Map<String, Object>) null);
      connectionEntity2.sourceSystem((Map<String, Object>) null);
      connectionEntity1.getOwnerId();
      connectionEntity1.getTags();
      connectionEntity0.toString();
      ArrayList<ConnectionFlag> arrayList0 = new ArrayList<ConnectionFlag>();
      connectionEntity0.flags(arrayList0);
      connectionEntity3.getFlags();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Object object0 = new Object();
      ConnectionEntity connectionEntity1 = connectionEntity0.putPropertiesItem("", object0);
      connectionEntity1.getSourceSystem();
      ConnectionEntity connectionEntity2 = connectionEntity1.properties((Map<String, Object>) null);
      ConnectionEntity connectionEntity3 = connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      connectionEntity2.getSourceSystem();
      connectionEntity3.equals((Object) null);
      ConnectionEntity connectionEntity4 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      Object object1 = new Object();
      connectionEntity4.putSourceSystemItem("", object1);
      connectionEntity0.sourceSystem((Map<String, Object>) null);
      connectionEntity2.setOriginCountry("");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType("    originCountry: ");
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity2 = connectionEntity1.addFlagsItem(connectionFlag0);
      ConnectionEntity connectionEntity3 = connectionEntity2.putPropertiesItem("    originCountry: ", "    originCountry: ");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity1.setAssetCategory(assetCategory0);
      ConnectionEntity connectionEntity4 = connectionEntity3.gatewayId("    originCountry: ");
      connectionEntity1.getChildSourceSystems();
      connectionEntity3.setChildSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity5 = connectionEntity4.originCountry("    datasourceType: ");
      connectionEntity5.setDescription("    originCountry: ");
      connectionEntity2.setDatasourceType("");
      ConnectionEntity connectionEntity6 = connectionEntity5.gatewayId("Mn");
      connectionEntity5.hashCode();
      ConnectionFlag connectionFlag1 = ConnectionFlag.PERSONAL_CREDENTIALS;
      ConnectionEntity connectionEntity7 = connectionEntity6.addFlagsItem(connectionFlag1);
      ConnectionEntity connectionEntity8 = connectionEntity0.name("!");
      ArrayList<Map<String, Object>> arrayList0 = new ArrayList<Map<String, Object>>();
      connectionEntity1.childSourceSystems(arrayList0);
      ConnectionFlag connectionFlag2 = ConnectionFlag.INTERNAL_USE_ONLY;
      ConnectionEntity connectionEntity9 = connectionEntity7.addFlagsItem(connectionFlag2);
      connectionEntity9.ownerId("");
      AssetCategory assetCategory1 = AssetCategory.USER;
      ConnectionEntity connectionEntity10 = connectionEntity6.assetCategory(assetCategory1);
      connectionEntity2.setDescription("    datasourceType: ");
      connectionEntity8.addTagsItem("Mn");
      connectionEntity10.getRov();
      connectionEntity5.getName();
      connectionEntity4.getOwnerId();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte) (-28);
      byteArray0[2] = (byte)96;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Stack<ConnectionFlag> stack0 = new Stack<ConnectionFlag>();
      ConnectionEntity connectionEntity1 = connectionEntity0.flags(stack0);
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.sourceSystem(map0);
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      List<String> list0 = xmlTest0.getIncludedGroups();
      ConnectionEntity connectionEntity3 = connectionEntity2.tags(list0);
      ArrayList<Map<String, Object>> arrayList0 = new ArrayList<Map<String, Object>>((byte)21);
      ConnectionEntity connectionEntity4 = connectionEntity3.childSourceSystems(arrayList0);
      ConnectionEntity connectionEntity5 = connectionEntity4.putSourceSystemItem("", "");
      connectionEntity5.getChildSourceSystems();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionFlag connectionFlag0 = ConnectionFlag.PERSONAL_CREDENTIALS;
      ConnectionEntity connectionEntity1 = connectionEntity0.addFlagsItem(connectionFlag0);
      connectionEntity0.getSourceSystem();
      ConnectionEntity connectionEntity2 = connectionEntity1.sourceSystem((Map<String, Object>) null);
      ConnectionEntity connectionEntity3 = connectionEntity2.gatewayId("H_C\"IpXC");
      ConnectionEntity connectionEntity4 = connectionEntity3.putSourceSystemItem("vv%^f|_=fwwx^p9,Qd&", (Object) null);
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getExcludedGroups();
      ConnectionEntity connectionEntity5 = connectionEntity4.tags(list0);
      connectionEntity5.setOriginCountry("");
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity6 = connectionEntity4.assetCategory(assetCategory0);
      connectionEntity4.getOriginCountry();
      Map<String, Object> map0 = connectionEntity4.getSourceSystem();
      connectionEntity2.setProperties(map0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.addTargetItem((DatasourceTypeProperty) null);
      ConnectionInteractionProperties connectionInteractionProperties2 = connectionInteractionProperties1.addSourceItem((DatasourceTypeProperty) null);
      Stack<DatasourceTypeProperty> stack0 = new Stack<DatasourceTypeProperty>();
      ConnectionInteractionProperties connectionInteractionProperties3 = connectionInteractionProperties2.source(stack0);
      ConnectionInteractionProperties connectionInteractionProperties4 = connectionInteractionProperties3.target(stack0);
      connectionEntity6.setInteractionProperties(connectionInteractionProperties4);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType("    originCountry: ");
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity2 = connectionEntity1.addFlagsItem(connectionFlag0);
      ConnectionEntity connectionEntity3 = connectionEntity2.putPropertiesItem("    originCountry: ", "    originCountry: ");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity1.setAssetCategory(assetCategory0);
      ConnectionEntity connectionEntity4 = connectionEntity3.gatewayId("    originCountry: ");
      connectionEntity1.getChildSourceSystems();
      connectionEntity3.setChildSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity5 = connectionEntity4.originCountry("    datasourceType: ");
      connectionEntity5.setDescription("    originCountry: ");
      ConnectionEntity connectionEntity6 = connectionEntity5.gatewayId("Mn");
      connectionEntity5.hashCode();
      ConnectionFlag connectionFlag1 = ConnectionFlag.PERSONAL_CREDENTIALS;
      ConnectionEntity connectionEntity7 = connectionEntity6.addFlagsItem(connectionFlag1);
      ConnectionEntity connectionEntity8 = connectionEntity0.name("!");
      ArrayList<Map<String, Object>> arrayList0 = new ArrayList<Map<String, Object>>();
      connectionEntity1.childSourceSystems(arrayList0);
      ConnectionFlag connectionFlag2 = ConnectionFlag.INTERNAL_USE_ONLY;
      ConnectionEntity connectionEntity9 = connectionEntity7.addFlagsItem(connectionFlag2);
      connectionEntity9.ownerId("");
      AssetCategory assetCategory1 = AssetCategory.USER;
      ConnectionEntity connectionEntity10 = connectionEntity6.assetCategory(assetCategory1);
      connectionEntity2.setDescription("    datasourceType: ");
      connectionEntity8.addTagsItem("Mn");
      connectionEntity10.getRov();
      connectionEntity5.getName();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.originCountry("reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber");
      ConnectionEntity connectionEntity2 = connectionEntity1.putSourceSystemItem("reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber", "reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber");
      ConnectionEntity connectionEntity3 = connectionEntity1.putPropertiesItem("reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber", connectionEntity2);
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      connectionEntity3.setGatewayId("vV6c@^P|'!RI?FuR!");
      ConnectionEntity connectionEntity4 = connectionEntity3.addFlagsItem(connectionFlag0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity4.setAssetCategory(assetCategory0);
      ConnectionEntity connectionEntity5 = connectionEntity4.gatewayId("reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber");
      ConnectionEntity connectionEntity6 = connectionEntity5.putSourceSystemItem("reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber", connectionEntity0);
      AssetCategory assetCategory1 = AssetCategory.USER;
      connectionEntity6.setAssetCategory(assetCategory1);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      DatasourceTypeProperty datasourceTypeProperty0 = new DatasourceTypeProperty();
      connectionEntity2.setDatasourceType("ZY3qqJ=cN");
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.addSourceItem(datasourceTypeProperty0);
      datasourceTypeProperty0.setGroup("mPk]pP6FWL!WHUH");
      connectionInteractionProperties1.toString();
      List<DatasourceTypeProperty> list0 = connectionInteractionProperties0.getSource();
      ConnectionInteractionProperties connectionInteractionProperties2 = connectionInteractionProperties1.target(list0);
      connectionInteractionProperties2.equals("ZY3qqJ=cN");
      ConnectionInteractionProperties connectionInteractionProperties3 = connectionInteractionProperties2.source(list0);
      ConnectionEntity connectionEntity7 = connectionEntity0.interactionProperties(connectionInteractionProperties3);
      connectionEntity2.setDescription("reactor.core.publisher.FluxHandleFuseable$HandleFuseableConditionalSubscriber");
      connectionEntity5.setName("ZY3qqJ=cN");
      connectionEntity7.getOriginCountry();
      ConnectionEntity connectionEntity8 = connectionEntity5.datasourceType("");
      connectionEntity8.getGatewayId();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      ConnectionEntity connectionEntity1 = connectionEntity0.assetCategory(assetCategory0);
      Vector<Map<String, Object>> vector0 = new Vector<Map<String, Object>>();
      ConnectionEntity connectionEntity2 = connectionEntity1.childSourceSystems(vector0);
      connectionEntity1.setChildSourceSystems(vector0);
      connectionEntity2.getSourceSystem();
      ConnectionEntity connectionEntity3 = connectionEntity2.properties((Map<String, Object>) null);
      String string0 = "S^4'}T4~O";
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        connectionEntity3.putPropertiesItem("S^4'}T4~O", hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.ConnectionEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity1 = connectionEntity0.interactionProperties(connectionInteractionProperties0);
      Vector<Map<String, Object>> vector0 = new Vector<Map<String, Object>>();
      ConnectionEntity connectionEntity2 = connectionEntity1.childSourceSystems(vector0);
      ConnectionEntity connectionEntity3 = connectionEntity2.addTagsItem((String) null);
      ConnectionEntity connectionEntity4 = connectionEntity3.putSourceSystemItem((String) null, connectionEntity2);
      ConnectionEntity connectionEntity5 = connectionEntity4.gatewayId(".Ej");
      connectionEntity5.getSourceSystem();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity1 = connectionEntity0.interactionProperties(connectionInteractionProperties0);
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity3 = connectionEntity2.addChildSourceSystemsItem(hashMap0);
      Vector<java.util.Locale.LanguageRange> vector0 = new Vector<java.util.Locale.LanguageRange>(647, 0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      java.util.Locale.FilteringMode locale_FilteringMode0 = java.util.Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) vector0, (Collection<String>) linkedHashSet0, locale_FilteringMode0);
      ConnectionEntity connectionEntity4 = connectionEntity3.tags(list0);
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      ConnectionEntity connectionEntity5 = connectionEntity4.childSourceSystems(stack0);
      ConnectionEntity connectionEntity6 = connectionEntity5.name("");
      connectionEntity6.sourceSystem(hashMap0);
      connectionEntity0.getGatewayId();
      connectionEntity1.setProperties(hashMap0);
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionEntity5.getInteractionProperties();
      connectionEntity2.interactionProperties(connectionInteractionProperties1);
      ConnectionEntity connectionEntity7 = connectionEntity4.putSourceSystemItem("", connectionEntity5);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity2.assetCategory(assetCategory0);
      connectionEntity5.setOriginCountry("");
      connectionEntity3.setProperties(hashMap0);
      connectionEntity2.getOwnerId();
      connectionEntity7.getOwnerId();
      connectionEntity0.equals(connectionEntity2);
      connectionEntity5.getGatewayId();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.childSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem("4~H/0SCG;dH)F>i}[w2");
      ConnectionEntity connectionEntity2 = connectionEntity1.originCountry("4~H/0SCG;dH)F>i}[w2");
      ConnectionEntity connectionEntity3 = connectionEntity2.description("4~H/0SCG;dH)F>i}[w2");
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.hashCode();
      ConnectionEntity connectionEntity4 = connectionEntity3.childSourceSystems(stack0);
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity5 = connectionEntity3.ownerId("4~H/0SCG;dH)F>i}[w2");
      connectionEntity5.name("t|ZOy]IH;@srQ(");
      baseRov0.toString();
      connectionEntity3.setDescription("2oyH}!G+");
      connectionEntity3.addTagsItem("");
      Integer integer0 = new Integer(122);
      Integer.divideUnsigned(122, 122);
      BaseRov baseRov1 = baseRov0.mode(integer0);
      baseRov1.toString();
      connectionEntity4.setRov(baseRov1);
      connectionEntity0.getRov();
      connectionEntity0.addTagsItem("%uA\"gHn'");
      connectionEntity0.getAssetCategory();
      LinkedList<ConnectionFlag> linkedList0 = new LinkedList<ConnectionFlag>();
      connectionEntity3.setFlags(linkedList0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.name("8maF%3ZHP` j*pT)");
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      ConnectionEntity connectionEntity2 = connectionEntity1.putPropertiesItem("8maF%3ZHP` j*pT)", integer0);
      Stack<ConnectionFlag> stack0 = new Stack<ConnectionFlag>();
      ConnectionEntity connectionEntity3 = connectionEntity2.flags(stack0);
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity4 = connectionEntity3.assetCategory(assetCategory0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity5 = connectionEntity4.sourceSystem(hashMap0);
      ConnectionEntity connectionEntity6 = connectionEntity5.flags(stack0);
      connectionEntity6.setName("8maF%3ZHP` j*pT)");
      connectionEntity6.setOwnerId("8maF%3ZHP` j*pT)");
      connectionEntity3.setDescription("F7;&jmRfgB$9:");
      connectionEntity4.getOwnerId();
      connectionEntity6.getOwnerId();
      AssetCategory assetCategory1 = AssetCategory.USER;
      connectionEntity6.assetCategory(assetCategory1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.originCountry("");
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.interactionProperties(connectionInteractionProperties0);
      ConnectionEntity connectionEntity3 = connectionEntity2.name("");
      ConnectionEntity connectionEntity4 = connectionEntity3.putPropertiesItem("", "");
      connectionEntity4.getChildSourceSystems();
      ConnectionEntity connectionEntity5 = connectionEntity2.childSourceSystems((List<Map<String, Object>>) null);
      ArrayList<Map<String, Object>> arrayList0 = new ArrayList<Map<String, Object>>();
      ConnectionEntity connectionEntity6 = connectionEntity4.childSourceSystems(arrayList0);
      connectionEntity3.getSourceSystem();
      Object object0 = new Object();
      connectionEntity5.putSourceSystemItem("", object0);
      ConnectionEntity connectionEntity7 = connectionEntity6.sourceSystem((Map<String, Object>) null);
      connectionEntity0.equals(connectionEntity5);
      connectionEntity2.getName();
      connectionEntity6.addTagsItem((String) null);
      ConnectionEntity connectionEntity8 = connectionEntity2.addTagsItem("");
      connectionEntity4.getAssetCategory();
      connectionEntity8.getAssetCategory();
      connectionEntity4.getName();
      connectionEntity7.description("D7.AOQ y?&");
      ConnectionEntity connectionEntity9 = connectionEntity6.gatewayId("");
      connectionEntity8.addTagsItem((String) null);
      connectionEntity9.getDatasourceType();
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      connectionEntity1.addFlagsItem(connectionFlag0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.ownerId("V+,-KEI\"*0au");
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("V+,-KEI\"*0au");
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      ConnectionEntity connectionEntity3 = connectionEntity2.childSourceSystems(stack0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity4 = connectionEntity3.sourceSystem(hashMap0);
      XmlDefine xmlDefine0 = new XmlDefine();
      xmlDefine0.toXml("EIq");
      List<String> list0 = xmlDefine0.getIncludes();
      ConnectionEntity connectionEntity5 = connectionEntity4.tags(list0);
      connectionEntity5.setGatewayId("+[Red9+");
      connectionEntity5.setProperties(hashMap0);
      connectionEntity2.getSourceSystem();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity0.setAssetCategory(assetCategory0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.getSourceSystem();
      ConnectionEntity connectionEntity1 = connectionEntity0.sourceSystem((Map<String, Object>) null);
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("Could not emit buffer due to lack of requests");
      ConnectionFlag connectionFlag0 = ConnectionFlag.PERSONAL_CREDENTIALS;
      ConnectionEntity connectionEntity3 = connectionEntity2.addFlagsItem(connectionFlag0);
      BaseRov baseRov0 = new BaseRov();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      BaseRov baseRov1 = baseRov0.mode(integer0);
      ConnectionEntity connectionEntity4 = connectionEntity3.rov(baseRov1);
      List<ConnectionFlag> list0 = connectionEntity1.getFlags();
      baseRov1.toIndentedString(connectionEntity3);
      connectionEntity3.flags(list0);
      ConnectionEntity connectionEntity5 = connectionEntity4.addTagsItem("Could not emit buffer due to lack of requests");
      connectionEntity5.setDescription("");
      connectionEntity3.originCountry("Could not emit buffer due to lack of requests");
      connectionEntity2.flags((List<ConnectionFlag>) null);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity5.setAssetCategory(assetCategory0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      String string0 = "";
      ConnectionEntity connectionEntity1 = connectionEntity0.originCountry("");
      String string1 = "nZ=vV%tWo%o^3P";
      ConnectionEntity connectionEntity2 = connectionEntity1.putSourceSystemItem("nZ=vV%tWo%o^3P", connectionEntity0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      DatasourceTypeProperty datasourceTypeProperty0 = new DatasourceTypeProperty();
      connectionEntity0.hashCode();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      connectionEntity2.tags(linkedList0);
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.addTargetItem(datasourceTypeProperty0);
      ConnectionEntity connectionEntity3 = connectionEntity2.interactionProperties(connectionInteractionProperties1);
      connectionEntity2.datasourceType(string1);
      ConnectionEntity connectionEntity4 = connectionEntity3.putPropertiesItem(string0, string1);
      Vector<Map<String, Object>> vector0 = new Vector<Map<String, Object>>();
      ConnectionEntity connectionEntity5 = connectionEntity4.childSourceSystems(vector0);
      connectionEntity3.setDatasourceType(string1);
      ConnectionEntity connectionEntity6 = connectionEntity5.childSourceSystems(vector0);
      ConnectionEntity connectionEntity7 = connectionEntity6.name(string0);
      BaseRov baseRov0 = new BaseRov();
      StringBuilder stringBuilder0 = new StringBuilder();
      int int0 = 501;
      StringBuilder stringBuilder1 = stringBuilder0.append(int0);
      baseRov0.toString(stringBuilder1);
      connectionEntity3.rov(baseRov0);
      List<String> list0 = null;
      ConnectionEntity connectionEntity8 = connectionEntity4.tags(list0);
      Map<String, Object> map0 = connectionEntity1.getProperties();
      connectionEntity2.addChildSourceSystemsItem(map0);
      connectionEntity8.setDescription(string0);
      connectionEntity1.setGatewayId(string0);
      Map<String, Object> map1 = null;
      connectionEntity5.setSourceSystem(map1);
      connectionEntity4.getAssetCategory();
      connectionEntity7.gatewayId(string0);
      connectionEntity1.getAssetCategory();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.originCountry("    childSourceSystems: ");
      ConnectionEntity connectionEntity1 = connectionEntity0.interactionProperties((ConnectionInteractionProperties) null);
      connectionEntity1.getRov();
      AssetCategory assetCategory0 = AssetCategory.USER;
      connectionEntity1.setAssetCategory(assetCategory0);
      connectionEntity1.setDatasourceType("m'WYYO}V.lhJ7");
      connectionEntity0.hashCode();
      connectionEntity0.getDatasourceType();
      ConnectionFlag connectionFlag0 = ConnectionFlag.INTERNAL_USE_ONLY;
      connectionEntity0.addFlagsItem(connectionFlag0);
      connectionEntity0.getChildSourceSystems();
      DelegatingChannelPromiseNotifier delegatingChannelPromiseNotifier0 = null;
      try {
        delegatingChannelPromiseNotifier0 = new DelegatingChannelPromiseNotifier((ChannelPromise) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // delegate
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem("    interactionProperties: ");
      ConnectionEntity connectionEntity2 = connectionEntity1.originCountry("    interactionProperties: ");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity3 = connectionEntity2.sourceSystem(hashMap0);
      LinkedList<Map<String, Object>> linkedList0 = new LinkedList<Map<String, Object>>();
      connectionEntity0.childSourceSystems(linkedList0);
      ConnectionEntity connectionEntity4 = connectionEntity3.description("sh$,&c6");
      connectionEntity4.getFlags();
      ConnectionEntity connectionEntity5 = connectionEntity4.flags((List<ConnectionFlag>) null);
      AssetCategory assetCategory0 = AssetCategory.USER;
      hashMap0.put("sh$,&c6", connectionEntity5);
      connectionEntity5.setAssetCategory(assetCategory0);
      connectionEntity5.setChildSourceSystems(linkedList0);
      connectionEntity1.gatewayId("sh$,&c6");
      connectionEntity0.getFlags();
      String string0 = connectionEntity0.getDatasourceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      XmlClass xmlClass0 = new XmlClass();
      List<String> list0 = xmlClass0.getExcludedMethods();
      ConnectionEntity connectionEntity1 = connectionEntity0.tags(list0);
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("6#- ");
      ArrayList<ConnectionFlag> arrayList0 = new ArrayList<ConnectionFlag>();
      ConnectionEntity connectionEntity3 = connectionEntity2.flags(arrayList0);
      ConnectionFlag connectionFlag0 = ConnectionFlag.INTERNAL_USE_ONLY;
      ConnectionEntity connectionEntity4 = connectionEntity3.addFlagsItem(connectionFlag0);
      ConnectionEntity connectionEntity5 = connectionEntity4.interactionProperties((ConnectionInteractionProperties) null);
      String string0 = connectionEntity5.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      LinkedList<java.util.Locale.LanguageRange> linkedList0 = new LinkedList<java.util.Locale.LanguageRange>();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getSuiteFiles();
      List<String> list1 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) linkedList0, (Collection<String>) list0);
      ConnectionEntity connectionEntity1 = connectionEntity0.tags(list1);
      ConnectionEntity connectionEntity2 = connectionEntity1.gatewayId("reactor.core.publisher.FluxOnBackpressureLatest$LatestSubscriber");
      connectionEntity2.hashCode();
      ConnectionEntity connectionEntity3 = connectionEntity2.name(",6)j8d}[xErUG");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      ConnectionEntity connectionEntity4 = connectionEntity3.assetCategory(assetCategory0);
      ConnectionFlag connectionFlag0 = ConnectionFlag.PERSONAL_CREDENTIALS;
      ConnectionEntity connectionEntity5 = connectionEntity4.addFlagsItem(connectionFlag0);
      connectionEntity5.getInteractionProperties();
      BaseRov baseRov0 = connectionEntity2.getRov();
      assertNull(baseRov0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Object object0 = new Object();
      ConnectionEntity connectionEntity1 = connectionEntity0.putPropertiesItem("", object0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      LinkedList<DatasourceTypeProperty> linkedList0 = new LinkedList<DatasourceTypeProperty>();
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.target(linkedList0);
      ConnectionEntity connectionEntity2 = connectionEntity1.interactionProperties(connectionInteractionProperties1);
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity3 = connectionEntity2.addChildSourceSystemsItem(map0);
      ConnectionEntity connectionEntity4 = connectionEntity3.datasourceType("");
      Stack<ConnectionFlag> stack0 = new Stack<ConnectionFlag>();
      connectionEntity4.setFlags(stack0);
      ConnectionEntity connectionEntity5 = connectionEntity1.addTagsItem("dvWDl5");
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      connectionEntity5.equals(integer0);
      ConnectionEntity connectionEntity6 = connectionEntity4.datasourceType("");
      Vector<java.util.Locale.LanguageRange> vector0 = new Vector<java.util.Locale.LanguageRange>();
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) vector0, (Collection<String>) null);
      connectionEntity0.setTags(list0);
      AssetCategory assetCategory0 = AssetCategory.USER;
      connectionEntity0.setAssetCategory(assetCategory0);
      connectionEntity3.getAssetCategory();
      connectionEntity4.getTags();
      ConnectionEntity connectionEntity7 = connectionEntity6.gatewayId("T`:6 7-_$-x5|{");
      assertEquals(AssetCategory.USER, connectionEntity7.getAssetCategory());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getIncludedGroups();
      ConnectionEntity connectionEntity1 = connectionEntity0.tags(list0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.getSource();
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.target((List<DatasourceTypeProperty>) null);
      ConnectionEntity connectionEntity2 = connectionEntity1.interactionProperties(connectionInteractionProperties1);
      ConnectionEntity connectionEntity3 = connectionEntity2.gatewayId("*4N+qf_9(^*.h[\t");
      ArrayList<Map<String, Object>> arrayList0 = new ArrayList<Map<String, Object>>();
      ConnectionEntity connectionEntity4 = connectionEntity3.childSourceSystems(arrayList0);
      connectionEntity2.getSourceSystem();
      ConnectionEntity connectionEntity5 = connectionEntity1.properties((Map<String, Object>) null);
      xmlSuite0.getXmlMethodSelectors();
      xmlSuite0.setMethodSelectors((XmlMethodSelectors) null);
      connectionEntity5.getProperties();
      connectionEntity4.setProperties((Map<String, Object>) null);
      // Undeclared exception!
      try { 
        arrayList0.set((int) xmlSuite0.DEFAULT_VERBOSE, (Map<String, Object>) null);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 1, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity1 = connectionEntity0.sourceSystem(hashMap0);
      ConnectionEntity connectionEntity2 = connectionEntity1.putSourceSystemItem("{r+f-'KtgABlg ", "{r+f-'KtgABlg ");
      ConnectionEntity connectionEntity3 = connectionEntity2.addTagsItem("{r+f-'KtgABlg ");
      ConnectionEntity connectionEntity4 = connectionEntity3.childSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity5 = connectionEntity4.addChildSourceSystemsItem(hashMap0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionEntity5.setInteractionProperties(connectionInteractionProperties0);
      assertSame(connectionEntity2, connectionEntity5);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Object object0 = new Object();
      ConnectionEntity connectionEntity1 = connectionEntity0.putPropertiesItem("", object0);
      connectionEntity1.getSourceSystem();
      ConnectionEntity connectionEntity2 = connectionEntity1.properties((Map<String, Object>) null);
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      connectionEntity0.sourceSystem((Map<String, Object>) null);
      connectionEntity2.setOriginCountry("");
      assertNull(connectionEntity2.getGatewayId());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.gatewayId("    name: ");
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity2 = connectionEntity1.addFlagsItem(connectionFlag0);
      PriorityBlockingQueue<ConnectionFlag> priorityBlockingQueue0 = new PriorityBlockingQueue<ConnectionFlag>();
      LinkedList<ConnectionFlag> linkedList0 = new LinkedList<ConnectionFlag>(priorityBlockingQueue0);
      ConnectionEntity connectionEntity3 = connectionEntity2.flags(linkedList0);
      ConnectionEntity connectionEntity4 = connectionEntity3.tags((List<String>) null);
      ConnectionEntity connectionEntity5 = connectionEntity4.addTagsItem("    name: ");
      String string0 = connectionEntity5.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      HashMap<String, ChannelDuplexHandler> hashMap1 = new HashMap<String, ChannelDuplexHandler>();
      Class<String> class0 = String.class;
      LogLevel logLevel0 = LogLevel.ERROR;
      LoggingHandler loggingHandler0 = new LoggingHandler(class0, logLevel0);
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      hashMap0.put("zipkin2.internal.DelayLimiter$Suppression", integer0);
      hashMap1.put("zipkin2.internal.DelayLimiter$Suppression", loggingHandler0);
      hashMap0.putAll(hashMap1);
      connectionEntity0.setSourceSystem(hashMap0);
      connectionEntity0.setChildSourceSystems((List<Map<String, Object>>) null);
      connectionEntity0.setName("zipkin2.internal.DelayLimiter$Suppression");
      connectionEntity0.getDescription();
      connectionEntity0.setChildSourceSystems((List<Map<String, Object>>) null);
      assertNull(connectionEntity0.getAssetCategory());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity1 = connectionEntity0.interactionProperties(connectionInteractionProperties0);
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("");
      Map<String, Object> map0 = connectionEntity2.getProperties();
      ConnectionEntity connectionEntity3 = connectionEntity2.addChildSourceSystemsItem(map0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity4 = connectionEntity3.properties(hashMap0);
      List<Map<String, Object>> list0 = connectionEntity3.getChildSourceSystems();
      ConnectionEntity connectionEntity5 = connectionEntity4.childSourceSystems(list0);
      assertNull(connectionEntity5.getDescription());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      connectionEntity0.getSourceSystem();
      connectionEntity0.setProperties((Map<String, Object>) null);
      BaseRov baseRov1 = baseRov0.mode(integer0);
      ConnectionEntity connectionEntity1 = connectionEntity0.rov(baseRov1);
      connectionEntity1.rov(baseRov0);
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("");
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      connectionEntity2.setGatewayId("");
      baseRov0.toString();
      Integer.getInteger("", integer0);
      Integer integer1 = new Integer((-827));
      baseRov0.setMode(integer1);
      ConnectionEntity connectionEntity3 = connectionEntity2.addFlagsItem(connectionFlag0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      connectionEntity3.properties(hashMap0);
      connectionEntity3.setName("");
      connectionEntity3.getOriginCountry();
      connectionEntity2.setDescription("");
      connectionEntity0.getTags();
      ConnectionEntity connectionEntity4 = connectionEntity3.addTagsItem("class BaseRov {\n    mode: java.lang.Integer@0000000004\n}");
      assertEquals("", connectionEntity4.getDescription());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity1 = connectionEntity0.rov(baseRov0);
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity2 = connectionEntity1.assetCategory(assetCategory0);
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ConnectionEntity connectionEntity3 = connectionEntity2.tags(arrayList0);
      ConnectionEntity connectionEntity4 = connectionEntity3.interactionProperties((ConnectionInteractionProperties) null);
      connectionEntity1.getChildSourceSystems();
      ConnectionEntity connectionEntity5 = connectionEntity4.childSourceSystems((List<Map<String, Object>>) null);
      String string0 = connectionEntity5.toString();
      assertFalse(arrayList0.contains(string0));
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      ConnectionEntity connectionEntity1 = connectionEntity0.assetCategory(assetCategory0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.interactionProperties(connectionInteractionProperties0);
      ConnectionEntity connectionEntity3 = connectionEntity2.putPropertiesItem("7\"gEnL1N9a%E9", connectionEntity1);
      ConnectionEntity connectionEntity4 = connectionEntity3.name("");
      Vector<ConnectionFlag> vector0 = new Vector<ConnectionFlag>();
      ConnectionEntity connectionEntity5 = connectionEntity4.flags(vector0);
      boolean boolean0 = connectionEntity5.equals(connectionEntity2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType((String) null);
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem(",:Y>{");
      ConnectionEntity connectionEntity3 = connectionEntity2.childSourceSystems((List<Map<String, Object>>) null);
      Map<String, Object> map0 = connectionEntity3.getProperties();
      ConnectionEntity connectionEntity4 = connectionEntity3.sourceSystem(map0);
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity5 = connectionEntity4.addFlagsItem(connectionFlag0);
      connectionEntity5.hashCode();
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.description("");
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity2 = connectionEntity1.assetCategory(assetCategory0);
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity3 = connectionEntity2.addFlagsItem(connectionFlag0);
      ConnectionEntity connectionEntity4 = connectionEntity3.ownerId("~B=8<t^v");
      BaseRov baseRov0 = new BaseRov();
      connectionEntity4.setRov(baseRov0);
      assertNull(connectionEntity4.getName());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.getSourceSystem();
      ConnectionEntity connectionEntity1 = connectionEntity0.sourceSystem((Map<String, Object>) null);
      ConnectionEntity connectionEntity2 = connectionEntity1.gatewayId((String) null);
      ConnectionEntity connectionEntity3 = connectionEntity2.originCountry("    name: ");
      ConnectionEntity connectionEntity4 = connectionEntity3.addTagsItem("    name: ");
      ConnectionEntity connectionEntity5 = connectionEntity4.addChildSourceSystemsItem((Map<String, Object>) null);
      connectionEntity5.getOwnerId();
      AssetCategory assetCategory0 = AssetCategory.USER;
      XmlDefine xmlDefine0 = new XmlDefine();
      List<String> list0 = xmlDefine0.getIncludes();
      connectionEntity3.tags(list0);
      connectionEntity3.setAssetCategory(assetCategory0);
      ConnectionEntity connectionEntity6 = connectionEntity4.datasourceType("Sb8OW~*-");
      ConnectionEntity connectionEntity7 = connectionEntity6.datasourceType((String) null);
      assertSame(connectionEntity7, connectionEntity1);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Stack<ConnectionFlag> stack0 = new Stack<ConnectionFlag>();
      Vector<Map<String, Object>> vector0 = new Vector<Map<String, Object>>();
      ConnectionEntity connectionEntity1 = connectionEntity0.childSourceSystems(vector0);
      assertNull(connectionEntity1.getOriginCountry());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      ConnectionEntity connectionEntity1 = connectionEntity0.assetCategory(assetCategory0);
      LinkedList<ConnectionFlag> linkedList0 = new LinkedList<ConnectionFlag>();
      ConnectionEntity connectionEntity2 = connectionEntity1.flags(linkedList0);
      ConnectionEntity connectionEntity3 = connectionEntity2.originCountry("");
      connectionEntity3.getInteractionProperties();
      Map<String, Object> map0 = connectionEntity1.getProperties();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      ConnectionEntity connectionEntity1 = connectionEntity0.assetCategory(assetCategory0);
      connectionEntity1.properties((Map<String, Object>) null);
      connectionEntity0.setProperties((Map<String, Object>) null);
      EpollSocketChannel epollSocketChannel0 = null;
      try {
        epollSocketChannel0 = new EpollSocketChannel();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.channel.epoll.LinuxSocket
         //
         verifyException("io.netty.channel.epoll.EpollSocketChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem(map0);
      ConnectionEntity connectionEntity2 = connectionEntity1.properties(map0);
      ConnectionEntity connectionEntity3 = connectionEntity2.originCountry("");
      ConnectionEntity connectionEntity4 = connectionEntity3.ownerId("");
      ConnectionEntity connectionEntity5 = connectionEntity4.putPropertiesItem("", connectionEntity3);
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity6 = connectionEntity5.addFlagsItem(connectionFlag0);
      assertEquals("", connectionEntity6.getOwnerId());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.description("3pymRa0{+tj%{1qxk");
      ConnectionEntity connectionEntity2 = connectionEntity1.originCountry("3pymRa0{+tj%{1qxk");
      ConnectionEntity connectionEntity3 = connectionEntity2.ownerId("3pymRa0{+tj%{1qxk");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity4 = connectionEntity3.sourceSystem(hashMap0);
      ConnectionEntity connectionEntity5 = connectionEntity4.properties(hashMap0);
      connectionEntity5.getAssetCategory();
      connectionEntity0.getGatewayId();
      ConnectionEntity connectionEntity6 = connectionEntity2.description("");
      assertSame(connectionEntity6, connectionEntity5);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity1 = connectionEntity0.properties(hashMap0);
      connectionEntity1.setDescription("}");
      assertNull(connectionEntity1.getName());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionFlag connectionFlag0 = ConnectionFlag.PERSONAL_CREDENTIALS;
      connectionEntity0.equals(connectionFlag0);
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem(map0);
      assertNull(connectionEntity1.getOriginCountry());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.ownerId("    gatewayId: ");
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      connectionEntity0.setTags(list0);
      ConnectionEntity connectionEntity2 = connectionEntity1.tags(list0);
      ConnectionEntity connectionEntity3 = connectionEntity2.originCountry("    gatewayId: ");
      connectionEntity3.toString();
      ConnectionEntity connectionEntity4 = connectionEntity3.addTagsItem("f!/_r$E?Z[R");
      connectionEntity4.setTags(list0);
      connectionEntity1.getFlags();
      connectionEntity0.gatewayId("");
      ConnectionEntity connectionEntity5 = connectionEntity4.flags((List<ConnectionFlag>) null);
      ConnectionEntity connectionEntity6 = connectionEntity4.name("");
      connectionEntity6.getFlags();
      connectionEntity5.setChildSourceSystems((List<Map<String, Object>>) null);
      assertSame(connectionEntity3, connectionEntity5);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.description((String) null);
      Map<String, Object> map0 = connectionEntity1.getProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.sourceSystem(map0);
      ConnectionEntity connectionEntity3 = connectionEntity2.name(")g^p9o)<n");
      connectionEntity0.getTags();
      ConnectionEntity connectionEntity4 = connectionEntity3.tags((List<String>) null);
      ConnectionEntity connectionEntity5 = connectionEntity4.ownerId("XG.;a%Ox");
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      ConnectionEntity connectionEntity6 = connectionEntity5.putPropertiesItem("classes", integer0);
      assertSame(connectionEntity6, connectionEntity4);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType("    flags: ");
      Map<String, Object> map0 = connectionEntity1.getProperties();
      connectionEntity1.setSourceSystem(map0);
      ConnectionEntity connectionEntity2 = connectionEntity0.gatewayId("FwB4.)51Ulf1rNx7\"..");
      Stack<ConnectionFlag> stack0 = new Stack<ConnectionFlag>();
      ConnectionEntity connectionEntity3 = connectionEntity2.flags(stack0);
      assertNull(connectionEntity3.getDescription());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.getFlags();
      ConnectionEntity connectionEntity1 = connectionEntity0.flags((List<ConnectionFlag>) null);
      ConnectionEntity connectionEntity2 = connectionEntity1.originCountry("");
      connectionEntity0.getSourceSystem();
      ConnectionEntity connectionEntity3 = connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity4 = connectionEntity3.addTagsItem("");
      ConnectionEntity connectionEntity5 = connectionEntity4.ownerId("");
      ConnectionEntity connectionEntity6 = connectionEntity5.flags((List<ConnectionFlag>) null);
      assertSame(connectionEntity5, connectionEntity6);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      connectionEntity0.rov(baseRov0);
      LinkedList<ConnectionFlag> linkedList0 = new LinkedList<ConnectionFlag>();
      connectionEntity0.setFlags(linkedList0);
      assertNull(connectionEntity0.getOriginCountry());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity1 = connectionEntity0.properties(hashMap0);
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity2 = connectionEntity1.assetCategory(assetCategory0);
      ConnectionEntity connectionEntity3 = connectionEntity2.sourceSystem(hashMap0);
      connectionEntity1.setOwnerId("iX36]");
      ConnectionEntity connectionEntity4 = connectionEntity3.ownerId((String) null);
      ConnectionEntity connectionEntity5 = connectionEntity4.name("xU?{q\"l!pIi1]s");
      connectionEntity5.getChildSourceSystems();
      connectionEntity0.setChildSourceSystems((List<Map<String, Object>>) null);
      assertEquals(AssetCategory.USER, connectionEntity0.getAssetCategory());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem(hashMap0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.interactionProperties(connectionInteractionProperties0);
      ConnectionEntity connectionEntity3 = connectionEntity2.originCountry("g");
      ConnectionEntity connectionEntity4 = connectionEntity3.ownerId("syscall:write");
      ConnectionEntity connectionEntity5 = connectionEntity4.putSourceSystemItem("syscall:write", "syscall:write");
      String string0 = connectionEntity5.getOriginCountry();
      assertEquals("g", string0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.description("Dropping acquisition {} because of asynchronous user cancellation");
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.sourceSystem(map0);
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getIncludedGroups();
      ConnectionEntity connectionEntity3 = connectionEntity2.tags(list0);
      ConnectionEntity connectionEntity4 = connectionEntity3.originCountry("Dropping acquisition {} because of asynchronous user cancellation");
      ConnectionEntity connectionEntity5 = connectionEntity4.properties(map0);
      String string0 = connectionEntity5.getDescription();
      assertEquals("Dropping acquisition {} because of asynchronous user cancellation", string0);
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.description("g");
      ConnectionEntity connectionEntity2 = connectionEntity1.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity3 = connectionEntity2.sourceSystem((Map<String, Object>) null);
      ConnectionEntity connectionEntity4 = connectionEntity3.datasourceType("g");
      ConnectionEntity connectionEntity5 = connectionEntity4.properties((Map<String, Object>) null);
      ConnectionEntity connectionEntity6 = connectionEntity5.ownerId("io.netty.channel.epoll.EpollChannelConfig");
      assertSame(connectionEntity5, connectionEntity6);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      LinkedList<ConnectionFlag> linkedList0 = new LinkedList<ConnectionFlag>();
      ConnectionEntity connectionEntity1 = connectionEntity0.flags(linkedList0);
      ConnectionEntity connectionEntity2 = connectionEntity1.putPropertiesItem("AvMYy(U", "AvMYy(U");
      DefaultEventLoop defaultEventLoop0 = new DefaultEventLoop();
      DefaultChannelProgressivePromise defaultChannelProgressivePromise0 = new DefaultChannelProgressivePromise((Channel) null, defaultEventLoop0);
      DelegatingChannelPromiseNotifier delegatingChannelPromiseNotifier0 = new DelegatingChannelPromiseNotifier(defaultChannelProgressivePromise0);
      ConnectionEntity connectionEntity3 = connectionEntity2.putSourceSystemItem("AvMYy(U", delegatingChannelPromiseNotifier0);
      ConnectionEntity connectionEntity4 = connectionEntity3.gatewayId("F }or");
      ConnectionEntity connectionEntity5 = connectionEntity4.sourceSystem((Map<String, Object>) null);
      connectionEntity5.setDatasourceType("F }or");
      assertSame(connectionEntity5, connectionEntity3);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType(",]/iJo3AM% eebb");
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("");
      assertNull(connectionEntity2.getName());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      AssetCategory assetCategory0 = AssetCategory.USER;
      connectionEntity1.setAssetCategory(assetCategory0);
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      String string0 = connectionEntity0.toString();
      ConnectionEntity connectionEntity2 = connectionEntity0.description("class ConnectionEntity {\n    datasourceType: null\n    description: null\n    name: null\n    gatewayId: null\n    flags: null\n    originCountry: null\n    ownerId: null\n    rov: null\n    properties: java.util.HashMap@0000000002\n    interactionProperties: null\n    sourceSystem: null\n    assetCategory: com.ibm.watson.data.client.model.enums.AssetCategory@0000000005\n    childSourceSystems: null\n    tags: java.util.ArrayList@0000000003\n}");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      String string1 = connectionEntity0.getDescription();
      assertTrue(string1.equals((Object)string0));
      
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      boolean boolean0 = connectionEntity0.equals(connectionEntity3);
      assertFalse(boolean0);
      
      connectionEntity2.rov(baseRov0);
      assertFalse(connectionEntity0.equals((Object)connectionEntity3));
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      connectionEntity0.getDescription();
      connectionEntity1.putSourceSystemItem("\n", (Object) null);
      connectionEntity1.addTagsItem("})QD:Xq.`cgz");
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      boolean boolean0 = connectionEntity0.equals(connectionEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity1 = connectionEntity0.assetCategory(assetCategory0);
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      ConnectionEntity connectionEntity3 = connectionEntity2.description("f3J#");
      connectionEntity0.getChildSourceSystems();
      ConnectionEntity connectionEntity4 = connectionEntity3.childSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity5 = connectionEntity4.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity6 = connectionEntity1.addChildSourceSystemsItem((Map<String, Object>) null);
      connectionEntity5.equals("");
      ArrayList<ConnectionFlag> arrayList0 = new ArrayList<ConnectionFlag>();
      ConnectionEntity connectionEntity7 = connectionEntity5.flags(arrayList0);
      connectionEntity1.getSourceSystem();
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      connectionEntity5.addFlagsItem(connectionFlag0);
      ConnectionEntity connectionEntity8 = connectionEntity7.childSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity9 = connectionEntity8.addChildSourceSystemsItem((Map<String, Object>) null);
      connectionEntity0.sourceSystem((Map<String, Object>) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f3J#");
      AssetCategory assetCategory1 = AssetCategory.SYSTEM;
      ConnectionEntity connectionEntity10 = connectionEntity6.assetCategory(assetCategory1);
      assertSame(connectionEntity10, connectionEntity9);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.childSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem("4~H/0SCG;dH)F>i}[w2");
      ConnectionEntity connectionEntity2 = connectionEntity1.originCountry("4~H/0SCG;dH)F>i}[w2");
      ConnectionEntity connectionEntity3 = connectionEntity2.description("4~H/0SCG;dH)F>i}[w2");
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.hashCode();
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity4 = connectionEntity3.ownerId("4~H/0SCG;dH)F>i}[w2");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity4.assetCategory(assetCategory0);
      connectionEntity4.name("t|ZOy]IH;@srQ(");
      baseRov0.toString();
      connectionEntity3.setDescription("t|ZOy]IH;@srQ(");
      connectionEntity3.addTagsItem("");
      Integer integer0 = new Integer(122);
      Integer.divideUnsigned(122, 122);
      BaseRov baseRov1 = baseRov0.mode(integer0);
      baseRov0.toString();
      connectionEntity3.setRov(baseRov1);
      connectionEntity0.getRov();
      connectionEntity0.addTagsItem("%uA\"gHn'");
      connectionEntity0.getAssetCategory();
      LinkedList<ConnectionFlag> linkedList0 = new LinkedList<ConnectionFlag>();
      connectionEntity3.setFlags(linkedList0);
      String string0 = connectionEntity4.getGatewayId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity1 = new ConnectionEntity();
      assertTrue(connectionEntity1.equals((Object)connectionEntity0));
      
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.name(")c&N\"II9<rpUlmE2");
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      boolean boolean0 = connectionEntity0.equals(connectionEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity1 = connectionEntity0.rov(baseRov0);
      connectionEntity1.toString();
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      connectionEntity1.getDescription();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      boolean boolean0 = connectionEntity1.equals(connectionEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity2 = connectionEntity1.rov(baseRov0);
      connectionEntity0.getSourceSystem();
      connectionEntity2.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity2.getDescription();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      connectionEntity3.setDatasourceType(" T/oN~_>?H+DH$T6BDJ");
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      boolean boolean0 = connectionEntity2.equals(connectionEntity3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      AssetCategory assetCategory0 = AssetCategory.USER;
      connectionEntity1.setAssetCategory(assetCategory0);
      BaseRov baseRov0 = new BaseRov();
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity2 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      connectionEntity0.getDescription();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      boolean boolean0 = connectionEntity0.equals(connectionEntity3);
      assertFalse(boolean0);
      
      ConnectionEntity connectionEntity4 = connectionEntity2.rov(baseRov0);
      connectionEntity4.rov(baseRov0);
      ConnectionEntity connectionEntity5 = connectionEntity0.assetCategory(assetCategory0);
      assertFalse(connectionEntity5.equals((Object)connectionEntity3));
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity1 = new ConnectionEntity();
      connectionEntity0.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity1.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      boolean boolean0 = connectionEntity0.equals(connectionEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.addTagsItem(" T/oN~_>?H+DH$T6BDJ");
      BaseRov baseRov0 = new BaseRov();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      connectionEntity0.getSourceSystem();
      connectionEntity0.toString();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, " T/oN~_>?H+DH$T6BDJ");
      ConnectionEntity connectionEntity2 = new ConnectionEntity();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity0.childSourceSystems(stack0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      boolean boolean0 = connectionEntity0.equals(connectionEntity2);
      assertFalse(boolean0);
      
      connectionEntity1.rov(baseRov0);
      connectionEntity1.interactionProperties(connectionInteractionProperties0);
      assertFalse(connectionEntity0.equals((Object)connectionEntity2));
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity1 = connectionEntity0.rov(baseRov0);
      ConnectionEntity connectionEntity2 = connectionEntity0.gatewayId(" T/oN~_>?H+DH$T6BDJ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      connectionEntity2.toString();
      ConnectionEntity connectionEntity3 = new ConnectionEntity();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      connectionEntity1.getDescription();
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.ownerId("class ConnectionEntity {\n    datasourceType: null\n    description: null\n    name: null\n    gatewayId: java.lang.String@0000000004\n    flags: null\n    originCountry: null\n    ownerId: null\n    rov: com.ibm.watson.data.client.model.BaseRov@0000000002\n    properties: java.util.HashMap@0000000003\n    interactionProperties: null\n    sourceSystem: null\n    assetCategory: null\n    childSourceSystems: null\n    tags: null\n}");
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      connectionInteractionProperties0.toString();
      boolean boolean0 = connectionEntity1.equals(connectionEntity3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.setOriginCountry("_(x");
      ArrayList<ConnectionFlag> arrayList0 = new ArrayList<ConnectionFlag>();
      ConnectionEntity connectionEntity1 = connectionEntity0.flags(arrayList0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x]0");
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      arrayList0.add(connectionFlag0);
      String string0 = connectionEntity0.toString();
      List<ConnectionFlag> list0 = connectionEntity0.getFlags();
      ConnectionEntity connectionEntity2 = connectionEntity0.flags(list0);
      ConnectionEntity connectionEntity3 = connectionEntity0.properties((Map<String, Object>) null);
      connectionEntity3.equals((Object) null);
      connectionEntity0.getDescription();
      connectionEntity2.addTagsItem((String) null);
      connectionEntity0.addChildSourceSystemsItem((Map<String, Object>) null);
      ConnectionEntity connectionEntity4 = connectionEntity2.sourceSystem((Map<String, Object>) null);
      connectionEntity3.ownerId("");
      connectionEntity1.getDatasourceType();
      String string1 = connectionEntity4.toString();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.name("Y~#^s4Z;y_");
      ConnectionEntity connectionEntity2 = connectionEntity1.description("Y~#^s4Z;y_");
      ConnectionEntity connectionEntity3 = connectionEntity2.gatewayId("Y~#^s4Z;y_");
      Map<String, Object> map0 = connectionEntity2.getProperties();
      connectionEntity3.setOwnerId("Y~#^s4Z;y_");
      connectionEntity3.setDescription((String) null);
      ConnectionEntity connectionEntity4 = connectionEntity3.properties(map0);
      connectionEntity1.setOwnerId("Y~#^s4Z;y_");
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      connectionEntity2.setProperties(map0);
      connectionEntity4.setChildSourceSystems(stack0);
      ConnectionEntity connectionEntity5 = connectionEntity2.name("org.testng.xml.XmlMethodSelector");
      connectionEntity5.toString();
      Vector<java.util.Locale.LanguageRange> vector0 = new Vector<java.util.Locale.LanguageRange>();
      java.util.Locale.FilteringMode locale_FilteringMode0 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) vector0, (Collection<String>) null, locale_FilteringMode0);
      connectionEntity5.setTags(list0);
      connectionEntity4.originCountry("4+2[OGkTjBr''=");
      connectionEntity3.setProperties(map0);
      connectionEntity5.toString();
      connectionEntity0.childSourceSystems(stack0);
      BaseRov baseRov0 = new BaseRov();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      baseRov0.mode(integer0);
      Vector<ConnectionFlag> vector1 = new Vector<ConnectionFlag>();
      connectionEntity1.setFlags(vector1);
      connectionEntity0.setDatasourceType("3T");
      assertEquals("Y~#^s4Z;y_", connectionEntity0.getGatewayId());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType("    originCountry: ");
      ConnectionEntity connectionEntity2 = connectionEntity1.putPropertiesItem("    originCountry: ", "    originCountry: ");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity1.setAssetCategory(assetCategory0);
      ConnectionEntity connectionEntity3 = connectionEntity2.gatewayId("    originCountry: ");
      ConnectionEntity connectionEntity4 = connectionEntity3.description("    originCountry: ");
      connectionEntity4.setDescription("    originCountry: ");
      ConnectionEntity connectionEntity5 = connectionEntity4.gatewayId("Mn");
      connectionEntity4.hashCode();
      ConnectionFlag connectionFlag0 = ConnectionFlag.PERSONAL_CREDENTIALS;
      ConnectionEntity connectionEntity6 = connectionEntity5.addFlagsItem(connectionFlag0);
      ConnectionEntity connectionEntity7 = connectionEntity0.name("!");
      ArrayList<Map<String, Object>> arrayList0 = new ArrayList<Map<String, Object>>();
      connectionEntity1.childSourceSystems(arrayList0);
      ConnectionFlag connectionFlag1 = ConnectionFlag.INTERNAL_USE_ONLY;
      ConnectionEntity connectionEntity8 = connectionEntity6.addFlagsItem(connectionFlag1);
      connectionEntity8.ownerId("");
      AssetCategory assetCategory1 = AssetCategory.USER;
      ConnectionEntity connectionEntity9 = connectionEntity5.assetCategory(assetCategory1);
      connectionEntity1.setDescription("    datasourceType: ");
      connectionEntity7.addTagsItem("Mn");
      connectionEntity9.getRov();
      String string0 = connectionEntity4.getName();
      assertEquals("!", string0);
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.ownerId("V+C-KEI'*0au");
      ConnectionEntity connectionEntity2 = connectionEntity1.addTagsItem("V+C-KEI'*0au");
      Stack<Map<String, Object>> stack0 = new Stack<Map<String, Object>>();
      ConnectionEntity connectionEntity3 = connectionEntity2.childSourceSystems(stack0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity4 = connectionEntity3.sourceSystem(hashMap0);
      XmlDefine xmlDefine0 = new XmlDefine();
      xmlDefine0.toXml("EIq");
      List<String> list0 = xmlDefine0.getIncludes();
      ConnectionEntity connectionEntity5 = connectionEntity4.tags(list0);
      connectionEntity5.setGatewayId("+[Red9+");
      connectionEntity5.setProperties(hashMap0);
      connectionEntity2.getSourceSystem();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity0.setAssetCategory(assetCategory0);
      boolean boolean0 = connectionEntity2.equals(connectionEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType("");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      connectionEntity0.setAssetCategory(assetCategory0);
      connectionEntity1.getSourceSystem();
      connectionEntity0.setSourceSystem((Map<String, Object>) null);
      connectionEntity1.getInteractionProperties();
      ConnectionFlag connectionFlag0 = ConnectionFlag.PERSONAL_CREDENTIALS;
      AssetCategory assetCategory1 = AssetCategory.SYSTEM;
      connectionEntity0.setInteractionProperties((ConnectionInteractionProperties) null);
      connectionEntity1.setAssetCategory(assetCategory1);
      ConnectionEntity connectionEntity2 = connectionEntity1.addFlagsItem(connectionFlag0);
      BaseRov baseRov0 = new BaseRov();
      baseRov0.toString();
      connectionEntity0.setName("");
      connectionEntity2.setRov(baseRov0);
      connectionEntity2.getGatewayId();
      connectionEntity2.sourceSystem((Map<String, Object>) null);
      connectionEntity0.sourceSystem((Map<String, Object>) null);
      connectionEntity2.sourceSystem((Map<String, Object>) null);
      connectionEntity1.getOwnerId();
      connectionEntity1.getTags();
      connectionEntity0.toString();
      ArrayList<ConnectionFlag> arrayList0 = new ArrayList<ConnectionFlag>();
      ConnectionEntity connectionEntity3 = connectionEntity0.flags(arrayList0);
      assertNull(connectionEntity3.getDescription());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.childSourceSystems((List<Map<String, Object>>) null);
      ConnectionEntity connectionEntity2 = connectionEntity1.interactionProperties((ConnectionInteractionProperties) null);
      ConnectionEntity connectionEntity3 = connectionEntity2.originCountry("onSubscribe");
      Vector<String> vector0 = new Vector<String>();
      ConnectionEntity connectionEntity4 = connectionEntity3.tags(vector0);
      ConnectionEntity connectionEntity5 = connectionEntity0.childSourceSystems((List<Map<String, Object>>) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      connectionEntity1.putSourceSystemItem("onSubscribe", connectionEntity2);
      ConnectionEntity connectionEntity6 = connectionEntity5.putSourceSystemItem("onSubscribe", connectionEntity1);
      connectionEntity4.childSourceSystems((List<Map<String, Object>>) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      Vector<ConnectionFlag> vector1 = new Vector<ConnectionFlag>();
      connectionEntity4.setFlags(vector1);
      ConnectionEntity connectionEntity7 = connectionEntity6.addTagsItem("Bh");
      connectionEntity7.tags(vector0);
      ImmediateEventExecutor immediateEventExecutor0 = ImmediateEventExecutor.INSTANCE;
      Callable<Integer> callable0 = (Callable<Integer>) mock(Callable.class, new ViolatedAssumptionAnswer());
      connectionEntity2.setOwnerId("    assetCategory: ");
      assertEquals("onSubscribe", connectionEntity2.getOriginCountry());
  }
}
