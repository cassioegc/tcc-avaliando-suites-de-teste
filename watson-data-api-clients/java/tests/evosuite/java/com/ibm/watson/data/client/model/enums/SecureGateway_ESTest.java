/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:31:18 GMT 2021
 */

package com.ibm.watson.data.client.model.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.enums.SecureGateway;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SecureGateway_ESTest extends SecureGateway_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SecureGateway secureGateway0 = SecureGateway.fromValue("required");
      assertEquals(SecureGateway.REQUIRED, secureGateway0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      SecureGateway[] secureGatewayArray0 = SecureGateway.values();
      assertEquals(3, secureGatewayArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      SecureGateway secureGateway0 = SecureGateway.valueOf("NOT_APPLICABLE");
      assertEquals("not_applicable", secureGateway0.getValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      SecureGateway secureGateway0 = SecureGateway.fromValue("not_applicable");
      assertEquals(SecureGateway.NOT_APPLICABLE, secureGateway0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        SecureGateway.fromValue("_K{OS\u0006e[");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '_K{OS\u0006e['
         //
         verifyException("com.ibm.watson.data.client.model.enums.SecureGateway", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      SecureGateway secureGateway0 = SecureGateway.NOT_APPLICABLE;
      String string0 = secureGateway0.toString();
      assertEquals("not_applicable", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      SecureGateway secureGateway0 = SecureGateway.NOT_APPLICABLE;
      String string0 = secureGateway0.getValue();
      assertEquals("not_applicable", string0);
  }
}
