/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 16:33:29 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ArtifactMetadata;
import com.ibm.watson.data.client.model.Category;
import com.ibm.watson.data.client.model.enums.ArtifactState;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArtifactMetadata_ESTest extends ArtifactMetadata_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.versionId("/E@j{#{GA");
      String string0 = artifactMetadata0.getVersionId();
      assertEquals("/E@j{#{GA", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = artifactMetadata0.versionId("");
      String string0 = artifactMetadata1.getVersionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactState artifactState0 = ArtifactState.DRAFT;
      ArtifactMetadata artifactMetadata1 = artifactMetadata0.state(artifactState0);
      ArtifactState artifactState1 = artifactMetadata1.getState();
      assertSame(artifactState0, artifactState1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = artifactMetadata0.publishedAncestorId("/:upO23iz");
      String string0 = artifactMetadata1.getPublishedAncestorId();
      assertEquals("/:upO23iz", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.publishedAncestorId("");
      String string0 = artifactMetadata0.getPublishedAncestorId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = artifactMetadata0.name("");
      String string0 = artifactMetadata1.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      MockDate mockDate0 = new MockDate();
      artifactMetadata0.effectiveStartDate(mockDate0);
      Date date0 = artifactMetadata0.getEffectiveStartDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = artifactMetadata0.artifactType("4#hCim2i)*9*!Z%*QO");
      String string0 = artifactMetadata1.getArtifactType();
      assertEquals("4#hCim2i)*9*!Z%*QO", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.setArtifactType("");
      String string0 = artifactMetadata0.getArtifactType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.artifactId("dD#BZ|x& a");
      String string0 = artifactMetadata0.getArtifactId();
      assertEquals("dD#BZ|x& a", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.setArtifactId("");
      String string0 = artifactMetadata0.getArtifactId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.setVersionId("n=SM^#RM^4>hdwZeJA4");
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      assertTrue(artifactMetadata1.equals((Object)artifactMetadata0));
      
      ArtifactState artifactState0 = ArtifactState.DRAFT;
      artifactMetadata1.state(artifactState0);
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.publishedAncestorId("}");
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.name("tpqn}w-zI^r2H");
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      MockDate mockDate0 = new MockDate();
      artifactMetadata0.effectiveEndDate(mockDate0);
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      assertTrue(artifactMetadata1.equals((Object)artifactMetadata0));
      
      artifactMetadata0.setArtifactType("}");
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(artifactMetadata1.equals((Object)artifactMetadata0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      artifactMetadata1.setArtifactId("maxTaskQueuedPerThread must be strictly positive, was ");
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals("maxTaskQueuedPerThread must be strictly positive, was ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      MockDate mockDate0 = new MockDate((-1084L));
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      assertTrue(artifactMetadata1.equals((Object)artifactMetadata0));
      
      ArtifactMetadata artifactMetadata2 = artifactMetadata1.effectiveStartDate(mockDate0);
      ArtifactMetadata artifactMetadata3 = artifactMetadata2.publishedAncestorId("}");
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.setName("}");
      String string0 = artifactMetadata0.getName();
      assertEquals("}", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.hashCode();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      Category category0 = artifactMetadata0.getParentCategory();
      assertNull(category0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      String string0 = artifactMetadata0.getVersionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      MockDate mockDate0 = new MockDate(466, 466, (-746));
      artifactMetadata0.setEffectiveEndDate(mockDate0);
      Date date0 = artifactMetadata0.getEffectiveEndDate();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.setPublishedAncestorId((String) null);
      assertNull(artifactMetadata0.getName());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactMetadata artifactMetadata1 = artifactMetadata0.publishedAncestorId("'");
      String string0 = artifactMetadata1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      String string0 = artifactMetadata0.getArtifactId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      String string0 = artifactMetadata0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.setEffectiveStartDate((Date) null);
      assertNull(artifactMetadata0.getArtifactId());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      Category category0 = new Category();
      artifactMetadata0.parentCategory(category0);
      Category category1 = artifactMetadata0.getParentCategory();
      assertSame(category1, category0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      Category category0 = new Category();
      artifactMetadata0.setParentCategory(category0);
      ArtifactMetadata artifactMetadata1 = new ArtifactMetadata();
      boolean boolean0 = artifactMetadata0.equals(artifactMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      String string0 = artifactMetadata0.getPublishedAncestorId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      Date date0 = artifactMetadata0.getEffectiveStartDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      String string0 = artifactMetadata0.getArtifactType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifactMetadata0.getState();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      Date date0 = artifactMetadata0.getEffectiveEndDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      ArtifactState artifactState0 = ArtifactState.DRAFT;
      artifactMetadata0.setState(artifactState0);
      assertNull(artifactMetadata0.getPublishedAncestorId());
  }
}
