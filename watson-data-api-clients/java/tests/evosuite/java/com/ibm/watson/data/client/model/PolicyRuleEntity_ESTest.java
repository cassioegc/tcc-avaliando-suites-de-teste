/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:32:05 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.PolicyRuleAction;
import com.ibm.watson.data.client.model.PolicyRuleEntity;
import com.ibm.watson.data.client.model.enums.DataProtectionRuleState;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PolicyRuleEntity_ESTest extends PolicyRuleEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      StringBuilder stringBuilder0 = new StringBuilder((CharSequence) "?x2\"pt\"ef)<MEUra");
      policyRuleEntity0.toString(stringBuilder0);
      assertNull(policyRuleEntity0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      String string0 = policyRuleEntity0.toIndentedString(policyRuleEntity0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.trigger((List<Object>) null);
      List<Object> list0 = policyRuleEntity0.getTrigger();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      Object object0 = new Object();
      policyRuleEntity0.addTriggerItem(object0);
      List<Object> list0 = policyRuleEntity0.getTrigger();
      assertTrue(list0.contains(object0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      DataProtectionRuleState dataProtectionRuleState0 = DataProtectionRuleState.DRAFT;
      policyRuleEntity0.state(dataProtectionRuleState0);
      DataProtectionRuleState dataProtectionRuleState1 = policyRuleEntity0.getState();
      assertEquals(DataProtectionRuleState.DRAFT, dataProtectionRuleState1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.name("    trigger: ");
      String string0 = policyRuleEntity0.getName();
      assertEquals("    trigger: ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleEntity policyRuleEntity1 = policyRuleEntity0.name("");
      String string0 = policyRuleEntity1.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.governanceTypeId(";$3C,g+W6Df/H}6oqI");
      String string0 = policyRuleEntity0.getGovernanceTypeId();
      assertEquals(";$3C,g+W6Df/H}6oqI", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.description(";$3C,g+W6Df/H}6oqI");
      String string0 = policyRuleEntity0.getDescription();
      assertEquals(";$3C,g+W6Df/H}6oqI", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.setDescription("");
      String string0 = policyRuleEntity0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleAction policyRuleAction0 = new PolicyRuleAction();
      PolicyRuleEntity policyRuleEntity1 = policyRuleEntity0.action(policyRuleAction0);
      PolicyRuleAction policyRuleAction1 = policyRuleEntity1.getAction();
      assertNull(policyRuleAction1.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      PolicyRuleEntity policyRuleEntity1 = policyRuleEntity0.trigger(linkedList0);
      policyRuleEntity1.addTriggerItem(linkedList0);
      // Undeclared exception!
      try { 
        policyRuleEntity1.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      // Undeclared exception!
      try { 
        policyRuleEntity0.toString((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.PolicyRuleEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleEntity policyRuleEntity1 = new PolicyRuleEntity();
      assertTrue(policyRuleEntity1.equals((Object)policyRuleEntity0));
      
      DataProtectionRuleState dataProtectionRuleState0 = DataProtectionRuleState.ACTIVE;
      PolicyRuleEntity policyRuleEntity2 = policyRuleEntity0.state(dataProtectionRuleState0);
      boolean boolean0 = policyRuleEntity1.equals(policyRuleEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleEntity policyRuleEntity1 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity1.equals(policyRuleEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.setGovernanceTypeId("}");
      PolicyRuleEntity policyRuleEntity1 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity0.equals(policyRuleEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.description("    name: ");
      PolicyRuleEntity policyRuleEntity1 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity0.equals(policyRuleEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleEntity policyRuleEntity1 = new PolicyRuleEntity();
      policyRuleEntity1.setName("W--H");
      boolean boolean0 = policyRuleEntity1.equals(policyRuleEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity0.equals("java.lang.Object@0000000009");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity0.equals(policyRuleEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleAction policyRuleAction0 = policyRuleEntity0.getAction();
      assertNull(policyRuleAction0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleEntity policyRuleEntity1 = policyRuleEntity0.trigger((List<Object>) null);
      // Undeclared exception!
      try { 
        policyRuleEntity1.addTriggerItem((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.PolicyRuleEntity", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      String string0 = policyRuleEntity0.getGovernanceTypeId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleAction policyRuleAction0 = new PolicyRuleAction();
      policyRuleEntity0.setAction(policyRuleAction0);
      assertNull(policyRuleEntity0.getDescription());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.setTrigger((List<Object>) null);
      assertNull(policyRuleEntity0.getGovernanceTypeId());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      PolicyRuleAction policyRuleAction0 = new PolicyRuleAction();
      PolicyRuleEntity policyRuleEntity1 = policyRuleEntity0.action(policyRuleAction0);
      PolicyRuleEntity policyRuleEntity2 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity1.equals(policyRuleEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      String string0 = policyRuleEntity0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.governanceTypeId("");
      String string0 = policyRuleEntity0.getGovernanceTypeId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      String string0 = policyRuleEntity0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.getState();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      DataProtectionRuleState dataProtectionRuleState0 = DataProtectionRuleState.ACTIVE;
      policyRuleEntity0.setState(dataProtectionRuleState0);
      assertNull(policyRuleEntity0.getDescription());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      List<Object> list0 = policyRuleEntity0.getTrigger();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      String string0 = policyRuleEntity0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PolicyRuleEntity policyRuleEntity0 = new PolicyRuleEntity();
      policyRuleEntity0.addTriggerItem(policyRuleEntity0);
      PolicyRuleEntity policyRuleEntity1 = new PolicyRuleEntity();
      boolean boolean0 = policyRuleEntity0.equals(policyRuleEntity1);
      assertFalse(boolean0);
  }
}
