/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:15:09 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ExtendedUserInfo;
import io.netty.handler.logging.LogLevel;
import io.netty.handler.logging.LoggingHandler;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExtendedUserInfo_ESTest extends ExtendedUserInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      Instant instant0 = MockInstant.ofEpochSecond((-1L), (-1342L));
      Date date0 = Date.from(instant0);
      extendedUserInfo0.releaseLockAtTimestamp(date0);
      Date date1 = extendedUserInfo0.getReleaseLockAtTimestamp();
      assertSame(date1, date0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0, 4194304);
      ExtendedUserInfo extendedUserInfo1 = extendedUserInfo0.recentNumberOfFailedAttempts(bigDecimal0);
      BigDecimal bigDecimal1 = extendedUserInfo1.getRecentNumberOfFailedAttempts();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      BigDecimal bigDecimal0 = new BigDecimal((-1261.58408384));
      ExtendedUserInfo extendedUserInfo1 = extendedUserInfo0.recentNumberOfFailedAttempts(bigDecimal0);
      BigDecimal bigDecimal1 = extendedUserInfo1.getRecentNumberOfFailedAttempts();
      assertSame(bigDecimal0, bigDecimal1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      BigDecimal bigDecimal0 = new BigDecimal(3272);
      ExtendedUserInfo extendedUserInfo1 = extendedUserInfo0.recentNumberOfFailedAttempts(bigDecimal0);
      BigDecimal bigDecimal1 = extendedUserInfo1.getRecentNumberOfFailedAttempts();
      assertSame(bigDecimal1, bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      MockDate mockDate0 = new MockDate();
      ExtendedUserInfo extendedUserInfo1 = extendedUserInfo0.firstFailedAttemptTimestamp(mockDate0);
      Date date0 = extendedUserInfo1.getFirstFailedAttemptTimestamp();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      MockDate mockDate0 = new MockDate(12012, (-115), 47, (-115), (-115), 12012);
      ExtendedUserInfo extendedUserInfo1 = extendedUserInfo0.releaseLockAtTimestamp(mockDate0);
      ExtendedUserInfo extendedUserInfo2 = new ExtendedUserInfo();
      boolean boolean0 = extendedUserInfo2.equals(extendedUserInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      ExtendedUserInfo extendedUserInfo1 = new ExtendedUserInfo();
      assertTrue(extendedUserInfo1.equals((Object)extendedUserInfo0));
      
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      extendedUserInfo1.recentNumberOfFailedAttempts(bigDecimal0);
      boolean boolean0 = extendedUserInfo0.equals(extendedUserInfo1);
      assertFalse(extendedUserInfo1.equals((Object)extendedUserInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      ExtendedUserInfo extendedUserInfo1 = new ExtendedUserInfo();
      boolean boolean0 = extendedUserInfo1.equals(extendedUserInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      extendedUserInfo0.createdTimestamp("class ExtendedUserInfo {\n");
      ExtendedUserInfo extendedUserInfo1 = new ExtendedUserInfo();
      boolean boolean0 = extendedUserInfo0.equals(extendedUserInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      Class<String> class0 = String.class;
      LogLevel logLevel0 = LogLevel.ERROR;
      LoggingHandler loggingHandler0 = new LoggingHandler(class0, logLevel0);
      boolean boolean0 = extendedUserInfo0.equals(loggingHandler0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      boolean boolean0 = extendedUserInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      boolean boolean0 = extendedUserInfo0.equals(extendedUserInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      extendedUserInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      BigInteger bigInteger0 = BigInteger.ZERO;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      extendedUserInfo0.setRecentNumberOfFailedAttempts(bigDecimal0);
      assertNull(extendedUserInfo0.getCurrentAccountStatus());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      Instant instant0 = MockInstant.ofEpochSecond((-1L), (-1342L));
      Date date0 = Date.from(instant0);
      ExtendedUserInfo extendedUserInfo1 = extendedUserInfo0.firstFailedAttemptTimestamp(date0);
      ExtendedUserInfo extendedUserInfo2 = new ExtendedUserInfo();
      boolean boolean0 = extendedUserInfo1.equals(extendedUserInfo2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      BigDecimal bigDecimal0 = extendedUserInfo0.getRecentNumberOfFailedAttempts();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      String string0 = extendedUserInfo0.toString();
      assertEquals("class ExtendedUserInfo {\n    approvalStatus: null\n    authenticator: null\n    createdTimestamp: null\n    currentAccountStatus: null\n    displayName: null\n    email: null\n    lastModifiedTimestamp: null\n    permissions: null\n    role: null\n    uid: null\n    userRoles: null\n    username: null\n    firstFailedAttemptTimestamp: null\n    recentNumberOfFailedAttempts: null\n    releaseLockAtTimestamp: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      Date date0 = extendedUserInfo0.getReleaseLockAtTimestamp();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      Date date0 = extendedUserInfo0.getFirstFailedAttemptTimestamp();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      MockDate mockDate0 = new MockDate(0, 1625, 1625, 2233, (-3274), 0);
      extendedUserInfo0.setFirstFailedAttemptTimestamp(mockDate0);
      assertNull(extendedUserInfo0.getApprovalStatus());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExtendedUserInfo extendedUserInfo0 = new ExtendedUserInfo();
      Instant instant0 = MockInstant.ofEpochSecond((-1L), (-1342L));
      Date date0 = Date.from(instant0);
      extendedUserInfo0.setReleaseLockAtTimestamp(date0);
      assertNull(extendedUserInfo0.getLastModifiedTimestamp());
  }
}
