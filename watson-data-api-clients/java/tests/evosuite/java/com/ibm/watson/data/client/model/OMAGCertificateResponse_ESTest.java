/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:11:39 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.OMAGCertificateResponse;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OMAGCertificateResponse_ESTest extends OMAGCertificateResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      OMAGCertificateResponse oMAGCertificateResponse1 = oMAGCertificateResponse0.base64EncodedKafkaSslCertificate("    base64EncodedKafkaSslCertificate: ");
      String string0 = oMAGCertificateResponse1.getBase64EncodedKafkaSslCertificate();
      assertEquals("    base64EncodedKafkaSslCertificate: ", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      oMAGCertificateResponse0.setBase64EncodedKafkaSslCertificate("");
      String string0 = oMAGCertificateResponse0.getBase64EncodedKafkaSslCertificate();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      oMAGCertificateResponse0.base64EncodedKafkaSslCertificate("Q");
      String string0 = oMAGCertificateResponse0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      boolean boolean0 = oMAGCertificateResponse0.equals("Q");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      boolean boolean0 = oMAGCertificateResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      boolean boolean0 = oMAGCertificateResponse0.equals(oMAGCertificateResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      oMAGCertificateResponse0.base64EncodedKafkaSslCertificate("Q");
      OMAGCertificateResponse oMAGCertificateResponse1 = new OMAGCertificateResponse();
      boolean boolean0 = oMAGCertificateResponse0.equals(oMAGCertificateResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      String string0 = oMAGCertificateResponse0.getBase64EncodedKafkaSslCertificate();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      oMAGCertificateResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      OMAGCertificateResponse oMAGCertificateResponse0 = new OMAGCertificateResponse();
      String string0 = oMAGCertificateResponse0.toString();
      assertEquals("class OMAGCertificateResponse {\n    base64EncodedKafkaSslCertificate: null\n}", string0);
  }
}
