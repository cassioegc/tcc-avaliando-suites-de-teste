/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:34:05 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.CustomAttribute;
import com.ibm.watson.data.client.model.PaginatedParentRelationshipsList;
import com.ibm.watson.data.client.model.PaginatedRelationshipsList;
import com.ibm.watson.data.client.model.ResponseClassificationEntity;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResponseClassificationEntity_ESTest extends ResponseClassificationEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      responseClassificationEntity0.addTagsItem((String) null);
      List<String> list0 = responseClassificationEntity0.getTags();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      responseClassificationEntity0.defaultLocaleId("fJ7e4K{");
      String string0 = responseClassificationEntity0.getDefaultLocaleId();
      assertEquals("fJ7e4K{", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.defaultLocaleId("");
      String string0 = responseClassificationEntity1.getDefaultLocaleId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity0.setCategories(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseClassificationEntity0.getCategories();
      assertSame(paginatedRelationshipsList1, paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      List<String> list0 = xmlTest0.getIncludedGroups();
      responseClassificationEntity0.tags(list0);
      // Undeclared exception!
      try { 
        responseClassificationEntity0.addTagsItem(" 1^QxtBOf+!U+8!%Ud");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.addTagsItem("4M=y<?wTa&");
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity2 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity3 = responseClassificationEntity0.rules(paginatedRelationshipsList0);
      ResponseClassificationEntity responseClassificationEntity4 = responseClassificationEntity2.addTagsItem("4M=y<?wTa&");
      assertFalse(responseClassificationEntity4.equals((Object)responseClassificationEntity1));
      
      responseClassificationEntity4.rules(paginatedRelationshipsList0);
      boolean boolean0 = responseClassificationEntity2.equals(responseClassificationEntity3);
      assertTrue(responseClassificationEntity3.equals((Object)responseClassificationEntity2));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      responseClassificationEntity0.addTagsItem("");
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity2 = responseClassificationEntity1.addTagsItem("");
      assertTrue(responseClassificationEntity1.equals((Object)responseClassificationEntity0));
      
      responseClassificationEntity2.policies(paginatedRelationshipsList0);
      boolean boolean0 = responseClassificationEntity1.equals(responseClassificationEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = new ResponseClassificationEntity();
      assertTrue(responseClassificationEntity1.equals((Object)responseClassificationEntity0));
      
      ResponseClassificationEntity responseClassificationEntity2 = responseClassificationEntity0.rules(paginatedRelationshipsList0);
      responseClassificationEntity2.referenceData(paginatedRelationshipsList0);
      boolean boolean0 = responseClassificationEntity1.equals(responseClassificationEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      responseClassificationEntity0.addTagsItem("");
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity2 = responseClassificationEntity1.addTagsItem("");
      assertTrue(responseClassificationEntity1.equals((Object)responseClassificationEntity0));
      
      responseClassificationEntity2.setDataClasses(paginatedRelationshipsList0);
      boolean boolean0 = responseClassificationEntity1.equals(responseClassificationEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.addTagsItem("");
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity2 = new ResponseClassificationEntity();
      responseClassificationEntity1.setTerms(paginatedRelationshipsList0);
      responseClassificationEntity2.addTagsItem("");
      boolean boolean0 = responseClassificationEntity2.equals(responseClassificationEntity0);
      assertFalse(responseClassificationEntity2.equals((Object)responseClassificationEntity1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = new ResponseClassificationEntity();
      assertTrue(responseClassificationEntity1.equals((Object)responseClassificationEntity0));
      
      ResponseClassificationEntity responseClassificationEntity2 = responseClassificationEntity0.rules(paginatedRelationshipsList0);
      responseClassificationEntity0.setHasTypesClassifications(paginatedRelationshipsList0);
      boolean boolean0 = responseClassificationEntity1.equals(responseClassificationEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = new ResponseClassificationEntity();
      assertTrue(responseClassificationEntity1.equals((Object)responseClassificationEntity0));
      
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      responseClassificationEntity1.isATypeOfClassification(paginatedParentRelationshipsList0);
      boolean boolean0 = responseClassificationEntity1.equals(responseClassificationEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.addTagsItem("");
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity1.categories(paginatedRelationshipsList0);
      ResponseClassificationEntity responseClassificationEntity2 = new ResponseClassificationEntity();
      responseClassificationEntity2.addTagsItem("");
      boolean boolean0 = responseClassificationEntity2.equals(responseClassificationEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.addTagsItem("");
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      responseClassificationEntity1.setParentCategory(paginatedParentRelationshipsList0);
      ResponseClassificationEntity responseClassificationEntity2 = new ResponseClassificationEntity();
      responseClassificationEntity2.addTagsItem("");
      boolean boolean0 = responseClassificationEntity2.equals(responseClassificationEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.addTagsItem("");
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity2 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity3 = responseClassificationEntity0.rules(paginatedRelationshipsList0);
      responseClassificationEntity2.addTagsItem("");
      boolean boolean0 = responseClassificationEntity2.equals(responseClassificationEntity3);
      assertFalse(responseClassificationEntity2.equals((Object)responseClassificationEntity1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = new ResponseClassificationEntity();
      assertTrue(responseClassificationEntity1.equals((Object)responseClassificationEntity0));
      
      ResponseClassificationEntity responseClassificationEntity2 = responseClassificationEntity0.rules(paginatedRelationshipsList0);
      responseClassificationEntity0.setDefaultLocaleId("E7#4At}m,I\"^nGo\"=G4");
      boolean boolean0 = responseClassificationEntity1.equals(responseClassificationEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = new ResponseClassificationEntity();
      CustomAttribute customAttribute0 = new CustomAttribute();
      responseClassificationEntity0.addCustomAttributesItem(customAttribute0);
      boolean boolean0 = responseClassificationEntity1.equals(responseClassificationEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      java.util.Locale.Category locale_Category0 = java.util.Locale.Category.FORMAT;
      boolean boolean0 = responseClassificationEntity0.equals(locale_Category0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      boolean boolean0 = responseClassificationEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      boolean boolean0 = responseClassificationEntity0.equals(responseClassificationEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.addTagsItem("");
      ResponseClassificationEntity responseClassificationEntity2 = new ResponseClassificationEntity();
      boolean boolean0 = responseClassificationEntity2.equals(responseClassificationEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.parentCategory(paginatedParentRelationshipsList0);
      PaginatedParentRelationshipsList paginatedParentRelationshipsList1 = responseClassificationEntity1.getParentCategory();
      assertNull(paginatedParentRelationshipsList1.getLimit());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseClassificationEntity0.getReferenceData();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity0.dataClasses(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseClassificationEntity0.getDataClasses();
      assertNull(paginatedRelationshipsList1.getCount());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.hasTypesClassifications(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseClassificationEntity1.getHasTypesClassifications();
      assertNull(paginatedRelationshipsList1.getLimit());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity0.referenceData(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseClassificationEntity0.getReferenceData();
      assertSame(paginatedRelationshipsList1, paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      List<String> list0 = responseClassificationEntity0.getTags();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      responseClassificationEntity0.setTags(arrayList0);
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseClassificationEntity0.getCategories();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity0.setReferenceData(paginatedRelationshipsList0);
      assertNull(paginatedRelationshipsList0.getLimit());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      String string0 = responseClassificationEntity0.toString();
      assertEquals("class ResponseClassificationEntity {\n    longDescription: null\n    state: null\n    customAttributes: null\n    defaultLocaleId: null\n    tags: null\n    parentCategory: null\n    categories: null\n    isATypeOfClassification: null\n    hasTypesClassifications: null\n    terms: null\n    dataClasses: null\n    referenceData: null\n    policies: null\n    rules: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      responseClassificationEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = responseClassificationEntity0.getIsATypeOfClassification();
      assertNull(paginatedParentRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseClassificationEntity0.getDataClasses();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseClassificationEntity0.getRules();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      responseClassificationEntity0.tags(arrayList0);
      List<String> list0 = responseClassificationEntity0.getTags();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseClassificationEntity0.getPolicies();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity0.setRules(paginatedRelationshipsList0);
      assertNull(responseClassificationEntity0.getLongDescription());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.policies(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseClassificationEntity1.getPolicies();
      assertNull(paginatedRelationshipsList1.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      responseClassificationEntity0.setIsATypeOfClassification(paginatedParentRelationshipsList0);
      assertNull(paginatedParentRelationshipsList0.getLimit());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      String string0 = responseClassificationEntity0.getDefaultLocaleId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity0.terms(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseClassificationEntity0.getTerms();
      assertNull(paginatedRelationshipsList1.getCount());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      ResponseClassificationEntity responseClassificationEntity1 = responseClassificationEntity0.isATypeOfClassification(paginatedParentRelationshipsList0);
      PaginatedParentRelationshipsList paginatedParentRelationshipsList1 = responseClassificationEntity1.getIsATypeOfClassification();
      assertSame(paginatedParentRelationshipsList1, paginatedParentRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      responseClassificationEntity0.setPolicies((PaginatedRelationshipsList) null);
      assertNull(responseClassificationEntity0.getLongDescription());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseClassificationEntity0.getTerms();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = responseClassificationEntity0.getParentCategory();
      assertNull(paginatedParentRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseClassificationEntity0.rules(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseClassificationEntity0.getRules();
      assertNull(paginatedRelationshipsList1.getLimit());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResponseClassificationEntity responseClassificationEntity0 = new ResponseClassificationEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseClassificationEntity0.getHasTypesClassifications();
      assertNull(paginatedRelationshipsList0);
  }
}
