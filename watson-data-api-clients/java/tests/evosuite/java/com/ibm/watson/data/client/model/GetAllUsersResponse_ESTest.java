/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:46:52 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.GetAllUsersResponse;
import com.ibm.watson.data.client.model.UserInfo;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetAllUsersResponse_ESTest extends GetAllUsersResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      LinkedList<UserInfo> linkedList0 = new LinkedList<UserInfo>();
      getAllUsersResponse0.setUsersInfo(linkedList0);
      List<UserInfo> list0 = getAllUsersResponse0.getUsersInfo();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      GetAllUsersResponse getAllUsersResponse1 = getAllUsersResponse0.addUsersInfoItem((UserInfo) null);
      List<UserInfo> list0 = getAllUsersResponse1.getUsersInfo();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      GetAllUsersResponse getAllUsersResponse1 = new GetAllUsersResponse();
      boolean boolean0 = getAllUsersResponse0.equals(getAllUsersResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      GetAllUsersResponse getAllUsersResponse1 = new GetAllUsersResponse();
      getAllUsersResponse0.setMessageCode("RMKo6(*/~|SE4lSln.>");
      boolean boolean0 = getAllUsersResponse1.equals(getAllUsersResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      boolean boolean0 = getAllUsersResponse0.equals("class GetAllUsersResponse {\n    messageCode: null\n    message: null\n    usersInfo: java.util.LinkedList@0000000003\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      boolean boolean0 = getAllUsersResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      boolean boolean0 = getAllUsersResponse0.equals(getAllUsersResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      LinkedList<UserInfo> linkedList0 = new LinkedList<UserInfo>();
      getAllUsersResponse0.setUsersInfo(linkedList0);
      GetAllUsersResponse getAllUsersResponse1 = new GetAllUsersResponse();
      boolean boolean0 = getAllUsersResponse1.equals(getAllUsersResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      String string0 = getAllUsersResponse0.toString();
      assertEquals("class GetAllUsersResponse {\n    messageCode: null\n    message: null\n    usersInfo: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      LinkedList<UserInfo> linkedList0 = new LinkedList<UserInfo>();
      GetAllUsersResponse getAllUsersResponse1 = getAllUsersResponse0.usersInfo(linkedList0);
      assertSame(getAllUsersResponse0, getAllUsersResponse1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      LinkedList<UserInfo> linkedList0 = new LinkedList<UserInfo>();
      getAllUsersResponse0.setUsersInfo(linkedList0);
      UserInfo userInfo0 = new UserInfo();
      GetAllUsersResponse getAllUsersResponse1 = getAllUsersResponse0.addUsersInfoItem(userInfo0);
      assertNull(getAllUsersResponse1.getMessageCode());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      getAllUsersResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GetAllUsersResponse getAllUsersResponse0 = new GetAllUsersResponse();
      List<UserInfo> list0 = getAllUsersResponse0.getUsersInfo();
      assertNull(list0);
  }
}
