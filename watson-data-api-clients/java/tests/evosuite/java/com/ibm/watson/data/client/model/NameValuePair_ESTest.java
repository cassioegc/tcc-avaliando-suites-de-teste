/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:58:04 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.NameValuePair;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NameValuePair_ESTest extends NameValuePair_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      nameValuePair0.setValue("class NameValuePair {\n    name: null\n    value: null\n}");
      String string0 = nameValuePair0.getValue();
      assertEquals("class NameValuePair {\n    name: null\n    value: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      nameValuePair0.setValue("");
      String string0 = nameValuePair0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      nameValuePair0.setName("6jXEMPWW");
      String string0 = nameValuePair0.getName();
      assertEquals("6jXEMPWW", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      nameValuePair0.setName("");
      String string0 = nameValuePair0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      nameValuePair0.setValue("");
      String string0 = nameValuePair0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      NameValuePair nameValuePair1 = new NameValuePair();
      boolean boolean0 = nameValuePair0.equals(nameValuePair1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      boolean boolean0 = nameValuePair0.equals("~}0cq|d?X]{bV}2IJC");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      boolean boolean0 = nameValuePair0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      boolean boolean0 = nameValuePair0.equals(nameValuePair0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      NameValuePair nameValuePair1 = new NameValuePair();
      assertTrue(nameValuePair1.equals((Object)nameValuePair0));
      
      nameValuePair0.setName("~}0cq|d?X]{bV}2IJC");
      boolean boolean0 = nameValuePair0.equals(nameValuePair1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      nameValuePair0.setValue("");
      NameValuePair nameValuePair1 = new NameValuePair();
      boolean boolean0 = nameValuePair0.equals(nameValuePair1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      String string0 = nameValuePair0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      String string0 = nameValuePair0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      NameValuePair nameValuePair0 = new NameValuePair();
      nameValuePair0.hashCode();
  }
}
