/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:30:03 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ScoreStats;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ScoreStats_ESTest extends ScoreStats_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(0.0);
      scoreStats0.setVariance(double0);
      Double double1 = scoreStats0.getVariance();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(1026.2746963134512);
      scoreStats0.setVariance(double0);
      Double double1 = scoreStats0.getVariance();
      assertEquals(1026.2746963134512, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-1570.82533));
      scoreStats0.setVariance(double0);
      Double double1 = scoreStats0.getVariance();
      assertEquals((-1570.82533), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-1574.7045440527));
      scoreStats0.setSum(double0);
      Double double1 = scoreStats0.getSum();
      assertEquals((-1574.7045440527), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(0.0);
      scoreStats0.setSum(double0);
      Double double1 = scoreStats0.getSum();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(1026.2746963134512);
      scoreStats0.setSum(double0);
      Double double1 = scoreStats0.getSum();
      assertEquals(1026.2746963134512, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(892.4327);
      scoreStats0.setStddev(double0);
      Double double1 = scoreStats0.getStddev();
      assertEquals(892.4327, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(0.0);
      scoreStats0.setStddev(double0);
      Double double1 = scoreStats0.getStddev();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-5782.5884));
      scoreStats0.setStddev(double0);
      Double double1 = scoreStats0.getStddev();
      assertEquals((-5782.5884), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-8.4503));
      scoreStats0.setStddev(double0);
      Double double1 = scoreStats0.getStddev();
      assertEquals((-8.4503), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Long long0 = new Long(1L);
      scoreStats0.setN(long0);
      Long long1 = scoreStats0.getN();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Long long0 = new Long(0L);
      scoreStats0.setN(long0);
      Long long1 = scoreStats0.getN();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Long long0 = new Long((-468L));
      scoreStats0.setN(long0);
      Long long1 = scoreStats0.getN();
      assertEquals((-468L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Long long0 = new Long((-6L));
      scoreStats0.setN(long0);
      Long long1 = scoreStats0.getN();
      assertEquals((-6L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(0.0);
      scoreStats0.setMin(double0);
      Double double1 = scoreStats0.getMin();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-5782.5884));
      scoreStats0.setMin(double0);
      Double double1 = scoreStats0.getMin();
      assertEquals((-5782.5884), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(3470.23971703);
      scoreStats0.setMin(double0);
      Double double1 = scoreStats0.getMin();
      assertEquals(3470.23971703, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(0.0);
      scoreStats0.setMean(double0);
      Double double1 = scoreStats0.getMean();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(85.64);
      scoreStats0.setMean(double0);
      Double double1 = scoreStats0.getMean();
      assertEquals(85.64, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-1314.086344179523));
      scoreStats0.setMean(double0);
      Double double1 = scoreStats0.getMean();
      assertEquals((-1314.086344179523), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(0.0);
      scoreStats0.setMax(double0);
      Double double1 = scoreStats0.getMax();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(1.0);
      scoreStats0.setMax(double0);
      Double double1 = scoreStats0.getMax();
      assertEquals(1.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-26.9566));
      scoreStats0.setMax(double0);
      Double double1 = scoreStats0.getMax();
      assertEquals((-26.9566), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-2390.7131355));
      scoreStats0.setMin(double0);
      String string0 = scoreStats0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(1068.2494015125703);
      scoreStats0.setSum(double0);
      ScoreStats scoreStats1 = new ScoreStats();
      boolean boolean0 = scoreStats0.equals(scoreStats1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-1.0));
      ScoreStats scoreStats1 = new ScoreStats();
      assertTrue(scoreStats1.equals((Object)scoreStats0));
      
      scoreStats1.setMax(double0);
      boolean boolean0 = scoreStats0.equals(scoreStats1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-2390.7131355));
      scoreStats0.setMin(double0);
      ScoreStats scoreStats1 = new ScoreStats();
      boolean boolean0 = scoreStats1.equals(scoreStats0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      ScoreStats scoreStats1 = new ScoreStats();
      boolean boolean0 = scoreStats1.equals(scoreStats0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      ScoreStats scoreStats1 = new ScoreStats();
      assertTrue(scoreStats1.equals((Object)scoreStats0));
      
      Double double0 = new Double((-988.4345532));
      scoreStats1.setVariance(double0);
      boolean boolean0 = scoreStats0.equals(scoreStats1);
      assertFalse(scoreStats1.equals((Object)scoreStats0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      ScoreStats scoreStats1 = new ScoreStats();
      assertTrue(scoreStats1.equals((Object)scoreStats0));
      
      Double double0 = new Double((-988.4345532));
      scoreStats0.setMean(double0);
      boolean boolean0 = scoreStats0.equals(scoreStats1);
      assertFalse(scoreStats1.equals((Object)scoreStats0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Long long0 = new Long(0L);
      scoreStats0.setN(long0);
      ScoreStats scoreStats1 = new ScoreStats();
      boolean boolean0 = scoreStats0.equals(scoreStats1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double((-988.4345532));
      boolean boolean0 = scoreStats0.equals(double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      boolean boolean0 = scoreStats0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      boolean boolean0 = scoreStats0.equals(scoreStats0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = scoreStats0.getStddev();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      scoreStats0.hashCode();
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = new Double(1615.5549941013828);
      scoreStats0.setStddev(double0);
      ScoreStats scoreStats1 = new ScoreStats();
      boolean boolean0 = scoreStats0.equals(scoreStats1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = scoreStats0.getMean();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Long long0 = scoreStats0.getN();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = scoreStats0.getMax();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = scoreStats0.getSum();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = scoreStats0.getMin();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ScoreStats scoreStats0 = new ScoreStats();
      Double double0 = scoreStats0.getVariance();
      assertNull(double0);
  }
}
