/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 14:24:17 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.FailureInfo;
import com.ibm.watson.data.client.model.MappableAssetSummary;
import com.ibm.watson.data.client.model.enums.ExistsInWKC;
import com.ibm.watson.data.client.model.enums.MappableAssetState;
import com.ibm.watson.data.client.model.enums.MappableAssetType;
import com.ibm.watson.data.client.model.enums.MappableOMRSEntity;
import com.ibm.watson.data.client.model.enums.MappableOMRSRelationship;
import io.netty.handler.logging.ByteBufFormat;
import io.netty.handler.logging.LogLevel;
import io.netty.handler.logging.LoggingHandler;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MappableAssetSummary_ESTest extends MappableAssetSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetType mappableAssetType0 = MappableAssetType.CONNECTION;
      mappableAssetSummary0.setType(mappableAssetType0);
      MappableAssetType mappableAssetType1 = mappableAssetSummary0.getType();
      assertEquals(MappableAssetType.CONNECTION, mappableAssetType1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetState mappableAssetState0 = MappableAssetState.CREATED;
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.state(mappableAssetState0);
      MappableAssetState mappableAssetState1 = mappableAssetSummary1.getState();
      assertEquals(MappableAssetState.CREATED, mappableAssetState1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.relatedWkcAssetId("    missingEntities: ");
      String string0 = mappableAssetSummary1.getRelatedWkcAssetId();
      assertEquals("    missingEntities: ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.setRelatedWkcAssetId("");
      String string0 = mappableAssetSummary0.getRelatedWkcAssetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTORTYPE;
      mappableAssetSummary0.addPotentiallyMissingEntitiesItem(mappableOMRSEntity0);
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getPotentiallyMissingEntities();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.omrsGuid("\n");
      String string0 = mappableAssetSummary0.getOmrsGuid();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.omrsGuid("");
      String string0 = mappableAssetSummary0.getOmrsGuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      ArrayList<MappableOMRSRelationship> arrayList0 = new ArrayList<MappableOMRSRelationship>();
      mappableAssetSummary0.missingRelationships(arrayList0);
      List<MappableOMRSRelationship> list0 = mappableAssetSummary0.getMissingRelationships();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.DATACONTENTFORDATASET;
      mappableAssetSummary0.addMissingRelationshipsItem(mappableOMRSRelationship0);
      List<MappableOMRSRelationship> list0 = mappableAssetSummary0.getMissingRelationships();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      ArrayList<MappableOMRSEntity> arrayList0 = new ArrayList<MappableOMRSEntity>();
      mappableAssetSummary0.setMissingEntities(arrayList0);
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getMissingEntities();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DEPLOYEDDATABASESCHEMA;
      mappableAssetSummary0.addMissingEntitiesItem(mappableOMRSEntity0);
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getMissingEntities();
      assertTrue(list0.contains(mappableOMRSEntity0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.metadataCollectionId("kU");
      String string0 = mappableAssetSummary0.getMetadataCollectionId();
      assertEquals("kU", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.setMetadataCollectionId("");
      String string0 = mappableAssetSummary0.getMetadataCollectionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      FailureInfo failureInfo0 = new FailureInfo();
      mappableAssetSummary0.putFailuresItem("REQUEST", failureInfo0);
      Map<String, FailureInfo> map0 = mappableAssetSummary0.getFailures();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      ExistsInWKC existsInWKC0 = ExistsInWKC.FALSE;
      mappableAssetSummary0.setExistsInWkc(existsInWKC0);
      ExistsInWKC existsInWKC1 = mappableAssetSummary0.getExistsInWkc();
      assertEquals("FALSE", existsInWKC1.getValue());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      ArrayList<MappableOMRSRelationship> arrayList0 = new ArrayList<MappableOMRSRelationship>();
      mappableAssetSummary0.existingRelationships(arrayList0);
      List<MappableOMRSRelationship> list0 = mappableAssetSummary0.getExistingRelationships();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SEMANTICASSIGNMENT;
      mappableAssetSummary0.addExistingRelationshipsItem(mappableOMRSRelationship0);
      List<MappableOMRSRelationship> list0 = mappableAssetSummary0.getExistingRelationships();
      assertTrue(list0.contains(mappableOMRSRelationship0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      Stack<MappableOMRSEntity> stack0 = new Stack<MappableOMRSEntity>();
      mappableAssetSummary0.setExistingEntities(stack0);
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getExistingEntities();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DATAFILE;
      mappableAssetSummary0.addExistingEntitiesItem(mappableOMRSEntity0);
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getExistingEntities();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.setAssetPath(">qZ[Sg,Lw5m09L>wxr");
      String string0 = mappableAssetSummary0.getAssetPath();
      assertEquals(">qZ[Sg,Lw5m09L>wxr", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.assetPath("");
      String string0 = mappableAssetSummary0.getAssetPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      assertTrue(mappableAssetSummary1.equals((Object)mappableAssetSummary0));
      
      FailureInfo failureInfo0 = new FailureInfo();
      mappableAssetSummary1.putFailuresItem((String) null, failureInfo0);
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.ASSETSCHEMATYPE;
      mappableAssetSummary0.addMissingRelationshipsItem(mappableOMRSRelationship0);
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      Stack<MappableOMRSEntity> stack0 = new Stack<MappableOMRSEntity>();
      mappableAssetSummary1.setPotentiallyMissingEntities(stack0);
      mappableAssetSummary0.potentiallyMissingEntities(stack0);
      assertTrue(mappableAssetSummary0.equals((Object)mappableAssetSummary1));
      
      mappableAssetSummary1.setExistingEntities(stack0);
      boolean boolean0 = mappableAssetSummary1.equals(mappableAssetSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      assertTrue(mappableAssetSummary1.equals((Object)mappableAssetSummary0));
      
      Stack<MappableOMRSEntity> stack0 = new Stack<MappableOMRSEntity>();
      mappableAssetSummary1.setPotentiallyMissingEntities(stack0);
      boolean boolean0 = mappableAssetSummary1.equals(mappableAssetSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      assertTrue(mappableAssetSummary1.equals((Object)mappableAssetSummary0));
      
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTORTYPE;
      mappableAssetSummary1.addMissingEntitiesItem(mappableOMRSEntity0);
      boolean boolean0 = mappableAssetSummary1.equals(mappableAssetSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.relatedWkcAssetId("ifMFv|\"<,BO<^8fV");
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      assertTrue(mappableAssetSummary1.equals((Object)mappableAssetSummary0));
      
      mappableAssetSummary1.assetPath("    omrsGuid: ");
      boolean boolean0 = mappableAssetSummary1.equals(mappableAssetSummary0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.omrsGuid("\n");
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.setMetadataCollectionId("");
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      MappableAssetType mappableAssetType0 = MappableAssetType.TABLE;
      MappableAssetSummary mappableAssetSummary2 = mappableAssetSummary1.type(mappableAssetType0);
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      LogLevel logLevel0 = LogLevel.INFO;
      ByteBufFormat byteBufFormat0 = ByteBufFormat.HEX_DUMP;
      LoggingHandler loggingHandler0 = new LoggingHandler(logLevel0, byteBufFormat0);
      boolean boolean0 = mappableAssetSummary0.equals(loggingHandler0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.ASSETSCHEMATYPE;
      mappableAssetSummary0.addExistingRelationshipsItem(mappableOMRSRelationship0);
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      FailureInfo failureInfo0 = new FailureInfo();
      mappableAssetSummary0.putFailuresItem("REQUEST", failureInfo0);
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.putFailuresItem("_WKTbSO.$;", (FailureInfo) null);
      assertNull(mappableAssetSummary1.getType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.DATACONTENTFORDATASET;
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.addMissingRelationshipsItem(mappableOMRSRelationship0);
      MappableAssetSummary mappableAssetSummary2 = mappableAssetSummary1.addMissingRelationshipsItem(mappableOMRSRelationship0);
      assertSame(mappableAssetSummary1, mappableAssetSummary2);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.DATACONTENTFORDATASET;
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.addExistingRelationshipsItem(mappableOMRSRelationship0);
      MappableAssetSummary mappableAssetSummary2 = mappableAssetSummary1.addExistingRelationshipsItem(mappableOMRSRelationship0);
      assertNull(mappableAssetSummary2.getState());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTORTYPE;
      mappableAssetSummary0.addExistingEntitiesItem(mappableOMRSEntity0);
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.addExistingEntitiesItem(mappableOMRSEntity0);
      assertNull(mappableAssetSummary1.getState());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTORTYPE;
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.addPotentiallyMissingEntitiesItem(mappableOMRSEntity0);
      MappableAssetSummary mappableAssetSummary2 = mappableAssetSummary1.addPotentiallyMissingEntitiesItem(mappableOMRSEntity0);
      assertNull(mappableAssetSummary2.getOmrsGuid());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DEPLOYEDDATABASESCHEMA;
      mappableAssetSummary0.addMissingEntitiesItem(mappableOMRSEntity0);
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.addMissingEntitiesItem(mappableOMRSEntity0);
      assertNull(mappableAssetSummary1.getType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      Stack<MappableOMRSEntity> stack0 = new Stack<MappableOMRSEntity>();
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.potentiallyMissingEntities(stack0);
      List<MappableOMRSEntity> list0 = mappableAssetSummary1.getPotentiallyMissingEntities();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.hashCode();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      Vector<MappableOMRSRelationship> vector0 = new Vector<MappableOMRSRelationship>();
      mappableAssetSummary0.setExistingRelationships(vector0);
      assertTrue(vector0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.getState();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      String string0 = mappableAssetSummary0.getAssetPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      String string0 = mappableAssetSummary0.toString();
      assertEquals("class MappableAssetSummary {\n    type: null\n    metadataCollectionId: null\n    omrsGuid: null\n    state: null\n    existsInWkc: null\n    assetPath: null\n    relatedWkcAssetId: null\n    missingEntities: null\n    potentiallyMissingEntities: null\n    existingEntities: null\n    existingRelationships: null\n    missingRelationships: null\n    failures: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      HashMap<String, FailureInfo> hashMap0 = new HashMap<String, FailureInfo>();
      mappableAssetSummary0.setFailures(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      List<MappableOMRSRelationship> list0 = mappableAssetSummary0.getExistingRelationships();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      String string0 = mappableAssetSummary0.getMetadataCollectionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.getExistsInWkc();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.setOmrsGuid("0\"<LLrtl'R1YFuRO");
      assertNull(mappableAssetSummary0.getExistsInWkc());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.setMissingRelationships((List<MappableOMRSRelationship>) null);
      assertNull(mappableAssetSummary0.getMetadataCollectionId());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      ExistsInWKC existsInWKC0 = ExistsInWKC.FALSE;
      mappableAssetSummary0.setExistsInWkc(existsInWKC0);
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      String string0 = mappableAssetSummary0.getOmrsGuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetState mappableAssetState0 = MappableAssetState.PURGED;
      mappableAssetSummary0.state(mappableAssetState0);
      MappableAssetSummary mappableAssetSummary1 = new MappableAssetSummary();
      boolean boolean0 = mappableAssetSummary0.equals(mappableAssetSummary1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetType mappableAssetType0 = MappableAssetType.CONNECTION;
      mappableAssetSummary0.type(mappableAssetType0);
      String string0 = mappableAssetSummary0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      Map<String, FailureInfo> map0 = mappableAssetSummary0.getFailures();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.missingEntities((List<MappableOMRSEntity>) null);
      assertNull(mappableAssetSummary1.getAssetPath());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getExistingEntities();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      ExistsInWKC existsInWKC0 = ExistsInWKC.TRUE;
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.existsInWkc(existsInWKC0);
      assertSame(mappableAssetSummary0, mappableAssetSummary1);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      String string0 = mappableAssetSummary0.getRelatedWkcAssetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      MappableAssetState mappableAssetState0 = MappableAssetState.PURGE_FAILED;
      mappableAssetSummary0.setState(mappableAssetState0);
      assertEquals(MappableAssetState.PURGE_FAILED, mappableAssetSummary0.getState());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getPotentiallyMissingEntities();
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.existingEntities(list0);
      assertSame(mappableAssetSummary0, mappableAssetSummary1);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      List<MappableOMRSRelationship> list0 = mappableAssetSummary0.getMissingRelationships();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      HashMap<String, FailureInfo> hashMap0 = new HashMap<String, FailureInfo>();
      MappableAssetSummary mappableAssetSummary1 = mappableAssetSummary0.failures(hashMap0);
      Map<String, FailureInfo> map0 = mappableAssetSummary1.getFailures();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      mappableAssetSummary0.getType();
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      List<MappableOMRSEntity> list0 = mappableAssetSummary0.getMissingEntities();
      assertNull(list0);
  }
}
