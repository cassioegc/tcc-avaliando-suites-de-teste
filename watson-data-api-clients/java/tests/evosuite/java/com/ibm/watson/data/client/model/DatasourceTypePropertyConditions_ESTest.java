/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:11:16 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.DatasourceTypePropertyCondition;
import com.ibm.watson.data.client.model.DatasourceTypePropertyConditions;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatasourceTypePropertyConditions_ESTest extends DatasourceTypePropertyConditions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      ArrayList<DatasourceTypePropertyCondition> arrayList0 = new ArrayList<DatasourceTypePropertyCondition>();
      datasourceTypePropertyConditions0.setTarget(arrayList0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getTarget();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions0.addTargetItem(datasourceTypePropertyCondition0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getTarget();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      Stack<DatasourceTypePropertyCondition> stack0 = new Stack<DatasourceTypePropertyCondition>();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.source(stack0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions1.getSource();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions0.addSourceItem(datasourceTypePropertyCondition0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getSource();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      ArrayList<DatasourceTypePropertyCondition> arrayList0 = new ArrayList<DatasourceTypePropertyCondition>();
      datasourceTypePropertyConditions0.setFilter(arrayList0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getFilter();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      ArrayList<DatasourceTypePropertyCondition> arrayList0 = new ArrayList<DatasourceTypePropertyCondition>();
      datasourceTypePropertyConditions0.connection(arrayList0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getConnection();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions0.addConnectionItem(datasourceTypePropertyCondition0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getConnection();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      Vector<DatasourceTypePropertyCondition> vector0 = new Vector<DatasourceTypePropertyCondition>();
      datasourceTypePropertyConditions0.source(vector0);
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions0.toString();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.filter(vector0);
      assertSame(datasourceTypePropertyConditions0, datasourceTypePropertyConditions1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      ArrayList<DatasourceTypePropertyCondition> arrayList0 = new ArrayList<DatasourceTypePropertyCondition>();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = new DatasourceTypePropertyConditions();
      assertTrue(datasourceTypePropertyConditions1.equals((Object)datasourceTypePropertyConditions0));
      
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions1.setFilter(arrayList0);
      datasourceTypePropertyConditions0.getConnection();
      datasourceTypePropertyConditions0.equals(datasourceTypePropertyConditions1);
      assertFalse(datasourceTypePropertyConditions1.equals((Object)datasourceTypePropertyConditions0));
      
      datasourceTypePropertyConditions0.addConnectionItem(datasourceTypePropertyCondition0);
      assertFalse(datasourceTypePropertyConditions0.equals((Object)datasourceTypePropertyConditions1));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = new DatasourceTypePropertyConditions();
      datasourceTypePropertyConditions1.equals(datasourceTypePropertyCondition0);
      assertTrue(datasourceTypePropertyConditions1.equals((Object)datasourceTypePropertyConditions0));
      
      datasourceTypePropertyConditions0.addTargetItem(datasourceTypePropertyCondition0);
      boolean boolean0 = datasourceTypePropertyConditions1.equals(datasourceTypePropertyConditions0);
      assertFalse(datasourceTypePropertyConditions1.equals((Object)datasourceTypePropertyConditions0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      ArrayList<DatasourceTypePropertyCondition> arrayList0 = new ArrayList<DatasourceTypePropertyCondition>();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions2 = datasourceTypePropertyConditions1.connection((List<DatasourceTypePropertyCondition>) null);
      assertTrue(datasourceTypePropertyConditions2.equals((Object)datasourceTypePropertyConditions0));
      
      datasourceTypePropertyConditions1.setSource(arrayList0);
      boolean boolean0 = datasourceTypePropertyConditions0.equals(datasourceTypePropertyConditions1);
      assertFalse(datasourceTypePropertyConditions1.equals((Object)datasourceTypePropertyConditions0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = new DatasourceTypePropertyConditions();
      assertTrue(datasourceTypePropertyConditions1.equals((Object)datasourceTypePropertyConditions0));
      
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions1.addConnectionItem(datasourceTypePropertyCondition0);
      boolean boolean0 = datasourceTypePropertyConditions0.equals(datasourceTypePropertyConditions1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = new DatasourceTypePropertyConditions();
      boolean boolean0 = datasourceTypePropertyConditions0.equals(datasourceTypePropertyConditions1);
      assertTrue(boolean0);
      
      datasourceTypePropertyConditions1.getSource();
      assertTrue(datasourceTypePropertyConditions1.equals((Object)datasourceTypePropertyConditions0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      ArrayList<DatasourceTypePropertyCondition> arrayList0 = new ArrayList<DatasourceTypePropertyCondition>();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions0.setFilter(arrayList0);
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.connection((List<DatasourceTypePropertyCondition>) null);
      datasourceTypePropertyConditions0.addFilterItem(datasourceTypePropertyCondition0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions1.getConnection();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.addFilterItem(datasourceTypePropertyCondition0);
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions1.getFilter();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions2 = datasourceTypePropertyConditions1.target(list0);
      DatasourceTypePropertyConditions datasourceTypePropertyConditions3 = datasourceTypePropertyConditions2.addTargetItem(datasourceTypePropertyCondition0);
      assertSame(datasourceTypePropertyConditions3, datasourceTypePropertyConditions0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      Vector<DatasourceTypePropertyCondition> vector0 = new Vector<DatasourceTypePropertyCondition>();
      datasourceTypePropertyConditions0.source(vector0);
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getTarget();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.addSourceItem(datasourceTypePropertyCondition0);
      DatasourceTypePropertyConditions datasourceTypePropertyConditions2 = datasourceTypePropertyConditions0.filter(list0);
      assertSame(datasourceTypePropertyConditions2, datasourceTypePropertyConditions1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions0.addConnectionItem(datasourceTypePropertyCondition0);
      boolean boolean0 = datasourceTypePropertyConditions0.equals(datasourceTypePropertyConditions0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      Stack<DatasourceTypePropertyCondition> stack0 = new Stack<DatasourceTypePropertyCondition>();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.connection(stack0);
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions1.addConnectionItem(datasourceTypePropertyCondition0);
      assertTrue(stack0.contains(datasourceTypePropertyCondition0));
      assertFalse(stack0.empty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      datasourceTypePropertyConditions0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyCondition datasourceTypePropertyCondition0 = new DatasourceTypePropertyCondition();
      datasourceTypePropertyConditions0.toString();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.addSourceItem(datasourceTypePropertyCondition0);
      assertSame(datasourceTypePropertyConditions0, datasourceTypePropertyConditions1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      Vector<DatasourceTypePropertyCondition> vector0 = new Vector<DatasourceTypePropertyCondition>();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.source(vector0);
      datasourceTypePropertyConditions1.setConnection(vector0);
      DatasourceTypePropertyConditions datasourceTypePropertyConditions2 = datasourceTypePropertyConditions0.filter(vector0);
      assertSame(datasourceTypePropertyConditions0, datasourceTypePropertyConditions2);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      datasourceTypePropertyConditions0.getFilter();
      datasourceTypePropertyConditions0.getSource();
      List<DatasourceTypePropertyCondition> list0 = datasourceTypePropertyConditions0.getConnection();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DatasourceTypePropertyConditions datasourceTypePropertyConditions0 = new DatasourceTypePropertyConditions();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions1 = datasourceTypePropertyConditions0.addTargetItem((DatasourceTypePropertyCondition) null);
      ArrayList<DatasourceTypePropertyCondition> arrayList0 = new ArrayList<DatasourceTypePropertyCondition>();
      DatasourceTypePropertyConditions datasourceTypePropertyConditions2 = datasourceTypePropertyConditions1.connection(arrayList0);
      datasourceTypePropertyConditions2.source(arrayList0);
      boolean boolean0 = datasourceTypePropertyConditions1.equals((Object) null);
      assertFalse(boolean0);
  }
}
