/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:25:37 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.ReprocessMessagesOptions;
import com.ibm.watson.data.client.model.ReprocessMessagesResponse;
import io.netty.handler.logging.LoggingHandler;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlDefine;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReprocessMessagesResponse_ESTest extends ReprocessMessagesResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      reprocessMessagesResponse0.setTotalRelationshipGuidsSubmitted(integer0);
      Integer integer1 = reprocessMessagesResponse0.getTotalRelationshipGuidsSubmitted();
      assertEquals(10, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = new Integer((-22));
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.totalRelationshipGuidsSubmitted(integer0);
      Integer integer1 = reprocessMessagesResponse1.getTotalRelationshipGuidsSubmitted();
      assertEquals((-22), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = new Integer(0);
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.totalEntityGuidsSubmitted(integer0);
      Integer integer1 = reprocessMessagesResponse1.getTotalEntityGuidsSubmitted();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.totalEntityGuidsSubmitted(integer0);
      Integer integer1 = reprocessMessagesResponse1.getTotalEntityGuidsSubmitted();
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = new Integer((-22));
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.totalEntityGuidsSubmitted(integer0);
      Integer integer1 = reprocessMessagesResponse1.getTotalEntityGuidsSubmitted();
      assertEquals((-22), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.relationshipGuidsSubmitted(hashMap0);
      Map<String, List<String>> map0 = reprocessMessagesResponse1.getRelationshipGuidsSubmitted();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      reprocessMessagesResponse0.putRelationshipGuidsSubmittedItem("lq]v0de],e\"u(/al", linkedList0);
      Map<String, List<String>> map0 = reprocessMessagesResponse0.getRelationshipGuidsSubmitted();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      HashMap<String, List<String>> hashMap0 = new HashMap<String, List<String>>();
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.entityGuidsSubmitted(hashMap0);
      Map<String, List<String>> map0 = reprocessMessagesResponse1.getEntityGuidsSubmitted();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      XmlDefine xmlDefine0 = new XmlDefine();
      List<String> list0 = xmlDefine0.getIncludes();
      reprocessMessagesResponse0.putEntityGuidsSubmittedItem("", list0);
      Map<String, List<String>> map0 = reprocessMessagesResponse0.getEntityGuidsSubmitted();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, (int) xmlSuite0.DEFAULT_THREAD_COUNT);
      Map<String, List<String>> map0 = xmlTest0.getMetaGroups();
      reprocessMessagesResponse0.setRelationshipGuidsSubmitted(map0);
      // Undeclared exception!
      try { 
        reprocessMessagesResponse0.putRelationshipGuidsSubmittedItem("null", (List<String>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      reprocessMessagesResponse0.setTotalRelationshipGuidsSubmitted(integer0);
      String string0 = reprocessMessagesResponse0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      XmlDefine xmlDefine0 = new XmlDefine();
      List<String> list0 = xmlDefine0.getIncludes();
      reprocessMessagesResponse0.putRelationshipGuidsSubmittedItem("", list0);
      ReprocessMessagesResponse reprocessMessagesResponse1 = new ReprocessMessagesResponse();
      boolean boolean0 = reprocessMessagesResponse1.equals(reprocessMessagesResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      XmlDefine xmlDefine0 = new XmlDefine();
      List<String> list0 = xmlDefine0.getIncludes();
      ReprocessMessagesResponse reprocessMessagesResponse1 = new ReprocessMessagesResponse();
      assertTrue(reprocessMessagesResponse1.equals((Object)reprocessMessagesResponse0));
      
      ReprocessMessagesResponse reprocessMessagesResponse2 = reprocessMessagesResponse1.putEntityGuidsSubmittedItem("", list0);
      boolean boolean0 = reprocessMessagesResponse2.equals(reprocessMessagesResponse0);
      assertFalse(reprocessMessagesResponse1.equals((Object)reprocessMessagesResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = new Integer(0);
      ReprocessMessagesResponse reprocessMessagesResponse1 = new ReprocessMessagesResponse();
      assertTrue(reprocessMessagesResponse1.equals((Object)reprocessMessagesResponse0));
      
      reprocessMessagesResponse0.setTotalRelationshipGuidsSubmitted(integer0);
      boolean boolean0 = reprocessMessagesResponse0.equals(reprocessMessagesResponse1);
      assertFalse(reprocessMessagesResponse1.equals((Object)reprocessMessagesResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = new Integer((-22));
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.totalEntityGuidsSubmitted(integer0);
      ReprocessMessagesResponse reprocessMessagesResponse2 = new ReprocessMessagesResponse();
      boolean boolean0 = reprocessMessagesResponse1.equals(reprocessMessagesResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      ReprocessMessagesResponse reprocessMessagesResponse1 = new ReprocessMessagesResponse();
      ReprocessMessagesOptions reprocessMessagesOptions0 = new ReprocessMessagesOptions();
      ReprocessMessagesResponse reprocessMessagesResponse2 = reprocessMessagesResponse1.options(reprocessMessagesOptions0);
      ReprocessMessagesResponse reprocessMessagesResponse3 = reprocessMessagesResponse0.relationshipGuidsSubmitted((Map<String, List<String>>) null);
      boolean boolean0 = reprocessMessagesResponse3.equals(reprocessMessagesResponse2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      ReprocessMessagesResponse reprocessMessagesResponse1 = new ReprocessMessagesResponse();
      ReprocessMessagesResponse reprocessMessagesResponse2 = reprocessMessagesResponse0.relationshipGuidsSubmitted((Map<String, List<String>>) null);
      boolean boolean0 = reprocessMessagesResponse2.equals(reprocessMessagesResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      boolean boolean0 = reprocessMessagesResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      boolean boolean0 = reprocessMessagesResponse0.equals(reprocessMessagesResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Class<Object> class0 = Object.class;
      LoggingHandler loggingHandler0 = new LoggingHandler(class0);
      boolean boolean0 = reprocessMessagesResponse0.equals(loggingHandler0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      Map<String, List<String>> map0 = xmlTest0.getMetaGroups();
      reprocessMessagesResponse0.entityGuidsSubmitted(map0);
      // Undeclared exception!
      try { 
        reprocessMessagesResponse0.putEntityGuidsSubmittedItem("Loop Detected", (List<String>) null);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      XmlSuite xmlSuite0 = new XmlSuite();
      reprocessMessagesResponse0.setTotalEntityGuidsSubmitted(xmlSuite0.DEFAULT_THREAD_COUNT);
      assertEquals("", xmlSuite0.getParentModule());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Map<String, List<String>> map0 = reprocessMessagesResponse0.getRelationshipGuidsSubmitted();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      Map<String, List<String>> map0 = xmlTest0.getMetaGroups();
      reprocessMessagesResponse0.setEntityGuidsSubmitted(map0);
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Map<String, List<String>> map0 = reprocessMessagesResponse0.getEntityGuidsSubmitted();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      ReprocessMessagesOptions reprocessMessagesOptions0 = reprocessMessagesResponse0.getOptions();
      assertNull(reprocessMessagesOptions0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      reprocessMessagesResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      ReprocessMessagesOptions reprocessMessagesOptions0 = new ReprocessMessagesOptions();
      ReprocessMessagesResponse reprocessMessagesResponse1 = reprocessMessagesResponse0.options(reprocessMessagesOptions0);
      ReprocessMessagesOptions reprocessMessagesOptions1 = reprocessMessagesResponse1.getOptions();
      assertSame(reprocessMessagesOptions0, reprocessMessagesOptions1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = new Integer(0);
      reprocessMessagesResponse0.setTotalRelationshipGuidsSubmitted(integer0);
      Integer integer1 = reprocessMessagesResponse0.getTotalRelationshipGuidsSubmitted();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      ReprocessMessagesOptions reprocessMessagesOptions0 = new ReprocessMessagesOptions();
      reprocessMessagesResponse0.setOptions(reprocessMessagesOptions0);
      assertNull(reprocessMessagesOptions0.getForce());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = reprocessMessagesResponse0.getTotalRelationshipGuidsSubmitted();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ReprocessMessagesResponse reprocessMessagesResponse0 = new ReprocessMessagesResponse();
      Integer integer0 = reprocessMessagesResponse0.getTotalEntityGuidsSubmitted();
      assertNull(integer0);
  }
}
