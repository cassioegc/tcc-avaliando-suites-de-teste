/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:16:27 GMT 2021
 */

package com.ibm.watson.data.client.api;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.core.FormatFeature;
import com.fasterxml.jackson.core.json.JsonReadFeature;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.deser.DataFormatReaders;
import com.fasterxml.jackson.databind.ext.CoreXMLDeserializers;
import com.ibm.watson.data.client.ApiClient;
import com.ibm.watson.data.client.api.ConnectionsApiV2;
import com.ibm.watson.data.client.model.BaseRov;
import com.ibm.watson.data.client.model.ConnectionActions;
import com.ibm.watson.data.client.model.ConnectionCollection;
import com.ibm.watson.data.client.model.ConnectionEntity;
import com.ibm.watson.data.client.model.ConnectionInteractionProperties;
import com.ibm.watson.data.client.model.ConnectionMetadata;
import com.ibm.watson.data.client.model.DatasourceTypeAction;
import com.ibm.watson.data.client.model.DatasourceTypeProperty;
import com.ibm.watson.data.client.model.DatasourceTypePropertyValues;
import com.ibm.watson.data.client.model.DiscoveredAsset;
import com.ibm.watson.data.client.model.DiscoveredAssetCollection;
import com.ibm.watson.data.client.model.DiscoveredAssetField;
import com.ibm.watson.data.client.model.DiscoveryLog;
import com.ibm.watson.data.client.model.JSONResourcePatchModel;
import com.ibm.watson.data.client.model.enums.AssetCategory;
import com.ibm.watson.data.client.model.enums.ConnectionFlag;
import com.ibm.watson.data.client.model.enums.JsonPatchOperation;
import com.ibm.watson.data.client.model.enums.Severity;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.support.BeanDefinitionDefaults;
import org.testng.xml.XmlSuite;
import reactor.core.publisher.Mono;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ConnectionsApiV2_ESTest extends ConnectionsApiV2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false, 0);
      String string0 = null;
      ApiClient apiClient1 = apiClient0.setBasePath((String) null);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient1);
      String string1 = ">hY";
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addLogsItem(discoveryLog0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      List<DiscoveryLog> list0 = discoveredAssetCollection1.getLogs();
      discoveredAssetCollection1.logs(list0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.properties(hashMap0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.id(">hY");
      discoveredAssetCollection3.getDetails();
      String string2 = "";
      // Undeclared exception!
      try { 
        connectionsApiV2_0.performAction("", ">hY", (Map<String, Object>) null, "", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // HTTP URL must not be null
         //
         verifyException("org.springframework.util.Assert", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      String string0 = "data_asset_space_id";
      connectionsApiV2_0.setApiClient((ApiClient) null);
      String string1 = "}6>!bdU#qtz";
      // Undeclared exception!
      try { 
        connectionsApiV2_0.get("data_asset_space_id", "", "", "}6>!bdU#qtz");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      String string0 = "";
      String string1 = "5JoN-w;^/0";
      // Undeclared exception!
      try { 
        connectionsApiV2_0.delete("", "", "5JoN-w;^/0", "5JoN-w;^/0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      String string0 = "org.springframework.core.convert.support.GenericConversionService";
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getDetails();
      Severity severity0 = Severity.ERROR;
      discoveryLog0.setSeverity(severity0);
      String string1 = "ewlcT2m{\"8\"dcv%8A9)";
      discoveredAssetCollection0.setDescription("ewlcT2m{\"8\"dcv%8A9)");
      DiscoveryLog discoveryLog1 = discoveryLog0.details((Map<String, Object>) null);
      discoveryLog1.equals((Object) null);
      Severity severity1 = Severity.WARNING;
      DiscoveryLog discoveryLog2 = discoveryLog1.severity(severity1);
      discoveryLog2.getDetails();
      String string2 = "$CAYy~,ci";
      String string3 = "Can't increase by ";
      String string4 = "UGo'cQ''&WhiqSI6b";
      // Undeclared exception!
      try { 
        connectionsApiV2_0.performAction("org.springframework.core.convert.support.GenericConversionService", "", (Map<String, Object>) null, "$CAYy~,ci", "Can't increase by ", "UGo'cQ''&WhiqSI6b");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      connectionsApiV2_0.setApiClient((ApiClient) null);
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      Integer.divideUnsigned(0, 507);
      Integer.sum(507, 3123);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.upgrade("", "6wkIl)", "5b7Hm`x)Uti5(N|_", "6wkIl)", integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      connectionsApiV2_0.get("/OpUcn_?WL=E@", "Ex:UZUI", "#WW3H;\"83|5V8", "Ex:UZUI");
      connectionsApiV2_0.setApiClient(apiClient0);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity1 = connectionEntity0.interactionProperties(connectionInteractionProperties0);
      ConnectionEntity connectionEntity2 = connectionEntity1.originCountry("/v2/connections");
      ConnectionEntity connectionEntity3 = connectionEntity2.putPropertiesItem("#WW3H;\"83|5V8", connectionsApiV2_0);
      ConnectionEntity connectionEntity4 = connectionEntity3.name("/OpUcn_?WL=E@");
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      Integer integer1 = XmlSuite.DEFAULT_THREAD_COUNT;
      DatasourceTypeProperty datasourceTypeProperty0 = new DatasourceTypeProperty();
      DatasourceTypeProperty datasourceTypeProperty1 = datasourceTypeProperty0.placeholder("/v2/connections");
      connectionEntity3.getTags();
      DatasourceTypeProperty datasourceTypeProperty2 = datasourceTypeProperty1.tags((List<String>) null);
      DatasourceTypeProperty datasourceTypeProperty3 = datasourceTypeProperty2.addSupportedEnvironmentsItem("@Q#:T q&q5-YXN[Y");
      datasourceTypeProperty3.getMultiline();
      connectionsApiV2_0.discoverAssetsAnonymously("!a+8y`RSK.", connectionEntity4, integer0, integer1, "/OpUcn_?WL=E@", (Boolean) null, "reactor.core.publisher.Operators$MonoSubscriber", "-*3QVL#saV|-7Qk", "com.ibm.watson.data.client.api.ConnectionsApiV2$6", "/OpUcn_?WL=E@");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      String string0 = "";
      String string1 = "/v2/connections/{connection_id}";
      // Undeclared exception!
      try { 
        connectionsApiV2_0.listActions("", "/v2/connections/{connection_id}", "", "/v2/connections/{connection_id}", "/v2/connections/{connection_id}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int int0 = (-1693);
      ApiClient apiClient0 = new ApiClient(false, (-1693));
      String string0 = "reactor.ipc.netty.proxy";
      ApiClient apiClient1 = apiClient0.setBasePath("reactor.ipc.netty.proxy");
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient1);
      String string1 = "^A[N%$&~^40CN|Fg'";
      String string2 = ":(,)JA>@T'>DkkQf";
      // Undeclared exception!
      try { 
        connectionsApiV2_0.delete("", (String) null, ":(,)JA>@T'>DkkQf", "^A[N%$&~^40CN|Fg'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [reactor.ipc.netty.proxy] is not a valid HTTP URL
         //
         verifyException("org.springframework.web.util.UriComponentsBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ApiClient apiClient0 = null;
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      String string0 = "";
      LinkedList<JSONResourcePatchModel> linkedList0 = new LinkedList<JSONResourcePatchModel>();
      String string1 = "Cannot refine serialization key type %s into %s; types not related";
      JSONResourcePatchModel jSONResourcePatchModel0 = new JSONResourcePatchModel();
      JsonPatchOperation jsonPatchOperation0 = JsonPatchOperation.REPLACE;
      JSONResourcePatchModel jSONResourcePatchModel1 = jSONResourcePatchModel0.op(jsonPatchOperation0);
      jSONResourcePatchModel0.toString();
      jSONResourcePatchModel1.toString();
      linkedList0.add(jSONResourcePatchModel1);
      Boolean boolean0 = Boolean.FALSE;
      boolean boolean1 = true;
      Boolean.compare(true, true);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.update("", linkedList0, "", "Cannot refine serialization key type %s into %s; types not related", (String) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      Integer integer0 = new Integer((-43));
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.discoverAssets("2#d0Wi3Ai=m", "/v2/connections/{connection_id}/assets", "XQ>*m5XlE_9-oHGq", "text/markdown", "text/markdown", "E2?+]W$u", "", "L?q^DM", "com.fasterxml.", integer0, integer0, "E2?+]W$u", boolean0, "v_$L{Y#ny", "com.fasterxml.", "/v2/connections/upgrade", "XQ>*m5XlE_9-oHGq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ApiClient apiClient1 = apiClient0.setBasePath("");
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient1);
      Integer integer0 = new Integer((-1135));
      Integer integer1 = Integer.getInteger("&Vm\b=2*Q]gx}", 4061);
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.discoverAssets("", "", "V F)U(Ji", "OtherScalar", "|4H_9<[UFH!hyR?", "|4H_9<[UFH!hyR?", "", "V F)U(Ji", "", integer0, integer1, "&Vm\b=2*Q]gx}", boolean0, "&Vm\b=2*Q]gx}", "De", "d,&11E8", "d,&11E8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [] is not a valid HTTP URL
         //
         verifyException("org.springframework.web.util.UriComponentsBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      connectionsApiV2_0.getApiClient();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Integer integer0 = new Integer((-2991));
      Boolean boolean0 = Boolean.valueOf(true);
      connectionsApiV2_0.discoverAssetsAnonymously("O_1", connectionEntity0, integer0, integer0, "f_u=@3ABl8;*w7", boolean0, "f_u=@3ABl8;*w7", "", "", "");
      connectionsApiV2_0.listActions("f_u=@3ABl8;*w7", "&;)", "", "", "");
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.gatewayId("/v2/connections");
      ConnectionEntity connectionEntity2 = connectionEntity1.description("&+{");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity3 = connectionEntity2.sourceSystem(hashMap0);
      Integer integer0 = new Integer(101);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        connectionsApiV2_0.discoverAssetsAnonymously("", connectionEntity3, integer0, integer0, "=B\tMycL,0G", boolean0, "&+{", "&+{", "&+{", "btR@?");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      connectionsApiV2_0.list("Siv&[", "", (String) null, "", (String) null, (Integer) null, "", "", "", "", "\"j\":/SMr2BgCVEck", "");
      LinkedList<JSONResourcePatchModel> linkedList0 = new LinkedList<JSONResourcePatchModel>();
      JSONResourcePatchModel jSONResourcePatchModel0 = new JSONResourcePatchModel();
      JSONResourcePatchModel jSONResourcePatchModel1 = jSONResourcePatchModel0.path("#]>2.");
      ConnectionCollection connectionCollection0 = new ConnectionCollection();
      JSONResourcePatchModel jSONResourcePatchModel2 = jSONResourcePatchModel1.value(connectionCollection0);
      linkedList0.add(jSONResourcePatchModel2);
      Boolean boolean0 = Boolean.FALSE;
      connectionsApiV2_0.update("#]>2.", linkedList0, "Siv&[", "", "", boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      connectionsApiV2_0.setApiClient(apiClient0);
      connectionsApiV2_0.get("reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber", "reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber", "", "nU?#V'JI:_");
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      Integer.min(1, 1);
      connectionsApiV2_0.upgrade((String) null, " 2TsW", "", (String) null, integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      connectionsApiV2_0.get("", "r+XF&", "catalog_id", "");
      Integer integer0 = new Integer(0);
      connectionsApiV2_0.upgrade("", (String) null, "z(", (String) null, integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      String string0 = "";
      String string1 = "L3pj5~L<y)>~'&%)";
      String string2 = "AhG\"i1b+T/{<kJ";
      String string3 = "metadata.creator";
      connectionsApiV2_0.listActions("", "L3pj5~L<y)>~'&%)", "AhG\"i1b+T/{<kJ", "metadata.creator", "AhG\"i1b+T/{<kJ");
      // Undeclared exception!
      try { 
        apiClient0.setCredentials("");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class reactor.core.Exceptions
         //
         verifyException("reactor.core.publisher.Operators", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ApiClient apiClient1 = apiClient0.setBasePath("reactiveBridge is not installed");
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient1);
      String string0 = null;
      String string1 = "";
      Integer integer0 = new Integer((-1));
      // Undeclared exception!
      try { 
        connectionsApiV2_0.list("ejBmS\"7sn(y<E", "reactiveBridge is not installed", "WARNING", "GL18~_49k?U5Dc'", "GL18~_49k?U5Dc'", integer0, "ocJ?J2N9d_dAd", "", "WfVB#u?1,%{K9MZE", "reactiveBridge is not installed", "QLOw\"vQp|$Wl", (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // [reactiveBridge is not installed] is not a valid HTTP URL
         //
         verifyException("org.springframework.web.util.UriComponentsBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      connectionsApiV2_0.setApiClient(apiClient0);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      ConnectionEntity connectionEntity1 = connectionEntity0.addChildSourceSystemsItem(hashMap0);
      LinkedList<Map<String, Object>> linkedList0 = new LinkedList<Map<String, Object>>();
      ConnectionEntity connectionEntity2 = connectionEntity1.childSourceSystems(linkedList0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity3 = connectionEntity2.interactionProperties(connectionInteractionProperties0);
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity4 = connectionEntity3.assetCategory(assetCategory0);
      JsonFormat.Value jsonFormat_Value0 = JsonFormat.Value.forLeniency(false);
      connectionEntity3.getTags();
      connectionEntity2.setTags((List<String>) null);
      JsonFormat.Feature jsonFormat_Feature0 = JsonFormat.Feature.ACCEPT_CASE_INSENSITIVE_PROPERTIES;
      jsonFormat_Value0.getFeature(jsonFormat_Feature0);
      Boolean.compare(true, true);
      connectionsApiV2_0.create(connectionEntity4, "~jR.%Kh", "sYR_gBJy-wII", "com.ibm.watson.data.client.api.ConnectionsApiV2$1", (Boolean) null);
      connectionsApiV2_0.setApiClient(apiClient0);
      connectionsApiV2_0.delete("Destroying singletons in ", "nMJ5YK!=UaS-U", "/v2/connections/{connection_id}/assets", "");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false, 0);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.originCountry("/v2/connections");
      AssetCategory assetCategory0 = AssetCategory.USER;
      ConnectionEntity connectionEntity2 = connectionEntity1.assetCategory(assetCategory0);
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity3 = connectionEntity2.properties(map0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      DatasourceTypeProperty datasourceTypeProperty0 = new DatasourceTypeProperty();
      ConnectionInteractionProperties connectionInteractionProperties1 = connectionInteractionProperties0.addSourceItem(datasourceTypeProperty0);
      List<DatasourceTypeProperty> list0 = connectionInteractionProperties0.getSource();
      ConnectionInteractionProperties connectionInteractionProperties2 = connectionInteractionProperties1.source(list0);
      ConnectionEntity connectionEntity4 = connectionEntity3.interactionProperties(connectionInteractionProperties2);
      Boolean boolean0 = Boolean.FALSE;
      connectionsApiV2_0.create(connectionEntity4, "connection_id", "connection_id", ";c7-dL", boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity1 = connectionEntity0.addFlagsItem(connectionFlag0);
      ConnectionEntity connectionEntity2 = connectionEntity1.putSourceSystemItem("/v2/connections", (Object) null);
      String string0 = "/v2/connections";
      String string1 = "SyWw}\\n^Rg_d\"-";
      Boolean boolean0 = XmlSuite.DEFAULT_GROUP_BY_INSTANCES;
      Boolean.logicalXor(true, true);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.create(connectionEntity2, "/v2/connections", "SyWw}\n^Rg_d\"-", "", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      String string0 = "Problem determining whether filter of type '%s' should filter out `null` values: (%s) %s";
      String string1 = "";
      String string2 = null;
      String string3 = null;
      String string4 = "7";
      int int0 = (-1508);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      BaseRov baseRov0 = new BaseRov();
      ConnectionEntity connectionEntity1 = connectionEntity0.rov(baseRov0);
      ConnectionInteractionProperties connectionInteractionProperties0 = new ConnectionInteractionProperties();
      ConnectionEntity connectionEntity2 = connectionEntity1.interactionProperties(connectionInteractionProperties0);
      connectionEntity1.getFlags();
      ConnectionEntity connectionEntity3 = connectionEntity2.flags((List<ConnectionFlag>) null);
      ConnectionEntity connectionEntity4 = connectionEntity3.datasourceType("");
      Boolean boolean0 = Boolean.valueOf(false);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.create(connectionEntity4, "", (String) null, "", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false, 1292);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      DatasourceTypeProperty datasourceTypeProperty0 = new DatasourceTypeProperty();
      DatasourceTypeProperty datasourceTypeProperty1 = datasourceTypeProperty0.name("");
      connectionEntity0.getTags();
      DatasourceTypeProperty datasourceTypeProperty2 = datasourceTypeProperty1.supportedEnvironments((List<String>) null);
      DatasourceTypePropertyValues datasourceTypePropertyValues0 = new DatasourceTypePropertyValues();
      DatasourceTypePropertyValues datasourceTypePropertyValues1 = datasourceTypePropertyValues0.label("E[y7b](i;C&7.,*");
      DatasourceTypeProperty datasourceTypeProperty3 = datasourceTypeProperty2.addValuesItem(datasourceTypePropertyValues1);
      datasourceTypeProperty3.getHidden();
      connectionsApiV2_0.create(connectionEntity0, "E[y7b](i;C&7.,*", "E[y7b](i;C&7.,*", "E[y7b](i;C&7.,*", (Boolean) null);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      ConnectionEntity connectionEntity1 = connectionEntity0.datasourceType("");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      ConnectionEntity connectionEntity2 = connectionEntity1.assetCategory(assetCategory0);
      ConnectionEntity connectionEntity3 = connectionEntity2.name("/v2/connections");
      Boolean boolean0 = new Boolean(true);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.create(connectionEntity3, "", "", "", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      LinkedList<JSONResourcePatchModel> linkedList0 = new LinkedList<JSONResourcePatchModel>();
      Boolean boolean0 = new Boolean(false);
      Boolean.logicalOr(false, false);
      connectionsApiV2_0.update("com.fasterxml.jackson.databind.ser.DefaultSerializerProvider", linkedList0, (String) null, "", "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider", boolean0);
      connectionsApiV2_0.getApiClient();
      Integer integer0 = new Integer(24);
      Integer integer1 = new Integer((-2063));
      Boolean boolean1 = Boolean.TRUE;
      ApiClient.CollectionFormat apiClient_CollectionFormat0 = ApiClient.CollectionFormat.TSV;
      ConnectionActions connectionActions0 = new ConnectionActions();
      LinkedList<DatasourceTypeAction> linkedList1 = new LinkedList<DatasourceTypeAction>();
      ConnectionActions connectionActions1 = connectionActions0.actions(linkedList1);
      apiClient0.parameterToMultiValueMap(apiClient_CollectionFormat0, "/v2/connections", connectionActions1);
      Integer.getInteger("f)$q(6+2SFvO%2L", 410);
      connectionsApiV2_0.discoverAssets("", "", "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider", "J7", "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider", (String) null, "J7", "C60", "9,a-GH5", integer0, integer1, "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider", boolean1, "J7", (String) null, "9,a-GH5", "\"V'(G8A XOtf");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false, 0);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      connectionsApiV2_0.list("entity.name", "", "entity.name", "W]CtBq@N-E@nM;~E", "dXm*", integer0, "space_id", "dXm*", "", "context", "space_id", "W]CtBq@N-E@nM;~E");
      LinkedList<JSONResourcePatchModel> linkedList0 = new LinkedList<JSONResourcePatchModel>();
      connectionsApiV2_0.update("context", linkedList0, "", "space_id", "context", (Boolean) null);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ApiClient apiClient0 = null;
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      LinkedList<JSONResourcePatchModel> linkedList0 = new LinkedList<JSONResourcePatchModel>();
      linkedList0.clone();
      Boolean boolean0 = new Boolean("pP\"ttm");
      Boolean.logicalOr(false, false);
      // Undeclared exception!
      try { 
        connectionsApiV2_0.update("pP\"ttm", linkedList0, "reactor.netty.ByteBufFlux$ByteBufFluxFuseable", "d", "d", boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2((ApiClient) null);
      Integer integer0 = new Integer((-1227));
      // Undeclared exception!
      try { 
        connectionsApiV2_0.list("7", "", "png", "", "entity.name", integer0, (String) null, (String) null, "", "png", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.api.ConnectionsApiV2", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      connectionsApiV2_0.list("", "", "", "", "", integer0, "", "/v2/connections/assets", "", "@", "/v2/connections/assets", "/v2/connections/assets");
      System.setCurrentTimeMillis(0L);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      Map<String, Object> map0 = connectionEntity0.getProperties();
      ConnectionEntity connectionEntity1 = connectionEntity0.properties(map0);
      ConnectionEntity connectionEntity2 = connectionEntity1.addChildSourceSystemsItem(map0);
      ConnectionFlag connectionFlag0 = ConnectionFlag.RESTRICTED;
      ConnectionEntity connectionEntity3 = connectionEntity2.addFlagsItem(connectionFlag0);
      List<Map<String, Object>> list0 = connectionEntity0.getChildSourceSystems();
      ConnectionEntity connectionEntity4 = connectionEntity3.childSourceSystems(list0);
      BeanDefinitionDefaults beanDefinitionDefaults0 = new BeanDefinitionDefaults();
      beanDefinitionDefaults0.getLazyInit();
      Boolean.logicalOr(false, true);
      connectionsApiV2_0.create(connectionEntity4, "entity.datasource_type", "entity.datasource_type", "M\"K|-;+F9\"3vstHz", (Boolean) null);
      System.setCurrentTimeMillis((-388L));
      connectionsApiV2_0.create(connectionEntity3, "|(edaJhV&aek-", "Accept-Language", "", (Boolean) null);
      connectionsApiV2_0.upgrade("Yv?J>A0:%4r7j%?BQY", "", "$nd2aIgy", "", integer0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      Integer integer0 = new Integer(0);
      Boolean boolean0 = Boolean.TRUE;
      connectionsApiV2_0.discoverAssets("/v2/connections/assets", "/v2/connections/assets", "/v2/connections/assets", "/v2/connections/assets", "/v2/connections/assets", "", "", "]'jW_-pv", "", (Integer) null, integer0, "com.fasterxml.jackson.core.exc.InputCoercionException", boolean0, "]'jW_-pv", "com.fasterxml.jackson.core.exc.InputCoercionException", "com.fasterxml.jackson.core.exc.InputCoercionException", "com.fasterxml.jackson.core.exc.InputCoercionException");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      Integer.toUnsignedString(4438);
      connectionsApiV2_0.upgrade("Yj<1rSeCHVn~C7Vxp~", "", "", "Yj<1rSeCHVn~C7Vxp~", integer0);
      connectionsApiV2_0.listActions("", "com.sun.nio.sctp.SctpChannel", "beanType", "com.sun.nio.sctp.SctpChannel", " (expected type: ");
      connectionsApiV2_0.setApiClient(apiClient0);
      connectionsApiV2_0.getApiClient();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.getSourceSystem();
      DiscoveryLog discoveryLog1 = discoveryLog0.details((Map<String, Object>) null);
      Severity severity0 = Severity.WARNING;
      DiscoveryLog discoveryLog2 = discoveryLog1.severity(severity0);
      discoveryLog1.setMessage("T");
      discoveryLog2.toString();
      discoveryLog2.getDetails();
      discoveryLog2.setSeverity(severity0);
      connectionsApiV2_0.performAction("", "kQrc_M:=2Uk.ANYOjV", (Map<String, Object>) null, "4438", "", " (expected type: ");
      discoveryLog0.setDetails((Map<String, Object>) null);
      connectionsApiV2_0.delete("T", "Yj<1rSeCHVn~C7Vxp~", "fZ", "class DiscoveryLog {\n    severity: com.ibm.watson.data.client.model.enums.Severity@0000001164\n    message: java.lang.String@0000001165\n    details: null\n}");
      connectionsApiV2_0.performAction("T", "YzAK", (Map<String, Object>) null, "Yj<1rSeCHVn~C7Vxp~", "Yj<1rSeCHVn~C7Vxp~", "com.sun.nio.sctp.SctpChannel");
      Integer integer1 = XmlSuite.DEFAULT_VERBOSE;
      Class<ConnectionEntity> class0 = ConnectionEntity.class;
      CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 4438);
      Boolean boolean0 = coreXMLDeserializers_Std0.supportsUpdate((DeserializationConfig) null);
      connectionsApiV2_0.discoverAssets("T", "com.ibm.watson.data.client.api.ConnectionsApiV2$5", "", "kQrc_M:=2Uk.ANYOjV", "7RzxrJ3$PGuM", "T", "", "", "sourceInput", integer1, integer0, "4438", boolean0, "", "7RzxrJ3$PGuM", "9~\u0002I", "beanType");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      Integer.toUnsignedString(4438);
      connectionsApiV2_0.upgrade("Yj<1rSeCHVn~C7Vxp~", "", "", "Yj<1rSeCHVn~C7Vxp~", integer0);
      connectionsApiV2_0.listActions("", "com.sun.nio.sctp.SctpChannel", "beanType", "com.sun.nio.sctp.SctpChannel", " (expected type: ");
      connectionsApiV2_0.setApiClient(apiClient0);
      connectionsApiV2_0.getApiClient();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      Integer integer1 = XmlSuite.DEFAULT_VERBOSE;
      Class<ConnectionEntity> class0 = ConnectionEntity.class;
      CoreXMLDeserializers.Std coreXMLDeserializers_Std0 = new CoreXMLDeserializers.Std(class0, 4438);
      Boolean boolean0 = coreXMLDeserializers_Std0.supportsUpdate((DeserializationConfig) null);
      connectionsApiV2_0.discoverAssets("T", "com.ibm.watson.data.client.api.ConnectionsApiV2$5", "", "kQrc_M:=2Uk.ANYOjV", "7RzxrJ3$PGuM", "T", "", "", "sourceInput", integer1, integer0, "4438", boolean0, "", "7RzxrJ3$PGuM", "9~\u0002I", "beanType");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          ApiClient apiClient0 = null;
          try {
            apiClient0 = new ApiClient(true);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"javax.net.ssl.SSLPermission\" \"setHostnameVerifier\")
             // java.lang.Thread.getStackTrace(Thread.java:1559)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:434)
             // javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(HttpsURLConnection.java:233)
             // com.ibm.watson.data.client.ApiClient.buildRestTemplate(ApiClient.java:208)
             // com.ibm.watson.data.client.ApiClient.<init>(ApiClient.java:137)
             // com.ibm.watson.data.client.ApiClient.<init>(ApiClient.java:120)
             // sun.reflect.GeneratedConstructorAccessor97.newInstance(Unknown Source)
             // sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
             // java.lang.reflect.Constructor.newInstance(Constructor.java:423)
             // org.evosuite.testcase.statements.ConstructorStatement$1.execute(ConstructorStatement.java:233)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.ConstructorStatement.execute(ConstructorStatement.java:188)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:307)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:213)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
             // java.lang.Thread.run(Thread.java:748)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      String string0 = "Y2g_8Jq";
      // Undeclared exception!
      try { 
        apiClient0.setCredentials("Y2g_8Jq");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class reactor.core.Exceptions
         //
         verifyException("reactor.core.publisher.Operators", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      LinkedList<JSONResourcePatchModel> linkedList0 = new LinkedList<JSONResourcePatchModel>();
      XmlSuite xmlSuite0 = new XmlSuite();
      Boolean boolean0 = xmlSuite0.isJUnit();
      connectionsApiV2_0.update("?I~#F_<$Op:w,9R9_W", linkedList0, "?I~#F_<$Op:w,9R9_W", "?I~#F_<$Op:w,9R9_W", "", boolean0);
      // Undeclared exception!
      try { 
        apiClient0.setCredentials("", "");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class reactor.core.Exceptions
         //
         verifyException("reactor.core.publisher.Operators", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false, 0);
      assertNotNull(apiClient0);
      assertEquals("http://localhost", apiClient0.getBasePath());
      
      String string0 = null;
      ApiClient apiClient1 = apiClient0.setBasePath((String) null);
      assertSame(apiClient0, apiClient1);
      assertSame(apiClient1, apiClient0);
      assertNotNull(apiClient1);
      assertNull(apiClient0.getBasePath());
      assertNull(apiClient1.getBasePath());
      
      // Undeclared exception!
      try { 
        apiClient1.setCredentials("w4_PFUIKKp[-");
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class reactor.core.Exceptions
         //
         verifyException("reactor.core.publisher.Operators", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ApiClient apiClient0 = new ApiClient(false);
      ConnectionsApiV2 connectionsApiV2_0 = new ConnectionsApiV2(apiClient0);
      ConnectionEntity connectionEntity0 = new ConnectionEntity();
      connectionEntity0.getFlags();
      ConnectionEntity connectionEntity1 = connectionEntity0.flags((List<ConnectionFlag>) null);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      discoveredAsset0.getDetails();
      ConnectionEntity connectionEntity2 = connectionEntity1.properties((Map<String, Object>) null);
      ConnectionEntity connectionEntity3 = connectionEntity2.datasourceType("");
      connectionsApiV2_0.discoverAssetsAnonymously("uAYt", connectionEntity3, (Integer) null, (Integer) null, "aYq'{", (Boolean) null, (String) null, "uAYt", "", (String) null);
      Integer integer0 = Integer.getInteger("ii_n%vt^xgl", 0);
      connectionsApiV2_0.list((String) null, (String) null, "data_asset_catalog_id", "", "", integer0, "data_asset_catalog_id", "", "ZbQf)+5Z,[gm(gG)-^#", (String) null, "context", "%vD'Ub+gYzY[;S");
      connectionsApiV2_0.get("", "", "", "");
      connectionsApiV2_0.delete("H2`pwt1fq4~", "#,Z0()4/Ca+", "jSu!zNA.hU?9+6b*8E3", "");
      Mono<Map<String, Object>> mono0 = connectionsApiV2_0.upgrade("c<jQ;w?WM", "c<jQ;w?WM", "ii_n%vt^xgl", "", integer0);
      assertNotNull(mono0);
  }
}
