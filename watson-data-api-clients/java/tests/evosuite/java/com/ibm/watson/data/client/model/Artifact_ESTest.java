/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:39:46 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.Artifact;
import com.ibm.watson.data.client.model.ArtifactMetadata;
import com.ibm.watson.data.client.model.ArtifactWorkflowData;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Artifact_ESTest extends Artifact_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactWorkflowData artifactWorkflowData0 = new ArtifactWorkflowData();
      artifact0.workflowData(artifactWorkflowData0);
      ArtifactWorkflowData artifactWorkflowData1 = artifact0.getWorkflowData();
      assertNull(artifactWorkflowData1.getDraftMode());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifact0.setMetadata(artifactMetadata0);
      ArtifactMetadata artifactMetadata1 = artifact0.getMetadata();
      assertNull(artifactMetadata1.getVersionId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactWorkflowData artifactWorkflowData0 = new ArtifactWorkflowData();
      artifact0.setWorkflowData(artifactWorkflowData0);
      Artifact artifact1 = new Artifact();
      boolean boolean0 = artifact0.equals(artifact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      Artifact artifact1 = new Artifact();
      artifact0.setMetadata(artifactMetadata0);
      assertFalse(artifact0.equals((Object)artifact1));
      
      Artifact artifact2 = artifact1.metadata(artifactMetadata0);
      boolean boolean0 = artifact0.equals(artifact2);
      assertTrue(artifact1.equals((Object)artifact0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      boolean boolean0 = artifact0.equals("class Artifact {\n    metadata: com.ibm.watson.data.client.model.ArtifactMetadata@0000000002\n    workflowData: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      boolean boolean0 = artifact0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      boolean boolean0 = artifact0.equals(artifact0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifact0.metadata(artifactMetadata0);
      Artifact artifact1 = new Artifact();
      boolean boolean0 = artifact0.equals(artifact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactWorkflowData artifactWorkflowData0 = artifact0.getWorkflowData();
      assertNull(artifactWorkflowData0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      artifact0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactMetadata artifactMetadata0 = new ArtifactMetadata();
      artifact0.setMetadata(artifactMetadata0);
      String string0 = artifact0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Artifact artifact0 = new Artifact();
      ArtifactMetadata artifactMetadata0 = artifact0.getMetadata();
      assertNull(artifactMetadata0);
  }
}
