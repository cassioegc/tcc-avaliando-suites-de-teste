/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:24:30 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CustomAttribute;
import com.ibm.watson.data.client.model.UpdatableClassificationEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UpdatableClassificationEntity_ESTest extends UpdatableClassificationEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      updatableClassificationEntity0.setRevision("class UpdatableClassificationEntity {\n    longDescription: null\n    state: null\n    customAttributes: null\n    name: null\n    shortDescription: null\n    effectiveStartDate: null\n    effectiveEndDate: null\n    tags: null\n    stewardIds: java.util.ArrayList@0000000002\n    parentCategory: null\n    categories: null\n    isATypeOfClassification: null\n    hasTypesClassifications: null\n    terms: null\n    dataClasses: null\n    revision: null\n}");
      String string0 = updatableClassificationEntity0.getRevision();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      updatableClassificationEntity0.setRevision("");
      String string0 = updatableClassificationEntity0.getRevision();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      UpdatableClassificationEntity updatableClassificationEntity1 = new UpdatableClassificationEntity();
      assertTrue(updatableClassificationEntity1.equals((Object)updatableClassificationEntity0));
      
      updatableClassificationEntity1.setRevision("");
      boolean boolean0 = updatableClassificationEntity0.equals(updatableClassificationEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      updatableClassificationEntity0.addTagsItem("");
      UpdatableClassificationEntity updatableClassificationEntity1 = new UpdatableClassificationEntity();
      boolean boolean0 = updatableClassificationEntity0.equals(updatableClassificationEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      CustomAttribute customAttribute0 = new CustomAttribute();
      boolean boolean0 = updatableClassificationEntity0.equals(customAttribute0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      UpdatableClassificationEntity updatableClassificationEntity1 = new UpdatableClassificationEntity();
      boolean boolean0 = updatableClassificationEntity0.equals(updatableClassificationEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      boolean boolean0 = updatableClassificationEntity0.equals(updatableClassificationEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      boolean boolean0 = updatableClassificationEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      String string0 = updatableClassificationEntity0.getRevision();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      String string0 = updatableClassificationEntity0.toString();
      assertEquals("class UpdatableClassificationEntity {\n    longDescription: null\n    state: null\n    customAttributes: null\n    name: null\n    shortDescription: null\n    effectiveStartDate: null\n    effectiveEndDate: null\n    tags: null\n    stewardIds: null\n    parentCategory: null\n    categories: null\n    isATypeOfClassification: null\n    hasTypesClassifications: null\n    terms: null\n    dataClasses: null\n    revision: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdatableClassificationEntity updatableClassificationEntity0 = new UpdatableClassificationEntity();
      updatableClassificationEntity0.hashCode();
  }
}
