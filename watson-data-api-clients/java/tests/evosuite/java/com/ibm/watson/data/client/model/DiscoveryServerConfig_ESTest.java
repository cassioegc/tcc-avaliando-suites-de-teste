/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 20:23:39 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.DiscoveryServerConfig;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiscoveryServerConfig_ESTest extends DiscoveryServerConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getSuiteFiles();
      discoveryServerConfig0.discoveryEngineGUIDs(list0);
      List<String> list1 = discoveryServerConfig0.getDiscoveryEngineGUIDs();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      discoveryServerConfig0.addDiscoveryEngineGUIDsItem("[r2o5$Q+?!");
      List<String> list0 = discoveryServerConfig0.getDiscoveryEngineGUIDs();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      discoveryServerConfig0.accessServiceServerName("xn]t2IRSwH");
      String string0 = discoveryServerConfig0.getAccessServiceServerName();
      assertEquals("xn]t2IRSwH", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      DiscoveryServerConfig discoveryServerConfig1 = discoveryServerConfig0.accessServiceServerName("");
      String string0 = discoveryServerConfig1.getAccessServiceServerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      DiscoveryServerConfig discoveryServerConfig1 = discoveryServerConfig0.accessServiceRootURL("<");
      String string0 = discoveryServerConfig1.getAccessServiceRootURL();
      assertEquals("<", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      discoveryServerConfig0.accessServiceRootURL("");
      String string0 = discoveryServerConfig0.getAccessServiceRootURL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, 0);
      List<String> list0 = xmlTest0.getIncludedGroups();
      DiscoveryServerConfig discoveryServerConfig1 = discoveryServerConfig0.discoveryEngineGUIDs(list0);
      // Undeclared exception!
      try { 
        discoveryServerConfig1.addDiscoveryEngineGUIDsItem("'=s@pd");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      discoveryServerConfig0.setDiscoveryEngineGUIDs(linkedList0);
      String string0 = discoveryServerConfig0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      DiscoveryServerConfig discoveryServerConfig1 = new DiscoveryServerConfig();
      assertTrue(discoveryServerConfig1.equals((Object)discoveryServerConfig0));
      
      DiscoveryServerConfig discoveryServerConfig2 = discoveryServerConfig1.accessServiceServerName("class DiscoveryServerConfig {\n    accessServiceRootURL: null\n    accessServiceServerName: null\n    discoveryEngineGUIDs: null\n}");
      discoveryServerConfig2.addDiscoveryEngineGUIDsItem("[r2o5$Q+?!");
      discoveryServerConfig0.accessServiceServerName("class DiscoveryServerConfig {\n    accessServiceRootURL: null\n    accessServiceServerName: null\n    discoveryEngineGUIDs: null\n}");
      boolean boolean0 = discoveryServerConfig0.equals(discoveryServerConfig1);
      assertFalse(discoveryServerConfig1.equals((Object)discoveryServerConfig0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      DiscoveryServerConfig discoveryServerConfig1 = new DiscoveryServerConfig();
      DiscoveryServerConfig discoveryServerConfig2 = discoveryServerConfig1.accessServiceRootURL("xn]t2IRSwH");
      DiscoveryServerConfig discoveryServerConfig3 = discoveryServerConfig2.accessServiceServerName("xn]t2IRSwH");
      discoveryServerConfig3.accessServiceRootURL((String) null);
      boolean boolean0 = discoveryServerConfig0.equals(discoveryServerConfig2);
      assertFalse(discoveryServerConfig2.equals((Object)discoveryServerConfig0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      DiscoveryServerConfig discoveryServerConfig1 = new DiscoveryServerConfig();
      boolean boolean0 = discoveryServerConfig0.equals(discoveryServerConfig1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      boolean boolean0 = discoveryServerConfig0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      boolean boolean0 = discoveryServerConfig0.equals(discoveryServerConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      Object object0 = new Object();
      boolean boolean0 = discoveryServerConfig0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      discoveryServerConfig0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      List<String> list0 = discoveryServerConfig0.getDiscoveryEngineGUIDs();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      discoveryServerConfig0.setAccessServiceServerName("B}!n)i,=,`i*c");
      assertNull(discoveryServerConfig0.getAccessServiceRootURL());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      String string0 = discoveryServerConfig0.getAccessServiceServerName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      String string0 = discoveryServerConfig0.getAccessServiceRootURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      discoveryServerConfig0.setAccessServiceRootURL("|IX\"Z5?)e~U3^");
      DiscoveryServerConfig discoveryServerConfig1 = new DiscoveryServerConfig();
      boolean boolean0 = discoveryServerConfig0.equals(discoveryServerConfig1);
      assertFalse(boolean0);
  }
}
