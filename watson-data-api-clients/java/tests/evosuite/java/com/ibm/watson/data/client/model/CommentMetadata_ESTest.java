/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:28:47 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CommentMetadata;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CommentMetadata_ESTest extends CommentMetadata_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      commentMetadata0.modifiedBy("eDw\"bS!hF;");
      String string0 = commentMetadata0.getModifiedBy();
      assertEquals("eDw\"bS!hF;", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      MockDate mockDate0 = new MockDate(0L);
      commentMetadata0.modifiedAt(mockDate0);
      Date date0 = commentMetadata0.getModifiedAt();
      assertEquals("Thu Jan 01 00:00:00 GMT 1970", date0.toString());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      commentMetadata0.id("    modifiedBy: ");
      String string0 = commentMetadata0.getId();
      assertEquals("    modifiedBy: ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = commentMetadata0.id("");
      String string0 = commentMetadata1.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = commentMetadata0.assetVersionId("    id: ");
      String string0 = commentMetadata1.getAssetVersionId();
      assertEquals("    id: ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = commentMetadata0.assetAncestorId("reactor.ipc.netty.pool.acquireTimeout");
      String string0 = commentMetadata1.getAssetAncestorId();
      assertEquals("reactor.ipc.netty.pool.acquireTimeout", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      commentMetadata0.assetAncestorId("#x\"'6p28,{4om(_J");
      String string0 = commentMetadata0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = new CommentMetadata();
      assertTrue(commentMetadata1.equals((Object)commentMetadata0));
      
      CommentMetadata commentMetadata2 = commentMetadata0.modifiedBy("");
      MockDate mockDate0 = new MockDate(6, 0, 1, 0, 4);
      commentMetadata2.createdAt(mockDate0);
      commentMetadata1.setModifiedBy("");
      boolean boolean0 = commentMetadata0.equals(commentMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = new CommentMetadata();
      assertTrue(commentMetadata1.equals((Object)commentMetadata0));
      
      MockDate mockDate0 = new MockDate(1L);
      commentMetadata1.modifiedAt(mockDate0);
      boolean boolean0 = commentMetadata0.equals(commentMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = new CommentMetadata();
      assertTrue(commentMetadata1.equals((Object)commentMetadata0));
      
      commentMetadata0.modifiedBy("eDw\"bS!hF;");
      CommentMetadata commentMetadata2 = commentMetadata1.createdAt((Date) null);
      boolean boolean0 = commentMetadata0.equals(commentMetadata2);
      assertFalse(commentMetadata1.equals((Object)commentMetadata0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = new CommentMetadata();
      boolean boolean0 = commentMetadata0.equals(commentMetadata1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = new CommentMetadata();
      CommentMetadata commentMetadata2 = commentMetadata1.createdAt((Date) null);
      assertTrue(commentMetadata2.equals((Object)commentMetadata0));
      
      commentMetadata2.assetVersionId("com.ibm.watson.data.client.model.CommentMetadata");
      boolean boolean0 = commentMetadata0.equals(commentMetadata2);
      assertFalse(commentMetadata2.equals((Object)commentMetadata0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = new CommentMetadata();
      assertTrue(commentMetadata1.equals((Object)commentMetadata0));
      
      CommentMetadata commentMetadata2 = commentMetadata0.assetAncestorId("#x\"'6p28,{4om(_J");
      commentMetadata1.setId("");
      boolean boolean0 = commentMetadata1.equals(commentMetadata2);
      assertFalse(commentMetadata1.equals((Object)commentMetadata0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      boolean boolean0 = commentMetadata0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      boolean boolean0 = commentMetadata0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      boolean boolean0 = commentMetadata0.equals(commentMetadata0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = new CommentMetadata();
      assertTrue(commentMetadata1.equals((Object)commentMetadata0));
      
      commentMetadata0.assetAncestorId("#x\"'6p28,{4om(_J");
      boolean boolean0 = commentMetadata1.equals(commentMetadata0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      commentMetadata0.setAssetVersionId("");
      String string0 = commentMetadata0.getAssetVersionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      MockDate mockDate0 = new MockDate(2090L);
      commentMetadata0.setCreatedAt(mockDate0);
      Date date0 = commentMetadata0.getCreatedAt();
      assertEquals("Thu Jan 01 00:00:02 GMT 1970", date0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      commentMetadata0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      String string0 = commentMetadata0.getAssetVersionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      Date date0 = commentMetadata0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      commentMetadata0.setAssetAncestorId("io.netty.util.AbstractConstant");
      assertNull(commentMetadata0.getModifiedBy());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      CommentMetadata commentMetadata1 = commentMetadata0.modifiedBy("");
      String string0 = commentMetadata1.getModifiedBy();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      commentMetadata0.assetAncestorId("");
      String string0 = commentMetadata0.getAssetAncestorId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      Date date0 = commentMetadata0.getModifiedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      String string0 = commentMetadata0.getAssetAncestorId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      String string0 = commentMetadata0.getModifiedBy();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      String string0 = commentMetadata0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CommentMetadata commentMetadata0 = new CommentMetadata();
      MockDate mockDate0 = new MockDate((-105), (-105), 1024, 1024, 1024, 1024);
      commentMetadata0.setModifiedAt(mockDate0);
      assertNull(commentMetadata0.getId());
  }
}
