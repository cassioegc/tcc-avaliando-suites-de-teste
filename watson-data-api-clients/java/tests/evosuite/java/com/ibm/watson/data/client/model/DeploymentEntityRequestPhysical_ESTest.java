/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:50:44 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.DeploymentEntityRequestPhysical;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeploymentEntityRequestPhysical_ESTest extends DeploymentEntityRequestPhysical_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      Object object0 = new Object();
      String string0 = deploymentEntityRequestPhysical0.toIndentedString(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical1 = deploymentEntityRequestPhysical0.parameters(hashMap0);
      Map<String, Object> map0 = deploymentEntityRequestPhysical1.getParameters();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("reactor.onNextError.localStrategy", "reactor.onNextError.localStrategy");
      deploymentEntityRequestPhysical0.parameters(hashMap0);
      Map<String, Object> map0 = deploymentEntityRequestPhysical0.getParameters();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      // Undeclared exception!
      try { 
        deploymentEntityRequestPhysical0.toString((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.DeploymentEntityRequestPhysical", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical1 = deploymentEntityRequestPhysical0.parameters(hashMap0);
      StringBuilder stringBuilder0 = new StringBuilder("reactor.onNextError.localStrategy");
      deploymentEntityRequestPhysical1.toString(stringBuilder0);
      assertSame(deploymentEntityRequestPhysical1, deploymentEntityRequestPhysical0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      Object object0 = new Object();
      boolean boolean0 = deploymentEntityRequestPhysical0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical1 = new DeploymentEntityRequestPhysical();
      boolean boolean0 = deploymentEntityRequestPhysical0.equals(deploymentEntityRequestPhysical1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      boolean boolean0 = deploymentEntityRequestPhysical0.equals(deploymentEntityRequestPhysical0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      boolean boolean0 = deploymentEntityRequestPhysical0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      deploymentEntityRequestPhysical0.setParameters((Map<String, Object>) null);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      String string0 = deploymentEntityRequestPhysical0.toString();
      assertEquals("class DeploymentEntityRequestPhysical {\n    parameters: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      Map<String, Object> map0 = deploymentEntityRequestPhysical0.getParameters();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DeploymentEntityRequestPhysical deploymentEntityRequestPhysical0 = new DeploymentEntityRequestPhysical();
      deploymentEntityRequestPhysical0.hashCode();
  }
}
