/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:21:28 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.PaginatedClassificationList;
import com.ibm.watson.data.client.model.ResponseClassification;
import io.netty.handler.logging.ByteBufFormat;
import io.netty.handler.logging.LogLevel;
import io.netty.handler.logging.LoggingHandler;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PaginatedClassificationList_ESTest extends PaginatedClassificationList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      LinkedList<ResponseClassification> linkedList0 = new LinkedList<ResponseClassification>();
      paginatedClassificationList0.resources(linkedList0);
      List<ResponseClassification> list0 = paginatedClassificationList0.getResources();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      ResponseClassification responseClassification0 = new ResponseClassification();
      paginatedClassificationList0.addResourcesItem(responseClassification0);
      List<ResponseClassification> list0 = paginatedClassificationList0.getResources();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      PaginatedClassificationList paginatedClassificationList1 = new PaginatedClassificationList();
      assertTrue(paginatedClassificationList1.equals((Object)paginatedClassificationList0));
      
      ResponseClassification responseClassification0 = new ResponseClassification();
      paginatedClassificationList0.addResourcesItem(responseClassification0);
      boolean boolean0 = paginatedClassificationList1.equals(paginatedClassificationList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      PaginatedClassificationList paginatedClassificationList1 = new PaginatedClassificationList();
      Long long0 = new Long(6L);
      paginatedClassificationList1.setCount(long0);
      boolean boolean0 = paginatedClassificationList0.equals(paginatedClassificationList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      PaginatedClassificationList paginatedClassificationList1 = new PaginatedClassificationList();
      boolean boolean0 = paginatedClassificationList1.equals(paginatedClassificationList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      boolean boolean0 = paginatedClassificationList0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      boolean boolean0 = paginatedClassificationList0.equals(paginatedClassificationList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      LogLevel logLevel0 = LogLevel.ERROR;
      ByteBufFormat byteBufFormat0 = ByteBufFormat.SIMPLE;
      LoggingHandler loggingHandler0 = new LoggingHandler(logLevel0, byteBufFormat0);
      boolean boolean0 = paginatedClassificationList0.equals(loggingHandler0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      ResponseClassification responseClassification0 = new ResponseClassification();
      paginatedClassificationList0.addResourcesItem(responseClassification0);
      PaginatedClassificationList paginatedClassificationList1 = paginatedClassificationList0.addResourcesItem(responseClassification0);
      assertNull(paginatedClassificationList1.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      String string0 = paginatedClassificationList0.toString();
      assertEquals("class PaginatedClassificationList {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      List<ResponseClassification> list0 = paginatedClassificationList0.getResources();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      paginatedClassificationList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaginatedClassificationList paginatedClassificationList0 = new PaginatedClassificationList();
      paginatedClassificationList0.setResources((List<ResponseClassification>) null);
      assertNull(paginatedClassificationList0.getOffset());
  }
}
