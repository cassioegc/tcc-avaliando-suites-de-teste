/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:37:15 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AssetRatingEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AssetRatingEntity_ESTest extends AssetRatingEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      assetRatingEntity0.review("^K");
      String string0 = assetRatingEntity0.getReview();
      assertEquals("^K", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      assetRatingEntity0.setReview("");
      String string0 = assetRatingEntity0.getReview();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      Integer integer0 = new Integer(0);
      assetRatingEntity0.rating(integer0);
      Integer integer1 = assetRatingEntity0.getRating();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      Integer integer0 = new Integer(1116);
      assetRatingEntity0.rating(integer0);
      Integer integer1 = assetRatingEntity0.getRating();
      assertEquals(1116, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      Integer integer0 = new Integer((-2573));
      AssetRatingEntity assetRatingEntity1 = assetRatingEntity0.rating(integer0);
      Integer integer1 = assetRatingEntity1.getRating();
      assertEquals((-2573), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      AssetRatingEntity assetRatingEntity1 = assetRatingEntity0.review("_");
      String string0 = assetRatingEntity1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      AssetRatingEntity assetRatingEntity1 = new AssetRatingEntity();
      assertTrue(assetRatingEntity1.equals((Object)assetRatingEntity0));
      
      assetRatingEntity1.setReview("W1L`H 6");
      boolean boolean0 = assetRatingEntity1.equals(assetRatingEntity0);
      assertFalse(assetRatingEntity1.equals((Object)assetRatingEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      Integer integer0 = new Integer((-17));
      AssetRatingEntity assetRatingEntity1 = assetRatingEntity0.rating(integer0);
      AssetRatingEntity assetRatingEntity2 = new AssetRatingEntity();
      boolean boolean0 = assetRatingEntity1.equals(assetRatingEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      AssetRatingEntity assetRatingEntity1 = new AssetRatingEntity();
      boolean boolean0 = assetRatingEntity0.equals(assetRatingEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      boolean boolean0 = assetRatingEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      boolean boolean0 = assetRatingEntity0.equals(assetRatingEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      Integer integer0 = new Integer(1116);
      boolean boolean0 = assetRatingEntity0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      String string0 = assetRatingEntity0.getReview();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      assetRatingEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      Integer integer0 = assetRatingEntity0.getRating();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AssetRatingEntity assetRatingEntity0 = new AssetRatingEntity();
      assetRatingEntity0.setRating((Integer) null);
      assertNull(assetRatingEntity0.getRating());
  }
}
