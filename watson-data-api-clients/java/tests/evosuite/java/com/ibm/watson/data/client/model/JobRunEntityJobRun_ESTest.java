/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:33:27 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.JobRunEntityJobRun;
import com.ibm.watson.data.client.model.JobRunEntityJobRunDataFlowJobOutput;
import com.ibm.watson.data.client.model.JobRuntimeConfiguration;
import com.ibm.watson.data.client.model.enums.JobRunState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JobRunEntityJobRun_ESTest extends JobRunEntityJobRun_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.runtimeJobId(" qo4");
      String string0 = jobRunEntityJobRun0.getRuntimeJobId();
      assertEquals(" qo4", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.runtimeJobId("");
      String string0 = jobRunEntityJobRun0.getRuntimeJobId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.jobRef("8k=<(n;!");
      String string0 = jobRunEntityJobRun0.getJobRef();
      assertEquals("8k=<(n;!", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.jobRef("");
      String string0 = jobRunEntityJobRun0.getJobRef();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Boolean boolean0 = Boolean.TRUE;
      jobRunEntityJobRun0.isScheduledRun(boolean0);
      Boolean boolean1 = jobRunEntityJobRun0.getIsScheduledRun();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Boolean boolean0 = XmlSuite.DEFAULT_MIXED;
      jobRunEntityJobRun0.setIsScheduledRun(boolean0);
      Boolean boolean1 = jobRunEntityJobRun0.getIsScheduledRun();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Long long0 = new Long(0L);
      jobRunEntityJobRun0.duration(long0);
      Long long1 = jobRunEntityJobRun0.getDuration();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Long long0 = new Long(1657L);
      jobRunEntityJobRun0.duration(long0);
      Long long1 = jobRunEntityJobRun0.getDuration();
      assertEquals(1657L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Long long0 = new Long((-1L));
      jobRunEntityJobRun0.duration(long0);
      Long long1 = jobRunEntityJobRun0.getDuration();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      jobRunEntityJobRun0.setDataFlowJobOutput(jobRunEntityJobRunDataFlowJobOutput0);
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput1 = jobRunEntityJobRun0.getDataFlowJobOutput();
      assertNull(jobRunEntityJobRunDataFlowJobOutput1.getTotalRowsWritten());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRun jobRunEntityJobRun1 = new JobRunEntityJobRun();
      assertTrue(jobRunEntityJobRun1.equals((Object)jobRunEntityJobRun0));
      
      Long long0 = new Long(0L);
      jobRunEntityJobRun0.duration(long0);
      boolean boolean0 = jobRunEntityJobRun1.equals(jobRunEntityJobRun0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRun jobRunEntityJobRun1 = new JobRunEntityJobRun();
      assertTrue(jobRunEntityJobRun1.equals((Object)jobRunEntityJobRun0));
      
      jobRunEntityJobRun1.runtimeJobId("nll");
      boolean boolean0 = jobRunEntityJobRun0.equals(jobRunEntityJobRun1);
      assertFalse(jobRunEntityJobRun1.equals((Object)jobRunEntityJobRun0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRun jobRunEntityJobRun1 = new JobRunEntityJobRun();
      assertTrue(jobRunEntityJobRun1.equals((Object)jobRunEntityJobRun0));
      
      JobRunState jobRunState0 = JobRunState.FAILED;
      jobRunEntityJobRun0.setState(jobRunState0);
      boolean boolean0 = jobRunEntityJobRun1.equals(jobRunEntityJobRun0);
      assertFalse(jobRunEntityJobRun1.equals((Object)jobRunEntityJobRun0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRun jobRunEntityJobRun1 = new JobRunEntityJobRun();
      boolean boolean0 = jobRunEntityJobRun1.equals(jobRunEntityJobRun0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      boolean boolean0 = jobRunEntityJobRun0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      boolean boolean0 = jobRunEntityJobRun0.equals(jobRunEntityJobRun0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      boolean boolean0 = jobRunEntityJobRun0.equals("because the HTTP response has already been committed");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRunEntityJobRun0.setConfiguration(jobRuntimeConfiguration0);
      JobRunEntityJobRun jobRunEntityJobRun1 = new JobRunEntityJobRun();
      boolean boolean0 = jobRunEntityJobRun1.equals(jobRunEntityJobRun0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = jobRunEntityJobRun0.getDataFlowJobOutput();
      assertNull(jobRunEntityJobRunDataFlowJobOutput0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.setJobRef("because the HTTP response has already been committed");
      JobRunEntityJobRun jobRunEntityJobRun1 = new JobRunEntityJobRun();
      boolean boolean0 = jobRunEntityJobRun1.equals(jobRunEntityJobRun0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      String string0 = jobRunEntityJobRun0.getRuntimeJobId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Boolean boolean0 = jobRunEntityJobRun0.getIsScheduledRun();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      jobRunEntityJobRun0.setDataFlowJobOutput(jobRunEntityJobRunDataFlowJobOutput0);
      JobRunEntityJobRun jobRunEntityJobRun1 = new JobRunEntityJobRun();
      boolean boolean0 = jobRunEntityJobRun0.equals(jobRunEntityJobRun1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.getState();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Long long0 = jobRunEntityJobRun0.getDuration();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      Boolean boolean0 = new Boolean("");
      JobRunEntityJobRun jobRunEntityJobRun1 = jobRunEntityJobRun0.isScheduledRun(boolean0);
      JobRunEntityJobRun jobRunEntityJobRun2 = new JobRunEntityJobRun();
      boolean boolean1 = jobRunEntityJobRun1.equals(jobRunEntityJobRun2);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      String string0 = jobRunEntityJobRun0.getJobRef();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.jobRef("reactor.core.scheduler.ElasticScheduler$ScheduledExecutorServiceExpiry");
      String string0 = jobRunEntityJobRun0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.setRuntimeJobId("");
      assertNull(jobRunEntityJobRun0.getIsScheduledRun());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunState jobRunState0 = JobRunState.FAILED;
      JobRunEntityJobRun jobRunEntityJobRun1 = jobRunEntityJobRun0.state(jobRunState0);
      assertEquals(JobRunState.FAILED, jobRunEntityJobRun1.getState());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunEntityJobRunDataFlowJobOutput jobRunEntityJobRunDataFlowJobOutput0 = new JobRunEntityJobRunDataFlowJobOutput();
      JobRunEntityJobRun jobRunEntityJobRun1 = jobRunEntityJobRun0.dataFlowJobOutput(jobRunEntityJobRunDataFlowJobOutput0);
      assertSame(jobRunEntityJobRun1, jobRunEntityJobRun0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = jobRunEntityJobRun0.getConfiguration();
      assertNull(jobRuntimeConfiguration0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      JobRunEntityJobRun jobRunEntityJobRun1 = jobRunEntityJobRun0._configuration(jobRuntimeConfiguration0);
      JobRuntimeConfiguration jobRuntimeConfiguration1 = jobRunEntityJobRun1.getConfiguration();
      assertNull(jobRuntimeConfiguration1.getDeploymentJobDefinitionId());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      JobRunState jobRunState0 = JobRunState.FAILED;
      jobRunEntityJobRun0.setState(jobRunState0);
      JobRunState jobRunState1 = jobRunEntityJobRun0.getState();
      assertSame(jobRunState1, jobRunState0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JobRunEntityJobRun jobRunEntityJobRun0 = new JobRunEntityJobRun();
      jobRunEntityJobRun0.setDuration((Long) null);
      assertNull(jobRunEntityJobRun0.getIsScheduledRun());
  }
}
