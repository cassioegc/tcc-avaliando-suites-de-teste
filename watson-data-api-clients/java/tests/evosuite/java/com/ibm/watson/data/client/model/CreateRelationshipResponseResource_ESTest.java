/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:58:37 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CreateRelationshipResponseResource;
import com.ibm.watson.data.client.model.RelationshipCreateResponseIds;
import io.netty.channel.ChannelOutboundHandlerAdapter;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CreateRelationshipResponseResource_ESTest extends CreateRelationshipResponseResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ArrayList<RelationshipCreateResponseIds> arrayList0 = new ArrayList<RelationshipCreateResponseIds>();
      createRelationshipResponseResource0.setTerms(arrayList0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getTerms();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.parentCategory(relationshipCreateResponseIds0);
      RelationshipCreateResponseIds relationshipCreateResponseIds1 = createRelationshipResponseResource0.getParentCategory();
      assertNull(relationshipCreateResponseIds1.getRelationshipId());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ArrayList<RelationshipCreateResponseIds> arrayList0 = new ArrayList<RelationshipCreateResponseIds>();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.parent(arrayList0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource1.getParent();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.addParentItem(relationshipCreateResponseIds0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getParent();
      assertTrue(list0.contains(relationshipCreateResponseIds0));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      Vector<RelationshipCreateResponseIds> vector0 = new Vector<RelationshipCreateResponseIds>();
      createRelationshipResponseResource0.setClassifications(vector0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getClassifications();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.addClassificationsItem(relationshipCreateResponseIds0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getClassifications();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      Vector<RelationshipCreateResponseIds> vector0 = new Vector<RelationshipCreateResponseIds>();
      createRelationshipResponseResource0.child(vector0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getChild();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ArrayList<RelationshipCreateResponseIds> arrayList0 = new ArrayList<RelationshipCreateResponseIds>();
      createRelationshipResponseResource0.categories(arrayList0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getCategories();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.addCategoriesItem(relationshipCreateResponseIds0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getCategories();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = new CreateRelationshipResponseResource();
      assertTrue(createRelationshipResponseResource1.equals((Object)createRelationshipResponseResource0));
      
      createRelationshipResponseResource1.addChildItem(relationshipCreateResponseIds0);
      boolean boolean0 = createRelationshipResponseResource0.equals(createRelationshipResponseResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      createRelationshipResponseResource0.setGlobalId("l%jU!@;a82`Z?[8\"2");
      CreateRelationshipResponseResource createRelationshipResponseResource1 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource0.equals(createRelationshipResponseResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ChannelOutboundHandlerAdapter channelOutboundHandlerAdapter0 = new ChannelOutboundHandlerAdapter();
      boolean boolean0 = createRelationshipResponseResource0.equals(channelOutboundHandlerAdapter0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource0.equals(createRelationshipResponseResource1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource0.equals(createRelationshipResponseResource0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.addParentItem(relationshipCreateResponseIds0);
      CreateRelationshipResponseResource createRelationshipResponseResource1 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource0.equals(createRelationshipResponseResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      LinkedList<RelationshipCreateResponseIds> linkedList0 = new LinkedList<RelationshipCreateResponseIds>();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.parent(linkedList0);
      createRelationshipResponseResource1.addParentItem(relationshipCreateResponseIds0);
      assertTrue(linkedList0.contains(relationshipCreateResponseIds0));
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.addChildItem(relationshipCreateResponseIds0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getChild();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.addCategoriesItem(relationshipCreateResponseIds0);
      CreateRelationshipResponseResource createRelationshipResponseResource2 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource1.equals(createRelationshipResponseResource2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ArrayList<RelationshipCreateResponseIds> arrayList0 = new ArrayList<RelationshipCreateResponseIds>();
      createRelationshipResponseResource0.categories(arrayList0);
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.addCategoriesItem(relationshipCreateResponseIds0);
      assertNull(createRelationshipResponseResource1.getWorkflowId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.addClassificationsItem(relationshipCreateResponseIds0);
      CreateRelationshipResponseResource createRelationshipResponseResource1 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource0.equals(createRelationshipResponseResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      Stack<RelationshipCreateResponseIds> stack0 = new Stack<RelationshipCreateResponseIds>();
      createRelationshipResponseResource0.classifications(stack0);
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.addClassificationsItem(relationshipCreateResponseIds0);
      assertNull(createRelationshipResponseResource1.getWorkflowId());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.addTermsItem(relationshipCreateResponseIds0);
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getTerms();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ArrayList<RelationshipCreateResponseIds> arrayList0 = new ArrayList<RelationshipCreateResponseIds>();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.terms(arrayList0);
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.addTermsItem(relationshipCreateResponseIds0);
      assertSame(createRelationshipResponseResource0, createRelationshipResponseResource1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      String string0 = createRelationshipResponseResource0.toString();
      assertEquals("class CreateRelationshipResponseResource {\n    href: null\n    artifactId: null\n    versionId: null\n    workflowId: null\n    globalId: null\n    entityType: null\n    terms: null\n    classifications: null\n    categories: null\n    parentCategory: null\n    child: null\n    parent: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      createRelationshipResponseResource0.hashCode();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getClassifications();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      createRelationshipResponseResource0.setCategories((List<RelationshipCreateResponseIds>) null);
      assertNull(createRelationshipResponseResource0.getArtifactId());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getCategories();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getChild();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getParent();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      List<RelationshipCreateResponseIds> list0 = createRelationshipResponseResource0.getTerms();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.setParentCategory(relationshipCreateResponseIds0);
      assertNull(createRelationshipResponseResource0.getWorkflowId());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ArrayList<RelationshipCreateResponseIds> arrayList0 = new ArrayList<RelationshipCreateResponseIds>();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.child(arrayList0);
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource1.addChildItem(relationshipCreateResponseIds0);
      assertTrue(arrayList0.contains(relationshipCreateResponseIds0));
      assertFalse(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = createRelationshipResponseResource0.getParentCategory();
      assertNull(relationshipCreateResponseIds0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      createRelationshipResponseResource0.parentCategory(relationshipCreateResponseIds0);
      CreateRelationshipResponseResource createRelationshipResponseResource1 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource0.equals(createRelationshipResponseResource1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      ArrayList<RelationshipCreateResponseIds> arrayList0 = new ArrayList<RelationshipCreateResponseIds>();
      CreateRelationshipResponseResource createRelationshipResponseResource1 = createRelationshipResponseResource0.terms(arrayList0);
      CreateRelationshipResponseResource createRelationshipResponseResource2 = new CreateRelationshipResponseResource();
      boolean boolean0 = createRelationshipResponseResource1.equals(createRelationshipResponseResource2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      createRelationshipResponseResource0.setParent((List<RelationshipCreateResponseIds>) null);
      assertNull(createRelationshipResponseResource0.getArtifactId());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CreateRelationshipResponseResource createRelationshipResponseResource0 = new CreateRelationshipResponseResource();
      createRelationshipResponseResource0.setChild((List<RelationshipCreateResponseIds>) null);
      assertNull(createRelationshipResponseResource0.getVersionId());
  }
}
