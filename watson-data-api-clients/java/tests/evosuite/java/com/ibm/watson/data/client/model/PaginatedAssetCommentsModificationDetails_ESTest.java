/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:20:40 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AssetCommentModificationEntity;
import com.ibm.watson.data.client.model.AssetCommentPropertyModification;
import com.ibm.watson.data.client.model.AssetCommentsModificationDetails;
import com.ibm.watson.data.client.model.CommentMetadata;
import com.ibm.watson.data.client.model.HrefModel;
import com.ibm.watson.data.client.model.PaginatedAssetCommentsModificationDetails;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PaginatedAssetCommentsModificationDetails_ESTest extends PaginatedAssetCommentsModificationDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      assertNull(paginatedAssetCommentsModificationDetails0.getLimit());
      
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.addResourcesItem(assetCommentsModificationDetails0);
      paginatedAssetCommentsModificationDetails1.hashCode();
      paginatedAssetCommentsModificationDetails1.toIndentedString(assetCommentsModificationDetails0);
      AssetCommentModificationEntity assetCommentModificationEntity0 = new AssetCommentModificationEntity();
      AssetCommentPropertyModification assetCommentPropertyModification0 = new AssetCommentPropertyModification();
      AssetCommentPropertyModification assetCommentPropertyModification1 = assetCommentPropertyModification0.additionalInfo("XE;R:|Y");
      assetCommentPropertyModification0.setModId("XE;R:|Y");
      Long long0 = new Long(0L);
      Long.sum(4L, 3166L);
      AssetCommentPropertyModification assetCommentPropertyModification2 = assetCommentPropertyModification1.numberOfElements(long0);
      AssetCommentModificationEntity assetCommentModificationEntity1 = assetCommentModificationEntity0.modificationDetails(assetCommentPropertyModification2);
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      AssetCommentPropertyModification assetCommentPropertyModification3 = assetCommentPropertyModification1.initialValues(linkedList0);
      assetCommentModificationEntity1.modificationDetails(assetCommentPropertyModification3);
      AssetCommentsModificationDetails assetCommentsModificationDetails1 = assetCommentsModificationDetails0.entity(assetCommentModificationEntity1);
      paginatedAssetCommentsModificationDetails1.getResources();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = new PaginatedAssetCommentsModificationDetails();
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetCommentsModificationDetails2.setLast(hrefModel0);
      assetCommentPropertyModification0.addInitialValuesItem(assetCommentsModificationDetails1);
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails3 = new PaginatedAssetCommentsModificationDetails();
      paginatedAssetCommentsModificationDetails1.equals(paginatedAssetCommentsModificationDetails3);
      assetCommentPropertyModification2.toString();
      // Undeclared exception!
      try { 
        paginatedAssetCommentsModificationDetails0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.addResourcesItem(assetCommentsModificationDetails0);
      paginatedAssetCommentsModificationDetails1.hashCode();
      paginatedAssetCommentsModificationDetails1.toIndentedString(assetCommentsModificationDetails0);
      AssetCommentModificationEntity assetCommentModificationEntity0 = new AssetCommentModificationEntity();
      AssetCommentPropertyModification assetCommentPropertyModification0 = new AssetCommentPropertyModification();
      AssetCommentPropertyModification assetCommentPropertyModification1 = assetCommentPropertyModification0.additionalInfo("XE;R:|Y");
      assetCommentPropertyModification0.setModId("XE;R:|Y");
      Long long0 = new Long(0L);
      Long.sum(4L, 3166L);
      AssetCommentPropertyModification assetCommentPropertyModification2 = assetCommentPropertyModification1.numberOfElements(long0);
      AssetCommentModificationEntity assetCommentModificationEntity1 = assetCommentModificationEntity0.modificationDetails(assetCommentPropertyModification2);
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      AssetCommentPropertyModification assetCommentPropertyModification3 = assetCommentPropertyModification1.initialValues(linkedList0);
      assetCommentModificationEntity1.modificationDetails(assetCommentPropertyModification3);
      AssetCommentsModificationDetails assetCommentsModificationDetails1 = assetCommentsModificationDetails0.entity(assetCommentModificationEntity1);
      paginatedAssetCommentsModificationDetails1.getResources();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = paginatedAssetCommentsModificationDetails1.addResourcesItem(assetCommentsModificationDetails0);
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetCommentsModificationDetails2.setLast(hrefModel0);
      assetCommentPropertyModification0.addInitialValuesItem(assetCommentsModificationDetails1);
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails3 = new PaginatedAssetCommentsModificationDetails();
      paginatedAssetCommentsModificationDetails1.equals(paginatedAssetCommentsModificationDetails3);
      assetCommentPropertyModification2.toString();
      // Undeclared exception!
      try { 
        paginatedAssetCommentsModificationDetails0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.resources(linkedList0);
      paginatedAssetCommentsModificationDetails1.getResources();
      // Undeclared exception!
      try { 
        linkedList0.remove((-1));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: -1, Size: 0
         //
         verifyException("java.util.LinkedList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      AssetCommentPropertyModification assetCommentPropertyModification0 = new AssetCommentPropertyModification();
      AssetCommentPropertyModification assetCommentPropertyModification1 = assetCommentPropertyModification0.oldValue(">, ");
      AssetCommentPropertyModification assetCommentPropertyModification2 = assetCommentPropertyModification1.propertyName("S.1+2 nX!<e1g_C");
      paginatedAssetCommentsModificationDetails0.setLast((HrefModel) null);
      assetCommentPropertyModification2.toString();
      assetCommentPropertyModification2.getInitialValues();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.resources((List<AssetCommentsModificationDetails>) null);
      String string0 = paginatedAssetCommentsModificationDetails1.toString();
      assertEquals("class PaginatedAssetCommentsModificationDetails {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
      
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = new PaginatedAssetCommentsModificationDetails();
      boolean boolean0 = paginatedAssetCommentsModificationDetails0.equals(paginatedAssetCommentsModificationDetails2);
      assertTrue(boolean0);
      
      paginatedAssetCommentsModificationDetails1.setResources((List<AssetCommentsModificationDetails>) null);
      paginatedAssetCommentsModificationDetails2.resources((List<AssetCommentsModificationDetails>) null);
      assertTrue(paginatedAssetCommentsModificationDetails2.equals((Object)paginatedAssetCommentsModificationDetails1));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      paginatedAssetCommentsModificationDetails0.hashCode();
      paginatedAssetCommentsModificationDetails0.hashCode();
      paginatedAssetCommentsModificationDetails0.getResources();
      boolean boolean0 = paginatedAssetCommentsModificationDetails0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.addResourcesItem(assetCommentsModificationDetails0);
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = paginatedAssetCommentsModificationDetails1.resources(linkedList0);
      boolean boolean0 = paginatedAssetCommentsModificationDetails2.equals(paginatedAssetCommentsModificationDetails1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.resources(linkedList0);
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = paginatedAssetCommentsModificationDetails1.addResourcesItem(assetCommentsModificationDetails0);
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails3 = paginatedAssetCommentsModificationDetails2.addResourcesItem(assetCommentsModificationDetails0);
      assertSame(paginatedAssetCommentsModificationDetails2, paginatedAssetCommentsModificationDetails3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      boolean boolean0 = paginatedAssetCommentsModificationDetails0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      paginatedAssetCommentsModificationDetails0.getResources();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.resources((List<AssetCommentsModificationDetails>) null);
      assertSame(paginatedAssetCommentsModificationDetails1, paginatedAssetCommentsModificationDetails0);
      
      String string0 = paginatedAssetCommentsModificationDetails1.toString();
      assertEquals("class PaginatedAssetCommentsModificationDetails {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      CommentMetadata commentMetadata0 = new CommentMetadata();
      AssetCommentsModificationDetails assetCommentsModificationDetails1 = assetCommentsModificationDetails0.metadata(commentMetadata0);
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.addResourcesItem(assetCommentsModificationDetails1);
      List<AssetCommentsModificationDetails> list0 = paginatedAssetCommentsModificationDetails0.getResources();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = paginatedAssetCommentsModificationDetails1.resources(list0);
      List<AssetCommentsModificationDetails> list1 = paginatedAssetCommentsModificationDetails2.getResources();
      assertTrue(list1.contains(assetCommentsModificationDetails0));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      AssetCommentModificationEntity assetCommentModificationEntity0 = new AssetCommentModificationEntity();
      AssetCommentPropertyModification assetCommentPropertyModification0 = new AssetCommentPropertyModification();
      AssetCommentPropertyModification assetCommentPropertyModification1 = assetCommentPropertyModification0.newValue("");
      AssetCommentPropertyModification assetCommentPropertyModification2 = assetCommentPropertyModification1.action("s546q!a,inFX%E(");
      AssetCommentPropertyModification assetCommentPropertyModification3 = assetCommentPropertyModification2.propertyType("{vI!J:~J");
      AssetCommentPropertyModification assetCommentPropertyModification4 = assetCommentPropertyModification3.additionalInfo((String) null);
      assetCommentModificationEntity0.modificationDetails(assetCommentPropertyModification4);
      AssetCommentPropertyModification assetCommentPropertyModification5 = new AssetCommentPropertyModification();
      AssetCommentPropertyModification assetCommentPropertyModification6 = assetCommentPropertyModification5.addInitialValuesItem(assetCommentsModificationDetails0);
      assetCommentModificationEntity0.equals(assetCommentPropertyModification6);
      AssetCommentPropertyModification assetCommentPropertyModification7 = assetCommentPropertyModification6.additionalInfo("@s+|=O3AEag.");
      AssetCommentModificationEntity assetCommentModificationEntity1 = assetCommentModificationEntity0.modificationDetails(assetCommentPropertyModification7);
      assetCommentModificationEntity1.equals((Object) null);
      assetCommentsModificationDetails0.setEntity(assetCommentModificationEntity1);
      assetCommentsModificationDetails0.toString();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.addResourcesItem(assetCommentsModificationDetails0);
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      linkedList0.add(assetCommentsModificationDetails0);
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = paginatedAssetCommentsModificationDetails0.resources(linkedList0);
      paginatedAssetCommentsModificationDetails2.toString();
      // Undeclared exception!
      try { 
        paginatedAssetCommentsModificationDetails1.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      paginatedAssetCommentsModificationDetails0.getResources();
      paginatedAssetCommentsModificationDetails0.setResources((List<AssetCommentsModificationDetails>) null);
      assertNull(paginatedAssetCommentsModificationDetails0.getLimit());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      String string0 = paginatedAssetCommentsModificationDetails0.toString();
      assertEquals("class PaginatedAssetCommentsModificationDetails {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      Long long0 = new Long(63L);
      paginatedAssetCommentsModificationDetails0.count(long0);
      paginatedAssetCommentsModificationDetails0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.addResourcesItem(assetCommentsModificationDetails0);
      boolean boolean0 = paginatedAssetCommentsModificationDetails1.equals(assetCommentsModificationDetails0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = new PaginatedAssetCommentsModificationDetails();
      boolean boolean0 = paginatedAssetCommentsModificationDetails0.equals(paginatedAssetCommentsModificationDetails1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.resources(linkedList0);
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails2 = new PaginatedAssetCommentsModificationDetails();
      boolean boolean0 = paginatedAssetCommentsModificationDetails0.equals(paginatedAssetCommentsModificationDetails2);
      assertFalse(boolean0);
      
      paginatedAssetCommentsModificationDetails1.setResources(linkedList0);
      assertFalse(paginatedAssetCommentsModificationDetails0.equals((Object)paginatedAssetCommentsModificationDetails2));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = paginatedAssetCommentsModificationDetails0.addResourcesItem((AssetCommentsModificationDetails) null);
      paginatedAssetCommentsModificationDetails0.addResourcesItem((AssetCommentsModificationDetails) null);
      List<AssetCommentsModificationDetails> list0 = paginatedAssetCommentsModificationDetails1.getResources();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      boolean boolean0 = paginatedAssetCommentsModificationDetails0.equals(paginatedAssetCommentsModificationDetails0);
      paginatedAssetCommentsModificationDetails0.equals(linkedList0);
      String string0 = paginatedAssetCommentsModificationDetails0.toString();
      assertEquals("class PaginatedAssetCommentsModificationDetails {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
      
      boolean boolean1 = paginatedAssetCommentsModificationDetails0.equals((Object) null);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails0 = new PaginatedAssetCommentsModificationDetails();
      paginatedAssetCommentsModificationDetails0.hashCode();
      PaginatedAssetCommentsModificationDetails paginatedAssetCommentsModificationDetails1 = new PaginatedAssetCommentsModificationDetails();
      assertTrue(paginatedAssetCommentsModificationDetails1.equals((Object)paginatedAssetCommentsModificationDetails0));
      
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      paginatedAssetCommentsModificationDetails0.limit(integer0);
      boolean boolean0 = paginatedAssetCommentsModificationDetails0.equals(paginatedAssetCommentsModificationDetails1);
      assertFalse(paginatedAssetCommentsModificationDetails1.equals((Object)paginatedAssetCommentsModificationDetails0));
      assertFalse(boolean0);
  }
}
