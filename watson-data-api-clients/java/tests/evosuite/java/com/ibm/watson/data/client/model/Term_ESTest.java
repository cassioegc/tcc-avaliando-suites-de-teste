/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:13:20 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.GlossaryObjectMetadata;
import com.ibm.watson.data.client.model.ResponseTermEntity;
import com.ibm.watson.data.client.model.Term;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Term_ESTest extends Term_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Term term0 = new Term();
      ResponseTermEntity responseTermEntity0 = new ResponseTermEntity();
      Term term1 = term0.entity(responseTermEntity0);
      ResponseTermEntity responseTermEntity1 = term1.getEntity();
      assertNull(responseTermEntity1.getLongDescription());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Term term0 = new Term();
      Term term1 = new Term();
      boolean boolean0 = term0.equals(term1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Term term0 = new Term();
      ResponseTermEntity responseTermEntity0 = new ResponseTermEntity();
      boolean boolean0 = term0.equals(responseTermEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Term term0 = new Term();
      boolean boolean0 = term0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Term term0 = new Term();
      boolean boolean0 = term0.equals(term0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Term term0 = new Term();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      Term term1 = new Term();
      assertTrue(term1.equals((Object)term0));
      
      term1.setMetadata(glossaryObjectMetadata0);
      boolean boolean0 = term0.equals(term1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Term term0 = new Term();
      term0.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Term term0 = new Term();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      term0.setMetadata(glossaryObjectMetadata0);
      String string0 = term0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Term term0 = new Term();
      ResponseTermEntity responseTermEntity0 = new ResponseTermEntity();
      term0.entity(responseTermEntity0);
      Term term1 = new Term();
      boolean boolean0 = term0.equals(term1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Term term0 = new Term();
      GlossaryObjectMetadata glossaryObjectMetadata0 = term0.getMetadata();
      assertNull(glossaryObjectMetadata0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Term term0 = new Term();
      term0.setEntity((ResponseTermEntity) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Term term0 = new Term();
      ResponseTermEntity responseTermEntity0 = term0.getEntity();
      assertNull(responseTermEntity0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Term term0 = new Term();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      Term term1 = term0.metadata(glossaryObjectMetadata0);
      GlossaryObjectMetadata glossaryObjectMetadata1 = term1.getMetadata();
      assertNull(glossaryObjectMetadata1.getArtifactType());
  }
}
