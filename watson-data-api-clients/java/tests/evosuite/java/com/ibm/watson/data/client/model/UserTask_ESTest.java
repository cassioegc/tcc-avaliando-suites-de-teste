/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:57:31 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.FormProperty;
import com.ibm.watson.data.client.model.UserTask;
import com.ibm.watson.data.client.model.UserTaskEntity;
import com.ibm.watson.data.client.model.UserTaskMetadata;
import com.ibm.watson.data.client.model.Variable;
import com.ibm.watson.data.client.model.enums.UserTaskState;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserTask_ESTest extends UserTask_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTask userTask1 = userTask0.metadata(userTaskMetadata0);
      UserTask userTask2 = new UserTask();
      Object object0 = new Object();
      userTask2.equals(object0);
      userTask1.toString();
      userTask1.setMetadata(userTaskMetadata0);
      userTask1.hashCode();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTaskEntity userTaskEntity1 = userTaskEntity0.addCandidateUsersItem((String) null);
      userTaskEntity1.getFormProperties();
      UserTaskEntity userTaskEntity2 = userTaskEntity0.formProperties((List<FormProperty>) null);
      Variable variable0 = new Variable();
      userTaskEntity2.taskInstruction("class UserTask {\n    entity: null\n    metadata: com.ibm.watson.data.client.model.UserTaskMetadata@0000000002\n}");
      UserTask userTask3 = new UserTask();
      boolean boolean0 = userTask2.equals(userTask3);
      assertTrue(boolean0);
      
      UserTaskMetadata userTaskMetadata1 = userTask1.getMetadata();
      UserTask userTask4 = userTask3.entity(userTaskEntity2);
      UserTaskEntity userTaskEntity3 = new UserTaskEntity();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      UserTaskEntity userTaskEntity4 = userTaskEntity3.priority(integer0);
      userTaskEntity4.workflowTemplateId("j.$R>P");
      Integer.getInteger("j.$R>P");
      UserTaskEntity userTaskEntity5 = userTaskEntity4.assignee("class UserTask {\n    entity: null\n    metadata: com.ibm.watson.data.client.model.UserTaskMetadata@0000000002\n}");
      userTask2.entity(userTaskEntity5);
      userTask4.toString();
      userTask1.setMetadata(userTaskMetadata1);
      userTask2.toString();
      userTask4.getEntity();
      userTask4.hashCode();
      assertFalse(userTask3.equals((Object)userTask2));
      
      UserTask userTask5 = new UserTask();
      boolean boolean1 = userTask1.equals(userTask5);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTask userTask1 = userTask0.metadata(userTaskMetadata0);
      UserTask userTask2 = userTask0.metadata(userTaskMetadata0);
      Object object0 = new Object();
      boolean boolean0 = userTask2.equals(object0);
      assertFalse(boolean0);
      
      userTask1.toString();
      userTask1.setMetadata(userTaskMetadata0);
      userTask1.hashCode();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTaskEntity userTaskEntity1 = userTaskEntity0.addCandidateUsersItem((String) null);
      userTaskEntity1.getFormProperties();
      UserTaskEntity userTaskEntity2 = userTaskEntity0.formProperties((List<FormProperty>) null);
      Variable variable0 = new Variable();
      userTaskEntity2.taskInstruction("class UserTask {\n    entity: null\n    metadata: com.ibm.watson.data.client.model.UserTaskMetadata@0000000002\n}");
      UserTask userTask3 = new UserTask();
      boolean boolean1 = userTask2.equals(userTask3);
      assertFalse(boolean1);
      
      UserTaskMetadata userTaskMetadata1 = userTask1.getMetadata();
      UserTask userTask4 = userTask0.metadata(userTaskMetadata0);
      UserTaskEntity userTaskEntity3 = new UserTaskEntity();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      UserTaskEntity userTaskEntity4 = userTaskEntity3.priority(integer0);
      userTaskEntity4.workflowTemplateId("j.$R>P");
      Integer.getInteger("j.$R>P");
      UserTaskEntity userTaskEntity5 = userTaskEntity4.assignee("class UserTask {\n    entity: null\n    metadata: com.ibm.watson.data.client.model.UserTaskMetadata@0000000002\n}");
      userTask2.entity(userTaskEntity5);
      userTask4.toString();
      userTask1.setMetadata(userTaskMetadata1);
      userTask1.toString();
      userTask4.getEntity();
      userTask4.hashCode();
      UserTask userTask5 = new UserTask();
      boolean boolean2 = userTask1.equals(userTask5);
      assertTrue(userTask5.equals((Object)userTask3));
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTaskEntity userTaskEntity1 = userTaskEntity0.parentTaskId("");
      UserTaskEntity userTaskEntity2 = userTaskEntity1.taskTitle("");
      UserTask userTask1 = new UserTask();
      Variable variable0 = new Variable();
      UserTaskEntity userTaskEntity3 = new UserTaskEntity();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      UserTaskEntity userTaskEntity4 = userTaskEntity3.candidateUsers(linkedList0);
      UserTask userTask2 = userTask0.entity(userTaskEntity4);
      userTask2.equals(userTask1);
      UserTask userTask3 = new UserTask();
      userTask0.setEntity(userTaskEntity3);
      userTaskEntity0.assignee("");
      MockDate mockDate0 = new MockDate(704, (-569), 704, (-569), 3487, (-569));
      userTaskEntity0.setClaimedAt(mockDate0);
      userTask1.hashCode();
      userTaskEntity2.setVariables((List<Variable>) null);
      userTask3.entity(userTaskEntity2);
      userTask2.getEntity();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTaskState userTaskState0 = UserTaskState.ASSIGNED;
      UserTaskMetadata userTaskMetadata1 = userTaskMetadata0.state(userTaskState0);
      UserTaskMetadata userTaskMetadata2 = userTaskMetadata1.workflowId("_$c^?EG47rrM9wt+");
      UserTask userTask4 = userTask1.metadata(userTaskMetadata2);
      userTask4.setEntity(userTaskEntity3);
      userTask4.toString();
      assertFalse(userTask1.equals((Object)userTask3));
      assertFalse(userTask1.equals((Object)userTask0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTaskEntity userTaskEntity1 = userTaskEntity0.parentTaskId("h");
      userTaskEntity1.setParentTaskId("");
      userTask0.equals("");
      UserTaskEntity userTaskEntity2 = userTaskEntity1.taskInstruction((String) null);
      UserTask userTask1 = userTask0.entity(userTaskEntity2);
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTaskMetadata userTaskMetadata1 = userTaskMetadata0.workflowId((String) null);
      userTaskMetadata1.setWorkflowId((String) null);
      userTask1.metadata(userTaskMetadata1);
      Variable variable0 = new Variable();
      Variable variable1 = variable0.name("\n");
      Variable variable2 = variable1.value(variable0);
      userTaskEntity0.addVariablesItem(variable2);
      Integer integer0 = new Integer(39);
      userTaskEntity0.setPriority(integer0);
      // Undeclared exception!
      try { 
        userTask0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTaskEntity userTaskEntity1 = userTaskEntity0.assignee("");
      Variable variable0 = new Variable();
      userTask0.toString();
      UserTaskEntity userTaskEntity2 = userTaskEntity1.addVariablesItem(variable0);
      UserTask userTask1 = userTask0.entity(userTaskEntity2);
      userTask0.equals(userTask1);
      UserTask userTask2 = userTask0.entity((UserTaskEntity) null);
      userTask0.getMetadata();
      userTask2.metadata((UserTaskMetadata) null);
      UserTaskMetadata userTaskMetadata0 = userTask0.getMetadata();
      assertNull(userTaskMetadata0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTaskEntity userTaskEntity1 = userTaskEntity0.addCandidateGroupsItem("io.netty.channel.oio.OioByteStreamChannel");
      UserTaskEntity userTaskEntity2 = userTaskEntity1.workflowTemplateId("UMP^");
      UserTaskEntity userTaskEntity3 = userTaskEntity2.taskDefinitionKey("a\"n1F`K `U3o");
      UserTask userTask1 = userTask0.entity(userTaskEntity3);
      UserTaskEntity userTaskEntity4 = userTask1.getEntity();
      assertSame(userTaskEntity4, userTaskEntity3);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTask userTask1 = userTask0.entity(userTaskEntity0);
      assertSame(userTask0, userTask1);
      
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTask userTask2 = userTask1.metadata(userTaskMetadata0);
      userTask2.hashCode();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTaskMetadata userTaskMetadata1 = userTaskMetadata0.artifactType((String) null);
      UserTaskState userTaskState0 = UserTaskState.ASSIGNED;
      UserTaskMetadata userTaskMetadata2 = userTaskMetadata1.state(userTaskState0);
      UserTaskMetadata userTaskMetadata3 = userTaskMetadata2.taskId((String) null);
      MockDate mockDate0 = new MockDate(1L);
      UserTaskMetadata userTaskMetadata4 = userTaskMetadata3.createdAt(mockDate0);
      userTask0.metadata(userTaskMetadata4);
      userTask0.equals("");
      userTask0.toString();
      UserTaskMetadata userTaskMetadata5 = userTask0.getMetadata();
      boolean boolean0 = userTask0.equals(userTaskMetadata5);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTask userTask1 = userTask0.metadata(userTaskMetadata0);
      userTask1.equals(userTask0);
      userTask1.metadata(userTaskMetadata0);
      userTask1.setMetadata(userTaskMetadata0);
      assertNull(userTaskMetadata0.getTaskId());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTaskMetadata userTaskMetadata1 = userTaskMetadata0.workflowId("#d]2K=k^U");
      userTask0.setMetadata(userTaskMetadata1);
      assertNull(userTaskMetadata1.getTaskId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.entity((UserTaskEntity) null);
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTaskMetadata userTaskMetadata1 = userTaskMetadata0.taskId("uANH/&Q");
      UserTaskMetadata userTaskMetadata2 = userTaskMetadata1.artifactType("");
      UserTask userTask2 = userTask1.metadata(userTaskMetadata2);
      String string0 = userTask2.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      Variable variable0 = new Variable();
      userTask0.toString();
      Variable variable1 = variable0.name("");
      userTask0.equals(variable1);
      userTask0.toString();
      UserTaskEntity userTaskEntity0 = userTask0.getEntity();
      assertNull(userTaskEntity0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      userTask0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      userTask0.equals((Object) null);
      userTask0.getMetadata();
      UserTask userTask1 = userTask0.metadata((UserTaskMetadata) null);
      assertSame(userTask1, userTask0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskMetadata userTaskMetadata0 = userTask0.getMetadata();
      assertNull(userTaskMetadata0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTask userTask1 = userTask0.metadata((UserTaskMetadata) null);
      assertSame(userTask0, userTask1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTaskEntity userTaskEntity1 = userTaskEntity0.taskInstruction("");
      UserTaskEntity userTaskEntity2 = userTaskEntity1.addCandidateGroupsItem("blocking read");
      userTask0.setEntity(userTaskEntity2);
      assertSame(userTaskEntity0, userTaskEntity2);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = userTask0.getEntity();
      assertNull(userTaskEntity0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      UserTask userTask1 = new UserTask();
      Object object0 = new Object();
      userTask1.equals(object0);
      assertTrue(userTask1.equals((Object)userTask0));
      
      userTask1.setMetadata(userTaskMetadata0);
      UserTask userTask2 = new UserTask();
      userTask0.equals(userTask2);
      userTask1.getMetadata();
      boolean boolean0 = userTask1.equals(userTask0);
      assertFalse(userTask1.equals((Object)userTask0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      UserTaskEntity userTaskEntity0 = new UserTaskEntity();
      UserTask userTask1 = new UserTask();
      assertTrue(userTask1.equals((Object)userTask0));
      
      UserTask userTask2 = userTask0.entity(userTaskEntity0);
      userTask2.equals(userTask1);
      userTask1.hashCode();
      assertFalse(userTask1.equals((Object)userTask0));
      
      userTask2.getEntity();
      UserTaskMetadata userTaskMetadata0 = new UserTaskMetadata();
      userTask2.setEntity(userTaskEntity0);
      userTask2.toString();
      userTask0.metadata(userTaskMetadata0);
      assertFalse(userTask0.equals((Object)userTask1));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UserTask userTask0 = new UserTask();
      boolean boolean0 = userTask0.equals((Object) null);
      boolean boolean1 = userTask0.equals(userTask0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }
}
