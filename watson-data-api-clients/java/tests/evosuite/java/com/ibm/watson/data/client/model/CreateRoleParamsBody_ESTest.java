/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:18:53 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.CreateRoleParamsBody;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CreateRoleParamsBody_ESTest extends CreateRoleParamsBody_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      createRoleParamsBody0.setRoleName("This Provider cannot be used until the Injector has been created.");
      String string0 = createRoleParamsBody0.getRoleName();
      assertEquals("This Provider cannot be used until the Injector has been created.", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      CreateRoleParamsBody createRoleParamsBody1 = createRoleParamsBody0.permissions((List<String>) null);
      List<String> list0 = createRoleParamsBody1.getPermissions();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      CreateRoleParamsBody createRoleParamsBody1 = createRoleParamsBody0.addPermissionsItem(",cG|O^:L~V!_Z");
      List<String> list0 = createRoleParamsBody1.getPermissions();
      assertTrue(list0.contains(",cG|O^:L~V!_Z"));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      CreateRoleParamsBody createRoleParamsBody1 = createRoleParamsBody0.description("connect(..)");
      String string0 = createRoleParamsBody1.getDescription();
      assertEquals("connect(..)", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      CreateRoleParamsBody createRoleParamsBody1 = createRoleParamsBody0.permissions((List<String>) null);
      // Undeclared exception!
      try { 
        createRoleParamsBody1.addPermissionsItem("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.CreateRoleParamsBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      CreateRoleParamsBody createRoleParamsBody1 = new CreateRoleParamsBody();
      assertTrue(createRoleParamsBody1.equals((Object)createRoleParamsBody0));
      
      createRoleParamsBody1.roleName("3 i*V:k{=zb");
      boolean boolean0 = createRoleParamsBody0.equals(createRoleParamsBody1);
      assertFalse(createRoleParamsBody1.equals((Object)createRoleParamsBody0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      CreateRoleParamsBody createRoleParamsBody1 = new CreateRoleParamsBody();
      boolean boolean0 = createRoleParamsBody0.equals(createRoleParamsBody1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      boolean boolean0 = createRoleParamsBody0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      boolean boolean0 = createRoleParamsBody0.equals(createRoleParamsBody0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      Object object0 = new Object();
      boolean boolean0 = createRoleParamsBody0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      CreateRoleParamsBody createRoleParamsBody1 = createRoleParamsBody0.description("");
      String string0 = createRoleParamsBody1.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      createRoleParamsBody0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      String string0 = createRoleParamsBody0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      createRoleParamsBody0.setDescription("");
      CreateRoleParamsBody createRoleParamsBody1 = new CreateRoleParamsBody();
      boolean boolean0 = createRoleParamsBody0.equals(createRoleParamsBody1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      List<String> list0 = createRoleParamsBody0.getPermissions();
      CreateRoleParamsBody createRoleParamsBody1 = createRoleParamsBody0.permissions(list0);
      assertSame(createRoleParamsBody0, createRoleParamsBody1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      Vector<String> vector0 = new Vector<String>();
      createRoleParamsBody0.setPermissions(vector0);
      assertNull(createRoleParamsBody0.getRoleName());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      createRoleParamsBody0.setRoleName("");
      String string0 = createRoleParamsBody0.getRoleName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      String string0 = createRoleParamsBody0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      createRoleParamsBody0.addPermissionsItem(",cG|O^:L~V!_Z");
      CreateRoleParamsBody createRoleParamsBody1 = new CreateRoleParamsBody();
      boolean boolean0 = createRoleParamsBody0.equals(createRoleParamsBody1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CreateRoleParamsBody createRoleParamsBody0 = new CreateRoleParamsBody();
      String string0 = createRoleParamsBody0.getRoleName();
      assertNull(string0);
  }
}
