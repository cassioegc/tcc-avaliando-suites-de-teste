/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:23:51 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.FindAssetsResponse;
import com.ibm.watson.data.client.model.MetadataAssetResult;
import java.util.ConcurrentModificationException;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FindAssetsResponse_ESTest extends FindAssetsResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      Integer integer0 = new Integer(0);
      FindAssetsResponse findAssetsResponse1 = findAssetsResponse0.totalRows(integer0);
      Integer integer1 = findAssetsResponse1.getTotalRows();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      Integer integer0 = new Integer(6490);
      FindAssetsResponse findAssetsResponse1 = findAssetsResponse0.totalRows(integer0);
      Integer integer1 = findAssetsResponse1.getTotalRows();
      assertEquals(6490, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      Integer integer0 = new Integer((-31));
      findAssetsResponse0.setTotalRows(integer0);
      Integer integer1 = findAssetsResponse0.getTotalRows();
      assertEquals((-31), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      LinkedList<MetadataAssetResult> linkedList0 = new LinkedList<MetadataAssetResult>();
      FindAssetsResponse findAssetsResponse1 = findAssetsResponse0.results(linkedList0);
      List<MetadataAssetResult> list0 = findAssetsResponse1.getResults();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      LinkedList<MetadataAssetResult> linkedList0 = new LinkedList<MetadataAssetResult>();
      List<MetadataAssetResult> list0 = linkedList0.subList(0, 0);
      MetadataAssetResult metadataAssetResult0 = new MetadataAssetResult();
      linkedList0.add(metadataAssetResult0);
      findAssetsResponse0.results(list0);
      // Undeclared exception!
      try { 
        findAssetsResponse0.hashCode();
        fail("Expecting exception: ConcurrentModificationException");
      
      } catch(ConcurrentModificationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.SubList", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      Integer integer0 = new Integer((-31));
      findAssetsResponse0.setTotalRows(integer0);
      String string0 = findAssetsResponse0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      LinkedList<MetadataAssetResult> linkedList0 = new LinkedList<MetadataAssetResult>();
      FindAssetsResponse findAssetsResponse1 = new FindAssetsResponse();
      assertTrue(findAssetsResponse1.equals((Object)findAssetsResponse0));
      
      findAssetsResponse1.results(linkedList0);
      boolean boolean0 = findAssetsResponse1.equals(findAssetsResponse0);
      assertFalse(findAssetsResponse1.equals((Object)findAssetsResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      FindAssetsResponse findAssetsResponse1 = new FindAssetsResponse();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      FindAssetsResponse findAssetsResponse2 = findAssetsResponse1.totalRows(integer0);
      boolean boolean0 = findAssetsResponse2.equals(findAssetsResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      boolean boolean0 = findAssetsResponse0.equals("0g");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      FindAssetsResponse findAssetsResponse1 = new FindAssetsResponse();
      boolean boolean0 = findAssetsResponse1.equals(findAssetsResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      boolean boolean0 = findAssetsResponse0.equals(findAssetsResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      boolean boolean0 = findAssetsResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      findAssetsResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      LinkedList<MetadataAssetResult> linkedList0 = new LinkedList<MetadataAssetResult>();
      findAssetsResponse0.setResults(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      List<MetadataAssetResult> list0 = findAssetsResponse0.getResults();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      LinkedList<MetadataAssetResult> linkedList0 = new LinkedList<MetadataAssetResult>();
      FindAssetsResponse findAssetsResponse1 = findAssetsResponse0.results(linkedList0);
      MetadataAssetResult metadataAssetResult0 = new MetadataAssetResult();
      linkedList0.add(metadataAssetResult0);
      List<MetadataAssetResult> list0 = findAssetsResponse1.getResults();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FindAssetsResponse findAssetsResponse0 = new FindAssetsResponse();
      Integer integer0 = findAssetsResponse0.getTotalRows();
      assertNull(integer0);
  }
}
