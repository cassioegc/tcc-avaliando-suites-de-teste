/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 20:35:41 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ContentInfo;
import com.ibm.watson.data.client.model.enums.ContentFormatType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ContentInfo_ESTest extends ContentInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.pipelineNodeId("^CD@^38TA");
      String string0 = contentInfo0.getPipelineNodeId();
      assertEquals("^CD@^38TA", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.pipelineNodeId("");
      String string0 = contentInfo0.getPipelineNodeId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.location("^.Ez*UyPy;*Kf8>q");
      String string0 = contentInfo0.getLocation();
      assertEquals("^.Ez*UyPy;*Kf8>q", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.location("");
      String string0 = contentInfo0.getLocation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.setFileName("\n    ");
      String string0 = contentInfo0.getFileName();
      assertEquals("\n    ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentFormatType contentFormatType0 = ContentFormatType.COREML;
      contentInfo0.contentFormat(contentFormatType0);
      ContentFormatType contentFormatType1 = contentInfo0.getContentFormat();
      assertEquals(ContentFormatType.COREML, contentFormatType1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentInfo contentInfo1 = contentInfo0.location("");
      String string0 = contentInfo1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentInfo contentInfo1 = new ContentInfo();
      assertTrue(contentInfo1.equals((Object)contentInfo0));
      
      ContentInfo contentInfo2 = contentInfo1.pipelineNodeId("    pipelineNodeId: ");
      boolean boolean0 = contentInfo0.equals(contentInfo2);
      assertFalse(contentInfo1.equals((Object)contentInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentInfo contentInfo1 = new ContentInfo();
      assertTrue(contentInfo1.equals((Object)contentInfo0));
      
      contentInfo1.setFileName("PROPERTIES");
      ContentInfo contentInfo2 = contentInfo1.pipelineNodeId("    pipelineNodeId: ");
      boolean boolean0 = contentInfo0.equals(contentInfo2);
      assertFalse(contentInfo1.equals((Object)contentInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentInfo contentInfo1 = new ContentInfo();
      boolean boolean0 = contentInfo0.equals(contentInfo1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      Object object0 = new Object();
      boolean boolean0 = contentInfo0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      boolean boolean0 = contentInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      boolean boolean0 = contentInfo0.equals(contentInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      String string0 = contentInfo0.getFileName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentFormatType contentFormatType0 = ContentFormatType.COREML;
      contentInfo0.setContentFormat(contentFormatType0);
      assertEquals(ContentFormatType.COREML, contentInfo0.getContentFormat());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentFormatType contentFormatType0 = ContentFormatType.PIPELINE_NODE;
      contentInfo0.contentFormat(contentFormatType0);
      ContentInfo contentInfo1 = new ContentInfo();
      boolean boolean0 = contentInfo0.equals(contentInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.location("");
      ContentInfo contentInfo1 = new ContentInfo();
      boolean boolean0 = contentInfo0.equals(contentInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.getContentFormat();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      String string0 = contentInfo0.getPipelineNodeId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      String string0 = contentInfo0.getLocation();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.setPipelineNodeId((String) null);
      assertNull(contentInfo0.getContentFormat());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      contentInfo0.setLocation("class ContentInfo {\n    contentFormat: null\n    location: null\n    fileName: null\n    pipelineNodeId: null\n}");
      assertEquals("class ContentInfo {\n    contentFormat: null\n    location: null\n    fileName: null\n    pipelineNodeId: null\n}", contentInfo0.getLocation());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ContentInfo contentInfo0 = new ContentInfo();
      ContentInfo contentInfo1 = contentInfo0.fileName("");
      String string0 = contentInfo1.getFileName();
      assertEquals("", string0);
  }
}
