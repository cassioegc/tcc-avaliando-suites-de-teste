/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:22:32 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.BluemixCOSCredentials;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BluemixCOSCredentials_ESTest extends BluemixCOSCredentials_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCOSCredentials0.serviceId("V}h< KUM&Cg#");
      String string0 = bluemixCOSCredentials0.getServiceId();
      assertEquals("V}h< KUM&Cg#", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCOSCredentials0.serviceId("");
      String string0 = bluemixCOSCredentials0.getServiceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCOSCredentials bluemixCOSCredentials1 = bluemixCOSCredentials0.apiKey("%<^wbql/i[");
      String string0 = bluemixCOSCredentials1.getApiKey();
      assertEquals("%<^wbql/i[", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCOSCredentials bluemixCOSCredentials1 = bluemixCOSCredentials0.apiKey("");
      String string0 = bluemixCOSCredentials1.getApiKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCOSCredentials0.serviceId("");
      BluemixCOSCredentials bluemixCOSCredentials1 = new BluemixCOSCredentials();
      boolean boolean0 = bluemixCOSCredentials0.equals(bluemixCOSCredentials1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCOSCredentials bluemixCOSCredentials1 = bluemixCOSCredentials0.apiKey("\n");
      BluemixCOSCredentials bluemixCOSCredentials2 = new BluemixCOSCredentials();
      boolean boolean0 = bluemixCOSCredentials1.equals(bluemixCOSCredentials2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCOSCredentials bluemixCOSCredentials1 = new BluemixCOSCredentials();
      bluemixCOSCredentials0.accessKeyId("}");
      boolean boolean0 = bluemixCOSCredentials1.equals(bluemixCOSCredentials0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCOSCredentials bluemixCOSCredentials1 = new BluemixCOSCredentials();
      boolean boolean0 = bluemixCOSCredentials0.equals(bluemixCOSCredentials1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      boolean boolean0 = bluemixCOSCredentials0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      boolean boolean0 = bluemixCOSCredentials0.equals(bluemixCOSCredentials0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      Object object0 = new Object();
      boolean boolean0 = bluemixCOSCredentials0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      String string0 = bluemixCOSCredentials0.toString();
      assertEquals("class BluemixCOSCredentials {\n    accessKeyId: null\n    secretAccessKey: null\n    apiKey: null\n    serviceId: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      String string0 = bluemixCOSCredentials0.getServiceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCOSCredentials0.setApiKey("");
      assertNull(bluemixCOSCredentials0.getAccessKeyId());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      String string0 = bluemixCOSCredentials0.getApiKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCOSCredentials0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCOSCredentials0.setServiceId("class BluemixCOSCredentials {\n    accessKeyId: null\n    secretAccessKey: null\n    apiKey: null\n    serviceId: null\n}");
      assertEquals("class BluemixCOSCredentials {\n    accessKeyId: null\n    secretAccessKey: null\n    apiKey: null\n    serviceId: null\n}", bluemixCOSCredentials0.getServiceId());
  }
}
