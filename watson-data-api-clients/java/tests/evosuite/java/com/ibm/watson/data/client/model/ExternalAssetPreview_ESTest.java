/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:02:00 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.ExternalAssetPreview;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExternalAssetPreview_ESTest extends ExternalAssetPreview_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.setUrlPathFromAssetAttributes("class ExternalAssetPreview {\n    baseClientUrl: null\n    urlParametersFromAssetAttributes: null\n    urlPathFromAssetAttributes: null\n    urlParametersFixed: null\n}");
      String string0 = externalAssetPreview0.getUrlPathFromAssetAttributes();
      assertEquals("class ExternalAssetPreview {\n    baseClientUrl: null\n    urlParametersFromAssetAttributes: null\n    urlPathFromAssetAttributes: null\n    urlParametersFixed: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.addUrlParametersFromAssetAttributesItem("com.ibm.watson.data.client.model.ExternalAssetPreview");
      List<String> list0 = externalAssetPreview0.getUrlParametersFromAssetAttributes();
      assertTrue(list0.contains("com.ibm.watson.data.client.model.ExternalAssetPreview"));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlParametersFixed("");
      String string0 = externalAssetPreview1.getUrlParametersFixed();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.setBaseClientUrl("dzXk3?''fqI<");
      String string0 = externalAssetPreview0.getBaseClientUrl();
      assertEquals("dzXk3?''fqI<", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.addUrlParametersFromAssetAttributesItem("");
      String string0 = externalAssetPreview0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = new ExternalAssetPreview();
      assertTrue(externalAssetPreview1.equals((Object)externalAssetPreview0));
      
      externalAssetPreview1.setUrlPathFromAssetAttributes("");
      boolean boolean0 = externalAssetPreview0.equals(externalAssetPreview1);
      assertFalse(externalAssetPreview1.equals((Object)externalAssetPreview0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      Stack<String> stack0 = new Stack<String>();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlParametersFromAssetAttributes(stack0);
      ExternalAssetPreview externalAssetPreview2 = new ExternalAssetPreview();
      boolean boolean0 = externalAssetPreview1.equals(externalAssetPreview2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = new ExternalAssetPreview();
      externalAssetPreview1.baseClientUrl("writeAddress(..)");
      boolean boolean0 = externalAssetPreview0.equals(externalAssetPreview1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = new ExternalAssetPreview();
      boolean boolean0 = externalAssetPreview1.equals(externalAssetPreview0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      boolean boolean0 = externalAssetPreview0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      boolean boolean0 = externalAssetPreview0.equals(externalAssetPreview0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      boolean boolean0 = externalAssetPreview0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.addUrlParametersFromAssetAttributesItem("");
      ExternalAssetPreview externalAssetPreview2 = externalAssetPreview1.addUrlParametersFromAssetAttributesItem("class ExternalAssetPreview {\n    baseClientUrl: null\n    urlParametersFromAssetAttributes: java.util.ArrayList@0000000002\n    urlPathFromAssetAttributes: java.lang.String@0000000003\n    urlParametersFixed: java.lang.String@0000000003\n}");
      assertNull(externalAssetPreview2.getUrlPathFromAssetAttributes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      String string0 = externalAssetPreview0.getBaseClientUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      Vector<String> vector0 = new Vector<String>();
      externalAssetPreview0.setUrlParametersFromAssetAttributes(vector0);
      List<String> list0 = externalAssetPreview0.getUrlParametersFromAssetAttributes();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      List<String> list0 = externalAssetPreview0.getUrlParametersFromAssetAttributes();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      String string0 = externalAssetPreview0.getUrlPathFromAssetAttributes();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.urlPathFromAssetAttributes("");
      String string0 = externalAssetPreview0.getUrlPathFromAssetAttributes();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.setUrlParametersFixed("}");
      String string0 = externalAssetPreview0.getUrlParametersFixed();
      assertEquals("}", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      List<String> list0 = xmlTest0.getExcludedGroups();
      externalAssetPreview0.urlParametersFromAssetAttributes(list0);
      // Undeclared exception!
      try { 
        externalAssetPreview0.addUrlParametersFromAssetAttributesItem("s@I2(aGbAkj-4Osv");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      String string0 = externalAssetPreview0.getUrlParametersFixed();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      externalAssetPreview0.baseClientUrl("");
      String string0 = externalAssetPreview0.getBaseClientUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ExternalAssetPreview externalAssetPreview0 = new ExternalAssetPreview();
      ExternalAssetPreview externalAssetPreview1 = externalAssetPreview0.urlParametersFixed("");
      ExternalAssetPreview externalAssetPreview2 = new ExternalAssetPreview();
      boolean boolean0 = externalAssetPreview1.equals(externalAssetPreview2);
      assertFalse(boolean0);
  }
}
