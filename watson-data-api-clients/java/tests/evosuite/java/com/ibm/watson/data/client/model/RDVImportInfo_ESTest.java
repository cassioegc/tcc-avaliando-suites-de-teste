/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:31:49 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.RDVImportInfo;
import com.ibm.watson.data.client.model.Warnings;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RDVImportInfo_ESTest extends RDVImportInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Vector<Warnings> vector0 = new Vector<Warnings>(0);
      rDVImportInfo0.warnings(vector0);
      List<Warnings> list0 = rDVImportInfo0.getWarnings();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(2487L);
      rDVImportInfo0.valuesSkipped(long0);
      Long long1 = rDVImportInfo0.getValuesSkipped();
      assertEquals(2487L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(0L);
      rDVImportInfo0.valuesSkipped(long0);
      Long long1 = rDVImportInfo0.getValuesSkipped();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-429L));
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.valuesSkipped(long0);
      Long long1 = rDVImportInfo1.getValuesSkipped();
      assertEquals((-429L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-1619L));
      rDVImportInfo0.setValuesSkipped(long0);
      Long long1 = rDVImportInfo0.getValuesSkipped();
      assertEquals((-1619L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(0L);
      rDVImportInfo0.valuesProcessed(long0);
      Long long1 = rDVImportInfo0.getValuesProcessed();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-3886L));
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.valuesProcessed(long0);
      Long long1 = rDVImportInfo1.getValuesProcessed();
      assertEquals((-3886L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = Long.getLong("", 1167L);
      rDVImportInfo0.setValuesInserted(long0);
      Long long1 = rDVImportInfo0.getValuesInserted();
      assertEquals(1167L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(0L);
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.valuesInserted(long0);
      Long long1 = rDVImportInfo1.getValuesInserted();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-1619L));
      rDVImportInfo0.valuesInserted(long0);
      Long long1 = rDVImportInfo0.getValuesInserted();
      assertEquals((-1619L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(2310L);
      rDVImportInfo0.valuesCount(long0);
      Long long1 = rDVImportInfo0.getValuesCount();
      assertEquals(2310L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(0L);
      rDVImportInfo0.setValuesCount(long0);
      Long long1 = rDVImportInfo0.getValuesCount();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-2969L));
      rDVImportInfo0.valuesCount(long0);
      Long long1 = rDVImportInfo0.getValuesCount();
      assertEquals((-2969L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-1619L));
      rDVImportInfo0.setValuesCount(long0);
      Long long1 = rDVImportInfo0.getValuesCount();
      assertEquals((-1619L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      rDVImportInfo0.skippedRowIndex(arrayList0);
      List<Long> list0 = rDVImportInfo0.getSkippedRowIndex();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(0L);
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.addSkippedRowIndexItem(long0);
      List<Long> list0 = rDVImportInfo1.getSkippedRowIndex();
      assertTrue(list0.contains(0L));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.setImportState("    href: ");
      String string0 = rDVImportInfo0.getImportState();
      assertEquals("    href: ", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.importMessage("UP+$ip");
      String string0 = rDVImportInfo0.getImportMessage();
      assertEquals("UP+$ip", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.importMessage("");
      String string0 = rDVImportInfo0.getImportMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.importId("childGroup: ");
      String string0 = rDVImportInfo1.getImportId();
      assertEquals("childGroup: ", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.href(",bb[FtMK");
      String string0 = rDVImportInfo0.getHref();
      assertEquals(",bb[FtMK", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.href("");
      String string0 = rDVImportInfo1.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Vector<Warnings> vector0 = new Vector<Warnings>();
      rDVImportInfo0.warnings(vector0);
      String string0 = rDVImportInfo0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      assertTrue(rDVImportInfo1.equals((Object)rDVImportInfo0));
      
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      rDVImportInfo0.skippedRowIndex(arrayList0);
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.importState("NNH!U&|2{@g$v3X#^8");
      RDVImportInfo rDVImportInfo2 = new RDVImportInfo();
      Long long0 = new Long(1800L);
      RDVImportInfo rDVImportInfo3 = rDVImportInfo2.importState("NNH!U&|2{@g$v3X#^8");
      assertTrue(rDVImportInfo2.equals((Object)rDVImportInfo1));
      
      rDVImportInfo3.valuesInserted(long0);
      boolean boolean0 = rDVImportInfo2.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = Long.valueOf(1800L);
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      assertTrue(rDVImportInfo1.equals((Object)rDVImportInfo0));
      
      rDVImportInfo1.valuesProcessed(long0);
      rDVImportInfo0.setValuesCount(long0);
      rDVImportInfo1.valuesCount(long0);
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = Long.valueOf(1800L);
      rDVImportInfo0.href("NNH!U&|2{@g$v3X#^8");
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      rDVImportInfo0.setValuesCount(long0);
      rDVImportInfo1.href("NNH!U&|2{@g$v3X#^8");
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(rDVImportInfo1.equals((Object)rDVImportInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = Long.valueOf(1800L);
      rDVImportInfo0.href("NNH!U&|2{@g$v3X#^8");
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      rDVImportInfo0.importMessage("4=:V_dm`/N)XR~`cu;");
      RDVImportInfo rDVImportInfo2 = rDVImportInfo1.valuesProcessed(long0);
      rDVImportInfo2.href("NNH!U&|2{@g$v3X#^8");
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(rDVImportInfo1.equals((Object)rDVImportInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.importState("NNH!U&|2{@g$v3X#^8");
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.setImportId("NNH!U&|2{@g$v3X#^8");
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo0.equals(rDVImportInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-2969L));
      boolean boolean0 = rDVImportInfo0.equals(long0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Warnings warnings0 = new Warnings();
      rDVImportInfo0.addWarningsItem(warnings0);
      List<Warnings> list0 = rDVImportInfo0.getWarnings();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Stack<Warnings> stack0 = new Stack<Warnings>();
      rDVImportInfo0.warnings(stack0);
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.addWarningsItem((Warnings) null);
      assertNull(rDVImportInfo1.getValuesProcessed());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-2969L));
      LinkedList<Long> linkedList0 = new LinkedList<Long>();
      rDVImportInfo0.skippedRowIndex(linkedList0);
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.addSkippedRowIndexItem(long0);
      assertNull(rDVImportInfo1.getValuesProcessed());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      String string0 = rDVImportInfo0.getImportMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.href("NNH!U&|2{@g$v3X#^8");
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.setImportState("");
      String string0 = rDVImportInfo0.getImportState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.setImportMessage("");
      assertNull(rDVImportInfo0.getImportId());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = rDVImportInfo0.getValuesCount();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      ArrayList<Long> arrayList0 = new ArrayList<Long>();
      rDVImportInfo0.setSkippedRowIndex(arrayList0);
      assertNull(rDVImportInfo0.getImportId());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      String string0 = rDVImportInfo0.getImportId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = rDVImportInfo0.getValuesProcessed();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = Long.valueOf(1800L);
      rDVImportInfo0.setValuesProcessed(long0);
      assertNull(rDVImportInfo0.getImportId());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long(0L);
      rDVImportInfo0.setValuesSkipped(long0);
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = rDVImportInfo0.getValuesSkipped();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = Long.valueOf(1800L);
      rDVImportInfo0.valuesProcessed(long0);
      Long long1 = rDVImportInfo0.getValuesProcessed();
      assertEquals(1800L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      List<Warnings> list0 = rDVImportInfo0.getWarnings();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      List<Long> list0 = rDVImportInfo0.getSkippedRowIndex();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      String string0 = rDVImportInfo0.getImportState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      RDVImportInfo rDVImportInfo1 = rDVImportInfo0.importId("");
      String string0 = rDVImportInfo1.getImportId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Stack<Warnings> stack0 = new Stack<Warnings>();
      rDVImportInfo0.setWarnings(stack0);
      assertEquals(10, stack0.capacity());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.setHref("class RDVImportInfo {\n    href: null\n    importId: null\n    importState: null\n    importMessage: null\n    valuesCount: null\n    valuesProcessed: null\n    valuesSkipped: null\n    valuesInserted: null\n    skippedRowIndex: null\n    warnings: java.util.ArrayList@0000000003\n}");
      assertNull(rDVImportInfo0.getValuesProcessed());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      rDVImportInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = new Long((-2969L));
      rDVImportInfo0.setValuesInserted(long0);
      Long long1 = rDVImportInfo0.getValuesInserted();
      assertEquals((-2969L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      String string0 = rDVImportInfo0.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Long long0 = rDVImportInfo0.getValuesInserted();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RDVImportInfo rDVImportInfo0 = new RDVImportInfo();
      Vector<Warnings> vector0 = new Vector<Warnings>();
      rDVImportInfo0.warnings(vector0);
      RDVImportInfo rDVImportInfo1 = new RDVImportInfo();
      boolean boolean0 = rDVImportInfo1.equals(rDVImportInfo0);
      assertFalse(boolean0);
  }
}
