/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:36:50 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ConfusionMatrix;
import com.ibm.watson.data.client.model.MultiClassClassification;
import com.ibm.watson.data.client.model.RocCurve;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiClassClassification_ESTest extends MultiClassClassification_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      RocCurve rocCurve0 = new RocCurve();
      multiClassClassification0.rocCurve(rocCurve0);
      RocCurve rocCurve1 = multiClassClassification0.getRocCurve();
      assertNull(rocCurve1.getTrueClass());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      ConfusionMatrix confusionMatrix0 = new ConfusionMatrix();
      multiClassClassification0.confusionMatrix(confusionMatrix0);
      ConfusionMatrix confusionMatrix1 = multiClassClassification0.getConfusionMatrix();
      assertNull(confusionMatrix1.getTn());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      multiClassClassification0.setClassName("\u0004GxQWxNyg");
      String string0 = multiClassClassification0.getClassName();
      assertEquals("\u0004GxQWxNyg", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      multiClassClassification0.setClassName("");
      String string0 = multiClassClassification0.getClassName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      RocCurve rocCurve0 = new RocCurve();
      MultiClassClassification multiClassClassification1 = multiClassClassification0.rocCurve(rocCurve0);
      String string0 = multiClassClassification1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      MultiClassClassification multiClassClassification1 = new MultiClassClassification();
      boolean boolean0 = multiClassClassification0.equals(multiClassClassification1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      Integer integer0 = new Integer(2193);
      boolean boolean0 = multiClassClassification0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      boolean boolean0 = multiClassClassification0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      boolean boolean0 = multiClassClassification0.equals(multiClassClassification0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      RocCurve rocCurve0 = multiClassClassification0.getRocCurve();
      assertNull(rocCurve0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      RocCurve rocCurve0 = new RocCurve();
      MultiClassClassification multiClassClassification1 = multiClassClassification0.rocCurve(rocCurve0);
      MultiClassClassification multiClassClassification2 = new MultiClassClassification();
      boolean boolean0 = multiClassClassification1.equals(multiClassClassification2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      multiClassClassification0.className("DtEkc$*Q2");
      MultiClassClassification multiClassClassification1 = new MultiClassClassification();
      boolean boolean0 = multiClassClassification0.equals(multiClassClassification1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      ConfusionMatrix confusionMatrix0 = new ConfusionMatrix();
      multiClassClassification0.setConfusionMatrix(confusionMatrix0);
      assertNull(confusionMatrix0.getTp());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      String string0 = multiClassClassification0.getClassName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      multiClassClassification0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      ConfusionMatrix confusionMatrix0 = multiClassClassification0.getConfusionMatrix();
      assertNull(confusionMatrix0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      RocCurve rocCurve0 = new RocCurve();
      multiClassClassification0.setRocCurve(rocCurve0);
      assertNull(rocCurve0.getTrueClass());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      ConfusionMatrix confusionMatrix0 = new ConfusionMatrix();
      MultiClassClassification multiClassClassification1 = multiClassClassification0.confusionMatrix(confusionMatrix0);
      MultiClassClassification multiClassClassification2 = new MultiClassClassification();
      boolean boolean0 = multiClassClassification1.equals(multiClassClassification2);
      assertFalse(boolean0);
  }
}
