/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:02:06 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.BMCOSCredentialsEditor;
import com.ibm.watson.data.client.model.BluemixCOSCredentials;
import com.ibm.watson.data.client.model.CloudObjectStorageCredentials;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CloudObjectStorageCredentials_ESTest extends CloudObjectStorageCredentials_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      cloudObjectStorageCredentials0.editor(bMCOSCredentialsEditor0);
      BMCOSCredentialsEditor bMCOSCredentialsEditor1 = cloudObjectStorageCredentials0.getEditor();
      assertNull(bMCOSCredentialsEditor1.getApiKey());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      cloudObjectStorageCredentials0.setAdmin(bMCOSCredentialsEditor0);
      BluemixCOSCredentials bluemixCOSCredentials0 = cloudObjectStorageCredentials0.getAdmin();
      assertNull(bluemixCOSCredentials0.getSecretAccessKey());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      CloudObjectStorageCredentials cloudObjectStorageCredentials1 = new CloudObjectStorageCredentials();
      boolean boolean0 = cloudObjectStorageCredentials0.equals(cloudObjectStorageCredentials1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      CloudObjectStorageCredentials cloudObjectStorageCredentials1 = new CloudObjectStorageCredentials();
      cloudObjectStorageCredentials0.setAdmin(bMCOSCredentialsEditor0);
      boolean boolean0 = cloudObjectStorageCredentials0.equals(cloudObjectStorageCredentials1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      Object object0 = new Object();
      boolean boolean0 = cloudObjectStorageCredentials0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      boolean boolean0 = cloudObjectStorageCredentials0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      boolean boolean0 = cloudObjectStorageCredentials0.equals(cloudObjectStorageCredentials0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      CloudObjectStorageCredentials cloudObjectStorageCredentials1 = new CloudObjectStorageCredentials();
      assertTrue(cloudObjectStorageCredentials1.equals((Object)cloudObjectStorageCredentials0));
      
      cloudObjectStorageCredentials1.setViewer(bMCOSCredentialsEditor0);
      boolean boolean0 = cloudObjectStorageCredentials1.equals(cloudObjectStorageCredentials0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      CloudObjectStorageCredentials cloudObjectStorageCredentials1 = cloudObjectStorageCredentials0.viewer(bMCOSCredentialsEditor0);
      assertSame(cloudObjectStorageCredentials1, cloudObjectStorageCredentials0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = cloudObjectStorageCredentials0.getEditor();
      assertNull(bMCOSCredentialsEditor0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      cloudObjectStorageCredentials0.editor(bMCOSCredentialsEditor0);
      CloudObjectStorageCredentials cloudObjectStorageCredentials1 = new CloudObjectStorageCredentials();
      boolean boolean0 = cloudObjectStorageCredentials0.equals(cloudObjectStorageCredentials1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = cloudObjectStorageCredentials0.getViewer();
      assertNull(bMCOSCredentialsEditor0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BluemixCOSCredentials bluemixCOSCredentials0 = cloudObjectStorageCredentials0.getAdmin();
      assertNull(bluemixCOSCredentials0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      CloudObjectStorageCredentials cloudObjectStorageCredentials1 = cloudObjectStorageCredentials0.admin(bMCOSCredentialsEditor0);
      assertSame(cloudObjectStorageCredentials0, cloudObjectStorageCredentials1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      cloudObjectStorageCredentials0.setViewer(bMCOSCredentialsEditor0);
      BMCOSCredentialsEditor bMCOSCredentialsEditor1 = cloudObjectStorageCredentials0.getViewer();
      assertNull(bMCOSCredentialsEditor1.getAccessKeyId());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      cloudObjectStorageCredentials0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      String string0 = cloudObjectStorageCredentials0.toString();
      assertEquals("class CloudObjectStorageCredentials {\n    admin: null\n    editor: null\n    viewer: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      cloudObjectStorageCredentials0.setAdmin(bMCOSCredentialsEditor0);
      String string0 = cloudObjectStorageCredentials0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CloudObjectStorageCredentials cloudObjectStorageCredentials0 = new CloudObjectStorageCredentials();
      BMCOSCredentialsEditor bMCOSCredentialsEditor0 = new BMCOSCredentialsEditor();
      cloudObjectStorageCredentials0.setEditor(bMCOSCredentialsEditor0);
      assertNull(bMCOSCredentialsEditor0.getApiKey());
  }
}
