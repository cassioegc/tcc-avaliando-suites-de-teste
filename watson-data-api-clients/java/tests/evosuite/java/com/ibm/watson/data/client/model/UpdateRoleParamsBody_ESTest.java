/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:36:38 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.UpdateRoleParamsBody;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UpdateRoleParamsBody_ESTest extends UpdateRoleParamsBody_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      updateRoleParamsBody0.setPermissions((List<String>) null);
      List<String> list0 = updateRoleParamsBody0.getPermissions();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      updateRoleParamsBody0.description("class UpdateRoleParamsBody {\n");
      String string0 = updateRoleParamsBody0.getDescription();
      assertEquals("class UpdateRoleParamsBody {\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      updateRoleParamsBody0.description("");
      String string0 = updateRoleParamsBody0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      updateRoleParamsBody0.setPermissions((List<String>) null);
      // Undeclared exception!
      try { 
        updateRoleParamsBody0.addPermissionsItem("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.UpdateRoleParamsBody", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      UpdateRoleParamsBody updateRoleParamsBody1 = updateRoleParamsBody0.addPermissionsItem(")X~I");
      UpdateRoleParamsBody updateRoleParamsBody2 = updateRoleParamsBody1.description(")X~I");
      UpdateRoleParamsBody updateRoleParamsBody3 = new UpdateRoleParamsBody();
      UpdateRoleParamsBody updateRoleParamsBody4 = updateRoleParamsBody3.description("");
      updateRoleParamsBody4.description(")X~I");
      boolean boolean0 = updateRoleParamsBody2.equals(updateRoleParamsBody4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      UpdateRoleParamsBody updateRoleParamsBody1 = updateRoleParamsBody0.description(")X~I");
      UpdateRoleParamsBody updateRoleParamsBody2 = new UpdateRoleParamsBody();
      UpdateRoleParamsBody updateRoleParamsBody3 = updateRoleParamsBody2.description("");
      assertFalse(updateRoleParamsBody3.equals((Object)updateRoleParamsBody0));
      
      updateRoleParamsBody3.description(")X~I");
      boolean boolean0 = updateRoleParamsBody0.equals(updateRoleParamsBody3);
      assertTrue(updateRoleParamsBody3.equals((Object)updateRoleParamsBody1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      updateRoleParamsBody0.toString();
      Object object0 = new Object();
      updateRoleParamsBody0.hashCode();
      boolean boolean0 = updateRoleParamsBody0.equals(object0);
      boolean boolean1 = updateRoleParamsBody0.equals(updateRoleParamsBody0);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      Boolean boolean0 = new Boolean("class UpdateRoleParamsBody {\n");
      updateRoleParamsBody0.equals((Object) null);
      List<String> list0 = updateRoleParamsBody0.getPermissions();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      updateRoleParamsBody0.description(")X~I");
      UpdateRoleParamsBody updateRoleParamsBody1 = new UpdateRoleParamsBody();
      boolean boolean0 = updateRoleParamsBody0.equals(updateRoleParamsBody1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      UpdateRoleParamsBody updateRoleParamsBody1 = updateRoleParamsBody0.description(")X~I");
      ArrayList<String> arrayList0 = new ArrayList<String>(3476);
      UpdateRoleParamsBody updateRoleParamsBody2 = updateRoleParamsBody1.permissions(arrayList0);
      updateRoleParamsBody0.setPermissions(arrayList0);
      boolean boolean0 = updateRoleParamsBody2.equals(updateRoleParamsBody0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      String string0 = updateRoleParamsBody0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      updateRoleParamsBody0.setDescription("");
      assertEquals("", updateRoleParamsBody0.getDescription());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UpdateRoleParamsBody updateRoleParamsBody0 = new UpdateRoleParamsBody();
      UpdateRoleParamsBody updateRoleParamsBody1 = updateRoleParamsBody0.description("");
      updateRoleParamsBody0.addPermissionsItem("");
      List<String> list0 = updateRoleParamsBody1.getPermissions();
      assertFalse(list0.isEmpty());
  }
}
