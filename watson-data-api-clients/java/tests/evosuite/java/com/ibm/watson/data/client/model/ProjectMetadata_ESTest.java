/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:37:23 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ProjectMetadata;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ProjectMetadata_ESTest extends ProjectMetadata_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      projectMetadata0.url("t3,\"81_9GI4U");
      String string0 = projectMetadata0.getUrl();
      assertEquals("t3,\"81_9GI4U", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      projectMetadata0.url("");
      String string0 = projectMetadata0.getUrl();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      projectMetadata0.guid("");
      String string0 = projectMetadata0.getGuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      MockDate mockDate0 = new MockDate();
      projectMetadata0.createdAt(mockDate0);
      Date date0 = projectMetadata0.getCreatedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      MockDate mockDate0 = new MockDate((-332), (-332), (-332));
      projectMetadata0.setCreatedAt(mockDate0);
      String string0 = projectMetadata0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      projectMetadata0.setUrl("reactor.core.publisher.MonoUsing");
      ProjectMetadata projectMetadata1 = new ProjectMetadata();
      ProjectMetadata projectMetadata2 = projectMetadata1.guid("reactor.core.publisher.MonoUsing");
      ProjectMetadata projectMetadata3 = projectMetadata0.guid("reactor.core.publisher.MonoUsing");
      boolean boolean0 = projectMetadata2.equals(projectMetadata3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      MockDate mockDate0 = new MockDate((-332), (-332), (-332));
      ProjectMetadata projectMetadata1 = new ProjectMetadata();
      projectMetadata0.setCreatedAt(mockDate0);
      boolean boolean0 = projectMetadata0.equals(projectMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      ProjectMetadata projectMetadata1 = new ProjectMetadata();
      boolean boolean0 = projectMetadata0.equals(projectMetadata1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      boolean boolean0 = projectMetadata0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      boolean boolean0 = projectMetadata0.equals(projectMetadata0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      Object object0 = new Object();
      boolean boolean0 = projectMetadata0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      MockDate mockDate0 = new MockDate((-332), (-332), (-332));
      projectMetadata0.setUpdatedAt(mockDate0);
      Date date0 = projectMetadata0.getUpdatedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      Instant instant0 = MockInstant.ofEpochSecond((-1864L));
      Date date0 = Date.from(instant0);
      ProjectMetadata projectMetadata1 = projectMetadata0.updatedAt(date0);
      assertNull(projectMetadata1.getGuid());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      projectMetadata0.setGuid("    createdAt: ");
      assertEquals("    createdAt: ", projectMetadata0.getGuid());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      Date date0 = projectMetadata0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      Date date0 = projectMetadata0.getUpdatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      String string0 = projectMetadata0.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      MockDate mockDate0 = new MockDate((-332), (-332), (-332));
      projectMetadata0.setCreatedAt(mockDate0);
      ProjectMetadata projectMetadata1 = new ProjectMetadata();
      projectMetadata1.setCreatedAt(mockDate0);
      assertTrue(projectMetadata1.equals((Object)projectMetadata0));
      
      projectMetadata0.setUpdatedAt(mockDate0);
      boolean boolean0 = projectMetadata0.equals(projectMetadata1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      String string0 = projectMetadata0.getGuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      MockDate mockDate0 = new MockDate((-332), (-332), (-332));
      ProjectMetadata projectMetadata1 = projectMetadata0.createdAt(mockDate0);
      ProjectMetadata projectMetadata2 = new ProjectMetadata();
      projectMetadata1.setGuid("    createdAt: ");
      projectMetadata2.setCreatedAt(mockDate0);
      boolean boolean0 = projectMetadata0.equals(projectMetadata2);
      assertFalse(projectMetadata2.equals((Object)projectMetadata1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      projectMetadata0.guid("No matching constant for [");
      String string0 = projectMetadata0.getGuid();
      assertEquals("No matching constant for [", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ProjectMetadata projectMetadata0 = new ProjectMetadata();
      projectMetadata0.hashCode();
  }
}
