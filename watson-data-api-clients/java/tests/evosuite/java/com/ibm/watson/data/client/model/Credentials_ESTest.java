/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:53:24 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.Credentials;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Credentials_ESTest extends Credentials_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      StringBuilder stringBuilder0 = new StringBuilder();
      credentials0.toString(stringBuilder0);
      assertEquals("    accessKeyId: null\n    secretAccessKey: null\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      Object object0 = new Object();
      String string0 = credentials0.toIndentedString(object0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      credentials0.secretAccessKey("G A");
      String string0 = credentials0.getSecretAccessKey();
      assertEquals("G A", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      Credentials credentials1 = credentials0.secretAccessKey("");
      String string0 = credentials1.getSecretAccessKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      Credentials credentials1 = credentials0.accessKeyId("READ_WRITE");
      String string0 = credentials1.getAccessKeyId();
      assertEquals("READ_WRITE", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      credentials0.accessKeyId("");
      String string0 = credentials0.getAccessKeyId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      // Undeclared exception!
      try { 
        credentials0.toString((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.Credentials", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      Credentials credentials1 = credentials0.secretAccessKey("");
      String string0 = credentials1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      Credentials credentials1 = new Credentials();
      credentials0.setAccessKeyId("\n  #g");
      boolean boolean0 = credentials0.equals(credentials1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      Credentials credentials1 = new Credentials();
      boolean boolean0 = credentials0.equals(credentials1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      boolean boolean0 = credentials0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      boolean boolean0 = credentials0.equals(credentials0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      boolean boolean0 = credentials0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      credentials0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      String string0 = credentials0.getSecretAccessKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      credentials0.setSecretAccessKey("");
      assertEquals("", credentials0.getSecretAccessKey());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      credentials0.secretAccessKey("");
      Credentials credentials1 = new Credentials();
      boolean boolean0 = credentials0.equals(credentials1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Credentials credentials0 = new Credentials();
      String string0 = credentials0.getAccessKeyId();
      assertNull(string0);
  }
}
