/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:56:05 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.FailedRule;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FailedRule_ESTest extends FailedRule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.setRuleGuidInRequest("");
      String string0 = failedRule0.getRuleGuidInRequest();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.setReason("bX%0");
      String string0 = failedRule0.getReason();
      assertEquals("bX%0", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.setReason("");
      String string0 = failedRule0.getReason();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.setName("READ_WRITE");
      String string0 = failedRule0.getName();
      assertEquals("READ_WRITE", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.name("");
      String string0 = failedRule0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Integer integer0 = new Integer(0);
      FailedRule failedRule1 = failedRule0.index(integer0);
      Integer integer1 = failedRule1.getIndex();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Integer integer0 = new Integer((-5870));
      FailedRule failedRule1 = failedRule0.index(integer0);
      Integer integer1 = failedRule1.getIndex();
      assertEquals((-5870), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Integer integer0 = new Integer(902);
      failedRule0.index(integer0);
      Integer integer1 = failedRule0.getIndex();
      assertEquals(902, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Integer integer0 = new Integer(0);
      failedRule0.index(integer0);
      String string0 = failedRule0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.setReason("");
      FailedRule failedRule1 = new FailedRule();
      FailedRule failedRule2 = failedRule1.reason((String) null);
      boolean boolean0 = failedRule2.equals(failedRule0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      FailedRule failedRule1 = new FailedRule();
      assertTrue(failedRule1.equals((Object)failedRule0));
      
      failedRule1.ruleGuidInRequest("");
      FailedRule failedRule2 = failedRule1.reason((String) null);
      boolean boolean0 = failedRule2.equals(failedRule0);
      assertFalse(failedRule1.equals((Object)failedRule0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      FailedRule failedRule1 = new FailedRule();
      boolean boolean0 = failedRule0.equals(failedRule1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Object object0 = new Object();
      boolean boolean0 = failedRule0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      boolean boolean0 = failedRule0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      boolean boolean0 = failedRule0.equals(failedRule0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.setName("READ_WRITE");
      FailedRule failedRule1 = new FailedRule();
      boolean boolean0 = failedRule1.equals(failedRule0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      String string0 = failedRule0.getRuleGuidInRequest();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      failedRule0.ruleGuidInRequest("READ_WRITE");
      String string0 = failedRule0.getRuleGuidInRequest();
      assertEquals("READ_WRITE", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      String string0 = failedRule0.getReason();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Integer integer0 = new Integer(4196);
      failedRule0.index(integer0);
      FailedRule failedRule1 = new FailedRule();
      boolean boolean0 = failedRule0.equals(failedRule1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      String string0 = failedRule0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Integer integer0 = failedRule0.getIndex();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FailedRule failedRule0 = new FailedRule();
      Integer integer0 = new Integer((-2019));
      failedRule0.setIndex(integer0);
      assertNull(failedRule0.getRuleGuidInRequest());
  }
}
