/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:18:33 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ArtifactSearchResultEntity;
import java.time.Instant;
import java.util.Collection;
import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.testng.xml.XmlDefine;
import org.testng.xml.XmlRun;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArtifactSearchResultEntity_ESTest extends ArtifactSearchResultEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setVersionId("    versionId: ");
      String string0 = artifactSearchResultEntity0.getVersionId();
      assertEquals("    versionId: ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setVersionId("");
      String string0 = artifactSearchResultEntity0.getVersionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      artifactSearchResultEntity0.setSynonyms(list0);
      List<String> list1 = artifactSearchResultEntity0.getSynonyms();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getExcludes();
      xmlRun0.onExclude("s3^zdv");
      artifactSearchResultEntity0.setSynonyms(list0);
      List<String> list1 = artifactSearchResultEntity0.getSynonyms();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      artifactSearchResultEntity0.setSynonymGlobalIds(list0);
      List<String> list1 = artifactSearchResultEntity0.getSynonymGlobalIds();
      assertTrue(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      Stack<String> stack0 = new Stack<String>();
      stack0.add("fj");
      artifactSearchResultEntity0.setSynonymGlobalIds(stack0);
      List<String> list0 = artifactSearchResultEntity0.getSynonymGlobalIds();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setGlobalId("class ArtifactSearchResultEntity {\n    synonymGlobalIds: null\n    synonyms: null\n    globalId: null\n    effectiveStartDate: null\n    versionId: null\n    abbreviation: null\n    artifactId: java.lang.String@0000000002\n}");
      String string0 = artifactSearchResultEntity0.getGlobalId();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setGlobalId("");
      String string0 = artifactSearchResultEntity0.getGlobalId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      MockDate mockDate0 = new MockDate();
      artifactSearchResultEntity0.setEffectiveStartDate(mockDate0);
      Date date0 = artifactSearchResultEntity0.getEffectiveStartDate();
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", date0.toString());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setArtifactId("L9`&& gk#d@!>");
      String string0 = artifactSearchResultEntity0.getArtifactId();
      assertEquals("L9`&& gk#d@!>", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setArtifactId("");
      String string0 = artifactSearchResultEntity0.getArtifactId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      artifactSearchResultEntity0.setAbbreviation(list0);
      List<String> list1 = artifactSearchResultEntity0.getAbbreviation();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlDefine xmlDefine0 = new XmlDefine();
      xmlDefine0.onElement("O^kou&-C,nJ3");
      List<String> list0 = xmlDefine0.getIncludes();
      artifactSearchResultEntity0.setAbbreviation(list0);
      List<String> list1 = artifactSearchResultEntity0.getAbbreviation();
      assertEquals(1, list1.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setVersionId("}eDW-Kf%[:Rm1;~)");
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.setGlobalId("class ArtifactSearchResultEntity {\n    synonymGlobalIds: null\n    synonyms: null\n    globalId: null\n    effectiveStartDate: null\n    versionId: null\n    abbreviation: null\n    artifactId: java.lang.String@0000000002\n}");
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      assertTrue(artifactSearchResultEntity1.equals((Object)artifactSearchResultEntity0));
      
      artifactSearchResultEntity0.setSynonyms(list0);
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertFalse(artifactSearchResultEntity1.equals((Object)artifactSearchResultEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      Stack<java.util.Locale.LanguageRange> stack0 = new Stack<java.util.Locale.LanguageRange>();
      java.util.Locale locale0 = new java.util.Locale("    versionId: ", "I#fKrX3N");
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      java.util.Locale.FilteringMode locale_FilteringMode0 = java.util.Locale.FilteringMode.EXTENDED_FILTERING;
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) stack0, (Collection<String>) set0, locale_FilteringMode0);
      artifactSearchResultEntity0.setSynonymGlobalIds(list0);
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlSuite xmlSuite0 = new XmlSuite();
      boolean boolean0 = artifactSearchResultEntity0.equals(xmlSuite0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      assertTrue(artifactSearchResultEntity1.equals((Object)artifactSearchResultEntity0));
      
      artifactSearchResultEntity1.setArtifactId("");
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      String string0 = artifactSearchResultEntity0.getArtifactId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      String string0 = artifactSearchResultEntity0.getVersionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      List<String> list0 = artifactSearchResultEntity0.getSynonymGlobalIds();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      List<String> list0 = artifactSearchResultEntity0.getAbbreviation();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      Date date0 = artifactSearchResultEntity0.getEffectiveStartDate();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      List<String> list0 = artifactSearchResultEntity0.getSynonyms();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      String string0 = artifactSearchResultEntity0.toString();
      assertEquals("class ArtifactSearchResultEntity {\n    synonymGlobalIds: null\n    synonyms: null\n    globalId: null\n    effectiveStartDate: null\n    versionId: null\n    abbreviation: null\n    artifactId: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      artifactSearchResultEntity0.setAbbreviation(list0);
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      String string0 = artifactSearchResultEntity0.getGlobalId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      artifactSearchResultEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ArtifactSearchResultEntity artifactSearchResultEntity0 = new ArtifactSearchResultEntity();
      Instant instant0 = MockInstant.ofEpochSecond((-31L), (-1L));
      Date date0 = Date.from(instant0);
      artifactSearchResultEntity0.setEffectiveStartDate(date0);
      ArtifactSearchResultEntity artifactSearchResultEntity1 = new ArtifactSearchResultEntity();
      boolean boolean0 = artifactSearchResultEntity0.equals(artifactSearchResultEntity1);
      assertFalse(boolean0);
  }
}
