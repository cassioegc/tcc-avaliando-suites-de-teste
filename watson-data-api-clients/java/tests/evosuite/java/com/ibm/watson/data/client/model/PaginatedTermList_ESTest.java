/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:37:20 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.GlossaryObjectMetadata;
import com.ibm.watson.data.client.model.HrefModel;
import com.ibm.watson.data.client.model.PaginatedTermList;
import com.ibm.watson.data.client.model.Term;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PaginatedTermList_ESTest extends PaginatedTermList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      LinkedList<Term> linkedList0 = new LinkedList<Term>();
      PaginatedTermList paginatedTermList1 = paginatedTermList0.resources(linkedList0);
      List<Term> list0 = paginatedTermList1.getResources();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      PaginatedTermList paginatedTermList1 = paginatedTermList0.addResourcesItem((Term) null);
      List<Term> list0 = paginatedTermList1.getResources();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      PaginatedTermList paginatedTermList1 = new PaginatedTermList();
      boolean boolean0 = paginatedTermList0.equals(paginatedTermList1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      HrefModel hrefModel0 = new HrefModel();
      paginatedTermList0.setNext(hrefModel0);
      PaginatedTermList paginatedTermList1 = new PaginatedTermList();
      boolean boolean0 = paginatedTermList0.equals(paginatedTermList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      boolean boolean0 = paginatedTermList0.equals(glossaryObjectMetadata0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      boolean boolean0 = paginatedTermList0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      boolean boolean0 = paginatedTermList0.equals(paginatedTermList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      LinkedList<Term> linkedList0 = new LinkedList<Term>();
      PaginatedTermList paginatedTermList1 = paginatedTermList0.resources(linkedList0);
      PaginatedTermList paginatedTermList2 = new PaginatedTermList();
      boolean boolean0 = paginatedTermList1.equals(paginatedTermList2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      paginatedTermList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      LinkedList<Term> linkedList0 = new LinkedList<Term>();
      paginatedTermList0.setResources(linkedList0);
      assertNull(paginatedTermList0.getCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      List<Term> list0 = paginatedTermList0.getResources();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      LinkedList<Term> linkedList0 = new LinkedList<Term>();
      PaginatedTermList paginatedTermList1 = paginatedTermList0.resources(linkedList0);
      Term term0 = new Term();
      PaginatedTermList paginatedTermList2 = paginatedTermList0.addResourcesItem(term0);
      assertSame(paginatedTermList2, paginatedTermList1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaginatedTermList paginatedTermList0 = new PaginatedTermList();
      String string0 = paginatedTermList0.toString();
      assertEquals("class PaginatedTermList {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
  }
}
