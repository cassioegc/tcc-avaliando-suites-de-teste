/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 20:46:49 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.JobEntityJobScheduleInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JobEntityJobScheduleInfo_ESTest extends JobEntityJobScheduleInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = new Integer(0);
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJobScheduleInfo0.startOn(integer0);
      Integer integer1 = jobEntityJobScheduleInfo1.getStartOn();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = new Integer((-714));
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJobScheduleInfo0.startOn(integer0);
      Integer integer1 = jobEntityJobScheduleInfo1.getStartOn();
      assertEquals((-714), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = new Integer(3292);
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJobScheduleInfo0.startOn(integer0);
      Integer integer1 = jobEntityJobScheduleInfo1.getStartOn();
      assertEquals(3292, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Boolean boolean0 = Boolean.TRUE;
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJobScheduleInfo0.repeat(boolean0);
      Boolean boolean1 = jobEntityJobScheduleInfo1.getRepeat();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Boolean boolean0 = new Boolean(false);
      jobEntityJobScheduleInfo0.setRepeat(boolean0);
      Boolean boolean1 = jobEntityJobScheduleInfo0.getRepeat();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = new Integer(0);
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJobScheduleInfo0.endOn(integer0);
      Integer integer1 = jobEntityJobScheduleInfo1.getEndOn();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = Integer.valueOf(2131);
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJobScheduleInfo0.endOn(integer0);
      Integer integer1 = jobEntityJobScheduleInfo1.getEndOn();
      assertEquals(2131, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Boolean boolean0 = new Boolean(false);
      jobEntityJobScheduleInfo0.setRepeat(boolean0);
      String string0 = jobEntityJobScheduleInfo0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = new Integer(5);
      jobEntityJobScheduleInfo0.setEndOn(integer0);
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = new JobEntityJobScheduleInfo();
      boolean boolean0 = jobEntityJobScheduleInfo0.equals(jobEntityJobScheduleInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = new JobEntityJobScheduleInfo();
      assertTrue(jobEntityJobScheduleInfo1.equals((Object)jobEntityJobScheduleInfo0));
      
      Integer integer0 = new Integer((-4094));
      jobEntityJobScheduleInfo1.startOn(integer0);
      boolean boolean0 = jobEntityJobScheduleInfo1.equals(jobEntityJobScheduleInfo0);
      assertFalse(jobEntityJobScheduleInfo1.equals((Object)jobEntityJobScheduleInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = new JobEntityJobScheduleInfo();
      boolean boolean0 = jobEntityJobScheduleInfo0.equals(jobEntityJobScheduleInfo1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      boolean boolean0 = jobEntityJobScheduleInfo0.equals("class JobPostBodyJobScheduleInfo {\n    repeat: java.lang.Boolean@0000000002\n    startOn: null\n    endOn: java.lang.Integer@0000000003\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      boolean boolean0 = jobEntityJobScheduleInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      boolean boolean0 = jobEntityJobScheduleInfo0.equals(jobEntityJobScheduleInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = new Integer((-4094));
      jobEntityJobScheduleInfo0.setStartOn(integer0);
      assertEquals((-4094), (int)jobEntityJobScheduleInfo0.getStartOn());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = jobEntityJobScheduleInfo0.getStartOn();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = jobEntityJobScheduleInfo0.getEndOn();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Boolean boolean0 = jobEntityJobScheduleInfo0.getRepeat();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      jobEntityJobScheduleInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Boolean boolean0 = new Boolean(false);
      jobEntityJobScheduleInfo0.setRepeat(boolean0);
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = new JobEntityJobScheduleInfo();
      boolean boolean1 = jobEntityJobScheduleInfo0.equals(jobEntityJobScheduleInfo1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      Integer integer0 = new Integer((-1307));
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJobScheduleInfo0.endOn(integer0);
      Integer integer1 = jobEntityJobScheduleInfo1.getEndOn();
      assertEquals((-1307), (int)integer1);
  }
}
