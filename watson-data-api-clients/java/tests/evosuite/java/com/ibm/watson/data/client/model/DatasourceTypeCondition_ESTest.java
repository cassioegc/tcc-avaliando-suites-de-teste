/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 20:14:39 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.DatasourceTypeCondition;
import com.ibm.watson.data.client.model.enums.DatasourceTypeConditionEnum;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DatasourceTypeCondition_ESTest extends DatasourceTypeCondition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      Stack<String> stack0 = new Stack<String>();
      DatasourceTypeCondition datasourceTypeCondition1 = datasourceTypeCondition0.values(stack0);
      List<String> list0 = datasourceTypeCondition1.getValues();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeCondition datasourceTypeCondition1 = datasourceTypeCondition0.addValuesItem("Y4BR<|KHH;XwMyscZET");
      List<String> list0 = datasourceTypeCondition1.getValues();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeCondition datasourceTypeCondition1 = datasourceTypeCondition0.propertyName("null");
      String string0 = datasourceTypeCondition1.getPropertyName();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      datasourceTypeCondition0.propertyName("");
      String string0 = datasourceTypeCondition0.getPropertyName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeConditionEnum datasourceTypeConditionEnum0 = DatasourceTypeConditionEnum.CONTAINS;
      datasourceTypeCondition0.setCondition(datasourceTypeConditionEnum0);
      DatasourceTypeConditionEnum datasourceTypeConditionEnum1 = datasourceTypeCondition0.getCondition();
      assertEquals(DatasourceTypeConditionEnum.CONTAINS, datasourceTypeConditionEnum1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      List<String> list0 = xmlTest0.getExcludedGroups();
      DatasourceTypeCondition datasourceTypeCondition1 = datasourceTypeCondition0.values(list0);
      // Undeclared exception!
      try { 
        datasourceTypeCondition1.addValuesItem("j,");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      datasourceTypeCondition0.addValuesItem("_nfcTD9&eq");
      DatasourceTypeCondition datasourceTypeCondition1 = new DatasourceTypeCondition();
      boolean boolean0 = datasourceTypeCondition0.equals(datasourceTypeCondition1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeCondition datasourceTypeCondition1 = new DatasourceTypeCondition();
      DatasourceTypeCondition datasourceTypeCondition2 = datasourceTypeCondition1.propertyName("null");
      DatasourceTypeConditionEnum datasourceTypeConditionEnum0 = DatasourceTypeConditionEnum.ENDSWITH;
      datasourceTypeCondition2.setCondition(datasourceTypeConditionEnum0);
      datasourceTypeCondition0.propertyName("null");
      boolean boolean0 = datasourceTypeCondition2.equals(datasourceTypeCondition0);
      assertFalse(datasourceTypeCondition2.equals((Object)datasourceTypeCondition0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeCondition datasourceTypeCondition1 = new DatasourceTypeCondition();
      assertTrue(datasourceTypeCondition1.equals((Object)datasourceTypeCondition0));
      
      DatasourceTypeCondition datasourceTypeCondition2 = datasourceTypeCondition1.addValuesItem("null");
      datasourceTypeCondition0.propertyName("null");
      boolean boolean0 = datasourceTypeCondition2.equals(datasourceTypeCondition0);
      assertFalse(datasourceTypeCondition1.equals((Object)datasourceTypeCondition0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      boolean boolean0 = datasourceTypeCondition0.equals("null");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeCondition datasourceTypeCondition1 = new DatasourceTypeCondition();
      boolean boolean0 = datasourceTypeCondition0.equals(datasourceTypeCondition1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      boolean boolean0 = datasourceTypeCondition0.equals(datasourceTypeCondition0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      boolean boolean0 = datasourceTypeCondition0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeCondition datasourceTypeCondition1 = datasourceTypeCondition0.propertyName("null");
      String string0 = datasourceTypeCondition1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      datasourceTypeCondition0.hashCode();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      String string0 = datasourceTypeCondition0.getPropertyName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      DatasourceTypeConditionEnum datasourceTypeConditionEnum0 = DatasourceTypeConditionEnum.ENDSWITH;
      DatasourceTypeCondition datasourceTypeCondition1 = datasourceTypeCondition0.condition(datasourceTypeConditionEnum0);
      assertNull(datasourceTypeCondition1.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      datasourceTypeCondition0.setPropertyName("^PoQa+/bGYhY_^c");
      assertNull(datasourceTypeCondition0.getCondition());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      datasourceTypeCondition0.setValues(linkedList0);
      assertNull(datasourceTypeCondition0.getPropertyName());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      List<String> list0 = datasourceTypeCondition0.getValues();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DatasourceTypeCondition datasourceTypeCondition0 = new DatasourceTypeCondition();
      datasourceTypeCondition0.getCondition();
  }
}
