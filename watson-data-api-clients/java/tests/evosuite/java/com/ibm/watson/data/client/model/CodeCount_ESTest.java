/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:32:45 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CodeCount;
import com.ibm.watson.data.client.model.CodeValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CodeCount_ESTest extends CodeCount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      CodeValue codeValue0 = new CodeValue();
      codeCount0.setValue(codeValue0);
      CodeValue codeValue1 = codeCount0.getValue();
      assertSame(codeValue1, codeValue0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      Long long0 = new Long(1L);
      codeCount0.setCount(long0);
      Long long1 = codeCount0.getCount();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      Long long0 = new Long((-3009L));
      codeCount0.setCount(long0);
      Long long1 = codeCount0.getCount();
      assertEquals((-3009L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      Long long0 = new Long((-110L));
      codeCount0.setCount(long0);
      Long long1 = codeCount0.getCount();
      assertEquals((-110L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      CodeValue codeValue0 = new CodeValue();
      codeCount0.setValue(codeValue0);
      String string0 = codeCount0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      Long long0 = new Long((-434L));
      codeCount0.setCount(long0);
      CodeCount codeCount1 = new CodeCount();
      boolean boolean0 = codeCount0.equals(codeCount1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      CodeCount codeCount1 = new CodeCount();
      boolean boolean0 = codeCount0.equals(codeCount1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      boolean boolean0 = codeCount0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      boolean boolean0 = codeCount0.equals(codeCount0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      Object object0 = new Object();
      boolean boolean0 = codeCount0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      Long long0 = new Long(0L);
      codeCount0.setCount(long0);
      Long long1 = codeCount0.getCount();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      codeCount0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      CodeValue codeValue0 = codeCount0.getValue();
      assertNull(codeValue0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      Long long0 = codeCount0.getCount();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CodeCount codeCount0 = new CodeCount();
      CodeValue codeValue0 = new CodeValue();
      codeCount0.setValue(codeValue0);
      CodeCount codeCount1 = new CodeCount();
      boolean boolean0 = codeCount0.equals(codeCount1);
      assertFalse(boolean0);
  }
}
