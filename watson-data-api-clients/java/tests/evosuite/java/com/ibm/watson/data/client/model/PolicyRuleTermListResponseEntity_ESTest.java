/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:38:28 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.PolicyRuleTermListResponseEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PolicyRuleTermListResponseEntity_ESTest extends PolicyRuleTermListResponseEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity1 = policyRuleTermListResponseEntity0.name("WRITE_ONLY");
      String string0 = policyRuleTermListResponseEntity1.getName();
      assertEquals("WRITE_ONLY", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      policyRuleTermListResponseEntity0.name("");
      String string0 = policyRuleTermListResponseEntity0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity1 = policyRuleTermListResponseEntity0.displayName("");
      String string0 = policyRuleTermListResponseEntity1.getDisplayName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      policyRuleTermListResponseEntity0.setDisplayName("");
      String string0 = policyRuleTermListResponseEntity0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity1 = new PolicyRuleTermListResponseEntity();
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity2 = policyRuleTermListResponseEntity0.displayName("null");
      boolean boolean0 = policyRuleTermListResponseEntity1.equals(policyRuleTermListResponseEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity1 = new PolicyRuleTermListResponseEntity();
      boolean boolean0 = policyRuleTermListResponseEntity0.equals(policyRuleTermListResponseEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      boolean boolean0 = policyRuleTermListResponseEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      boolean boolean0 = policyRuleTermListResponseEntity0.equals(policyRuleTermListResponseEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      boolean boolean0 = policyRuleTermListResponseEntity0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      String string0 = policyRuleTermListResponseEntity0.getDisplayName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      policyRuleTermListResponseEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      policyRuleTermListResponseEntity0.setName("!'0A>UU+ A^t");
      assertNull(policyRuleTermListResponseEntity0.getDisplayName());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      String string0 = policyRuleTermListResponseEntity0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      policyRuleTermListResponseEntity0.name("");
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity1 = new PolicyRuleTermListResponseEntity();
      boolean boolean0 = policyRuleTermListResponseEntity0.equals(policyRuleTermListResponseEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity0 = new PolicyRuleTermListResponseEntity();
      PolicyRuleTermListResponseEntity policyRuleTermListResponseEntity1 = policyRuleTermListResponseEntity0.displayName("null");
      String string0 = policyRuleTermListResponseEntity1.getDisplayName();
      assertEquals("null", string0);
  }
}
