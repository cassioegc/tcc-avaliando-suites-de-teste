/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:15:11 GMT 2021
 */

package com.ibm.watson.data.client.auth;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.auth.HttpBearerAuth;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springframework.http.HttpHeaders;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpBearerAuth_ESTest extends HttpBearerAuth_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      HttpBearerAuth httpBearerAuth0 = new HttpBearerAuth("Bearer");
      httpBearerAuth0.setBearerToken(",Hd1d");
      String string0 = httpBearerAuth0.getBearerToken();
      assertEquals(",Hd1d", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      HttpBearerAuth httpBearerAuth0 = new HttpBearerAuth("y PGW*W");
      httpBearerAuth0.setBearerToken("");
      String string0 = httpBearerAuth0.getBearerToken();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      HttpBearerAuth httpBearerAuth0 = new HttpBearerAuth("y PGW*W");
      LinkedMultiValueMap<String, String> linkedMultiValueMap0 = new LinkedMultiValueMap<String, String>();
      httpBearerAuth0.setBearerToken("");
      // Undeclared exception!
      try { 
        httpBearerAuth0.applyToParams(linkedMultiValueMap0, (HttpHeaders) null, linkedMultiValueMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.auth.HttpBearerAuth", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HttpBearerAuth httpBearerAuth0 = new HttpBearerAuth((String) null);
      httpBearerAuth0.setBearerToken("");
      LinkedMultiValueMap<String, String> linkedMultiValueMap0 = new LinkedMultiValueMap<String, String>(0);
      HttpHeaders httpHeaders0 = HttpHeaders.readOnlyHttpHeaders((MultiValueMap<String, String>) linkedMultiValueMap0);
      // Undeclared exception!
      try { 
        httpBearerAuth0.applyToParams(linkedMultiValueMap0, httpHeaders0, linkedMultiValueMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.springframework.http.ReadOnlyHttpHeaders", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HttpBearerAuth httpBearerAuth0 = new HttpBearerAuth("Bearer");
      HttpHeaders httpHeaders0 = new HttpHeaders();
      httpBearerAuth0.applyToParams(httpHeaders0, httpHeaders0, httpHeaders0);
      assertNull(httpHeaders0.getUpgrade());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      HttpBearerAuth httpBearerAuth0 = new HttpBearerAuth("Bearer");
      HttpHeaders httpHeaders0 = new HttpHeaders();
      httpBearerAuth0.setBearerToken(",Hd1d");
      httpBearerAuth0.applyToParams(httpHeaders0, httpHeaders0, httpHeaders0);
      assertNull(httpHeaders0.getPragma());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      HttpBearerAuth httpBearerAuth0 = new HttpBearerAuth("Bearer");
      String string0 = httpBearerAuth0.getBearerToken();
      assertNull(string0);
  }
}
