/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:20:09 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.DiscoveredNumericDetails;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiscoveredNumericDetails_ESTest extends DiscoveredNumericDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      Integer integer0 = new Integer(0);
      discoveredNumericDetails0.setValue(integer0);
      Integer integer1 = discoveredNumericDetails0.getValue();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      Integer integer0 = new Integer(3602);
      discoveredNumericDetails0.setValue(integer0);
      Integer integer1 = discoveredNumericDetails0.getValue();
      assertEquals(3602, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      Integer integer0 = new Integer((-2164));
      discoveredNumericDetails0.setValue(integer0);
      Integer integer1 = discoveredNumericDetails0.getValue();
      assertEquals((-2164), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      Integer integer0 = new Integer((-1));
      discoveredNumericDetails0.setValue(integer0);
      DiscoveredNumericDetails discoveredNumericDetails1 = new DiscoveredNumericDetails();
      boolean boolean0 = discoveredNumericDetails0.equals(discoveredNumericDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      DiscoveredNumericDetails discoveredNumericDetails1 = new DiscoveredNumericDetails();
      assertTrue(discoveredNumericDetails1.equals((Object)discoveredNumericDetails0));
      
      Double double0 = new Double(6.678038797215458);
      discoveredNumericDetails1.setConfidence(double0);
      boolean boolean0 = discoveredNumericDetails0.equals(discoveredNumericDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      DiscoveredNumericDetails discoveredNumericDetails1 = new DiscoveredNumericDetails();
      boolean boolean0 = discoveredNumericDetails0.equals(discoveredNumericDetails1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      Object object0 = new Object();
      boolean boolean0 = discoveredNumericDetails0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      boolean boolean0 = discoveredNumericDetails0.equals(discoveredNumericDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      boolean boolean0 = discoveredNumericDetails0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      String string0 = discoveredNumericDetails0.toString();
      assertEquals("class DiscoveredNumericDetails {\n    count: null\n    distinctCount: null\n    confidence: null\n    priority: null\n    value: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      discoveredNumericDetails0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DiscoveredNumericDetails discoveredNumericDetails0 = new DiscoveredNumericDetails();
      Integer integer0 = discoveredNumericDetails0.getValue();
      assertNull(integer0);
  }
}
