/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:38:53 GMT 2021
 */

package com.ibm.watson.data.client.model.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.enums.JobRunState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JobRunState_ESTest extends JobRunState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JobRunState jobRunState0 = JobRunState.fromValue("Running");
      assertEquals(JobRunState.RUNNING, jobRunState0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JobRunState[] jobRunStateArray0 = JobRunState.values();
      assertEquals(5, jobRunStateArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JobRunState jobRunState0 = JobRunState.valueOf("COMPLETED");
      assertEquals(JobRunState.COMPLETED, jobRunState0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JobRunState jobRunState0 = JobRunState.fromValue("Failed");
      assertEquals(JobRunState.FAILED, jobRunState0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        JobRunState.fromValue("aaD|I\"5|{V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'aaD|I\"5|{V'
         //
         verifyException("com.ibm.watson.data.client.model.enums.JobRunState", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JobRunState jobRunState0 = JobRunState.FAILED;
      String string0 = jobRunState0.toString();
      assertEquals("Failed", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JobRunState jobRunState0 = JobRunState.FAILED;
      String string0 = jobRunState0.getValue();
      assertEquals("Failed", string0);
  }
}
