/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:20:55 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.NewClassificationEntity;
import io.netty.handler.logging.LoggingHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewClassificationEntity_ESTest extends NewClassificationEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      newClassificationEntity0.workflowState("resolver");
      String string0 = newClassificationEntity0.getWorkflowState();
      assertEquals("resolver", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      newClassificationEntity0.setWorkflowState("");
      String string0 = newClassificationEntity0.getWorkflowState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      NewClassificationEntity newClassificationEntity1 = new NewClassificationEntity();
      boolean boolean0 = newClassificationEntity0.equals(newClassificationEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      newClassificationEntity0.addStewardIdsItem((String) null);
      NewClassificationEntity newClassificationEntity1 = new NewClassificationEntity();
      boolean boolean0 = newClassificationEntity0.equals(newClassificationEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      LoggingHandler loggingHandler0 = new LoggingHandler("yi'9K");
      boolean boolean0 = newClassificationEntity0.equals(loggingHandler0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      boolean boolean0 = newClassificationEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      boolean boolean0 = newClassificationEntity0.equals(newClassificationEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      NewClassificationEntity newClassificationEntity1 = new NewClassificationEntity();
      assertTrue(newClassificationEntity1.equals((Object)newClassificationEntity0));
      
      newClassificationEntity0.workflowState("reactor.core.publisher.QueueDrainSubscriber");
      boolean boolean0 = newClassificationEntity1.equals(newClassificationEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      newClassificationEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      String string0 = newClassificationEntity0.getWorkflowState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NewClassificationEntity newClassificationEntity0 = new NewClassificationEntity();
      String string0 = newClassificationEntity0.toString();
      assertEquals("class NewClassificationEntity {\n    longDescription: null\n    state: null\n    customAttributes: null\n    name: null\n    shortDescription: null\n    effectiveStartDate: null\n    effectiveEndDate: null\n    tags: null\n    stewardIds: null\n    parentCategory: null\n    categories: null\n    isATypeOfClassification: null\n    hasTypesClassifications: null\n    terms: null\n    dataClasses: null\n    workflowState: null\n}", string0);
  }
}
