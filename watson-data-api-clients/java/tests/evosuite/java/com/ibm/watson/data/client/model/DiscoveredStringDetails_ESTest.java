/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:31:08 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.DiscoveredStringDetails;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiscoveredStringDetails_ESTest extends DiscoveredStringDetails_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      discoveredStringDetails0.setValue("NON_EMPTY");
      String string0 = discoveredStringDetails0.getValue();
      assertEquals("NON_EMPTY", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      discoveredStringDetails0.setValue("");
      String string0 = discoveredStringDetails0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      discoveredStringDetails0.setValue(" ;6O\"-P:Kx^@6A ~QuF");
      DiscoveredStringDetails discoveredStringDetails1 = new DiscoveredStringDetails();
      boolean boolean0 = discoveredStringDetails0.equals(discoveredStringDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      Integer integer0 = new Integer(1539);
      discoveredStringDetails0.setPriority(integer0);
      DiscoveredStringDetails discoveredStringDetails1 = new DiscoveredStringDetails();
      boolean boolean0 = discoveredStringDetails0.equals(discoveredStringDetails1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      DiscoveredStringDetails discoveredStringDetails1 = new DiscoveredStringDetails();
      boolean boolean0 = discoveredStringDetails0.equals(discoveredStringDetails1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      boolean boolean0 = discoveredStringDetails0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      boolean boolean0 = discoveredStringDetails0.equals(discoveredStringDetails0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      boolean boolean0 = discoveredStringDetails0.equals("class DiscoveredStringDetails {\n    count: null\n    distinctCount: null\n    confidence: null\n    priority: null\n    value: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      discoveredStringDetails0.hashCode();
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      String string0 = discoveredStringDetails0.toString();
      assertEquals("class DiscoveredStringDetails {\n    count: null\n    distinctCount: null\n    confidence: null\n    priority: null\n    value: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiscoveredStringDetails discoveredStringDetails0 = new DiscoveredStringDetails();
      String string0 = discoveredStringDetails0.getValue();
      assertNull(string0);
  }
}
