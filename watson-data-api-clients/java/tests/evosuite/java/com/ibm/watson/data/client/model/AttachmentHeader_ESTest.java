/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:49:08 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AttachmentHeader;
import com.ibm.watson.data.client.model.enums.AssetCategory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AttachmentHeader_ESTest extends AttachmentHeader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      AttachmentHeader attachmentHeader1 = attachmentHeader0.assetCategory(assetCategory0);
      Long long0 = new Long((-3772L));
      AttachmentHeader attachmentHeader2 = attachmentHeader1.testDoc(long0);
      attachmentHeader1.setName("'");
      AssetCategory assetCategory1 = AssetCategory.SYSTEM;
      attachmentHeader2.setAssetCategory(assetCategory1);
      attachmentHeader2.toString();
      AttachmentHeader attachmentHeader3 = attachmentHeader0.description("'");
      attachmentHeader3.name("'");
      attachmentHeader2.equals("'");
      Long.getLong("/<y,2nk", (-3772L));
      attachmentHeader0.setDescription("/<y,2nk");
      attachmentHeader2.getAssetCategory();
      attachmentHeader1.getConnectionId();
      attachmentHeader2.getObjectKey();
      attachmentHeader0.setUserData(assetCategory0);
      attachmentHeader1.setName("I");
      attachmentHeader1.getDescription();
      attachmentHeader1.getConnectionPath();
      attachmentHeader2.getAssetType();
      AttachmentHeader attachmentHeader4 = attachmentHeader2.connectionId((String) null);
      attachmentHeader1.getAssetType();
      attachmentHeader4.setConnectionId("N$c#=~");
      attachmentHeader4.mime("2pH;8A{ybA+>=OD7M");
      attachmentHeader2.hashCode();
      attachmentHeader4.connectionId("");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.connectionPath("");
      AttachmentHeader attachmentHeader2 = attachmentHeader0.userData(attachmentHeader1);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetType("");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.name("");
      Long long0 = new Long((-2316L));
      AttachmentHeader attachmentHeader5 = attachmentHeader4.testDoc(long0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachmentHeader1.description("");
      Boolean boolean0 = new Boolean("nq@<|+prg~? 5JF");
      attachmentHeader0.setIsPartitioned(boolean0);
      Long.max((-2316L), (-2316L));
      Long long1 = new Long((-2316L));
      attachmentHeader5.testDoc(long1);
      AttachmentHeader attachmentHeader6 = attachmentHeader5.assetCategory(assetCategory0);
      attachmentHeader6.getAssetType();
      Object object0 = new Object();
      attachmentHeader1.toIndentedString(object0);
      attachmentHeader5.getUserData();
      attachmentHeader4.toIndentedString(attachmentHeader0);
      attachmentHeader5.getConnectionPath();
      attachmentHeader2.connectionId("");
      attachmentHeader1.setMime((String) null);
      StringBuilder stringBuilder0 = new StringBuilder(1);
      StringBuilder stringBuilder1 = stringBuilder0.append('-');
      int int0 = (-4132);
      // Undeclared exception!
      try { 
        stringBuilder1.insert((-4132), (-4132));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4132
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      AttachmentHeader attachmentHeader1 = attachmentHeader0.assetCategory(assetCategory0);
      AttachmentHeader attachmentHeader2 = attachmentHeader1.connectionPath("");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.connectionId("");
      attachmentHeader3.assetType((String) null);
      AttachmentHeader attachmentHeader4 = attachmentHeader3.objectKey("");
      attachmentHeader4.setName("6S] {H");
      attachmentHeader2.toIndentedString(attachmentHeader4);
      attachmentHeader4.getConnectionId();
      attachmentHeader2.getIsPartitioned();
      AttachmentHeader attachmentHeader5 = attachmentHeader3.userData(assetCategory0);
      attachmentHeader5.hashCode();
      attachmentHeader2.toIndentedString(attachmentHeader5);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.connectionPath(";KR.TOi");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.userData(";KR.TOi");
      Boolean boolean0 = new Boolean(true);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.isPartitioned(boolean0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      AttachmentHeader attachmentHeader4 = attachmentHeader3.assetCategory(assetCategory0);
      Long long0 = new Long(659L);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.testDoc(long0);
      attachmentHeader5.getIsPartitioned();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.objectKey("USER");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.connectionId("");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetType("'");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.userData("'");
      AttachmentHeader attachmentHeader5 = attachmentHeader4.mime("");
      attachmentHeader5.getAssetCategory();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.objectKey("");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.mime("");
      attachmentHeader0.setConnectionId("");
      attachmentHeader0.connectionPath("BREdl]Egy,*D^ZQIQ");
      attachmentHeader1.assetType("");
      attachmentHeader2.toString();
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetType("");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionPath("");
      AttachmentHeader attachmentHeader5 = attachmentHeader3.userData(attachmentHeader1);
      attachmentHeader5.connectionPath(",MQ");
      attachmentHeader5.userData(attachmentHeader3);
      attachmentHeader3.setObjectKey("");
      attachmentHeader1.setName("/ *<OwW-c*E1");
      Long long0 = new Long((-3715L));
      attachmentHeader4.setName((String) null);
      attachmentHeader3.testDoc(long0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachmentHeader3.setAssetCategory(assetCategory0);
      attachmentHeader0.setConnectionId("");
      attachmentHeader0.getMime();
      attachmentHeader2.assetCategory(assetCategory0);
      attachmentHeader3.userData(attachmentHeader4);
      attachmentHeader1.mime("BREdl]Egy,*D^ZQIQ");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.name("class Attachment {\n");
      attachmentHeader1.setAssetType("class Attachment {\n");
      attachmentHeader0.setMime("class Attachment {\n");
      attachmentHeader0.setUserData("class Attachment {\n");
      attachmentHeader0.setObjectKey("class Attachment {\n");
      attachmentHeader1.equals(attachmentHeader0);
      attachmentHeader1.getMime();
      attachmentHeader1.setAssetType("class Attachment {\n");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.description("");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.name("");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.mime("");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionId("");
      AttachmentHeader attachmentHeader5 = attachmentHeader4.connectionPath("");
      attachmentHeader5.toString();
      attachmentHeader4.mime("");
      attachmentHeader1.assetType("");
      attachmentHeader2.getObjectKey();
      attachmentHeader2.getAssetType();
      StringBuilder stringBuilder0 = null;
      try {
        stringBuilder0 = new StringBuilder((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.mime("WRITE_ONLY");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.connectionId("");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.objectKey("    isPartitioned: ");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.userData(attachmentHeader2);
      attachmentHeader4.getIsPartitioned();
      attachmentHeader2.mime("");
      attachmentHeader3.getObjectKey();
      Long long0 = new Long(1L);
      attachmentHeader2.setTestDoc(long0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      Boolean boolean0 = Boolean.valueOf("x4KP/=mix3@zsA");
      AttachmentHeader attachmentHeader1 = attachmentHeader0.isPartitioned(boolean0);
      AttachmentHeader attachmentHeader2 = attachmentHeader0.userData(attachmentHeader1);
      AttachmentHeader attachmentHeader3 = attachmentHeader1.objectKey("    userData: ");
      attachmentHeader3.setAssetType("    userData: ");
      AttachmentHeader attachmentHeader4 = attachmentHeader2.isPartitioned((Boolean) null);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.connectionPath((String) null);
      Long long0 = new Long((-1L));
      Long.getLong("x4KP/=mix3@zsA", long0);
      AttachmentHeader attachmentHeader6 = attachmentHeader5.testDoc(long0);
      AttachmentHeader attachmentHeader7 = attachmentHeader6.mime("x4KP/=mix3@zsA");
      AttachmentHeader attachmentHeader8 = attachmentHeader7.userData((Object) null);
      Boolean boolean1 = new Boolean("");
      attachmentHeader8.isPartitioned(boolean1);
      attachmentHeader4.setObjectKey("x`*MM");
      Long long1 = attachmentHeader4.getTestDoc();
      attachmentHeader1.setAssetType("    userData: ");
      attachmentHeader7.userData(long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.description((String) null);
      attachmentHeader0.assetType("    assetCategory: ");
      AssetCategory assetCategory0 = AssetCategory.USER;
      attachmentHeader0.assetCategory(assetCategory0);
      AttachmentHeader attachmentHeader2 = attachmentHeader1.name("HgY{");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetType("HgY{");
      attachmentHeader3.getName();
      attachmentHeader2.getConnectionPath();
      AttachmentHeader attachmentHeader4 = attachmentHeader3.name("HgY{");
      attachmentHeader4.setTestDoc((Long) null);
      Boolean boolean0 = Boolean.FALSE;
      attachmentHeader0.setIsPartitioned(boolean0);
      attachmentHeader1.getConnectionId();
      attachmentHeader0.setConnectionPath("HgY{");
      attachmentHeader2.getTestDoc();
      attachmentHeader1.assetType((String) null);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.mime("(+03b#");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.connectionPath("ALWAYS");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.description("^\"%2%i.A$=]");
      attachmentHeader2.name("NON_DEFAULT");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      AttachmentHeader attachmentHeader4 = attachmentHeader3.assetCategory(assetCategory0);
      Boolean boolean0 = new Boolean("(+03b#");
      Boolean.getBoolean("");
      attachmentHeader0.setIsPartitioned(boolean0);
      Long long0 = new Long((-5134L));
      Long long1 = new Long(0L);
      Long.compareUnsigned((-1L), (-5134L));
      Long.getLong("", long1);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.testDoc(long0);
      StringBuilder stringBuilder0 = null;
      // Undeclared exception!
      try { 
        attachmentHeader5.toString((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.AttachmentHeader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      Object object0 = new Object();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.userData(object0);
      Long long0 = new Long(0L);
      AttachmentHeader attachmentHeader2 = attachmentHeader1.testDoc(long0);
      attachmentHeader2.getMime();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.connectionPath("6JIl'.");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.mime("");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.connectionId("");
      Long long0 = new Long(0L);
      AttachmentHeader attachmentHeader4 = attachmentHeader3.testDoc(long0);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.name("&*^");
      attachmentHeader5.getTestDoc();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      Long long0 = new Long(1L);
      AttachmentHeader attachmentHeader1 = attachmentHeader0.testDoc(long0);
      AttachmentHeader attachmentHeader2 = attachmentHeader1.name("    userData: ");
      AssetCategory assetCategory0 = AssetCategory.USER;
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetCategory(assetCategory0);
      Boolean boolean0 = new Boolean("    userData: ");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.isPartitioned(boolean0);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.connectionId("|+vpSm?wjQ|2](Z,~B");
      attachmentHeader5.getIsPartitioned();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.assetType("DELEGATING");
      Boolean boolean0 = Boolean.valueOf("'");
      attachmentHeader1.setName("'");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.isPartitioned(boolean0);
      attachmentHeader2.toIndentedString("DELEGATING");
      attachmentHeader1.getConnectionId();
      AttachmentHeader attachmentHeader3 = attachmentHeader0.name("xcY~=G{'ANz/vRy");
      attachmentHeader3.setTestDoc((Long) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.description("hLjgBNB.LL");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.mime("DELEGATING");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.isPartitioned((Boolean) null);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      AttachmentHeader attachmentHeader4 = attachmentHeader3.assetCategory(assetCategory0);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.connectionId("-p+uB2_|~");
      attachmentHeader5.equals((Object) null);
      attachmentHeader5.connectionId("hLjgBNB.LL");
      attachmentHeader5.setObjectKey("");
      attachmentHeader0.equals(attachmentHeader4);
      attachmentHeader2.setObjectKey("hLjgBNB.LL");
      attachmentHeader2.getUserData();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      attachmentHeader0.getName();
      AssetCategory assetCategory0 = AssetCategory.USER;
      attachmentHeader0.assetCategory(assetCategory0);
      attachmentHeader0.setIsPartitioned((Boolean) null);
      attachmentHeader0.getTestDoc();
      attachmentHeader0.setConnectionId("suz9]_FCo'>L1]k");
      attachmentHeader0.getAssetCategory();
      attachmentHeader0.getName();
      // Undeclared exception!
      try { 
        AssetCategory.fromValue("    testDoc: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '    testDoc: '
         //
         verifyException("com.ibm.watson.data.client.model.enums.AssetCategory", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.name("");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.mime("");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetCategory(assetCategory0);
      attachmentHeader2.toIndentedString(attachmentHeader3);
      AttachmentHeader attachmentHeader4 = attachmentHeader3.assetType("");
      attachmentHeader4.userData(attachmentHeader3);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.testDoc((Long) null);
      attachmentHeader5.setDescription("");
      AttachmentHeader attachmentHeader6 = attachmentHeader5.assetType((String) null);
      attachmentHeader6.getDescription();
      attachmentHeader6.getDescription();
      AssetCategory assetCategory1 = AssetCategory.SYSTEM;
      attachmentHeader4.setAssetCategory(assetCategory1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.assetType("CUSTOM");
      AssetCategory assetCategory0 = AssetCategory.USER;
      AttachmentHeader attachmentHeader2 = attachmentHeader1.assetCategory(assetCategory0);
      Long long0 = new Long(0L);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.testDoc(long0);
      AttachmentHeader attachmentHeader4 = attachmentHeader3.mime("\n");
      AttachmentHeader attachmentHeader5 = attachmentHeader2.name("\n");
      AttachmentHeader attachmentHeader6 = attachmentHeader4.userData(attachmentHeader5);
      attachmentHeader6.getConnectionPath();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.connectionPath("\n    ");
      attachmentHeader1.setConnectionPath("\n    ");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.userData("/{uy*2q[M)t");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.description((String) null);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.name("USE_DEFAULTS");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.assetType("");
      Long long0 = new Long(1L);
      Long.toUnsignedString(1L);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.testDoc(long0);
      attachmentHeader5.getTestDoc();
      attachmentHeader3.connectionId("/{uy*2q[M)t");
      attachmentHeader5.description("X F44?07L][P");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      AttachmentHeader attachmentHeader1 = attachmentHeader0.assetCategory(assetCategory0);
      AttachmentHeader attachmentHeader2 = attachmentHeader1.userData(attachmentHeader0);
      AssetCategory assetCategory1 = AssetCategory.USER;
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetCategory(assetCategory1);
      Long long0 = new Long((-462L));
      attachmentHeader3.setTestDoc(long0);
      attachmentHeader2.getName();
      attachmentHeader2.toIndentedString(attachmentHeader3);
      attachmentHeader2.getAssetType();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.connectionPath("OBbqQ,1AZ'");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.userData(attachmentHeader0);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.assetType("");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionId("");
      attachmentHeader4.equals(" a-ijb*");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.description("    isPartitioned: ");
      Boolean boolean0 = Boolean.valueOf("    isPartitioned: ");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.isPartitioned(boolean0);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.userData(attachmentHeader1);
      attachmentHeader3.setAssetType("    isPartitioned: ");
      attachmentHeader1.getConnectionPath();
      attachmentHeader3.description("    isPartitioned: ");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      attachmentHeader0.hashCode();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.mime("");
      AttachmentHeader attachmentHeader2 = attachmentHeader0.objectKey((String) null);
      Long long0 = new Long(1L);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.testDoc(long0);
      Long.getLong((String) null, long0);
      attachmentHeader1.setMime("");
      attachmentHeader3.objectKey("zBf|Miu3O\"oT");
      Long.getLong("qX2tuD9GW9}3fAoL\r");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionId("");
      attachmentHeader4.setConnectionPath("");
      AttachmentHeader attachmentHeader5 = attachmentHeader4.description("");
      attachmentHeader5.toString();
      Boolean boolean0 = new Boolean("qX2tuD9GW9}3fAoL\r");
      attachmentHeader4.isPartitioned(boolean0);
      attachmentHeader0.mime((String) null);
      attachmentHeader3.objectKey("zBf|Miu3O\"oT");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.connectionId("}z})~?");
      Long.getLong("}z})~?");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachmentHeader1.mime("");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.assetCategory(assetCategory0);
      attachmentHeader1.setAssetCategory(assetCategory0);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.userData(assetCategory0);
      Boolean boolean0 = Boolean.valueOf("");
      attachmentHeader0.setIsPartitioned(boolean0);
      attachmentHeader2.setUserData(attachmentHeader3);
      AttachmentHeader attachmentHeader4 = attachmentHeader3.assetType("9edz`");
      attachmentHeader1.setName("");
      AttachmentHeader attachmentHeader5 = attachmentHeader2.isPartitioned((Boolean) null);
      attachmentHeader5.setUserData((Object) null);
      attachmentHeader5.toIndentedString(attachmentHeader4);
      attachmentHeader1.setTestDoc((Long) null);
      attachmentHeader0.getTestDoc();
      attachmentHeader1.setAssetType("");
      AttachmentHeader attachmentHeader6 = new AttachmentHeader();
      attachmentHeader0.equals(attachmentHeader6);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      Boolean boolean0 = Boolean.TRUE;
      AttachmentHeader attachmentHeader1 = attachmentHeader0.isPartitioned(boolean0);
      Boolean boolean1 = new Boolean("    assetType: ");
      attachmentHeader1.setIsPartitioned(boolean1);
      AttachmentHeader attachmentHeader2 = attachmentHeader1.connectionId("^@,Y");
      Boolean.logicalOr(false, false);
      Boolean.compare(false, false);
      Long long0 = new Long(29L);
      Long.remainderUnsigned(29L, 29L);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.testDoc(long0);
      attachmentHeader3.getAssetType();
      Object object0 = new Object();
      attachmentHeader2.toIndentedString(object0);
      attachmentHeader0.setDescription((String) null);
      AttachmentHeader attachmentHeader4 = attachmentHeader2.connectionId((String) null);
      attachmentHeader4.setUserData("^@,Y");
      attachmentHeader1.setAssetType((String) null);
      attachmentHeader3.toString();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.description("^n^Q");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.assetType("8~H fz~U-kpr~sw:");
      Boolean boolean0 = Boolean.valueOf("8~H fz~U-kpr~sw:");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.isPartitioned(boolean0);
      AttachmentHeader attachmentHeader4 = attachmentHeader1.mime("    connectionPath: ");
      Long long0 = new Long(1L);
      attachmentHeader4.setTestDoc(long0);
      attachmentHeader4.equals("8~H fz~U-kpr~sw:");
      AttachmentHeader attachmentHeader5 = attachmentHeader3.mime("");
      attachmentHeader1.setName("");
      attachmentHeader1.equals((Object) null);
      AttachmentHeader attachmentHeader6 = attachmentHeader5.name("");
      attachmentHeader6.setName("[\"VQf\"Xl");
      AssetCategory assetCategory0 = AssetCategory.USER;
      attachmentHeader6.setAssetCategory(assetCategory0);
      attachmentHeader6.assetType("");
      attachmentHeader6.getAssetType();
      Object object0 = new Object();
      attachmentHeader5.toIndentedString(object0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      Object object0 = new Object();
      attachmentHeader0.equals(object0);
      AttachmentHeader attachmentHeader1 = attachmentHeader0.mime("");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.connectionId("");
      attachmentHeader2.setConnectionId("");
      Object object1 = new Object();
      attachmentHeader2.equals(object1);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.userData("");
      attachmentHeader2.mime("");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionPath("");
      AttachmentHeader attachmentHeader5 = attachmentHeader4.assetType("");
      attachmentHeader5.setName("");
      attachmentHeader5.hashCode();
      attachmentHeader0.setAssetType("");
      attachmentHeader4.setObjectKey("");
      AttachmentHeader attachmentHeader6 = attachmentHeader0.mime("");
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachmentHeader3.setAssetCategory(assetCategory0);
      attachmentHeader4.getIsPartitioned();
      attachmentHeader1.getDescription();
      attachmentHeader6.hashCode();
      attachmentHeader0.setObjectKey("NON_DEFAULT");
      attachmentHeader0.mime("4{wjDT]=}nBQDoHP`");
      attachmentHeader1.getAssetCategory();
      attachmentHeader0.getName();
      attachmentHeader6.getIsPartitioned();
      attachmentHeader1.getIsPartitioned();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.objectKey("");
      attachmentHeader1.equals("(`+QwrGx");
      AttachmentHeader attachmentHeader2 = attachmentHeader0.mime("(`+QwrGx");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.objectKey("    testDoc: ");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionPath("    testDoc: ");
      Long long0 = new Long(439L);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.testDoc(long0);
      attachmentHeader4.setAssetType("(`+QwrGx");
      AttachmentHeader attachmentHeader6 = attachmentHeader5.connectionId("");
      attachmentHeader6.getAssetType();
      attachmentHeader0.setMime("'");
      attachmentHeader6.userData(attachmentHeader4);
      attachmentHeader2.setAssetType("'");
      attachmentHeader0.name("(`+QwrGx");
      attachmentHeader5.toString();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      AttachmentHeader attachmentHeader1 = attachmentHeader0.description("    assetCategory: ");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.connectionId("    assetCategory: ");
      AttachmentHeader attachmentHeader3 = attachmentHeader2.mime((String) null);
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionPath("    assetCategory: ");
      Long long0 = new Long(0L);
      attachmentHeader4.setConnectionId("    assetCategory: ");
      StringBuilder stringBuilder0 = new StringBuilder(2);
      attachmentHeader0.toString(stringBuilder0);
      AttachmentHeader attachmentHeader5 = attachmentHeader4.testDoc(long0);
      Object object0 = new Object();
      attachmentHeader5.toIndentedString(object0);
      attachmentHeader0.equals("java.lang.Object@0000000004");
      attachmentHeader4.equals("ndo;bxl]KU:*=i");
      attachmentHeader4.getName();
      AttachmentHeader attachmentHeader6 = attachmentHeader1.name("    assetCategory: ");
      attachmentHeader6.name("java.lang.Object@0000000004");
      AttachmentHeader attachmentHeader7 = attachmentHeader2.description("");
      attachmentHeader0.equals(attachmentHeader7);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachmentHeader3.assetCategory(assetCategory0);
      attachmentHeader3.getConnectionPath();
      attachmentHeader5.getConnectionId();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AttachmentHeader attachmentHeader0 = new AttachmentHeader();
      attachmentHeader0.connectionPath((String) null);
      AttachmentHeader attachmentHeader1 = attachmentHeader0.name("");
      AttachmentHeader attachmentHeader2 = attachmentHeader1.userData(attachmentHeader0);
      AttachmentHeader attachmentHeader3 = attachmentHeader2.objectKey("");
      AttachmentHeader attachmentHeader4 = attachmentHeader3.connectionPath("");
      AssetCategory assetCategory0 = AssetCategory.USER;
      AttachmentHeader attachmentHeader5 = attachmentHeader4.assetCategory(assetCategory0);
      attachmentHeader5.toString();
      attachmentHeader1.getUserData();
      attachmentHeader4.setDescription((String) null);
      attachmentHeader3.connectionPath("");
      attachmentHeader4.getUserData();
      attachmentHeader3.getObjectKey();
      attachmentHeader5.getDescription();
      // Undeclared exception!
      try { 
        attachmentHeader4.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
