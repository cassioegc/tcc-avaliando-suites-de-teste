/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 20:22:08 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.TransactionalProjectStorageObject;
import com.ibm.watson.data.client.model.enums.StorageType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransactionalProjectStorageObject_ESTest extends TransactionalProjectStorageObject_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      TransactionalProjectStorageObject transactionalProjectStorageObject1 = transactionalProjectStorageObject0.resourceCrn("z!~!Aj[sc>dkb%trD");
      transactionalProjectStorageObject1.getResourceCrn();
      assertFalse(transactionalProjectStorageObject1.getDelegated());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.resourceCrn("");
      transactionalProjectStorageObject0.getResourceCrn();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.guid("DELEGATING");
      transactionalProjectStorageObject0.getGuid();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.setGuid("");
      transactionalProjectStorageObject0.getGuid();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.delegated((Boolean) null);
      Boolean boolean0 = transactionalProjectStorageObject0.getDelegated();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      Boolean boolean0 = Boolean.valueOf(true);
      transactionalProjectStorageObject0.setDelegated(boolean0);
      Boolean boolean1 = transactionalProjectStorageObject0.getDelegated();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      StorageType storageType0 = StorageType.ASSET_FILES_STORAGE;
      transactionalProjectStorageObject0.type(storageType0);
      TransactionalProjectStorageObject transactionalProjectStorageObject1 = new TransactionalProjectStorageObject();
      boolean boolean0 = transactionalProjectStorageObject0.equals(transactionalProjectStorageObject1);
      assertFalse(transactionalProjectStorageObject1.getDelegated());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      TransactionalProjectStorageObject transactionalProjectStorageObject1 = new TransactionalProjectStorageObject();
      boolean boolean0 = transactionalProjectStorageObject0.equals(transactionalProjectStorageObject1);
      assertTrue(boolean0);
      assertFalse(transactionalProjectStorageObject1.getDelegated());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      TransactionalProjectStorageObject transactionalProjectStorageObject1 = transactionalProjectStorageObject0.guid("DELEGATING");
      TransactionalProjectStorageObject transactionalProjectStorageObject2 = new TransactionalProjectStorageObject();
      boolean boolean0 = transactionalProjectStorageObject1.equals(transactionalProjectStorageObject2);
      assertFalse(boolean0);
      assertFalse(transactionalProjectStorageObject2.getDelegated());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      Object object0 = new Object();
      boolean boolean0 = transactionalProjectStorageObject0.equals(object0);
      assertFalse(transactionalProjectStorageObject0.getDelegated());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      boolean boolean0 = transactionalProjectStorageObject0.equals((Object) null);
      assertFalse(boolean0);
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      boolean boolean0 = transactionalProjectStorageObject0.equals(transactionalProjectStorageObject0);
      assertFalse(transactionalProjectStorageObject0.getDelegated());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      TransactionalProjectStorageObject transactionalProjectStorageObject1 = transactionalProjectStorageObject0.resourceCrn("<!d_q:;'%]bJ2/");
      TransactionalProjectStorageObject transactionalProjectStorageObject2 = new TransactionalProjectStorageObject();
      boolean boolean0 = transactionalProjectStorageObject1.equals(transactionalProjectStorageObject2);
      assertFalse(transactionalProjectStorageObject2.getDelegated());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.hashCode();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.getType();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.getResourceCrn();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.getGuid();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.setResourceCrn("N5r,;8.iU\"qG");
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      StorageType storageType0 = StorageType.BMCOS_OBJECT_STORAGE;
      transactionalProjectStorageObject0.setType(storageType0);
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
      
      Boolean boolean0 = Boolean.valueOf(true);
      transactionalProjectStorageObject0.setDelegated(boolean0);
      TransactionalProjectStorageObject transactionalProjectStorageObject1 = new TransactionalProjectStorageObject();
      boolean boolean1 = transactionalProjectStorageObject0.equals(transactionalProjectStorageObject1);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      transactionalProjectStorageObject0.toString();
      assertFalse(transactionalProjectStorageObject0.getDelegated());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TransactionalProjectStorageObject transactionalProjectStorageObject0 = new TransactionalProjectStorageObject();
      Boolean boolean0 = transactionalProjectStorageObject0.getDelegated();
      assertFalse(boolean0);
  }
}
