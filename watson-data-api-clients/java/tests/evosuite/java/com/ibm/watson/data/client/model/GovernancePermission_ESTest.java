/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:59:00 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.Condition;
import com.ibm.watson.data.client.model.GovernancePermission;
import com.ibm.watson.data.client.model.enums.GovernancePermissionAction;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GovernancePermission_ESTest extends GovernancePermission_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      governancePermission0.permissionId("jW=G50abcYg");
      String string0 = governancePermission0.getPermissionId();
      assertEquals("jW=G50abcYg", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      governancePermission0.permissionId("");
      String string0 = governancePermission0.getPermissionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      GovernancePermissionAction governancePermissionAction0 = GovernancePermissionAction.READ;
      GovernancePermission governancePermission1 = governancePermission0.addActionsItem(governancePermissionAction0);
      List<GovernancePermissionAction> list0 = governancePermission1.getActions();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      GovernancePermissionAction governancePermissionAction0 = GovernancePermissionAction.READ;
      GovernancePermission governancePermission1 = governancePermission0.addActionsItem(governancePermissionAction0);
      String string0 = governancePermission1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      GovernancePermission governancePermission1 = new GovernancePermission();
      boolean boolean0 = governancePermission0.equals(governancePermission1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      GovernancePermission governancePermission1 = new GovernancePermission();
      assertTrue(governancePermission1.equals((Object)governancePermission0));
      
      Condition condition0 = new Condition();
      governancePermission0.condition(condition0);
      boolean boolean0 = governancePermission1.equals(governancePermission0);
      assertFalse(governancePermission1.equals((Object)governancePermission0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      GovernancePermission governancePermission1 = governancePermission0.permissionId("");
      GovernancePermission governancePermission2 = new GovernancePermission();
      boolean boolean0 = governancePermission1.equals(governancePermission2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      boolean boolean0 = governancePermission0.equals("class GovernancePermission {\n    permissionId: null\n    condition: null\n    actions: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      boolean boolean0 = governancePermission0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      boolean boolean0 = governancePermission0.equals(governancePermission0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      GovernancePermissionAction governancePermissionAction0 = GovernancePermissionAction.READ;
      GovernancePermission governancePermission1 = governancePermission0.addActionsItem(governancePermissionAction0);
      GovernancePermission governancePermission2 = new GovernancePermission();
      boolean boolean0 = governancePermission1.equals(governancePermission2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      GovernancePermissionAction governancePermissionAction0 = GovernancePermissionAction.READ;
      GovernancePermission governancePermission1 = governancePermission0.addActionsItem(governancePermissionAction0);
      GovernancePermission governancePermission2 = governancePermission1.addActionsItem(governancePermissionAction0);
      assertSame(governancePermission1, governancePermission2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      String string0 = governancePermission0.getPermissionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      Condition condition0 = new Condition();
      governancePermission0.setCondition(condition0);
      assertNull(condition0.getType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      Condition condition0 = governancePermission0.getCondition();
      assertNull(condition0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      Stack<GovernancePermissionAction> stack0 = new Stack<GovernancePermissionAction>();
      GovernancePermission governancePermission1 = governancePermission0.actions(stack0);
      List<GovernancePermissionAction> list0 = governancePermission1.getActions();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      List<GovernancePermissionAction> list0 = governancePermission0.getActions();
      governancePermission0.setActions(list0);
      assertNull(governancePermission0.getPermissionId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      governancePermission0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      Condition condition0 = new Condition();
      governancePermission0.condition(condition0);
      Condition condition1 = governancePermission0.getCondition();
      assertSame(condition1, condition0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GovernancePermission governancePermission0 = new GovernancePermission();
      governancePermission0.setPermissionId("    condition: ");
      assertEquals("    condition: ", governancePermission0.getPermissionId());
  }
}
