/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:34:48 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CommentByUser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CommentByUser_ESTest extends CommentByUser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      commentByUser0.comment("ALWAYS");
      String string0 = commentByUser0.getComment();
      assertEquals("ALWAYS", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      CommentByUser commentByUser1 = commentByUser0.comment("");
      String string0 = commentByUser1.getComment();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      Boolean boolean0 = Boolean.valueOf((String) null);
      CommentByUser commentByUser1 = commentByUser0.allowEdits(boolean0);
      Boolean boolean1 = commentByUser1.getAllowEdits();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      Boolean boolean0 = Boolean.valueOf(true);
      CommentByUser commentByUser1 = commentByUser0.allowEdits(boolean0);
      String string0 = commentByUser1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      CommentByUser commentByUser1 = new CommentByUser();
      assertTrue(commentByUser1.equals((Object)commentByUser0));
      
      Boolean boolean0 = Boolean.TRUE;
      commentByUser1.setAllowEdits(boolean0);
      boolean boolean1 = commentByUser1.equals(commentByUser0);
      assertFalse(commentByUser1.equals((Object)commentByUser0));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      CommentByUser commentByUser1 = new CommentByUser();
      boolean boolean0 = commentByUser0.equals(commentByUser1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      boolean boolean0 = commentByUser0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      boolean boolean0 = commentByUser0.equals(commentByUser0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      Object object0 = new Object();
      boolean boolean0 = commentByUser0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      Boolean boolean0 = commentByUser0.getAllowEdits();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      commentByUser0.comment("ALWAYS");
      CommentByUser commentByUser1 = new CommentByUser();
      boolean boolean0 = commentByUser0.equals(commentByUser1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      commentByUser0.setComment("1");
      assertEquals("1", commentByUser0.getComment());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      commentByUser0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      String string0 = commentByUser0.getComment();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CommentByUser commentByUser0 = new CommentByUser();
      Boolean boolean0 = Boolean.TRUE;
      commentByUser0.setAllowEdits(boolean0);
      Boolean boolean1 = commentByUser0.getAllowEdits();
      assertTrue(boolean1);
  }
}
