/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:04:15 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AssetAggregatedCommentsList;
import com.ibm.watson.data.client.model.AssetAggregatedCommentsMetadata;
import com.ibm.watson.data.client.model.AssetComment;
import com.ibm.watson.data.client.model.HrefModel;
import com.ibm.watson.data.client.model.PaginatedAssetAggregatedCommentsList;
import io.netty.channel.Channel;
import io.netty.channel.epoll.EpollServerDomainSocketChannel;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import reactor.core.CoreSubscriber;
import reactor.core.publisher.Operators;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PaginatedAssetAggregatedCommentsList_ESTest extends PaginatedAssetAggregatedCommentsList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      LinkedList<AssetAggregatedCommentsList> linkedList0 = new LinkedList<AssetAggregatedCommentsList>();
      Predicate<Object> predicate0 = Predicate.isEqual((Object) paginatedAssetAggregatedCommentsList0);
      linkedList0.removeIf(predicate0);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.resources(linkedList0);
      paginatedAssetAggregatedCommentsList1.setResources(linkedList0);
      paginatedAssetAggregatedCommentsList1.setResources(linkedList0);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = new PaginatedAssetAggregatedCommentsList();
      paginatedAssetAggregatedCommentsList2.getLast();
      paginatedAssetAggregatedCommentsList0.setNext((HrefModel) null);
      paginatedAssetAggregatedCommentsList0.toString();
      paginatedAssetAggregatedCommentsList1.hashCode();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList3 = new PaginatedAssetAggregatedCommentsList();
      paginatedAssetAggregatedCommentsList1.equals(paginatedAssetAggregatedCommentsList3);
      paginatedAssetAggregatedCommentsList1.setResources(linkedList0);
      List<AssetAggregatedCommentsList> list0 = paginatedAssetAggregatedCommentsList1.getResources();
      assertFalse(paginatedAssetAggregatedCommentsList1.equals((Object)paginatedAssetAggregatedCommentsList2));
      
      paginatedAssetAggregatedCommentsList2.setResources(list0);
      Object object0 = new Object();
      boolean boolean0 = paginatedAssetAggregatedCommentsList2.equals(object0);
      assertTrue(paginatedAssetAggregatedCommentsList2.equals((Object)paginatedAssetAggregatedCommentsList1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      AssetAggregatedCommentsList assetAggregatedCommentsList0 = new AssetAggregatedCommentsList();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.addResourcesItem(assetAggregatedCommentsList0);
      List<AssetAggregatedCommentsList> list0 = paginatedAssetAggregatedCommentsList0.getResources();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = paginatedAssetAggregatedCommentsList1.resources(list0);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList3 = paginatedAssetAggregatedCommentsList2.resources(list0);
      assertSame(paginatedAssetAggregatedCommentsList0, paginatedAssetAggregatedCommentsList3);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      AssetAggregatedCommentsList assetAggregatedCommentsList0 = new AssetAggregatedCommentsList();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      paginatedAssetAggregatedCommentsList0.setOffset(integer0);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.addResourcesItem(assetAggregatedCommentsList0);
      LinkedList<AssetAggregatedCommentsList> linkedList0 = new LinkedList<AssetAggregatedCommentsList>();
      AssetAggregatedCommentsMetadata assetAggregatedCommentsMetadata0 = new AssetAggregatedCommentsMetadata();
      AssetAggregatedCommentsMetadata assetAggregatedCommentsMetadata1 = assetAggregatedCommentsMetadata0.timeZoneOffset("W_k[i}]9ZvCRz^");
      assetAggregatedCommentsList0.metadata(assetAggregatedCommentsMetadata1);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = paginatedAssetAggregatedCommentsList1.resources(linkedList0);
      paginatedAssetAggregatedCommentsList2.equals(paginatedAssetAggregatedCommentsList1);
      paginatedAssetAggregatedCommentsList0.getResources();
      paginatedAssetAggregatedCommentsList0.setResources(linkedList0);
      paginatedAssetAggregatedCommentsList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      LinkedList<AssetAggregatedCommentsList> linkedList0 = new LinkedList<AssetAggregatedCommentsList>();
      AssetAggregatedCommentsList assetAggregatedCommentsList0 = new AssetAggregatedCommentsList();
      AssetAggregatedCommentsMetadata assetAggregatedCommentsMetadata0 = new AssetAggregatedCommentsMetadata();
      AssetAggregatedCommentsMetadata assetAggregatedCommentsMetadata1 = assetAggregatedCommentsMetadata0.timeZoneOffset("");
      Object object0 = new Object();
      assetAggregatedCommentsMetadata1.equals(assetAggregatedCommentsList0);
      assetAggregatedCommentsList0.getEntities();
      assetAggregatedCommentsList0.entities((List<AssetComment>) null);
      assetAggregatedCommentsMetadata1.equals(object0);
      paginatedAssetAggregatedCommentsList0.addResourcesItem(assetAggregatedCommentsList0);
      AssetAggregatedCommentsMetadata assetAggregatedCommentsMetadata2 = assetAggregatedCommentsMetadata1.timeZoneOffset("");
      AssetAggregatedCommentsList assetAggregatedCommentsList1 = assetAggregatedCommentsList0.metadata(assetAggregatedCommentsMetadata1);
      linkedList0.add(assetAggregatedCommentsList1);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.resources(linkedList0);
      paginatedAssetAggregatedCommentsList0.toString();
      Long long0 = new Long((-1L));
      paginatedAssetAggregatedCommentsList1.count(long0);
      AssetAggregatedCommentsMetadata assetAggregatedCommentsMetadata3 = assetAggregatedCommentsMetadata2.timeZoneOffset("R}aKlwvi");
      assetAggregatedCommentsList1.metadata(assetAggregatedCommentsMetadata3);
      paginatedAssetAggregatedCommentsList0.addResourcesItem(assetAggregatedCommentsList0);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = new PaginatedAssetAggregatedCommentsList();
      boolean boolean0 = paginatedAssetAggregatedCommentsList1.equals(paginatedAssetAggregatedCommentsList2);
      assertFalse(boolean0);
      
      paginatedAssetAggregatedCommentsList1.addResourcesItem(assetAggregatedCommentsList1);
      paginatedAssetAggregatedCommentsList0.resources(linkedList0);
      paginatedAssetAggregatedCommentsList1.addResourcesItem(assetAggregatedCommentsList0);
      assertFalse(paginatedAssetAggregatedCommentsList0.equals((Object)paginatedAssetAggregatedCommentsList2));
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      try { 
        Long.decode("=GA7Y>(:;Z^oS?");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"=GA7Y>(:;Z^oS?\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      paginatedAssetAggregatedCommentsList0.getResources();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.resources((List<AssetAggregatedCommentsList>) null);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = new PaginatedAssetAggregatedCommentsList();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList3 = paginatedAssetAggregatedCommentsList2.resources((List<AssetAggregatedCommentsList>) null);
      paginatedAssetAggregatedCommentsList3.getLast();
      paginatedAssetAggregatedCommentsList0.setNext((HrefModel) null);
      Object object0 = new Object();
      boolean boolean0 = paginatedAssetAggregatedCommentsList0.equals(object0);
      boolean boolean1 = paginatedAssetAggregatedCommentsList3.equals(paginatedAssetAggregatedCommentsList1);
      assertFalse(boolean1 == boolean0);
      
      paginatedAssetAggregatedCommentsList1.hashCode();
      assertTrue(paginatedAssetAggregatedCommentsList1.equals((Object)paginatedAssetAggregatedCommentsList2));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      LinkedList<AssetAggregatedCommentsList> linkedList0 = new LinkedList<AssetAggregatedCommentsList>();
      linkedList0.toArray();
      paginatedAssetAggregatedCommentsList0.setResources(linkedList0);
      AssetAggregatedCommentsList assetAggregatedCommentsList0 = new AssetAggregatedCommentsList();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.addResourcesItem(assetAggregatedCommentsList0);
      paginatedAssetAggregatedCommentsList0.getPrev();
      assetAggregatedCommentsList0.setMetadata((AssetAggregatedCommentsMetadata) null);
      paginatedAssetAggregatedCommentsList1.setNext((HrefModel) null);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = paginatedAssetAggregatedCommentsList1.addResourcesItem(assetAggregatedCommentsList0);
      paginatedAssetAggregatedCommentsList2.toString();
      paginatedAssetAggregatedCommentsList2.getResources();
      paginatedAssetAggregatedCommentsList1.toString();
      paginatedAssetAggregatedCommentsList1.resources(linkedList0);
      assertEquals(2, linkedList0.size());
      
      paginatedAssetAggregatedCommentsList0.equals(paginatedAssetAggregatedCommentsList1);
      LinkedList<AssetAggregatedCommentsList> linkedList1 = new LinkedList<AssetAggregatedCommentsList>();
      paginatedAssetAggregatedCommentsList2.setResources(linkedList1);
      assertFalse(linkedList1.equals((Object)linkedList0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      AssetAggregatedCommentsList assetAggregatedCommentsList0 = new AssetAggregatedCommentsList();
      paginatedAssetAggregatedCommentsList0.toIndentedString(assetAggregatedCommentsList0);
      Integer integer0 = new Integer(0);
      Integer.toUnsignedLong(0);
      try { 
        Integer.decode("com.ibm.watson.data.client.model.AssetAggregatedCommentsList@0000000002");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"com.ibm.watson.data.client.model.AssetAggregatedCommentsList@0000000002\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      LinkedList<AssetAggregatedCommentsList> linkedList0 = new LinkedList<AssetAggregatedCommentsList>();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.resources(linkedList0);
      paginatedAssetAggregatedCommentsList1.setResources(linkedList0);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = paginatedAssetAggregatedCommentsList1.resources(linkedList0);
      AssetAggregatedCommentsList assetAggregatedCommentsList0 = new AssetAggregatedCommentsList();
      LinkedList<AssetComment> linkedList1 = new LinkedList<AssetComment>();
      AssetAggregatedCommentsList assetAggregatedCommentsList1 = assetAggregatedCommentsList0.entities(linkedList1);
      AssetAggregatedCommentsList assetAggregatedCommentsList2 = assetAggregatedCommentsList1.metadata((AssetAggregatedCommentsMetadata) null);
      linkedList0.listIterator();
      AssetAggregatedCommentsList assetAggregatedCommentsList3 = assetAggregatedCommentsList2.logStatus("Z_K?|[AmGW");
      List<AssetComment> list0 = assetAggregatedCommentsList3.getEntities();
      assetAggregatedCommentsList3.entities(list0);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList3 = paginatedAssetAggregatedCommentsList2.addResourcesItem(assetAggregatedCommentsList3);
      paginatedAssetAggregatedCommentsList1.toString();
      paginatedAssetAggregatedCommentsList1.hashCode();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList4 = paginatedAssetAggregatedCommentsList1.resources(linkedList0);
      paginatedAssetAggregatedCommentsList3.getPrev();
      paginatedAssetAggregatedCommentsList1.setLast((HrefModel) null);
      paginatedAssetAggregatedCommentsList2.setResources((List<AssetAggregatedCommentsList>) null);
      paginatedAssetAggregatedCommentsList2.setResources((List<AssetAggregatedCommentsList>) null);
      paginatedAssetAggregatedCommentsList1.toString();
      paginatedAssetAggregatedCommentsList4.resources(linkedList0);
      assertTrue(linkedList0.contains(assetAggregatedCommentsList2));
      assertEquals(1, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList0 = new PaginatedAssetAggregatedCommentsList();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList1 = paginatedAssetAggregatedCommentsList0.resources((List<AssetAggregatedCommentsList>) null);
      Long long0 = new Long(0L);
      paginatedAssetAggregatedCommentsList1.getLast();
      paginatedAssetAggregatedCommentsList0.setLast((HrefModel) null);
      Long.compareUnsigned(1963L, (-1404L));
      Long.compare(0L, (-452L));
      paginatedAssetAggregatedCommentsList0.count(long0);
      paginatedAssetAggregatedCommentsList1.toString();
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList2 = paginatedAssetAggregatedCommentsList0.resources((List<AssetAggregatedCommentsList>) null);
      paginatedAssetAggregatedCommentsList0.getResources();
      paginatedAssetAggregatedCommentsList0.hashCode();
      paginatedAssetAggregatedCommentsList2.equals((Object) null);
      paginatedAssetAggregatedCommentsList0.setResources((List<AssetAggregatedCommentsList>) null);
      paginatedAssetAggregatedCommentsList2.setResources((List<AssetAggregatedCommentsList>) null);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList3 = paginatedAssetAggregatedCommentsList1.addResourcesItem((AssetAggregatedCommentsList) null);
      paginatedAssetAggregatedCommentsList3.toString();
      paginatedAssetAggregatedCommentsList0.getPrev();
      paginatedAssetAggregatedCommentsList3.next((HrefModel) null);
      paginatedAssetAggregatedCommentsList2.addResourcesItem((AssetAggregatedCommentsList) null);
      PaginatedAssetAggregatedCommentsList paginatedAssetAggregatedCommentsList4 = paginatedAssetAggregatedCommentsList3.resources((List<AssetAggregatedCommentsList>) null);
      paginatedAssetAggregatedCommentsList0.setLast((HrefModel) null);
      paginatedAssetAggregatedCommentsList4.hashCode();
      paginatedAssetAggregatedCommentsList1.equals((Object) null);
      paginatedAssetAggregatedCommentsList3.getResources();
      paginatedAssetAggregatedCommentsList1.resources((List<AssetAggregatedCommentsList>) null);
      EpollServerDomainSocketChannel epollServerDomainSocketChannel0 = null;
      try {
        epollServerDomainSocketChannel0 = new EpollServerDomainSocketChannel((-1));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.channel.epoll.LinuxSocket
         //
         verifyException("io.netty.channel.epoll.AbstractEpollServerChannel", e);
      }
  }
}
