/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:43:07 GMT 2021
 */

package com.ibm.watson.data.client.model.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.enums.QueryConditionType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class QueryConditionType_ESTest extends QueryConditionType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      QueryConditionType[] queryConditionTypeArray0 = QueryConditionType.values();
      assertEquals(1, queryConditionTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      QueryConditionType queryConditionType0 = QueryConditionType.valueOf("WORKFLOW_ID");
      assertEquals("workflow_id", queryConditionType0.getValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      QueryConditionType queryConditionType0 = QueryConditionType.fromValue("workflow_id");
      assertEquals(QueryConditionType.WORKFLOW_ID, queryConditionType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        QueryConditionType.fromValue("C");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'C'
         //
         verifyException("com.ibm.watson.data.client.model.enums.QueryConditionType", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      QueryConditionType queryConditionType0 = QueryConditionType.WORKFLOW_ID;
      String string0 = queryConditionType0.getValue();
      assertEquals("workflow_id", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      QueryConditionType queryConditionType0 = QueryConditionType.WORKFLOW_ID;
      String string0 = queryConditionType0.toString();
      assertEquals("workflow_id", string0);
  }
}
