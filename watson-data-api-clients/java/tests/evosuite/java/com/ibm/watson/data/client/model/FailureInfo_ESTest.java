/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:13:00 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.FailureInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FailureInfo_ESTest extends FailureInfo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.transactionId("&z^1:H?kv");
      String string0 = failureInfo1.getTransactionId();
      assertEquals("&z^1:H?kv", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.transactionId("");
      String string0 = failureInfo1.getTransactionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp("-m0`IKr)W06=7");
      String string0 = failureInfo1.getTimestamp();
      assertEquals("-m0`IKr)W06=7", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.timestamp("");
      String string0 = failureInfo0.getTimestamp();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      Long long0 = new Long((-3005L));
      FailureInfo failureInfo1 = failureInfo0.threadId(long0);
      Long long1 = failureInfo1.getThreadId();
      assertEquals((-3005L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      Long long0 = new Long(2272L);
      failureInfo0.threadId(long0);
      Long long1 = failureInfo0.getThreadId();
      assertEquals(2272L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.thread("");
      String string0 = failureInfo0.getThread();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.stackTrace("READ_ONLY");
      String string0 = failureInfo0.getStackTrace();
      assertEquals("READ_ONLY", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.operation("b}LH@u>^$8w");
      String string0 = failureInfo1.getOperation();
      assertEquals("b}LH@u>^$8w", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.setOperation("");
      String string0 = failureInfo0.getOperation();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.camsVersion("E");
      String string0 = failureInfo0.getCamsVersion();
      assertEquals("E", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.setCamsVersion("");
      String string0 = failureInfo0.getCamsVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.camsInstance("zNN1g=ML");
      String string0 = failureInfo1.getCamsInstance();
      assertEquals("zNN1g=ML", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.camsInstance("");
      String string0 = failureInfo1.getCamsInstance();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.operation("");
      String string0 = failureInfo1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = new FailureInfo();
      boolean boolean0 = failureInfo0.equals(failureInfo1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = new FailureInfo();
      assertTrue(failureInfo1.equals((Object)failureInfo0));
      
      failureInfo1.stackTrace("x`SO,");
      boolean boolean0 = failureInfo0.equals(failureInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = new FailureInfo();
      assertTrue(failureInfo1.equals((Object)failureInfo0));
      
      failureInfo1.camsInstance("");
      boolean boolean0 = failureInfo0.equals(failureInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = new FailureInfo();
      assertTrue(failureInfo1.equals((Object)failureInfo0));
      
      failureInfo1.setThread("; pT|+2");
      boolean boolean0 = failureInfo0.equals(failureInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = new FailureInfo();
      assertTrue(failureInfo1.equals((Object)failureInfo0));
      
      Long long0 = new Long((-1233L));
      failureInfo1.setThreadId(long0);
      boolean boolean0 = failureInfo0.equals(failureInfo1);
      assertFalse(failureInfo1.equals((Object)failureInfo0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      boolean boolean0 = failureInfo0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      boolean boolean0 = failureInfo0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      boolean boolean0 = failureInfo0.equals(failureInfo0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.setThread("NON_ABSENT");
      String string0 = failureInfo0.getThread();
      assertEquals("NON_ABSENT", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.setCamsInstance("");
      assertNull(failureInfo0.getTransactionId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.hashCode();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.setStackTrace("");
      String string0 = failureInfo0.getStackTrace();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      String string0 = failureInfo0.getTimestamp();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp("");
      FailureInfo failureInfo2 = new FailureInfo();
      boolean boolean0 = failureInfo1.equals(failureInfo2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      String string0 = failureInfo0.getThread();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      Long long0 = failureInfo0.getThreadId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.setTransactionId("ngull");
      FailureInfo failureInfo1 = new FailureInfo();
      boolean boolean0 = failureInfo0.equals(failureInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.camsVersion("");
      FailureInfo failureInfo1 = new FailureInfo();
      boolean boolean0 = failureInfo0.equals(failureInfo1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      String string0 = failureInfo0.getCamsInstance();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.operation("");
      FailureInfo failureInfo2 = new FailureInfo();
      boolean boolean0 = failureInfo1.equals(failureInfo2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      String string0 = failureInfo0.getStackTrace();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      Long long0 = new Long(0L);
      failureInfo0.threadId(long0);
      Long long1 = failureInfo0.getThreadId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.setTimestamp("com.ibm.watson.data.client.model.FailureInfo");
      assertNull(failureInfo0.getCamsInstance());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      String string0 = failureInfo0.getCamsVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      String string0 = failureInfo0.getTransactionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FailureInfo failureInfo0 = new FailureInfo();
      String string0 = failureInfo0.getOperation();
      assertNull(string0);
  }
}
