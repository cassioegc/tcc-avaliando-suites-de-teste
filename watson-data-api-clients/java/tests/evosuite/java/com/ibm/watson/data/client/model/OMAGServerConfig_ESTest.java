/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 13:50:09 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AccessServiceConfig;
import com.ibm.watson.data.client.model.ConformanceSuiteConfig;
import com.ibm.watson.data.client.model.Connection;
import com.ibm.watson.data.client.model.DataEngineProxyConfig;
import com.ibm.watson.data.client.model.DataPlatformConfig;
import com.ibm.watson.data.client.model.DiscoveryServerConfig;
import com.ibm.watson.data.client.model.EventBusConfig;
import com.ibm.watson.data.client.model.OMAGServerConfig;
import com.ibm.watson.data.client.model.OpenLineageConfig;
import com.ibm.watson.data.client.model.RepositoryServicesConfig;
import com.ibm.watson.data.client.model.SecurityOfficerConfig;
import com.ibm.watson.data.client.model.SecuritySyncConfig;
import com.ibm.watson.data.client.model.StewardshipServicesConfig;
import com.ibm.watson.data.client.model.VirtualizationConfig;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlRun;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OMAGServerConfig_ESTest extends OMAGServerConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      VirtualizationConfig virtualizationConfig0 = new VirtualizationConfig();
      oMAGServerConfig0.virtualizationConfig(virtualizationConfig0);
      VirtualizationConfig virtualizationConfig1 = oMAGServerConfig0.getVirtualizationConfig();
      assertSame(virtualizationConfig1, virtualizationConfig0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.versionId("7>2RMqa2wvU9/b");
      String string0 = oMAGServerConfig0.getVersionId();
      assertEquals("7>2RMqa2wvU9/b", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.versionId("");
      String string0 = oMAGServerConfig0.getVersionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.stewardshipServicesConfig(stewardshipServicesConfig0);
      StewardshipServicesConfig stewardshipServicesConfig1 = oMAGServerConfig1.getStewardshipServicesConfig();
      assertNull(stewardshipServicesConfig1.getAccessServiceServerName());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Connection connection0 = new Connection();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.serverSecurityConnection(connection0);
      Connection connection1 = oMAGServerConfig1.getServerSecurityConnection();
      assertNull(connection1.getDisplayName());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecuritySyncConfig securitySyncConfig0 = new SecuritySyncConfig();
      oMAGServerConfig0.securitySyncConfig(securitySyncConfig0);
      SecuritySyncConfig securitySyncConfig1 = oMAGServerConfig0.getSecuritySyncConfig();
      assertNull(securitySyncConfig1.getSecuritySyncServerType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.organizationName("om1jvrA*");
      String string0 = oMAGServerConfig0.getOrganizationName();
      assertEquals("om1jvrA*", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.organizationName("");
      String string0 = oMAGServerConfig1.getOrganizationName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OpenLineageConfig openLineageConfig0 = new OpenLineageConfig();
      oMAGServerConfig0.openLineageConfig(openLineageConfig0);
      OpenLineageConfig openLineageConfig1 = oMAGServerConfig0.getOpenLineageConfig();
      assertSame(openLineageConfig1, openLineageConfig0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      oMAGServerConfig0.maxPageSize(integer0);
      Integer integer1 = oMAGServerConfig0.getMaxPageSize();
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Integer integer0 = new Integer((-22));
      oMAGServerConfig0.maxPageSize(integer0);
      Integer integer1 = oMAGServerConfig0.getMaxPageSize();
      assertEquals((-22), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.localServerUserId("com.google.inject.internal.RealOptionalBinder$DefaultImpl");
      String string0 = oMAGServerConfig0.getLocalServerUserId();
      assertEquals("com.google.inject.internal.RealOptionalBinder$DefaultImpl", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setLocalServerURL("");
      String string0 = oMAGServerConfig0.getLocalServerURL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.localServerType("}7=BTKa|rch.yxb");
      String string0 = oMAGServerConfig1.getLocalServerType();
      assertEquals("}7=BTKa|rch.yxb", string0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.localServerPassword("-Y.ih~d1z@)");
      String string0 = oMAGServerConfig0.getLocalServerPassword();
      assertEquals("-Y.ih~d1z@)", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.localServerName("2]o2D7{7M9W");
      String string0 = oMAGServerConfig0.getLocalServerName();
      assertEquals("2]o2D7{7M9W", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.localServerId("EEE MMM dd HH:mm:ss yyyy");
      String string0 = oMAGServerConfig1.getLocalServerId();
      assertEquals("EEE MMM dd HH:mm:ss yyyy", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      ConformanceSuiteConfig conformanceSuiteConfig0 = new ConformanceSuiteConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.conformanceSuiteConfig(conformanceSuiteConfig0);
      ConformanceSuiteConfig conformanceSuiteConfig1 = oMAGServerConfig1.getConformanceSuiteConfig();
      assertSame(conformanceSuiteConfig0, conformanceSuiteConfig1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getListeners();
      oMAGServerConfig0.auditTrail(list0);
      List<String> list1 = oMAGServerConfig0.getAuditTrail();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.addAuditTrailItem("Bx-wC ssf+F");
      List<String> list0 = oMAGServerConfig0.getAuditTrail();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Vector<AccessServiceConfig> vector0 = new Vector<AccessServiceConfig>();
      oMAGServerConfig0.accessServicesConfig(vector0);
      List<AccessServiceConfig> list0 = oMAGServerConfig0.getAccessServicesConfig();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.addAccessServicesConfigItem((AccessServiceConfig) null);
      List<AccessServiceConfig> list0 = oMAGServerConfig0.getAccessServicesConfig();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      VirtualizationConfig virtualizationConfig0 = new VirtualizationConfig();
      VirtualizationConfig virtualizationConfig1 = virtualizationConfig0.putVirtualizationSolutionConfigItem("Ay!T", virtualizationConfig0);
      oMAGServerConfig0.setVirtualizationConfig(virtualizationConfig1);
      // Undeclared exception!
      try { 
        oMAGServerConfig0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      AccessServiceConfig accessServiceConfig0 = new AccessServiceConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.addAccessServicesConfigItem(accessServiceConfig0);
      OMAGServerConfig oMAGServerConfig2 = oMAGServerConfig1.addAuditTrailItem("");
      OMAGServerConfig oMAGServerConfig3 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig4 = oMAGServerConfig3.addAuditTrailItem("");
      DataPlatformConfig dataPlatformConfig0 = new DataPlatformConfig();
      oMAGServerConfig2.setDataPlatformConfig(dataPlatformConfig0);
      OMAGServerConfig oMAGServerConfig5 = oMAGServerConfig4.addAccessServicesConfigItem(accessServiceConfig0);
      boolean boolean0 = oMAGServerConfig5.equals(oMAGServerConfig1);
      assertFalse(oMAGServerConfig4.equals((Object)oMAGServerConfig1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DataEngineProxyConfig dataEngineProxyConfig0 = new DataEngineProxyConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      OMAGServerConfig oMAGServerConfig2 = oMAGServerConfig1.dataEngineProxyConfig(dataEngineProxyConfig0);
      boolean boolean0 = oMAGServerConfig2.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.addAuditTrailItem("*Dn!16QC.tSR");
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      oMAGServerConfig0.setStewardshipServicesConfig(stewardshipServicesConfig0);
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      OpenLineageConfig openLineageConfig0 = new OpenLineageConfig();
      oMAGServerConfig1.setOpenLineageConfig(openLineageConfig0);
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      ConformanceSuiteConfig conformanceSuiteConfig0 = new ConformanceSuiteConfig();
      oMAGServerConfig1.conformanceSuiteConfig(conformanceSuiteConfig0);
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      RepositoryServicesConfig repositoryServicesConfig0 = new RepositoryServicesConfig();
      OMAGServerConfig oMAGServerConfig2 = oMAGServerConfig1.repositoryServicesConfig(repositoryServicesConfig0);
      boolean boolean0 = oMAGServerConfig2.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      EventBusConfig eventBusConfig0 = new EventBusConfig();
      oMAGServerConfig0.setEventBusConfig(eventBusConfig0);
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Connection connection0 = new Connection();
      oMAGServerConfig0.serverSecurityConnection(connection0);
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      oMAGServerConfig0.maxPageSize(integer0);
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.localServerPassword("*Dn!16QC.tSR");
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      OMAGServerConfig oMAGServerConfig2 = oMAGServerConfig1.localServerUserId("C n>Yh,yTdP3wE>f.D");
      boolean boolean0 = oMAGServerConfig2.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.localServerURL("*Dn!16QC.tSR");
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      oMAGServerConfig0.organizationName("");
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      OMAGServerConfig oMAGServerConfig2 = oMAGServerConfig1.localServerType("");
      boolean boolean0 = oMAGServerConfig2.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      assertTrue(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      
      oMAGServerConfig0.localServerName("wB%Ix5Ax=p*][k");
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(oMAGServerConfig1.equals((Object)oMAGServerConfig0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      oMAGServerConfig1.versionId("");
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecuritySyncConfig securitySyncConfig0 = new SecuritySyncConfig();
      boolean boolean0 = oMAGServerConfig0.equals(securitySyncConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig0.equals(oMAGServerConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      AccessServiceConfig accessServiceConfig0 = new AccessServiceConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.addAccessServicesConfigItem(accessServiceConfig0);
      OMAGServerConfig oMAGServerConfig2 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig2.equals(oMAGServerConfig1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      AccessServiceConfig accessServiceConfig0 = new AccessServiceConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.addAccessServicesConfigItem(accessServiceConfig0);
      OMAGServerConfig oMAGServerConfig2 = oMAGServerConfig0.addAccessServicesConfigItem(accessServiceConfig0);
      assertSame(oMAGServerConfig2, oMAGServerConfig1);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.localServerURL("]vU0Q>;4Aq``IW");
      String string0 = oMAGServerConfig1.getLocalServerURL();
      assertEquals("]vU0Q>;4Aq``IW", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DataPlatformConfig dataPlatformConfig0 = new DataPlatformConfig();
      oMAGServerConfig0.dataPlatformConfig(dataPlatformConfig0);
      DataPlatformConfig dataPlatformConfig1 = oMAGServerConfig0.getDataPlatformConfig();
      assertSame(dataPlatformConfig1, dataPlatformConfig0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DiscoveryServerConfig discoveryServerConfig0 = oMAGServerConfig0.getDiscoveryServerConfig();
      assertNull(discoveryServerConfig0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setOrganizationName("<J*#m`XFWr(4AA>m\"xD");
      assertNull(oMAGServerConfig0.getLocalServerName());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      OpenLineageConfig openLineageConfig0 = oMAGServerConfig0.getOpenLineageConfig();
      assertNull(openLineageConfig0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.securityOfficerConfig(securityOfficerConfig0);
      SecurityOfficerConfig securityOfficerConfig1 = oMAGServerConfig1.getSecurityOfficerConfig();
      assertNull(securityOfficerConfig1.getSecurityOfficerServerOutTopicName());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Integer integer0 = oMAGServerConfig0.getMaxPageSize();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      ConformanceSuiteConfig conformanceSuiteConfig0 = oMAGServerConfig0.getConformanceSuiteConfig();
      assertNull(conformanceSuiteConfig0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getVersionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      VirtualizationConfig virtualizationConfig0 = new VirtualizationConfig();
      oMAGServerConfig0.virtualizationConfig(virtualizationConfig0);
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getSuiteFiles();
      oMAGServerConfig0.auditTrail(list0);
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.addAuditTrailItem((String) null);
      assertSame(oMAGServerConfig0, oMAGServerConfig1);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      EventBusConfig eventBusConfig0 = oMAGServerConfig0.getEventBusConfig();
      assertNull(eventBusConfig0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DataPlatformConfig dataPlatformConfig0 = oMAGServerConfig0.getDataPlatformConfig();
      assertNull(dataPlatformConfig0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.hashCode();
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getLocalServerURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setLocalServerType("    repositoryServicesConfig: ");
      assertNull(oMAGServerConfig0.getLocalServerId());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getLocalServerType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.localServerId("");
      String string0 = oMAGServerConfig0.getLocalServerId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setLocalServerId("");
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      StewardshipServicesConfig stewardshipServicesConfig0 = oMAGServerConfig0.getStewardshipServicesConfig();
      assertNull(stewardshipServicesConfig0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      ArrayList<AccessServiceConfig> arrayList0 = new ArrayList<AccessServiceConfig>();
      oMAGServerConfig0.setAccessServicesConfig(arrayList0);
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getLocalServerUserId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setLocalServerUserId("");
      String string0 = oMAGServerConfig0.getLocalServerUserId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.localServerType("");
      String string0 = oMAGServerConfig0.getLocalServerType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      RepositoryServicesConfig repositoryServicesConfig0 = new RepositoryServicesConfig();
      oMAGServerConfig0.repositoryServicesConfig(repositoryServicesConfig0);
      RepositoryServicesConfig repositoryServicesConfig1 = oMAGServerConfig0.getRepositoryServicesConfig();
      assertSame(repositoryServicesConfig1, repositoryServicesConfig0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      ConformanceSuiteConfig conformanceSuiteConfig0 = new ConformanceSuiteConfig();
      oMAGServerConfig0.setConformanceSuiteConfig(conformanceSuiteConfig0);
      assertNull(oMAGServerConfig0.getLocalServerId());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      List<AccessServiceConfig> list0 = oMAGServerConfig0.getAccessServicesConfig();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      oMAGServerConfig0.discoveryServerConfig(discoveryServerConfig0);
      DiscoveryServerConfig discoveryServerConfig1 = oMAGServerConfig0.getDiscoveryServerConfig();
      assertNull(discoveryServerConfig1.getAccessServiceServerName());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DataEngineProxyConfig dataEngineProxyConfig0 = new DataEngineProxyConfig();
      oMAGServerConfig0.setDataEngineProxyConfig(dataEngineProxyConfig0);
      assertNull(oMAGServerConfig0.getVersionId());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setVersionId("\n    ");
      assertEquals("\n    ", oMAGServerConfig0.getVersionId());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getLocalServerName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getExcludes();
      oMAGServerConfig0.setAuditTrail(list0);
      assertNull(oMAGServerConfig0.getLocalServerType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getLocalServerPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      RepositoryServicesConfig repositoryServicesConfig0 = new RepositoryServicesConfig();
      oMAGServerConfig0.setRepositoryServicesConfig(repositoryServicesConfig0);
      assertNull(oMAGServerConfig0.getLocalServerName());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      oMAGServerConfig0.setSecurityOfficerConfig(securityOfficerConfig0);
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DataEngineProxyConfig dataEngineProxyConfig0 = oMAGServerConfig0.getDataEngineProxyConfig();
      assertNull(dataEngineProxyConfig0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Connection connection0 = oMAGServerConfig0.getServerSecurityConnection();
      assertNull(connection0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      EventBusConfig eventBusConfig0 = new EventBusConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.eventBusConfig(eventBusConfig0);
      EventBusConfig eventBusConfig1 = oMAGServerConfig1.getEventBusConfig();
      assertSame(eventBusConfig0, eventBusConfig1);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecuritySyncConfig securitySyncConfig0 = new SecuritySyncConfig();
      oMAGServerConfig0.securitySyncConfig(securitySyncConfig0);
      OMAGServerConfig oMAGServerConfig1 = new OMAGServerConfig();
      boolean boolean0 = oMAGServerConfig1.equals(oMAGServerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecurityOfficerConfig securityOfficerConfig0 = oMAGServerConfig0.getSecurityOfficerConfig();
      assertNull(securityOfficerConfig0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecuritySyncConfig securitySyncConfig0 = oMAGServerConfig0.getSecuritySyncConfig();
      assertNull(securitySyncConfig0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.toString();
      assertEquals("class OMAGServerConfig {\n    versionId: null\n    localServerId: null\n    localServerName: null\n    localServerType: null\n    organizationName: null\n    localServerURL: null\n    localServerUserId: null\n    localServerPassword: null\n    maxPageSize: null\n    serverSecurityConnection: null\n    eventBusConfig: null\n    accessServicesConfig: null\n    repositoryServicesConfig: null\n    conformanceSuiteConfig: null\n    discoveryServerConfig: null\n    openLineageConfig: null\n    stewardshipServicesConfig: null\n    securitySyncConfig: null\n    securityOfficerConfig: null\n    auditTrail: null\n    virtualizationConfig: null\n    dataEngineProxyConfig: null\n    dataPlatformConfig: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      SecuritySyncConfig securitySyncConfig0 = new SecuritySyncConfig();
      oMAGServerConfig0.setSecuritySyncConfig(securitySyncConfig0);
      assertNull(securitySyncConfig0.getSecuritySyncServerType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setMaxPageSize((Integer) null);
      assertNull(oMAGServerConfig0.getLocalServerPassword());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getLocalServerId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setLocalServerPassword("");
      String string0 = oMAGServerConfig0.getLocalServerPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      OMAGServerConfig oMAGServerConfig1 = oMAGServerConfig0.stewardshipServicesConfig(stewardshipServicesConfig0);
      String string0 = oMAGServerConfig1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      Connection connection0 = new Connection();
      oMAGServerConfig0.setServerSecurityConnection(connection0);
      assertNull(connection0.getEncryptedPassword());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      String string0 = oMAGServerConfig0.getOrganizationName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DataEngineProxyConfig dataEngineProxyConfig0 = new DataEngineProxyConfig();
      oMAGServerConfig0.dataEngineProxyConfig(dataEngineProxyConfig0);
      DataEngineProxyConfig dataEngineProxyConfig1 = oMAGServerConfig0.getDataEngineProxyConfig();
      assertNull(dataEngineProxyConfig1.getAccessServiceServerName());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      DiscoveryServerConfig discoveryServerConfig0 = new DiscoveryServerConfig();
      oMAGServerConfig0.setDiscoveryServerConfig(discoveryServerConfig0);
      assertNull(oMAGServerConfig0.getLocalServerId());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      RepositoryServicesConfig repositoryServicesConfig0 = oMAGServerConfig0.getRepositoryServicesConfig();
      assertNull(repositoryServicesConfig0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      oMAGServerConfig0.setLocalServerName("");
      String string0 = oMAGServerConfig0.getLocalServerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      List<String> list0 = oMAGServerConfig0.getAuditTrail();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      OMAGServerConfig oMAGServerConfig0 = new OMAGServerConfig();
      VirtualizationConfig virtualizationConfig0 = oMAGServerConfig0.getVirtualizationConfig();
      assertNull(virtualizationConfig0);
  }
}
