/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:57:09 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.GetMeResponse;
import com.ibm.watson.data.client.model.GetMeResponseAllOf1UserInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GetMeResponse_ESTest extends GetMeResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      GetMeResponseAllOf1UserInfo getMeResponseAllOf1UserInfo0 = new GetMeResponseAllOf1UserInfo();
      GetMeResponse getMeResponse1 = getMeResponse0.userInfo(getMeResponseAllOf1UserInfo0);
      GetMeResponseAllOf1UserInfo getMeResponseAllOf1UserInfo1 = getMeResponse1.getUserInfo();
      assertNull(getMeResponseAllOf1UserInfo1.getDisplayName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      GetMeResponse getMeResponse1 = new GetMeResponse();
      boolean boolean0 = getMeResponse0.equals(getMeResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      getMeResponse0.setMessageCode("q~~");
      GetMeResponse getMeResponse1 = new GetMeResponse();
      boolean boolean0 = getMeResponse0.equals(getMeResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      GetMeResponseAllOf1UserInfo getMeResponseAllOf1UserInfo0 = new GetMeResponseAllOf1UserInfo();
      boolean boolean0 = getMeResponse0.equals(getMeResponseAllOf1UserInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      boolean boolean0 = getMeResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      boolean boolean0 = getMeResponse0.equals(getMeResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      GetMeResponseAllOf1UserInfo getMeResponseAllOf1UserInfo0 = getMeResponse0.getUserInfo();
      assertNull(getMeResponseAllOf1UserInfo0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      String string0 = getMeResponse0.toString();
      assertEquals("class GetMeResponse {\n    messageCode: null\n    message: null\n    userInfo: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      GetMeResponseAllOf1UserInfo getMeResponseAllOf1UserInfo0 = new GetMeResponseAllOf1UserInfo();
      getMeResponse0.setUserInfo(getMeResponseAllOf1UserInfo0);
      assertNull(getMeResponse0.getMessage());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      getMeResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GetMeResponse getMeResponse0 = new GetMeResponse();
      GetMeResponseAllOf1UserInfo getMeResponseAllOf1UserInfo0 = new GetMeResponseAllOf1UserInfo();
      getMeResponse0.userInfo(getMeResponseAllOf1UserInfo0);
      GetMeResponse getMeResponse1 = new GetMeResponse();
      boolean boolean0 = getMeResponse0.equals(getMeResponse1);
      assertFalse(boolean0);
  }
}
