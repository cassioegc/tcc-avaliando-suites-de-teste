/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 16:25:37 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AbstractSearchResultEntity;
import com.ibm.watson.data.client.model.CustomAttribute;
import com.ibm.watson.data.client.model.SearchResultCategories;
import com.ibm.watson.data.client.model.SearchResultMetadata;
import com.ibm.watson.data.client.model.SearchResultRow;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SearchResultRow_ESTest extends SearchResultRow_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.setTenantId("-.!1lBQpeXS^c");
      String string0 = searchResultRow0.getTenantId();
      assertEquals("-.!1lBQpeXS^c", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.setTenantId("");
      String string0 = searchResultRow0.getTenantId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Double double0 = new Double(0.0);
      SearchResultRow searchResultRow1 = searchResultRow0.score(double0);
      Double double1 = searchResultRow1.getScore();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Double double0 = new Double((-2049.7710025593706));
      searchResultRow0.score(double0);
      Double double1 = searchResultRow0.getScore();
      assertEquals((-2049.7710025593706), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Double double0 = new Double(Double.NaN);
      searchResultRow0.score(double0);
      Double double1 = searchResultRow0.getScore();
      assertEquals(Double.NaN, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Double double0 = new Double(769L);
      searchResultRow0.setScore(double0);
      Double double1 = searchResultRow0.getScore();
      assertEquals(769.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.providerTypeId("\n    ");
      String string0 = searchResultRow0.getProviderTypeId();
      assertEquals("\n    ", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.setProviderTypeId("");
      String string0 = searchResultRow0.getProviderTypeId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultMetadata searchResultMetadata0 = new SearchResultMetadata();
      searchResultRow0.metadata(searchResultMetadata0);
      SearchResultMetadata searchResultMetadata1 = searchResultRow0.getMetadata();
      assertSame(searchResultMetadata1, searchResultMetadata0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Long long0 = new Long(0L);
      SearchResultRow searchResultRow1 = searchResultRow0.lastUpdatedAt(long0);
      Long long1 = searchResultRow1.getLastUpdatedAt();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Long long0 = Long.valueOf(769L);
      searchResultRow0.lastUpdatedAt(long0);
      Long long1 = searchResultRow0.getLastUpdatedAt();
      assertEquals(769L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Long long0 = new Long((-1L));
      SearchResultRow searchResultRow1 = searchResultRow0.lastUpdatedAt(long0);
      Long long1 = searchResultRow1.getLastUpdatedAt();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      HashMap<String, AbstractSearchResultEntity> hashMap0 = new HashMap<String, AbstractSearchResultEntity>();
      SearchResultRow searchResultRow1 = searchResultRow0.entity(hashMap0);
      Map<String, AbstractSearchResultEntity> map0 = searchResultRow1.getEntity();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      HashMap<String, AbstractSearchResultEntity> hashMap0 = new HashMap<String, AbstractSearchResultEntity>();
      searchResultRow0.entity(hashMap0);
      AbstractSearchResultEntity abstractSearchResultEntity0 = new AbstractSearchResultEntity();
      hashMap0.put(";HSr/~", abstractSearchResultEntity0);
      Map<String, AbstractSearchResultEntity> map0 = searchResultRow0.getEntity();
      assertEquals(1, map0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Vector<CustomAttribute> vector0 = new Vector<CustomAttribute>();
      SearchResultRow searchResultRow1 = searchResultRow0.customAttributes(vector0);
      List<CustomAttribute> list0 = searchResultRow1.getCustomAttributes();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      CustomAttribute customAttribute0 = new CustomAttribute();
      searchResultRow0.addCustomAttributesItem(customAttribute0);
      List<CustomAttribute> list0 = searchResultRow0.getCustomAttributes();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultCategories searchResultCategories0 = new SearchResultCategories();
      SearchResultRow searchResultRow1 = searchResultRow0.categories(searchResultCategories0);
      SearchResultCategories searchResultCategories1 = searchResultRow1.getCategories();
      assertNull(searchResultCategories1.getPrimaryCategoryGlobalId());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.artifactId("=nP3Khe6ZSf");
      String string0 = searchResultRow0.getArtifactId();
      assertEquals("=nP3Khe6ZSf", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultRow searchResultRow1 = searchResultRow0.artifactId("");
      String string0 = searchResultRow1.getArtifactId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      CustomAttribute customAttribute0 = new CustomAttribute();
      searchResultRow0.addCustomAttributesItem(customAttribute0);
      String string0 = searchResultRow0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultRow searchResultRow1 = new SearchResultRow();
      assertTrue(searchResultRow1.equals((Object)searchResultRow0));
      
      Vector<CustomAttribute> vector0 = new Vector<CustomAttribute>();
      searchResultRow0.setCustomAttributes(vector0);
      boolean boolean0 = searchResultRow1.equals(searchResultRow0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultRow searchResultRow1 = new SearchResultRow();
      assertTrue(searchResultRow1.equals((Object)searchResultRow0));
      
      Double double0 = new Double((-84.45452623704352));
      searchResultRow0.setScore(double0);
      boolean boolean0 = searchResultRow0.equals(searchResultRow1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultRow searchResultRow1 = new SearchResultRow();
      assertTrue(searchResultRow1.equals((Object)searchResultRow0));
      
      searchResultRow1.tenantId("p.C]I_ i}JeAP}3");
      boolean boolean0 = searchResultRow0.equals(searchResultRow1);
      assertFalse(searchResultRow1.equals((Object)searchResultRow0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultRow searchResultRow1 = new SearchResultRow();
      SearchResultRow searchResultRow2 = searchResultRow1.providerTypeId("}-");
      boolean boolean0 = searchResultRow2.equals(searchResultRow0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultRow searchResultRow1 = new SearchResultRow();
      boolean boolean0 = searchResultRow0.equals(searchResultRow1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      boolean boolean0 = searchResultRow0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      boolean boolean0 = searchResultRow0.equals(searchResultRow0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      boolean boolean0 = searchResultRow0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      CustomAttribute customAttribute0 = new CustomAttribute();
      SearchResultRow searchResultRow1 = searchResultRow0.addCustomAttributesItem(customAttribute0);
      SearchResultRow searchResultRow2 = searchResultRow1.addCustomAttributesItem(customAttribute0);
      assertSame(searchResultRow2, searchResultRow1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      HashMap<String, AbstractSearchResultEntity> hashMap0 = new HashMap<String, AbstractSearchResultEntity>();
      searchResultRow0.setEntity(hashMap0);
      SearchResultRow searchResultRow1 = new SearchResultRow();
      boolean boolean0 = searchResultRow0.equals(searchResultRow1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Long long0 = new Long(1L);
      searchResultRow0.setLastUpdatedAt(long0);
      assertNull(searchResultRow0.getTenantId());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      String string0 = searchResultRow0.getTenantId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultCategories searchResultCategories0 = new SearchResultCategories();
      searchResultRow0.categories(searchResultCategories0);
      SearchResultRow searchResultRow1 = new SearchResultRow();
      boolean boolean0 = searchResultRow0.equals(searchResultRow1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultCategories searchResultCategories0 = new SearchResultCategories();
      searchResultRow0.setCategories(searchResultCategories0);
      assertNull(searchResultCategories0.getPrimaryCategoryGlobalId());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Long long0 = new Long(0L);
      searchResultRow0.lastUpdatedAt(long0);
      SearchResultRow searchResultRow1 = new SearchResultRow();
      boolean boolean0 = searchResultRow0.equals(searchResultRow1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultMetadata searchResultMetadata0 = new SearchResultMetadata();
      searchResultRow0.setMetadata(searchResultMetadata0);
      assertNull(searchResultRow0.getProviderTypeId());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      String string0 = searchResultRow0.getProviderTypeId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultMetadata searchResultMetadata0 = searchResultRow0.getMetadata();
      assertNull(searchResultMetadata0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      List<CustomAttribute> list0 = searchResultRow0.getCustomAttributes();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.setArtifactId("<");
      assertNull(searchResultRow0.getLastUpdatedAt());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.hashCode();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      searchResultRow0.artifactId("R|be9");
      SearchResultRow searchResultRow1 = new SearchResultRow();
      boolean boolean0 = searchResultRow0.equals(searchResultRow1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      String string0 = searchResultRow0.getArtifactId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Map<String, AbstractSearchResultEntity> map0 = searchResultRow0.getEntity();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Long long0 = searchResultRow0.getLastUpdatedAt();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultCategories searchResultCategories0 = searchResultRow0.getCategories();
      assertNull(searchResultCategories0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      SearchResultMetadata searchResultMetadata0 = new SearchResultMetadata();
      SearchResultRow searchResultRow1 = searchResultRow0.metadata(searchResultMetadata0);
      SearchResultRow searchResultRow2 = new SearchResultRow();
      boolean boolean0 = searchResultRow2.equals(searchResultRow1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      SearchResultRow searchResultRow0 = new SearchResultRow();
      Double double0 = searchResultRow0.getScore();
      assertNull(double0);
  }
}
