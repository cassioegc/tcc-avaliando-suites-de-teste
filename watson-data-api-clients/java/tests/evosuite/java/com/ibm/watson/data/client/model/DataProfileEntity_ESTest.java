/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 20:51:10 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AttributeClassificationOverride;
import com.ibm.watson.data.client.model.DataClassificationOverride;
import com.ibm.watson.data.client.model.DataProfile;
import com.ibm.watson.data.client.model.DataProfileEntity;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataProfileEntity_ESTest extends DataProfileEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      HashMap<String, DataProfile> hashMap0 = new HashMap<String, DataProfile>();
      dataProfileEntity0.setProfiles(hashMap0);
      Map<String, DataProfile> map0 = dataProfileEntity0.getProfiles();
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      HashMap<String, DataProfile> hashMap0 = new HashMap<String, DataProfile>();
      DataProfile dataProfile0 = new DataProfile();
      hashMap0.put((String) null, dataProfile0);
      dataProfileEntity0.setProfiles(hashMap0);
      Map<String, DataProfile> map0 = dataProfileEntity0.getProfiles();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Stack<DataClassificationOverride> stack0 = new Stack<DataClassificationOverride>();
      dataProfileEntity0.setDataClassificationManual(stack0);
      List<DataClassificationOverride> list0 = dataProfileEntity0.getDataClassificationManual();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Stack<DataClassificationOverride> stack0 = new Stack<DataClassificationOverride>();
      DataClassificationOverride dataClassificationOverride0 = new DataClassificationOverride();
      stack0.add(dataClassificationOverride0);
      dataProfileEntity0.setDataClassificationManual(stack0);
      List<DataClassificationOverride> list0 = dataProfileEntity0.getDataClassificationManual();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Stack<AttributeClassificationOverride> stack0 = new Stack<AttributeClassificationOverride>();
      dataProfileEntity0.setAttributeClassificationManual(stack0);
      List<AttributeClassificationOverride> list0 = dataProfileEntity0.getAttributeClassificationManual();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      ArrayList<AttributeClassificationOverride> arrayList0 = new ArrayList<AttributeClassificationOverride>(0);
      AttributeClassificationOverride attributeClassificationOverride0 = new AttributeClassificationOverride();
      arrayList0.add(attributeClassificationOverride0);
      dataProfileEntity0.setAttributeClassificationManual(arrayList0);
      List<AttributeClassificationOverride> list0 = dataProfileEntity0.getAttributeClassificationManual();
      assertTrue(list0.contains(attributeClassificationOverride0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("heL5 <");
      dataProfileEntity0.setAttributeClasses(arrayList0);
      List<String> list0 = dataProfileEntity0.getAttributeClasses();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      LinkedList<AttributeClassificationOverride> linkedList0 = new LinkedList<AttributeClassificationOverride>();
      dataProfileEntity0.setAttributeClassificationManual(linkedList0);
      DataProfileEntity dataProfileEntity1 = new DataProfileEntity();
      boolean boolean0 = dataProfileEntity0.equals(dataProfileEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Vector<java.util.Locale.LanguageRange> vector0 = new Vector<java.util.Locale.LanguageRange>();
      java.util.Locale.FilteringMode locale_FilteringMode0 = java.util.Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) vector0, (Collection<String>) null, locale_FilteringMode0);
      dataProfileEntity0.setAttributeClasses(list0);
      DataProfileEntity dataProfileEntity1 = new DataProfileEntity();
      boolean boolean0 = dataProfileEntity0.equals(dataProfileEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      DataProfileEntity dataProfileEntity1 = new DataProfileEntity();
      boolean boolean0 = dataProfileEntity0.equals(dataProfileEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      boolean boolean0 = dataProfileEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      boolean boolean0 = dataProfileEntity0.equals(dataProfileEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Object object0 = new Object();
      boolean boolean0 = dataProfileEntity0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      HashMap<String, DataProfile> hashMap0 = new HashMap<String, DataProfile>();
      dataProfileEntity0.setProfiles(hashMap0);
      DataProfileEntity dataProfileEntity1 = new DataProfileEntity();
      boolean boolean0 = dataProfileEntity0.equals(dataProfileEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      String string0 = dataProfileEntity0.toString();
      assertEquals("class DataProfileEntity {\n    profiles: null\n    attributeClasses: null\n    attributeClassificationManual: null\n    dataClassificationManual: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Stack<String> stack0 = new Stack<String>();
      dataProfileEntity0.setAttributeClasses(stack0);
      List<String> list0 = dataProfileEntity0.getAttributeClasses();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      dataProfileEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      List<AttributeClassificationOverride> list0 = dataProfileEntity0.getAttributeClassificationManual();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      List<DataClassificationOverride> list0 = dataProfileEntity0.getDataClassificationManual();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Map<String, DataProfile> map0 = dataProfileEntity0.getProfiles();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      Stack<DataClassificationOverride> stack0 = new Stack<DataClassificationOverride>();
      dataProfileEntity0.setDataClassificationManual(stack0);
      DataProfileEntity dataProfileEntity1 = new DataProfileEntity();
      boolean boolean0 = dataProfileEntity0.equals(dataProfileEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DataProfileEntity dataProfileEntity0 = new DataProfileEntity();
      List<String> list0 = dataProfileEntity0.getAttributeClasses();
      assertNull(list0);
  }
}
