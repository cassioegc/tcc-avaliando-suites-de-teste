/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:33:50 GMT 2021
 */

package com.ibm.watson.data.client.model.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.enums.StreamsFlowState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StreamsFlowState_ESTest extends StreamsFlowState_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StreamsFlowState streamsFlowState0 = StreamsFlowState.fromValue("running");
      assertEquals(StreamsFlowState.RUNNING, streamsFlowState0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StreamsFlowState[] streamsFlowStateArray0 = StreamsFlowState.values();
      assertEquals(4, streamsFlowStateArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      StreamsFlowState streamsFlowState0 = StreamsFlowState.valueOf("RUNNING");
      assertEquals("running", streamsFlowState0.getValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StreamsFlowState streamsFlowState0 = StreamsFlowState.fromValue("stopping");
      assertEquals(StreamsFlowState.STOPPING, streamsFlowState0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        StreamsFlowState.fromValue("O9xO3B1n+;1");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value 'O9xO3B1n+;1'
         //
         verifyException("com.ibm.watson.data.client.model.enums.StreamsFlowState", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      StreamsFlowState streamsFlowState0 = StreamsFlowState.STOPPING;
      String string0 = streamsFlowState0.toString();
      assertEquals("stopping", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      StreamsFlowState streamsFlowState0 = StreamsFlowState.STOPPING;
      String string0 = streamsFlowState0.getValue();
      assertEquals("stopping", string0);
  }
}
