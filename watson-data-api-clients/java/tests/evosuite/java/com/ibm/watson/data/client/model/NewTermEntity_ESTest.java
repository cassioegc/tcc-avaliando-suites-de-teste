/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:10:15 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.NewRelationship;
import com.ibm.watson.data.client.model.NewTermEntity;
import com.ibm.watson.data.client.model.enums.GlossaryObjectState;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewTermEntity_ESTest extends NewTermEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      newTermEntity0.workflowState("Cancelled existing channel from pool: {}");
      String string0 = newTermEntity0.getWorkflowState();
      assertEquals("Cancelled existing channel from pool: {}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      newTermEntity0.workflowState("");
      String string0 = newTermEntity0.getWorkflowState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      NewTermEntity newTermEntity1 = new NewTermEntity();
      assertTrue(newTermEntity1.equals((Object)newTermEntity0));
      
      NewTermEntity newTermEntity2 = newTermEntity1.workflowState("/2((&Y}");
      boolean boolean0 = newTermEntity0.equals(newTermEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      GlossaryObjectState glossaryObjectState0 = GlossaryObjectState.PUBLISHED_HISTORY;
      newTermEntity0.setState(glossaryObjectState0);
      NewTermEntity newTermEntity1 = new NewTermEntity();
      boolean boolean0 = newTermEntity0.equals(newTermEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      NewRelationship newRelationship0 = new NewRelationship();
      boolean boolean0 = newTermEntity0.equals(newRelationship0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      NewTermEntity newTermEntity1 = new NewTermEntity();
      boolean boolean0 = newTermEntity0.equals(newTermEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      boolean boolean0 = newTermEntity0.equals(newTermEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      boolean boolean0 = newTermEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      String string0 = newTermEntity0.toString();
      assertEquals("class NewTermEntity {\n    longDescription: null\n    state: null\n    customAttributes: null\n    name: null\n    shortDescription: null\n    effectiveStartDate: null\n    effectiveEndDate: null\n    tags: null\n    stewardIds: null\n    parentCategory: null\n    categories: null\n    abbreviations: null\n    importSourceCreatedBy: null\n    importSourceCreatedOn: null\n    importSourceUsage: null\n    example: null\n    relatedTermRelationships: null\n    isATypeOfTerms: null\n    hasTypeTerms: null\n    isOfTerms: null\n    hasTerms: null\n    synonymTerms: null\n    relatedTerms: null\n    replacesTerms: null\n    replacedByTerms: null\n    dataClasses: null\n    classifications: null\n    workflowState: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      newTermEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      newTermEntity0.setWorkflowState("class NewTermEntity {\n    longDescription: null\n    state: null\n    customAttributes: null\n    name: null\n    shortDescription: null\n    effectiveStartDate: null\n    effectiveEndDate: null\n    tags: null\n    stewardIds: null\n    parentCategory: null\n    categories: null\n    abbreviations: null\n    importSourceCreatedBy: null\n    importSourceCreatedOn: null\n    importSourceUsage: null\n    example: null\n    relatedTermRelationships: null\n    isATypeOfTerms: null\n    hasTypeTerms: null\n    isOfTerms: null\n    hasTerms: null\n    synonymTerms: null\n    relatedTerms: null\n    replacesTerms: null\n    replacedByTerms: null\n    dataClasses: null\n    classifications: null\n    workflowState: null\n}");
      assertNull(newTermEntity0.getExample());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NewTermEntity newTermEntity0 = new NewTermEntity();
      String string0 = newTermEntity0.getWorkflowState();
      assertNull(string0);
  }
}
