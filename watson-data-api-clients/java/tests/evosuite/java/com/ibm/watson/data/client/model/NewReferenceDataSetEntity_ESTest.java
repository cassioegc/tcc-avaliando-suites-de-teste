/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:15:53 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.NewReferenceDataSetEntity;
import com.ibm.watson.data.client.model.NewRelationship;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NewReferenceDataSetEntity_ESTest extends NewReferenceDataSetEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      Stack<NewRelationship> stack0 = new Stack<NewRelationship>();
      newReferenceDataSetEntity0.setCategories(stack0);
      List<NewRelationship> list0 = newReferenceDataSetEntity0.getCategories();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      NewRelationship newRelationship0 = new NewRelationship();
      newReferenceDataSetEntity0.addCategoriesItem(newRelationship0);
      List<NewRelationship> list0 = newReferenceDataSetEntity0.getCategories();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      NewReferenceDataSetEntity newReferenceDataSetEntity1 = new NewReferenceDataSetEntity();
      boolean boolean0 = newReferenceDataSetEntity0.equals(newReferenceDataSetEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      NewRelationship newRelationship0 = new NewRelationship();
      NewReferenceDataSetEntity newReferenceDataSetEntity1 = new NewReferenceDataSetEntity();
      newReferenceDataSetEntity1.addClassificationsItem(newRelationship0);
      boolean boolean0 = newReferenceDataSetEntity0.equals(newReferenceDataSetEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      boolean boolean0 = newReferenceDataSetEntity0.equals("class NewReferenceDataSetEntity {\n    name: null\n    longDescription: null\n    effectiveStartDate: null\n    effectiveEndDate: null\n    state: null\n    tags: null\n    stewardIds: null\n    type: null\n    terms: null\n    classifications: null\n    rdsValues: null\n    parentCategory: null\n    categories: java.util.ArrayList@0000000003\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      boolean boolean0 = newReferenceDataSetEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      boolean boolean0 = newReferenceDataSetEntity0.equals(newReferenceDataSetEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      NewRelationship newRelationship0 = new NewRelationship();
      newReferenceDataSetEntity0.addCategoriesItem(newRelationship0);
      NewReferenceDataSetEntity newReferenceDataSetEntity1 = new NewReferenceDataSetEntity();
      boolean boolean0 = newReferenceDataSetEntity0.equals(newReferenceDataSetEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      String string0 = newReferenceDataSetEntity0.toString();
      assertEquals("class NewReferenceDataSetEntity {\n    name: null\n    longDescription: null\n    effectiveStartDate: null\n    effectiveEndDate: null\n    state: null\n    tags: null\n    stewardIds: null\n    type: null\n    terms: null\n    classifications: null\n    rdsValues: null\n    parentCategory: null\n    categories: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      Stack<NewRelationship> stack0 = new Stack<NewRelationship>();
      NewReferenceDataSetEntity newReferenceDataSetEntity1 = newReferenceDataSetEntity0.categories(stack0);
      newReferenceDataSetEntity1.addCategoriesItem((NewRelationship) null);
      assertFalse(stack0.empty());
      assertFalse(stack0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      newReferenceDataSetEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NewReferenceDataSetEntity newReferenceDataSetEntity0 = new NewReferenceDataSetEntity();
      List<NewRelationship> list0 = newReferenceDataSetEntity0.getCategories();
      newReferenceDataSetEntity0.setCategories(list0);
      assertNull(newReferenceDataSetEntity0.getName());
  }
}
