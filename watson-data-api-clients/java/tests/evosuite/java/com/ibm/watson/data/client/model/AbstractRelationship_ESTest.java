/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:17:50 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AbstractRelationship;
import com.ibm.watson.data.client.model.AbstractRelationshipEntity;
import com.ibm.watson.data.client.model.GlossaryObjectMetadata;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AbstractRelationship_ESTest extends AbstractRelationship_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      AbstractRelationshipEntity abstractRelationshipEntity0 = new AbstractRelationshipEntity();
      abstractRelationship0.entity(abstractRelationshipEntity0);
      AbstractRelationshipEntity abstractRelationshipEntity1 = abstractRelationship0.getEntity();
      assertNull(abstractRelationshipEntity1.getSourceType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      AbstractRelationshipEntity abstractRelationshipEntity0 = new AbstractRelationshipEntity();
      abstractRelationship0.entity(abstractRelationshipEntity0);
      String string0 = abstractRelationship0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      AbstractRelationship abstractRelationship1 = new AbstractRelationship();
      boolean boolean0 = abstractRelationship1.equals(abstractRelationship0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      AbstractRelationship abstractRelationship1 = new AbstractRelationship();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      abstractRelationship0.metadata(glossaryObjectMetadata0);
      boolean boolean0 = abstractRelationship0.equals(abstractRelationship1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      boolean boolean0 = abstractRelationship0.equals(glossaryObjectMetadata0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      boolean boolean0 = abstractRelationship0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      boolean boolean0 = abstractRelationship0.equals(abstractRelationship0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      GlossaryObjectMetadata glossaryObjectMetadata0 = abstractRelationship0.getMetadata();
      assertNull(glossaryObjectMetadata0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      abstractRelationship0.setMetadata((GlossaryObjectMetadata) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      AbstractRelationshipEntity abstractRelationshipEntity0 = new AbstractRelationshipEntity();
      abstractRelationship0.setEntity(abstractRelationshipEntity0);
      assertNull(abstractRelationshipEntity0.getRelationshipType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      AbstractRelationship abstractRelationship1 = abstractRelationship0.metadata(glossaryObjectMetadata0);
      GlossaryObjectMetadata glossaryObjectMetadata1 = abstractRelationship1.getMetadata();
      assertSame(glossaryObjectMetadata0, glossaryObjectMetadata1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      AbstractRelationshipEntity abstractRelationshipEntity0 = new AbstractRelationshipEntity();
      abstractRelationship0.entity(abstractRelationshipEntity0);
      AbstractRelationship abstractRelationship1 = new AbstractRelationship();
      boolean boolean0 = abstractRelationship0.equals(abstractRelationship1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      abstractRelationship0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AbstractRelationship abstractRelationship0 = new AbstractRelationship();
      AbstractRelationshipEntity abstractRelationshipEntity0 = abstractRelationship0.getEntity();
      assertNull(abstractRelationshipEntity0);
  }
}
