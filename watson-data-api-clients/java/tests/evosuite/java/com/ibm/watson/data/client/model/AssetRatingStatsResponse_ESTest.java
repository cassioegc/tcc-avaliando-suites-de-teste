/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:38:49 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AssetRatingCount;
import com.ibm.watson.data.client.model.AssetRatingStatsResponse;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AssetRatingStatsResponse_ESTest extends AssetRatingStatsResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      Long long0 = new Long(0L);
      assetRatingStatsResponse0.revisionId(long0);
      Long long1 = assetRatingStatsResponse0.getRevisionId();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      Long long0 = new Long((-1771L));
      AssetRatingStatsResponse assetRatingStatsResponse1 = assetRatingStatsResponse0.revisionId(long0);
      Long long1 = assetRatingStatsResponse1.getRevisionId();
      assertEquals((-1771L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      Long long0 = new Long(1712L);
      assetRatingStatsResponse0.setRevisionId(long0);
      Long long1 = assetRatingStatsResponse0.getRevisionId();
      assertEquals(1712L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      assetRatingStatsResponse0.setAssetId("GLl]EjO=gvN8");
      String string0 = assetRatingStatsResponse0.getAssetId();
      assertEquals("GLl]EjO=gvN8", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      AssetRatingStatsResponse assetRatingStatsResponse1 = assetRatingStatsResponse0.assetId("");
      String string0 = assetRatingStatsResponse1.getAssetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      AssetRatingStatsResponse assetRatingStatsResponse1 = new AssetRatingStatsResponse();
      assertTrue(assetRatingStatsResponse1.equals((Object)assetRatingStatsResponse0));
      
      LinkedList<AssetRatingCount> linkedList0 = new LinkedList<AssetRatingCount>();
      AssetRatingStatsResponse assetRatingStatsResponse2 = assetRatingStatsResponse1.stats(linkedList0);
      Long long0 = new Long(1L);
      AssetRatingStatsResponse assetRatingStatsResponse3 = assetRatingStatsResponse2.revisionId(long0);
      AssetRatingStatsResponse assetRatingStatsResponse4 = assetRatingStatsResponse0.revisionId(long0);
      boolean boolean0 = assetRatingStatsResponse3.equals(assetRatingStatsResponse4);
      assertFalse(assetRatingStatsResponse1.equals((Object)assetRatingStatsResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      AssetRatingStatsResponse assetRatingStatsResponse1 = new AssetRatingStatsResponse();
      boolean boolean0 = assetRatingStatsResponse1.equals(assetRatingStatsResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      AssetRatingStatsResponse assetRatingStatsResponse1 = new AssetRatingStatsResponse();
      assetRatingStatsResponse1.assetId("class AssetRatingStatsResponse {\n");
      boolean boolean0 = assetRatingStatsResponse1.equals(assetRatingStatsResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      boolean boolean0 = assetRatingStatsResponse0.equals("YD-Q,/$81GZE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      boolean boolean0 = assetRatingStatsResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      boolean boolean0 = assetRatingStatsResponse0.equals(assetRatingStatsResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      AssetRatingStatsResponse assetRatingStatsResponse1 = new AssetRatingStatsResponse();
      assertTrue(assetRatingStatsResponse1.equals((Object)assetRatingStatsResponse0));
      
      Long long0 = new Long(0L);
      assetRatingStatsResponse1.setRevisionId(long0);
      boolean boolean0 = assetRatingStatsResponse1.equals(assetRatingStatsResponse0);
      assertFalse(assetRatingStatsResponse1.equals((Object)assetRatingStatsResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      AssetRatingCount assetRatingCount0 = new AssetRatingCount();
      AssetRatingStatsResponse assetRatingStatsResponse1 = assetRatingStatsResponse0.addStatsItem(assetRatingCount0);
      List<AssetRatingCount> list0 = assetRatingStatsResponse1.getStats();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      AssetRatingCount assetRatingCount0 = new AssetRatingCount();
      LinkedList<AssetRatingCount> linkedList0 = new LinkedList<AssetRatingCount>();
      assetRatingStatsResponse0.stats(linkedList0);
      AssetRatingStatsResponse assetRatingStatsResponse1 = assetRatingStatsResponse0.addStatsItem(assetRatingCount0);
      assertSame(assetRatingStatsResponse1, assetRatingStatsResponse0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      Long long0 = assetRatingStatsResponse0.getRevisionId();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      LinkedList<AssetRatingCount> linkedList0 = new LinkedList<AssetRatingCount>();
      AssetRatingStatsResponse assetRatingStatsResponse1 = assetRatingStatsResponse0.stats(linkedList0);
      String string0 = assetRatingStatsResponse1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      LinkedList<AssetRatingCount> linkedList0 = new LinkedList<AssetRatingCount>();
      assetRatingStatsResponse0.setStats(linkedList0);
      List<AssetRatingCount> list0 = assetRatingStatsResponse0.getStats();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      List<AssetRatingCount> list0 = assetRatingStatsResponse0.getStats();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      String string0 = assetRatingStatsResponse0.getAssetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AssetRatingStatsResponse assetRatingStatsResponse0 = new AssetRatingStatsResponse();
      assetRatingStatsResponse0.hashCode();
  }
}
