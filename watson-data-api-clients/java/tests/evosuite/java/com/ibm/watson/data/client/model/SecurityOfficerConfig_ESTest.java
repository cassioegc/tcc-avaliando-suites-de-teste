/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:08:49 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.Connection;
import com.ibm.watson.data.client.model.SecurityOfficerConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SecurityOfficerConfig_ESTest extends SecurityOfficerConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.setSecurityOfficerServerOutTopicName("}3");
      String string0 = securityOfficerConfig0.getSecurityOfficerServerOutTopicName();
      assertEquals("}3", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.setSecurityOfficerServerOutTopicName("");
      String string0 = securityOfficerConfig0.getSecurityOfficerServerOutTopicName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.securityOfficerServerOutTopic(connection0);
      Connection connection1 = securityOfficerConfig1.getSecurityOfficerServerOutTopic();
      assertSame(connection0, connection1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.securityOfficerServerInTopicName("9-Xu");
      String string0 = securityOfficerConfig0.getSecurityOfficerServerInTopicName();
      assertEquals("9-Xu", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.setSecurityOfficerServerInTopicName("");
      String string0 = securityOfficerConfig0.getSecurityOfficerServerInTopicName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.securityOfficerServerInTopic(connection0);
      Connection connection1 = securityOfficerConfig1.getSecurityOfficerServerInTopic();
      assertNull(connection1.getQualifiedName());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.accessServiceServerName(">vQ]U7obSJC");
      String string0 = securityOfficerConfig1.getAccessServiceServerName();
      assertEquals(">vQ]U7obSJC", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.accessServiceServerName("");
      String string0 = securityOfficerConfig1.getAccessServiceServerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.accessServiceRootURL("\n");
      String string0 = securityOfficerConfig1.getAccessServiceRootURL();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.accessServiceRootURL("");
      String string0 = securityOfficerConfig1.getAccessServiceRootURL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      connection0.putSecuredPropertiesItem("\"OLL%<|@I2G3gE]l", connection0);
      securityOfficerConfig0.securityOfficerServerInTopic(connection0);
      // Undeclared exception!
      try { 
        securityOfficerConfig0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.securityOfficerServerInTopic(connection0);
      String string0 = securityOfficerConfig1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.setSecurityOfficerServerOutTopicName("DiX2o_Jp1JhWv)?Z");
      SecurityOfficerConfig securityOfficerConfig1 = new SecurityOfficerConfig();
      boolean boolean0 = securityOfficerConfig1.equals(securityOfficerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = new SecurityOfficerConfig();
      boolean boolean0 = securityOfficerConfig1.equals(securityOfficerConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = new SecurityOfficerConfig();
      assertTrue(securityOfficerConfig1.equals((Object)securityOfficerConfig0));
      
      securityOfficerConfig1.setSecurityOfficerServerInTopicName("");
      boolean boolean0 = securityOfficerConfig0.equals(securityOfficerConfig1);
      assertFalse(securityOfficerConfig1.equals((Object)securityOfficerConfig0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = new SecurityOfficerConfig();
      assertTrue(securityOfficerConfig1.equals((Object)securityOfficerConfig0));
      
      securityOfficerConfig0.accessServiceServerName("");
      boolean boolean0 = securityOfficerConfig0.equals(securityOfficerConfig1);
      assertFalse(securityOfficerConfig1.equals((Object)securityOfficerConfig0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.accessServiceRootURL("E<s7IzKMIc=dT}Hh");
      SecurityOfficerConfig securityOfficerConfig1 = new SecurityOfficerConfig();
      boolean boolean0 = securityOfficerConfig0.equals(securityOfficerConfig1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Object object0 = new Object();
      boolean boolean0 = securityOfficerConfig0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      boolean boolean0 = securityOfficerConfig0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      boolean boolean0 = securityOfficerConfig0.equals(securityOfficerConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      String string0 = securityOfficerConfig0.getSecurityOfficerServerInTopicName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      securityOfficerConfig0.setSecurityOfficerServerInTopic(connection0);
      assertNull(connection0.getClearPassword());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.hashCode();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.securityOfficerServerInTopic(connection0);
      SecurityOfficerConfig securityOfficerConfig2 = new SecurityOfficerConfig();
      boolean boolean0 = securityOfficerConfig1.equals(securityOfficerConfig2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      securityOfficerConfig0.setSecurityOfficerServerOutTopic(connection0);
      assertNull(connection0.getClearPassword());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      String string0 = securityOfficerConfig0.getAccessServiceServerName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      SecurityOfficerConfig securityOfficerConfig1 = securityOfficerConfig0.securityOfficerServerOutTopicName("E<s7IzKMIc=dT}Hh");
      assertEquals("E<s7IzKMIc=dT}Hh", securityOfficerConfig1.getSecurityOfficerServerOutTopicName());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      String string0 = securityOfficerConfig0.getAccessServiceRootURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = new Connection();
      securityOfficerConfig0.securityOfficerServerOutTopic(connection0);
      SecurityOfficerConfig securityOfficerConfig1 = new SecurityOfficerConfig();
      boolean boolean0 = securityOfficerConfig1.equals(securityOfficerConfig0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.setAccessServiceRootURL((String) null);
      assertNull(securityOfficerConfig0.getAccessServiceRootURL());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = securityOfficerConfig0.getSecurityOfficerServerInTopic();
      assertNull(connection0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      String string0 = securityOfficerConfig0.getSecurityOfficerServerOutTopicName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      securityOfficerConfig0.setAccessServiceServerName("D_UK$w\"jF2^Z`=7n%}");
      assertNull(securityOfficerConfig0.getSecurityOfficerServerInTopicName());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      SecurityOfficerConfig securityOfficerConfig0 = new SecurityOfficerConfig();
      Connection connection0 = securityOfficerConfig0.getSecurityOfficerServerOutTopic();
      assertNull(connection0);
  }
}
