/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:00:50 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.BluemixCOSCredentials;
import com.ibm.watson.data.client.model.BluemixCredentialsForCOS;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BluemixCredentialsForCOS_ESTest extends BluemixCredentialsForCOS_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCredentialsForCOS0.viewer(bluemixCOSCredentials0);
      BluemixCOSCredentials bluemixCOSCredentials1 = bluemixCredentialsForCOS0.getViewer();
      assertNull(bluemixCOSCredentials1.getAccessKeyId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCredentialsForCOS bluemixCredentialsForCOS1 = bluemixCredentialsForCOS0.admin(bluemixCOSCredentials0);
      BluemixCOSCredentials bluemixCOSCredentials1 = bluemixCredentialsForCOS1.getAdmin();
      assertNull(bluemixCOSCredentials1.getSecretAccessKey());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCredentialsForCOS bluemixCredentialsForCOS1 = bluemixCredentialsForCOS0.viewer(bluemixCOSCredentials0);
      String string0 = bluemixCredentialsForCOS1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCredentialsForCOS0.viewer(bluemixCOSCredentials0);
      BluemixCredentialsForCOS bluemixCredentialsForCOS1 = bluemixCredentialsForCOS0.editor(bluemixCOSCredentials0);
      BluemixCredentialsForCOS bluemixCredentialsForCOS2 = new BluemixCredentialsForCOS();
      BluemixCredentialsForCOS bluemixCredentialsForCOS3 = bluemixCredentialsForCOS2.viewer(bluemixCOSCredentials0);
      boolean boolean0 = bluemixCredentialsForCOS1.equals(bluemixCredentialsForCOS3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCredentialsForCOS bluemixCredentialsForCOS1 = bluemixCredentialsForCOS0.viewer(bluemixCOSCredentials0);
      BluemixCredentialsForCOS bluemixCredentialsForCOS2 = new BluemixCredentialsForCOS();
      assertFalse(bluemixCredentialsForCOS2.equals((Object)bluemixCredentialsForCOS1));
      
      BluemixCredentialsForCOS bluemixCredentialsForCOS3 = bluemixCredentialsForCOS2.viewer(bluemixCOSCredentials0);
      boolean boolean0 = bluemixCredentialsForCOS1.equals(bluemixCredentialsForCOS3);
      assertTrue(bluemixCredentialsForCOS2.equals((Object)bluemixCredentialsForCOS0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      boolean boolean0 = bluemixCredentialsForCOS0.equals("A_9");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      boolean boolean0 = bluemixCredentialsForCOS0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      boolean boolean0 = bluemixCredentialsForCOS0.equals(bluemixCredentialsForCOS0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCredentialsForCOS0.viewer(bluemixCOSCredentials0);
      BluemixCredentialsForCOS bluemixCredentialsForCOS1 = new BluemixCredentialsForCOS();
      boolean boolean0 = bluemixCredentialsForCOS0.equals(bluemixCredentialsForCOS1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCredentialsForCOS0.setAdmin(bluemixCOSCredentials0);
      assertNull(bluemixCOSCredentials0.getAccessKeyId());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCredentialsForCOS0.setViewer(bluemixCOSCredentials0);
      assertNull(bluemixCOSCredentials0.getServiceId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = bluemixCredentialsForCOS0.getEditor();
      assertNull(bluemixCOSCredentials0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      bluemixCredentialsForCOS0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      bluemixCredentialsForCOS0.setEditor(bluemixCOSCredentials0);
      BluemixCOSCredentials bluemixCOSCredentials1 = bluemixCredentialsForCOS0.getEditor();
      assertSame(bluemixCOSCredentials1, bluemixCOSCredentials0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = new BluemixCOSCredentials();
      BluemixCredentialsForCOS bluemixCredentialsForCOS1 = bluemixCredentialsForCOS0.admin(bluemixCOSCredentials0);
      BluemixCredentialsForCOS bluemixCredentialsForCOS2 = new BluemixCredentialsForCOS();
      boolean boolean0 = bluemixCredentialsForCOS1.equals(bluemixCredentialsForCOS2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = bluemixCredentialsForCOS0.getViewer();
      assertNull(bluemixCOSCredentials0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BluemixCredentialsForCOS bluemixCredentialsForCOS0 = new BluemixCredentialsForCOS();
      BluemixCOSCredentials bluemixCOSCredentials0 = bluemixCredentialsForCOS0.getAdmin();
      assertNull(bluemixCOSCredentials0);
  }
}
