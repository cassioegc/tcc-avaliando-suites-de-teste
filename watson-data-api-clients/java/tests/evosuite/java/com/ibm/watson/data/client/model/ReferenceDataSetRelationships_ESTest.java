/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:19:59 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.NewRelationship;
import com.ibm.watson.data.client.model.ReferenceDataSetRelationships;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.internal.DynamicGraph;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReferenceDataSetRelationships_ESTest extends ReferenceDataSetRelationships_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      Stack<NewRelationship> stack0 = new Stack<NewRelationship>();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.terms(stack0);
      List<NewRelationship> list0 = referenceDataSetRelationships1.getTerms();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      referenceDataSetRelationships0.addTermsItem(newRelationship0);
      List<NewRelationship> list0 = referenceDataSetRelationships0.getTerms();
      assertTrue(list0.contains(newRelationship0));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      Vector<NewRelationship> vector0 = new Vector<NewRelationship>();
      referenceDataSetRelationships0.classifications(vector0);
      List<NewRelationship> list0 = referenceDataSetRelationships0.getClassifications();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      ArrayList<NewRelationship> arrayList0 = new ArrayList<NewRelationship>();
      referenceDataSetRelationships0.categories(arrayList0);
      List<NewRelationship> list0 = referenceDataSetRelationships0.getCategories();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.addTermsItem(newRelationship0);
      String string0 = referenceDataSetRelationships1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = new ReferenceDataSetRelationships();
      assertTrue(referenceDataSetRelationships1.equals((Object)referenceDataSetRelationships0));
      
      NewRelationship newRelationship0 = new NewRelationship();
      ReferenceDataSetRelationships referenceDataSetRelationships2 = referenceDataSetRelationships0.addCategoriesItem(newRelationship0);
      boolean boolean0 = referenceDataSetRelationships1.equals(referenceDataSetRelationships2);
      assertFalse(referenceDataSetRelationships1.equals((Object)referenceDataSetRelationships0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = new ReferenceDataSetRelationships();
      boolean boolean0 = referenceDataSetRelationships1.equals(referenceDataSetRelationships0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      Vector<NewRelationship> vector0 = new Vector<NewRelationship>();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.classifications(vector0);
      ReferenceDataSetRelationships referenceDataSetRelationships2 = new ReferenceDataSetRelationships();
      boolean boolean0 = referenceDataSetRelationships1.equals(referenceDataSetRelationships2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      referenceDataSetRelationships0.addTermsItem(newRelationship0);
      ReferenceDataSetRelationships referenceDataSetRelationships1 = new ReferenceDataSetRelationships();
      ReferenceDataSetRelationships referenceDataSetRelationships2 = referenceDataSetRelationships1.categories((List<NewRelationship>) null);
      boolean boolean0 = referenceDataSetRelationships2.equals(referenceDataSetRelationships0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      boolean boolean0 = referenceDataSetRelationships0.equals(newRelationship0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      boolean boolean0 = referenceDataSetRelationships0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      boolean boolean0 = referenceDataSetRelationships0.equals(referenceDataSetRelationships0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = new ReferenceDataSetRelationships();
      assertTrue(referenceDataSetRelationships1.equals((Object)referenceDataSetRelationships0));
      
      ReferenceDataSetRelationships referenceDataSetRelationships2 = referenceDataSetRelationships1.parentCategory(newRelationship0);
      boolean boolean0 = referenceDataSetRelationships2.equals(referenceDataSetRelationships0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      referenceDataSetRelationships0.addCategoriesItem(newRelationship0);
      List<NewRelationship> list0 = referenceDataSetRelationships0.getCategories();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      DynamicGraph<NewRelationship> dynamicGraph0 = new DynamicGraph<NewRelationship>();
      List<NewRelationship> list0 = dynamicGraph0.getDependenciesFor((NewRelationship) null);
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.categories(list0);
      referenceDataSetRelationships1.addCategoriesItem((NewRelationship) null);
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.addClassificationsItem(newRelationship0);
      List<NewRelationship> list0 = referenceDataSetRelationships1.getClassifications();
      assertTrue(list0.contains(newRelationship0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      Vector<NewRelationship> vector0 = new Vector<NewRelationship>();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.classifications(vector0);
      NewRelationship newRelationship0 = new NewRelationship();
      referenceDataSetRelationships1.addClassificationsItem(newRelationship0);
      assertTrue(vector0.contains(newRelationship0));
      assertEquals(1, vector0.size());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      referenceDataSetRelationships0.addTermsItem(newRelationship0);
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.addTermsItem(newRelationship0);
      assertSame(referenceDataSetRelationships1, referenceDataSetRelationships0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      referenceDataSetRelationships0.setParentCategory(newRelationship0);
      assertNull(newRelationship0.getId());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      referenceDataSetRelationships0.setTerms((List<NewRelationship>) null);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      referenceDataSetRelationships0.setClassifications((List<NewRelationship>) null);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      List<NewRelationship> list0 = referenceDataSetRelationships0.getCategories();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = referenceDataSetRelationships0.getParentCategory();
      assertNull(newRelationship0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      List<NewRelationship> list0 = referenceDataSetRelationships0.getClassifications();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      NewRelationship newRelationship0 = new NewRelationship();
      ReferenceDataSetRelationships referenceDataSetRelationships1 = referenceDataSetRelationships0.parentCategory(newRelationship0);
      NewRelationship newRelationship1 = referenceDataSetRelationships1.getParentCategory();
      assertSame(newRelationship0, newRelationship1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      referenceDataSetRelationships0.setCategories((List<NewRelationship>) null);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      referenceDataSetRelationships0.hashCode();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ReferenceDataSetRelationships referenceDataSetRelationships0 = new ReferenceDataSetRelationships();
      List<NewRelationship> list0 = referenceDataSetRelationships0.getTerms();
      assertNull(list0);
  }
}
