/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:52:06 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.ibm.watson.data.client.model.FormPropertyInput;
import io.netty.util.concurrent.Future;
import io.netty.util.concurrent.NonStickyEventExecutorGroup;
import io.netty.util.concurrent.ScheduledFuture;
import io.netty.util.concurrent.UnorderedThreadPoolEventExecutor;
import java.time.Instant;
import java.util.Date;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.mockserver.scheduler.Scheduler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FormPropertyInput_ESTest extends FormPropertyInput_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      FormPropertyInput formPropertyInput1 = formPropertyInput0.value("/x`!%?SMx$$");
      String string0 = formPropertyInput1.getValue();
      assertEquals("/x`!%?SMx$$", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      formPropertyInput0.value("");
      String string0 = formPropertyInput0.getValue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Long long0 = new Long(0L);
      formPropertyInput0.longValue(long0);
      Long long1 = formPropertyInput0.getLongValue();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Long long0 = new Long(524L);
      formPropertyInput0.setLongValue(long0);
      Long long1 = formPropertyInput0.getLongValue();
      assertEquals(524L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Long long0 = new Long((-1L));
      FormPropertyInput formPropertyInput1 = formPropertyInput0.longValue(long0);
      Long long1 = formPropertyInput1.getLongValue();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      formPropertyInput0.setId("null");
      String string0 = formPropertyInput0.getId();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      FormPropertyInput formPropertyInput1 = formPropertyInput0.id("");
      String string0 = formPropertyInput1.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      MockDate mockDate0 = new MockDate((-1L));
      formPropertyInput0.setDateValue(mockDate0);
      Date date0 = formPropertyInput0.getDateValue();
      assertEquals("Wed Dec 31 23:59:59 GMT 1969", date0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      formPropertyInput0.value("K*8 h");
      String string0 = formPropertyInput0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Long long0 = Long.valueOf(128L);
      FormPropertyInput formPropertyInput1 = formPropertyInput0.longValue(long0);
      FormPropertyInput formPropertyInput2 = new FormPropertyInput();
      boolean boolean0 = formPropertyInput1.equals(formPropertyInput2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      FormPropertyInput formPropertyInput1 = new FormPropertyInput();
      assertTrue(formPropertyInput1.equals((Object)formPropertyInput0));
      
      formPropertyInput0.id("/x`!%?SMx$$");
      boolean boolean0 = formPropertyInput1.equals(formPropertyInput0);
      assertFalse(formPropertyInput1.equals((Object)formPropertyInput0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Scheduler.SchedulerThreadFactory scheduler_SchedulerThreadFactory0 = new Scheduler.SchedulerThreadFactory("/x`!%?SMx$$");
      UnorderedThreadPoolEventExecutor unorderedThreadPoolEventExecutor0 = new UnorderedThreadPoolEventExecutor(3211, scheduler_SchedulerThreadFactory0);
      NonStickyEventExecutorGroup nonStickyEventExecutorGroup0 = new NonStickyEventExecutorGroup(unorderedThreadPoolEventExecutor0);
      Callable<Future<Object>> callable0 = (Callable<Future<Object>>) mock(Callable.class, new ViolatedAssumptionAnswer());
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      ScheduledFuture<Future<Object>> scheduledFuture0 = nonStickyEventExecutorGroup0.schedule(callable0, (long) (-1), timeUnit0);
      boolean boolean0 = formPropertyInput0.equals(scheduledFuture0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      FormPropertyInput formPropertyInput1 = new FormPropertyInput();
      boolean boolean0 = formPropertyInput1.equals(formPropertyInput0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      boolean boolean0 = formPropertyInput0.equals(formPropertyInput0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      boolean boolean0 = formPropertyInput0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      String string0 = formPropertyInput0.getValue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      MockDate mockDate0 = new MockDate((-1L));
      formPropertyInput0.setDateValue(mockDate0);
      FormPropertyInput formPropertyInput1 = new FormPropertyInput();
      boolean boolean0 = formPropertyInput1.equals(formPropertyInput0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Date date0 = formPropertyInput0.getDateValue();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      String string0 = formPropertyInput0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      formPropertyInput0.hashCode();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Instant instant0 = MockInstant.ofEpochSecond((-1996L), (-1996L));
      Date date0 = Date.from(instant0);
      FormPropertyInput formPropertyInput1 = formPropertyInput0.dateValue(date0);
      assertNull(formPropertyInput1.getLongValue());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      formPropertyInput0.setValue("    dateValue: ");
      FormPropertyInput formPropertyInput1 = new FormPropertyInput();
      boolean boolean0 = formPropertyInput0.equals(formPropertyInput1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FormPropertyInput formPropertyInput0 = new FormPropertyInput();
      Long long0 = formPropertyInput0.getLongValue();
      assertNull(long0);
  }
}
