/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:07:09 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.RelationshipCreateResponseIds;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RelationshipCreateResponseIds_ESTest extends RelationshipCreateResponseIds_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      relationshipCreateResponseIds0.setTargetId("");
      String string0 = relationshipCreateResponseIds0.getTargetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      relationshipCreateResponseIds0.setRelationshipId("READ_ONLY");
      String string0 = relationshipCreateResponseIds0.getRelationshipId();
      assertEquals("READ_ONLY", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      relationshipCreateResponseIds0.targetId("\n   U ");
      String string0 = relationshipCreateResponseIds0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      relationshipCreateResponseIds0.targetId("\n   U ");
      RelationshipCreateResponseIds relationshipCreateResponseIds1 = new RelationshipCreateResponseIds();
      boolean boolean0 = relationshipCreateResponseIds0.equals(relationshipCreateResponseIds1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      RelationshipCreateResponseIds relationshipCreateResponseIds1 = new RelationshipCreateResponseIds();
      RelationshipCreateResponseIds relationshipCreateResponseIds2 = relationshipCreateResponseIds1.relationshipId("MI:CIiXm\"");
      boolean boolean0 = relationshipCreateResponseIds0.equals(relationshipCreateResponseIds2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      RelationshipCreateResponseIds relationshipCreateResponseIds1 = new RelationshipCreateResponseIds();
      boolean boolean0 = relationshipCreateResponseIds0.equals(relationshipCreateResponseIds1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      boolean boolean0 = relationshipCreateResponseIds0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      boolean boolean0 = relationshipCreateResponseIds0.equals(relationshipCreateResponseIds0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      boolean boolean0 = relationshipCreateResponseIds0.equals("\n   U ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      String string0 = relationshipCreateResponseIds0.getTargetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      RelationshipCreateResponseIds relationshipCreateResponseIds1 = relationshipCreateResponseIds0.relationshipId("");
      String string0 = relationshipCreateResponseIds1.getRelationshipId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      relationshipCreateResponseIds0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      relationshipCreateResponseIds0.setTargetId("_A%d*");
      String string0 = relationshipCreateResponseIds0.getTargetId();
      assertEquals("_A%d*", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RelationshipCreateResponseIds relationshipCreateResponseIds0 = new RelationshipCreateResponseIds();
      String string0 = relationshipCreateResponseIds0.getRelationshipId();
      assertNull(string0);
  }
}
