/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 16:59:49 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.DataSchemaFieldMetadata;
import com.ibm.watson.data.client.model.DataSchemaFieldRange;
import com.ibm.watson.data.client.model.enums.DataSchemaFieldMeasure;
import com.ibm.watson.data.client.model.enums.DataSchemaFieldModelingRole;
import java.util.ArrayList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataSchemaFieldMetadata_ESTest extends DataSchemaFieldMetadata_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getIncludedGroups();
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = dataSchemaFieldMetadata0.values(list0);
      List<String> list1 = dataSchemaFieldMetadata1.getValues();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.add("AX");
      dataSchemaFieldMetadata0.setValues(arrayList0);
      List<String> list0 = dataSchemaFieldMetadata0.getValues();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldMeasure dataSchemaFieldMeasure0 = DataSchemaFieldMeasure.DISCRETE;
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = dataSchemaFieldMetadata0.measure(dataSchemaFieldMeasure0);
      DataSchemaFieldMeasure dataSchemaFieldMeasure1 = dataSchemaFieldMetadata1.getMeasure();
      assertEquals("discrete", dataSchemaFieldMeasure1.getValue());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = new Integer(0);
      dataSchemaFieldMetadata0.setMaxLength(integer0);
      Integer integer1 = dataSchemaFieldMetadata0.getMaxLength();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      dataSchemaFieldMetadata0.setMaxLength(integer0);
      Integer integer1 = dataSchemaFieldMetadata0.getMaxLength();
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.description("Handling completed");
      String string0 = dataSchemaFieldMetadata0.getDescription();
      assertEquals("Handling completed", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.description("");
      String string0 = dataSchemaFieldMetadata0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = new Integer(0);
      dataSchemaFieldMetadata0.setDecimalScale(integer0);
      Integer integer1 = dataSchemaFieldMetadata0.getDecimalScale();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = new Integer((-1362));
      dataSchemaFieldMetadata0.setDecimalScale(integer0);
      Integer integer1 = dataSchemaFieldMetadata0.getDecimalScale();
      assertEquals((-1362), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = new Integer(0);
      dataSchemaFieldMetadata0.decimalPrecision(integer0);
      Integer integer1 = dataSchemaFieldMetadata0.getDecimalPrecision();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      dataSchemaFieldMetadata0.decimalPrecision(integer0);
      Integer integer1 = dataSchemaFieldMetadata0.getDecimalPrecision();
      assertEquals(10, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = new Integer((-2578));
      dataSchemaFieldMetadata0.decimalPrecision(integer0);
      Integer integer1 = dataSchemaFieldMetadata0.getDecimalPrecision();
      assertEquals((-2578), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.description("");
      String string0 = dataSchemaFieldMetadata0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = dataSchemaFieldMetadata0.description("");
      DataSchemaFieldMetadata dataSchemaFieldMetadata2 = new DataSchemaFieldMetadata();
      boolean boolean0 = dataSchemaFieldMetadata1.equals(dataSchemaFieldMetadata2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = new DataSchemaFieldMetadata();
      boolean boolean0 = dataSchemaFieldMetadata0.equals(dataSchemaFieldMetadata1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      boolean boolean0 = dataSchemaFieldMetadata0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      boolean boolean0 = dataSchemaFieldMetadata0.equals(dataSchemaFieldMetadata0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      boolean boolean0 = dataSchemaFieldMetadata0.equals("null");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      List<String> list0 = dataSchemaFieldMetadata0.getValues();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      XmlSuite xmlSuite0 = new XmlSuite();
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = dataSchemaFieldMetadata0.maxLength(xmlSuite0.DEFAULT_VERBOSE);
      assertNull(dataSchemaFieldMetadata1.getMeasure());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = dataSchemaFieldMetadata0.getDecimalScale();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = dataSchemaFieldMetadata0.range(dataSchemaFieldRange0);
      DataSchemaFieldRange dataSchemaFieldRange1 = dataSchemaFieldMetadata1.getRange();
      assertNull(dataSchemaFieldRange1.getMin());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      String string0 = dataSchemaFieldMetadata0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      XmlSuite xmlSuite0 = new XmlSuite();
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = dataSchemaFieldMetadata0.decimalScale(xmlSuite0.DEFAULT_THREAD_COUNT);
      Integer integer0 = dataSchemaFieldMetadata1.getDecimalScale();
      assertEquals(5, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.setDecimalPrecision((Integer) null);
      assertNull(dataSchemaFieldMetadata0.getDescription());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = dataSchemaFieldMetadata0.getDecimalPrecision();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      dataSchemaFieldMetadata0.setRange(dataSchemaFieldRange0);
      assertNull(dataSchemaFieldRange0.getMax());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldModelingRole dataSchemaFieldModelingRole0 = DataSchemaFieldModelingRole.PARTITION;
      dataSchemaFieldMetadata0.setModelingRole(dataSchemaFieldModelingRole0);
      DataSchemaFieldModelingRole dataSchemaFieldModelingRole1 = dataSchemaFieldMetadata0.getModelingRole();
      assertEquals("partition", dataSchemaFieldModelingRole1.getValue());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldMeasure dataSchemaFieldMeasure0 = DataSchemaFieldMeasure.DEFAULT;
      dataSchemaFieldMetadata0.setMeasure(dataSchemaFieldMeasure0);
      assertNull(dataSchemaFieldMetadata0.getMaxLength());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.hashCode();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldRange dataSchemaFieldRange0 = dataSchemaFieldMetadata0.getRange();
      assertNull(dataSchemaFieldRange0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.getModelingRole();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.getMeasure();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      Integer integer0 = dataSchemaFieldMetadata0.getMaxLength();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      dataSchemaFieldMetadata0.setDescription("    range: ");
      assertNull(dataSchemaFieldMetadata0.getModelingRole());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DataSchemaFieldMetadata dataSchemaFieldMetadata0 = new DataSchemaFieldMetadata();
      DataSchemaFieldModelingRole dataSchemaFieldModelingRole0 = DataSchemaFieldModelingRole.BOTH;
      DataSchemaFieldMetadata dataSchemaFieldMetadata1 = dataSchemaFieldMetadata0.modelingRole(dataSchemaFieldModelingRole0);
      assertSame(dataSchemaFieldMetadata0, dataSchemaFieldMetadata1);
  }
}
