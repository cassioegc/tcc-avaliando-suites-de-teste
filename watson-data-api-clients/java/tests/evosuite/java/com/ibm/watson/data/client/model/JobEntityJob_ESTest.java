/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 16:13:19 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.ibm.watson.data.client.model.JobEntityJob;
import com.ibm.watson.data.client.model.JobEntityJobScheduleInfo;
import com.ibm.watson.data.client.model.JobRuntimeConfiguration;
import java.util.Comparator;
import java.util.Date;
import java.util.Vector;
import java.util.concurrent.LinkedBlockingQueue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.testng.IClassListener;
import org.testng.IInvokedMethodListener;
import org.testng.ITestNGMethod;
import org.testng.ITestRunnerFactory;
import org.testng.SuiteRunner;
import org.testng.TestRunner;
import org.testng.internal.Configuration;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JobEntityJob_ESTest extends JobEntityJob_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.setSchedule(" $4*=`+KqOVh1b~");
      String string0 = jobEntityJob0.getSchedule();
      assertEquals(" $4*=`+KqOVh1b~", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.schedule("");
      String string0 = jobEntityJob0.getSchedule();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      MockDate mockDate0 = new MockDate(2048, 2048, 0, 0, 2048);
      JobEntityJob jobEntityJob1 = jobEntityJob0.lastRunTime(mockDate0);
      Date date0 = jobEntityJob1.getLastRunTime();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      Integer integer0 = new Integer(0);
      jobEntityJob0.lastRunStatusTimestamp(integer0);
      Integer integer1 = jobEntityJob0.getLastRunStatusTimestamp();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      jobEntityJob0.lastRunStatusTimestamp(integer0);
      Integer integer1 = jobEntityJob0.getLastRunStatusTimestamp();
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      Integer integer0 = new Integer((-2334));
      jobEntityJob0.lastRunStatusTimestamp(integer0);
      Integer integer1 = jobEntityJob0.getLastRunStatusTimestamp();
      assertEquals((-2334), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.setLastRunStatus("f_'6?;vT1");
      String string0 = jobEntityJob0.getLastRunStatus();
      assertEquals("f_'6?;vT1", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJob jobEntityJob1 = jobEntityJob0.lastRunStatus("");
      String string0 = jobEntityJob1.getLastRunStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.lastRunInitiator("reactor.core.publisher.FluxElapsed");
      String string0 = jobEntityJob0.getLastRunInitiator();
      assertEquals("reactor.core.publisher.FluxElapsed", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJob jobEntityJob1 = jobEntityJob0.lastRunInitiator("");
      String string0 = jobEntityJob1.getLastRunInitiator();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobEntityJob0._configuration(jobRuntimeConfiguration0);
      JobRuntimeConfiguration jobRuntimeConfiguration1 = jobEntityJob0.getConfiguration();
      assertNull(jobRuntimeConfiguration1.getDeploymentJobDefinitionId());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJob jobEntityJob1 = jobEntityJob0.assetRefType("The mapper returned a null Publisher.");
      String string0 = jobEntityJob1.getAssetRefType();
      assertEquals("The mapper returned a null Publisher.", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.setAssetRefType("");
      String string0 = jobEntityJob0.getAssetRefType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.assetRefName("");
      String string0 = jobEntityJob0.getAssetRefName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.assetRef("AJ*7ggk!tpJ>rs");
      String string0 = jobEntityJob0.getAssetRef();
      assertEquals("AJ*7ggk!tpJ>rs", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.setAssetRef("");
      String string0 = jobEntityJob0.getAssetRef();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobEntityJob0._configuration(jobRuntimeConfiguration0);
      String string0 = jobEntityJob0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.setSchedule("e27v0=}iKQu");
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      assertTrue(jobEntityJob1.equals((Object)jobEntityJob0));
      
      jobEntityJob1.lastRunInitiator("w<|");
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJob jobEntityJob1 = jobEntityJob0.lastRunStatus("e27v0=}iKQu");
      JobEntityJob jobEntityJob2 = new JobEntityJob();
      boolean boolean0 = jobEntityJob1.equals(jobEntityJob2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.setAssetRefName("XmaNy&:,<");
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJobScheduleInfo0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      jobEntityJob0.setLastRunStatusTimestamp(integer0);
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      jobEntityJob0.setScheduleInfo(jobEntityJobScheduleInfo0);
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo1 = jobEntityJob0.getScheduleInfo();
      assertNull(jobEntityJobScheduleInfo1.getRepeat());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobEntityJob0._configuration(jobRuntimeConfiguration0);
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = jobEntityJob0.getConfiguration();
      assertNull(jobRuntimeConfiguration0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      String string0 = jobEntityJob0.getAssetRefName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.hashCode();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      String string0 = jobEntityJob0.getSchedule();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobEntityJob0.setConfiguration(jobRuntimeConfiguration0);
      assertNull(jobEntityJob0.getLastRunStatus());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.assetRefType("NJ9$qr4Iz");
      jobEntityJob0.setAssetRefName("Mm!Ny&:,<");
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      jobEntityJob1.setAssetRefName("Mm!Ny&:,<");
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      Configuration configuration0 = new Configuration();
      XmlSuite xmlSuite0 = new XmlSuite();
      Comparator<ITestNGMethod> comparator0 = (Comparator<ITestNGMethod>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      SuiteRunner suiteRunner0 = new SuiteRunner(configuration0, xmlSuite0, "{(xy/\"{iRVTS SBNY", (ITestRunnerFactory) null, comparator0);
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, (int) xmlSuite0.DEFAULT_DATA_PROVIDER_THREAD_COUNT);
      LinkedBlockingQueue<IInvokedMethodListener> linkedBlockingQueue0 = new LinkedBlockingQueue<IInvokedMethodListener>();
      Vector<IClassListener> vector0 = new Vector<IClassListener>();
      TestRunner testRunner0 = new TestRunner(configuration0, suiteRunner0, xmlTest0, (boolean) xmlSuite0.DEFAULT_SKIP_FAILED_INVOCATION_COUNTS, linkedBlockingQueue0, vector0);
      Date date0 = testRunner0.getStartDate();
      jobEntityJob0.setLastRunTime(date0);
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      String string0 = jobEntityJob0.getAssetRef();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      String string0 = jobEntityJob0.getAssetRefType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.assetRef("Mm!Ny&:,<");
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = new JobEntityJobScheduleInfo();
      jobEntityJob0.scheduleInfo(jobEntityJobScheduleInfo0);
      JobEntityJob jobEntityJob1 = new JobEntityJob();
      boolean boolean0 = jobEntityJob0.equals(jobEntityJob1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.setLastRunInitiator("reactor.core.publisher.MonoSingle$SingleSubscriber");
      assertNull(jobEntityJob0.getLastRunStatus());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      Date date0 = jobEntityJob0.getLastRunTime();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      Integer integer0 = jobEntityJob0.getLastRunStatusTimestamp();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      jobEntityJob0.assetRefName("class JobEntityJob {\n    assetRef: null\n    assetRefName: null\n    assetRefType: null\n    lastRunStatus: null\n    lastRunStatusTimestamp: null\n    lastRunTime: null\n    lastRunInitiator: java.lang.String@0000000002\n    schedule: null\n    scheduleInfo: null\n    _configuration: null\n}");
      String string0 = jobEntityJob0.getAssetRefName();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      JobEntityJobScheduleInfo jobEntityJobScheduleInfo0 = jobEntityJob0.getScheduleInfo();
      assertNull(jobEntityJobScheduleInfo0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      String string0 = jobEntityJob0.getLastRunStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      JobEntityJob jobEntityJob0 = new JobEntityJob();
      String string0 = jobEntityJob0.getLastRunInitiator();
      assertNull(string0);
  }
}
