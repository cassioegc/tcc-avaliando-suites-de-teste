/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:54:06 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CatalogBucket;
import com.ibm.watson.data.client.model.CatalogEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CatalogEntity_ESTest extends CatalogEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.spaceId("A$DY");
      String string0 = catalogEntity0.getSpaceId();
      assertEquals("A$DY", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogEntity catalogEntity1 = catalogEntity0.spaceId("");
      String string0 = catalogEntity1.getSpaceId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.samlInstanceName("8@kmJ.;;{cpmiZ]6|w:");
      String string0 = catalogEntity0.getSamlInstanceName();
      assertEquals("8@kmJ.;;{cpmiZ]6|w:", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.samlInstanceName("");
      String string0 = catalogEntity0.getSamlInstanceName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.projectId("    resourceInstanceId: ");
      String string0 = catalogEntity0.getProjectId();
      assertEquals("    resourceInstanceId: ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setName("    bucket: ");
      String string0 = catalogEntity0.getName();
      assertEquals("    bucket: ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.name("");
      String string0 = catalogEntity0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = Boolean.TRUE;
      catalogEntity0.isGoverned(boolean0);
      Boolean boolean1 = catalogEntity0.getIsGoverned();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = new Boolean("U");
      CatalogEntity catalogEntity1 = catalogEntity0.isGoverned(boolean0);
      Boolean boolean1 = catalogEntity1.getIsGoverned();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setGenerator(" 7PYa@Z\" @4w");
      String string0 = catalogEntity0.getGenerator();
      assertEquals(" 7PYa@Z\" @4w", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.generator("");
      String string0 = catalogEntity0.getGenerator();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setDescription("");
      String string0 = catalogEntity0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Long long0 = Long.getLong("    resourceInstanceId: ", 0L);
      catalogEntity0.capacityLimit(long0);
      Long long1 = catalogEntity0.getCapacityLimit();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Long long0 = new Long(1L);
      catalogEntity0.capacityLimit(long0);
      Long long1 = catalogEntity0.getCapacityLimit();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Long long0 = new Long((-1L));
      catalogEntity0.capacityLimit(long0);
      Long long1 = catalogEntity0.getCapacityLimit();
      assertEquals((-1L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogBucket catalogBucket0 = new CatalogBucket();
      CatalogEntity catalogEntity1 = catalogEntity0.bucket(catalogBucket0);
      CatalogBucket catalogBucket1 = catalogEntity1.getBucket();
      assertNull(catalogBucket1.getBucketLocation());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.bssAccountId("");
      String string0 = catalogEntity0.getBssAccountId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = Boolean.valueOf(true);
      catalogEntity0.autoProfiling(boolean0);
      Boolean boolean1 = catalogEntity0.getAutoProfiling();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = Boolean.valueOf((String) null);
      catalogEntity0.autoProfiling(boolean0);
      Boolean boolean1 = catalogEntity0.getAutoProfiling();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = Boolean.valueOf(true);
      CatalogEntity catalogEntity1 = catalogEntity0.autoProfiling(boolean0);
      String string0 = catalogEntity1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.samlInstanceName("CkZwtK^!:~<wQ^9=");
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean0 = catalogEntity1.equals(catalogEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = Boolean.valueOf(true);
      catalogEntity0.autoProfiling(boolean0);
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean1 = catalogEntity1.equals(catalogEntity0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = Boolean.valueOf(false);
      CatalogEntity catalogEntity1 = new CatalogEntity();
      assertTrue(catalogEntity1.equals((Object)catalogEntity0));
      
      catalogEntity1.isGoverned(boolean0);
      boolean boolean1 = catalogEntity1.equals(catalogEntity0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogEntity catalogEntity1 = new CatalogEntity();
      assertTrue(catalogEntity1.equals((Object)catalogEntity0));
      
      Long long0 = new Long(1L);
      catalogEntity1.capacityLimit(long0);
      boolean boolean0 = catalogEntity1.equals(catalogEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.bssAccountId("NON_ABSENT");
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals(catalogEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.spaceId("NON_AB@LbSE");
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals(catalogEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.projectId("com.fasterxml.jackson.annotation.JsonProperty$Access");
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals(catalogEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogEntity catalogEntity1 = new CatalogEntity();
      assertTrue(catalogEntity1.equals((Object)catalogEntity0));
      
      catalogEntity1.generator("NON_AB@LbSE");
      boolean boolean0 = catalogEntity0.equals(catalogEntity1);
      assertFalse(catalogEntity1.equals((Object)catalogEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogEntity catalogEntity1 = catalogEntity0.description("xc");
      CatalogEntity catalogEntity2 = new CatalogEntity();
      boolean boolean0 = catalogEntity1.equals(catalogEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.name("F_}e q");
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals(catalogEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals("F_}e q");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals(catalogEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals(catalogEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      boolean boolean0 = catalogEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setProjectId("");
      assertNull(catalogEntity0.getName());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setSpaceId("READ_WRITE");
      assertNull(catalogEntity0.getName());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      String string0 = catalogEntity0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = catalogEntity0.getAutoProfiling();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      String string0 = catalogEntity0.getProjectId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      String string0 = catalogEntity0.getSamlInstanceName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Boolean boolean0 = catalogEntity0.getIsGoverned();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogBucket catalogBucket0 = new CatalogBucket();
      catalogEntity0.setBucket(catalogBucket0);
      assertNull(catalogBucket0.getEndpointUrl());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Long long0 = catalogEntity0.getCapacityLimit();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogBucket catalogBucket0 = new CatalogBucket();
      catalogEntity0.bucket(catalogBucket0);
      CatalogEntity catalogEntity1 = new CatalogEntity();
      boolean boolean0 = catalogEntity1.equals(catalogEntity0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setAutoProfiling((Boolean) null);
      assertNull(catalogEntity0.getDescription());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      String string0 = catalogEntity0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      String string0 = catalogEntity0.getBssAccountId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setSamlInstanceName("&G-F,N+x])`c,");
      assertEquals("&G-F,N+x])`c,", catalogEntity0.getSamlInstanceName());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      String string0 = catalogEntity0.getSpaceId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.projectId("");
      String string0 = catalogEntity0.getProjectId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setBssAccountId("{,J^");
      String string0 = catalogEntity0.getBssAccountId();
      assertEquals("{,J^", string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setDescription("|,czpxeD1`");
      String string0 = catalogEntity0.getDescription();
      assertEquals("|,czpxeD1`", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      Long long0 = new Long(21L);
      catalogEntity0.setCapacityLimit(long0);
      assertNull(catalogEntity0.getIsGoverned());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      CatalogBucket catalogBucket0 = catalogEntity0.getBucket();
      assertNull(catalogBucket0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      String string0 = catalogEntity0.getGenerator();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CatalogEntity catalogEntity0 = new CatalogEntity();
      catalogEntity0.setIsGoverned((Boolean) null);
      assertNull(catalogEntity0.getGenerator());
  }
}
