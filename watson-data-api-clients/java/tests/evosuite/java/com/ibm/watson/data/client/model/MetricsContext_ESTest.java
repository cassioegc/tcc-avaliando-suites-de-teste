/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 14:52:37 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.BinaryClassification;
import com.ibm.watson.data.client.model.FeatureImportance;
import com.ibm.watson.data.client.model.IntermediateModel;
import com.ibm.watson.data.client.model.MetricsContext;
import com.ibm.watson.data.client.model.MultiClassClassification;
import com.ibm.watson.data.client.model.StepInfo;
import java.util.ArrayList;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MetricsContext_ESTest extends MetricsContext_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = metricsContext0.schema("null");
      String string0 = metricsContext1.getSchema();
      assertEquals("null", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.phase("source(");
      String string0 = metricsContext0.getPhase();
      assertEquals("source(", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      ArrayList<MultiClassClassification> arrayList0 = new ArrayList<MultiClassClassification>();
      metricsContext0.multiClassClassification(arrayList0);
      List<MultiClassClassification> list0 = metricsContext0.getMultiClassClassification();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      Vector<FeatureImportance> vector0 = new Vector<FeatureImportance>();
      metricsContext0.featuresImportance(vector0);
      List<FeatureImportance> list0 = metricsContext0.getFeaturesImportance();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      FeatureImportance featureImportance0 = new FeatureImportance();
      metricsContext0.addFeaturesImportanceItem(featureImportance0);
      List<FeatureImportance> list0 = metricsContext0.getFeaturesImportance();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      Stack<java.util.Locale.LanguageRange> stack0 = new Stack<java.util.Locale.LanguageRange>();
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) stack0, (Collection<String>) null);
      metricsContext0.estimators(list0);
      List<String> list1 = metricsContext0.getEstimators();
      assertSame(list1, list0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.deploymentId("bind");
      String string0 = metricsContext0.getDeploymentId();
      assertEquals("bind", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.deploymentId("");
      String string0 = metricsContext0.getDeploymentId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      Stack<java.util.Locale.LanguageRange> stack0 = new Stack<java.util.Locale.LanguageRange>();
      List<String> list0 = java.util.Locale.filterTags((List<java.util.Locale.LanguageRange>) stack0, (Collection<String>) null);
      metricsContext0.classes(list0);
      List<String> list1 = metricsContext0.getClasses();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = metricsContext0.addClassesItem("J\"# \"s5=ltYqi-M|");
      List<String> list0 = metricsContext0.getClasses();
      MetricsContext metricsContext2 = metricsContext1.estimators(list0);
      List<String> list1 = metricsContext2.getEstimators();
      assertTrue(list1.contains("J\"# \"s5=ltYqi-M|"));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      BinaryClassification binaryClassification0 = new BinaryClassification();
      metricsContext0.binaryClassfication(binaryClassification0);
      BinaryClassification binaryClassification1 = metricsContext0.getBinaryClassfication();
      assertSame(binaryClassification1, binaryClassification0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, (int) xmlSuite0.DEFAULT_DATA_PROVIDER_THREAD_COUNT);
      List<String> list0 = xmlTest0.getIncludedGroups();
      metricsContext0.estimators(list0);
      // Undeclared exception!
      try { 
        metricsContext0.addEstimatorsItem("10(Mjbr.O");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      metricsContext0.addEstimatorsItem("F}1ggDD@klA");
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(metricsContext1.equals((Object)metricsContext0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      metricsContext0.setSchema("");
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      FeatureImportance featureImportance0 = new FeatureImportance();
      MetricsContext metricsContext2 = metricsContext0.addFeaturesImportanceItem(featureImportance0);
      boolean boolean0 = metricsContext1.equals(metricsContext2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      metricsContext1.addMultiClassClassificationItem(multiClassClassification0);
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      BinaryClassification binaryClassification0 = new BinaryClassification();
      metricsContext0.binaryClassfication(binaryClassification0);
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      Stack<String> stack0 = new Stack<String>();
      metricsContext0.classes(stack0);
      MetricsContext metricsContext1 = new MetricsContext();
      boolean boolean0 = metricsContext0.equals(metricsContext1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      StepInfo stepInfo0 = new StepInfo();
      metricsContext0.step(stepInfo0);
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(metricsContext1.equals((Object)metricsContext0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      metricsContext0.setPhase("-|&R");
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(metricsContext1.equals((Object)metricsContext0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      assertTrue(metricsContext1.equals((Object)metricsContext0));
      
      IntermediateModel intermediateModel0 = new IntermediateModel();
      metricsContext1.setIntermediateModel(intermediateModel0);
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(metricsContext1.equals((Object)metricsContext0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      metricsContext1.deploymentId("5NJ3av]avH`rNK");
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      boolean boolean0 = metricsContext0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MetricsContext metricsContext1 = new MetricsContext();
      boolean boolean0 = metricsContext1.equals(metricsContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      boolean boolean0 = metricsContext0.equals(metricsContext0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      boolean boolean0 = metricsContext0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      FeatureImportance featureImportance0 = new FeatureImportance();
      metricsContext0.addFeaturesImportanceItem(featureImportance0);
      MetricsContext metricsContext1 = metricsContext0.addFeaturesImportanceItem(featureImportance0);
      assertSame(metricsContext0, metricsContext1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      MetricsContext metricsContext1 = metricsContext0.addMultiClassClassificationItem(multiClassClassification0);
      List<MultiClassClassification> list0 = metricsContext1.getMultiClassClassification();
      assertTrue(list0.contains(multiClassClassification0));
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, 462);
      List<String> list0 = xmlTest0.getIncludedGroups();
      MetricsContext metricsContext1 = metricsContext0.classes(list0);
      // Undeclared exception!
      try { 
        metricsContext1.addClassesItem("GuH|!\"oe}R|*nv");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.setClasses((List<String>) null);
      assertNull(metricsContext0.getPhase());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      StepInfo stepInfo0 = new StepInfo();
      MetricsContext metricsContext1 = metricsContext0.step(stepInfo0);
      StepInfo stepInfo1 = metricsContext1.getStep();
      assertSame(stepInfo0, stepInfo1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.setEstimators((List<String>) null);
      assertNull(metricsContext0.getPhase());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      String string0 = metricsContext0.getSchema();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      IntermediateModel intermediateModel0 = metricsContext0.getIntermediateModel();
      assertNull(intermediateModel0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.setMultiClassClassification((List<MultiClassClassification>) null);
      assertNull(metricsContext0.getPhase());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      List<MultiClassClassification> list0 = metricsContext0.getMultiClassClassification();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      String string0 = metricsContext0.getPhase();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      IntermediateModel intermediateModel0 = new IntermediateModel();
      metricsContext0.intermediateModel(intermediateModel0);
      IntermediateModel intermediateModel1 = metricsContext0.getIntermediateModel();
      assertNull(intermediateModel1.getSdkNotebookLocation());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      String string0 = metricsContext0.toString();
      assertEquals("class MetricsContext {\n    deploymentId: null\n    intermediateModel: null\n    phase: null\n    step: null\n    classes: null\n    binaryClassfication: null\n    multiClassClassification: null\n    featuresImportance: null\n    schema: null\n    estimators: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.setDeploymentId("");
      assertEquals("", metricsContext0.getDeploymentId());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      List<String> list0 = metricsContext0.getEstimators();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      BinaryClassification binaryClassification0 = new BinaryClassification();
      metricsContext0.setBinaryClassfication(binaryClassification0);
      String string0 = metricsContext0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.schema("");
      String string0 = metricsContext0.getSchema();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      LinkedList<MultiClassClassification> linkedList0 = new LinkedList<MultiClassClassification>();
      metricsContext0.multiClassClassification(linkedList0);
      MultiClassClassification multiClassClassification0 = new MultiClassClassification();
      MetricsContext metricsContext1 = metricsContext0.addMultiClassClassificationItem(multiClassClassification0);
      assertNull(metricsContext1.getSchema());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      List<String> list0 = metricsContext0.getClasses();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      BinaryClassification binaryClassification0 = metricsContext0.getBinaryClassfication();
      assertNull(binaryClassification0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      StepInfo stepInfo0 = metricsContext0.getStep();
      assertNull(stepInfo0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      String string0 = metricsContext0.getDeploymentId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.hashCode();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      Vector<FeatureImportance> vector0 = new Vector<FeatureImportance>();
      metricsContext0.setFeaturesImportance(vector0);
      assertNull(metricsContext0.getPhase());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      List<FeatureImportance> list0 = metricsContext0.getFeaturesImportance();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.phase("");
      String string0 = metricsContext0.getPhase();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      MetricsContext metricsContext0 = new MetricsContext();
      metricsContext0.setStep((StepInfo) null);
      assertNull(metricsContext0.getSchema());
  }
}
