/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 14:15:54 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.Attachment;
import com.ibm.watson.data.client.model.AttachmentHandle;
import com.ibm.watson.data.client.model.MetadataUsage;
import com.ibm.watson.data.client.model.enums.AssetCategory;
import io.netty.handler.logging.ByteBufFormat;
import io.netty.handler.logging.LogLevel;
import io.netty.handler.logging.LoggingHandler;
import io.netty.util.concurrent.ImmediateEventExecutor;
import java.time.chrono.MinguoEra;
import java.time.chrono.ThaiBuddhistDate;
import java.time.temporal.ChronoField;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.springframework.http.HttpStatus;
import org.springframework.http.server.reactive.HttpHeadResponseDecorator;
import org.springframework.http.server.reactive.ServerHttpResponse;
import org.springframework.http.server.reactive.ServerHttpResponseDecorator;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Attachment_ESTest extends Attachment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Long long0 = new Long((-706L));
      attachment0.setCompleteTimeTicks(long0);
      Attachment attachment1 = new Attachment();
      Boolean.valueOf((String) null);
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.FALSE;
      attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
      attachment0.message("CEh)PE");
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Boolean boolean0 = Boolean.valueOf((String) null);
      Double double0 = new Double(0.5424496651293358);
      Boolean boolean1 = Boolean.TRUE;
      attachment0.isObjectKeyReadOnly(boolean0);
      attachment0.equals(attachment1);
      Boolean boolean2 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.version(double0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Boolean boolean0 = Boolean.TRUE;
      attachment1.setUserProvidedPathKey(boolean0);
      Boolean boolean1 = Boolean.TRUE;
      attachment0.equals(attachment1);
      Boolean boolean2 = Boolean.FALSE;
      attachment0.isRemote(boolean1);
      Random.setNextRandom(0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment5 = (Attachment)attachment4.objectKey((String) null);
      Attachment attachment6 = attachment3.version((Double) null);
      attachment6.equals((Object) null);
      metadataUsage0.setLastAccessorId("class Attachment {\n");
      Boolean boolean0 = new Boolean(false);
      attachment5.isRemote(boolean0);
      Boolean boolean1 = Boolean.TRUE;
      attachment1.transferComplete(boolean1);
      attachment0.equals(attachment1);
      Boolean boolean2 = Boolean.FALSE;
      attachment4.completeTimeTicks((Long) null);
      Integer.getInteger("class Attachment {\n");
      attachment5.message("class Attachment {\n");
      attachment0.isRemote(boolean1);
      attachment0.message((String) null);
      attachment4.message((String) null);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      attachment2.message("class Attachment {\n");
      Attachment attachment3 = attachment2.message("class Attachment {\n");
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment5 = (Attachment)attachment4.objectKey((String) null);
      Attachment attachment6 = attachment3.version((Double) null);
      attachment6.equals((Object) null);
      metadataUsage0.setLastAccessorId("class Attachment {\n");
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      attachment4.completeTimeTicks((Long) null);
      Integer.getInteger("class Attachment {\n");
      Attachment attachment7 = attachment5.message("class Attachment {\n");
      attachment0.isRemote(boolean0);
      attachment0.href("class Attachment {\n");
      attachment7.toString();
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      MockDate mockDate0 = new MockDate(126, 126, 307, 307, 307);
      attachment1.setCreatedAt(mockDate0);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment2.usage(metadataUsage0);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("a");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.key("6MMVeLVHMN5[6Z2+");
      Long long0 = new Long(4067L);
      AttachmentHandle attachmentHandle2 = attachmentHandle1.maxPartNum(long0);
      AttachmentHandle attachmentHandle3 = attachmentHandle2.uploadId("Failed to get request URI: ");
      attachment0.setHandle(attachmentHandle3);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      attachment1.setHandle(attachmentHandle0);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      Long long0 = new Long((-1851L));
      attachment3.setSize(long0);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment5 = (Attachment)attachment4.objectKey((String) null);
      attachment5.attachmentId((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
      Boolean boolean2 = new Boolean("");
      attachment5.isRemote(boolean2);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      attachment0.setHref("");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      Long long0 = new Long(12L);
      attachment2.createTime(long0);
      attachment4.objectKey((String) null);
      Attachment attachment5 = attachment3.version((Double) null);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.uploadId("    createdAt: ");
      attachment5.setHandle(attachmentHandle1);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
      attachment4.message("");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      attachment3.creatorId("6MMVeLVHMN5[6Z2+");
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.creatorId("6MMVeLVHMN5[6Z2+");
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.TRUE;
      attachment1.transferComplete(boolean1);
      attachment0.equals(attachment2);
      Boolean boolean2 = Boolean.FALSE;
      Integer.getInteger("networkInterface");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      Attachment attachment3 = attachment2.isManaged((Boolean) null);
      Attachment attachment4 = attachment0.datasourceType("6MMVeLVHMN5[6Z2+");
      Attachment attachment5 = attachment4.isObjectKeyReadOnly((Boolean) null);
      attachment5.objectKey((String) null);
      attachment4.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("i/*Tv]");
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment2);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      metadataUsage0.lastAccessorId("6MMVeLVHMN5[6Z2+");
      attachment3.isObjectKeyReadOnly(boolean1);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.href("");
      Attachment attachment2 = attachment1.datasourceType("");
      Long long0 = new Long((-684L));
      Attachment attachment3 = attachment2.completeTimeTicks(long0);
      Attachment attachment4 = attachment3.message("");
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.key((String) null);
      attachment2.setMessage("io.netty.util.concurrent.SingleThreadEventExecutor$1");
      attachmentHandle0.equals(attachment2);
      Attachment attachment5 = attachment4.handle(attachmentHandle1);
      attachment5.setDatasourceType("");
      attachment5.completeTimeTicks((Long) null);
      attachment5.setAttachmentType("");
      Boolean boolean0 = Boolean.TRUE;
      attachment5.isReferenced(boolean0);
      ImmediateEventExecutor immediateEventExecutor0 = ImmediateEventExecutor.INSTANCE;
      attachment0.getVersion();
      Attachment attachment6 = attachment1.size((Long) null);
      attachment6.completeTimeTicks(long0);
      attachment0.getDatasourceType();
      attachment3.attachmentType("");
      attachment6.datasourceType("loO?qheh>xHs%)");
      attachment4.isUserProvidedPathKey(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      metadataUsage0.lastAccessorId("6MMVeLVHMN5[6Z2+");
      attachment1.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      Attachment attachment3 = attachment2.isManaged((Boolean) null);
      Attachment attachment4 = attachment3.isRemote((Boolean) null);
      Attachment attachment5 = attachment4.isObjectKeyReadOnly((Boolean) null);
      attachment5.objectKey((String) null);
      Attachment attachment6 = attachment4.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("");
      attachment0.setAttachmentId("");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment2);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      metadataUsage0.lastAccessorId("6MMVeLVHMN5[6Z2+");
      attachment2.isManaged(boolean1);
      attachment6.toString();
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      Attachment attachment3 = attachment1.isManaged((Boolean) null);
      Attachment attachment4 = (Attachment)attachment3.objectKey((String) null);
      Long long0 = new Long(0L);
      attachment4.setCreateTime(long0);
      Attachment attachment5 = attachment3.version((Double) null);
      attachment5.setObjectKeyReadOnly((Boolean) null);
      Boolean boolean0 = new Boolean((String) null);
      Attachment attachment6 = attachment3.isManaged(boolean0);
      Boolean boolean1 = Boolean.valueOf((String) null);
      attachment6.setTransferComplete(boolean1);
      attachment6.getCompleteTimeTicks();
      Attachment attachment7 = attachment1.isRemote(boolean0);
      Double double0 = new Double(0.0);
      attachment7.setVersion(double0);
      attachment0.equals(attachment7);
      Boolean boolean2 = Boolean.TRUE;
      Attachment attachment8 = attachment1.transferComplete(boolean2);
      attachment8.assetType("");
      attachment0.equals(attachment2);
      Boolean boolean3 = Boolean.FALSE;
      Integer.getInteger((String) null);
      attachment2.isManaged(boolean3);
      attachment7.getDatasourceType();
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.id("");
      Attachment attachment2 = attachment1.href("DI|V@zpL=ndg%Y/ed");
      Long long0 = new Long(3447L);
      Attachment attachment3 = attachment2.size(long0);
      Attachment attachment4 = attachment3.completeTimeTicks((Long) null);
      Double double0 = Double.valueOf((-1603.0));
      Attachment attachment5 = attachment4.version(double0);
      attachment5.setAttachmentType("");
      assertNull(attachment5.getUserProvidedPathKey());
      
      attachment2.completeTimeTicks((Long) null);
      Attachment attachment6 = new Attachment();
      attachment1.equals(attachment6);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      Attachment attachment3 = attachment2.isManaged((Boolean) null);
      Attachment attachment4 = attachment3.isRemote((Boolean) null);
      Attachment attachment5 = attachment4.isObjectKeyReadOnly((Boolean) null);
      attachment5.objectKey((String) null);
      attachment4.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment2);
      Boolean boolean1 = Boolean.FALSE;
      Integer.getInteger("");
      metadataUsage0.lastAccessorId("6MMVeLVHMN5[6Z2+");
      attachment2.isManaged(boolean1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      Attachment attachment3 = attachment1.isManaged((Boolean) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean boolean0 = new Boolean((String) null);
      Attachment attachment5 = attachment4.isManaged(boolean0);
      Boolean boolean1 = Boolean.valueOf((String) null);
      attachment5.setTransferComplete(boolean1);
      attachment5.getCompleteTimeTicks();
      Attachment attachment6 = attachment1.isRemote(boolean0);
      Double double0 = new Double(0.0);
      attachment6.setVersion(double0);
      attachment0.equals(attachment6);
      Boolean boolean2 = Boolean.TRUE;
      attachment1.transferComplete(boolean2);
      attachment0.equals(attachment2);
      Boolean boolean3 = Boolean.FALSE;
      Integer.getInteger((String) null);
      metadataUsage0.accessCount((Integer) null);
      attachment2.isManaged(boolean3);
      attachment6.getDatasourceType();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentType("]ESLD'==CSpU'NLc");
      Boolean boolean0 = new Boolean("]ESLD'==CSpU'NLc");
      Attachment attachment2 = attachment1.transferComplete(boolean0);
      Boolean boolean1 = Boolean.FALSE;
      Attachment attachment3 = attachment2.isRemote(boolean1);
      Attachment attachment4 = attachment3.message("]ESLD'==CSpU'NLc");
      Attachment attachment5 = attachment4.attachmentId("");
      attachment5.equals("");
      attachment0.getAttachmentId();
      attachment0.isReferenced((Boolean) null);
      MockDate mockDate0 = new MockDate((-635), 0, 0, 2180, 872, 0);
      attachment3.createdAt(mockDate0);
      attachment4.transferComplete(boolean0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.key("");
      AttachmentHandle attachmentHandle2 = attachmentHandle1.uploadId("");
      Long long0 = new Long((-635));
      AttachmentHandle attachmentHandle3 = attachmentHandle2.maxPartNum(long0);
      attachment5.handle(attachmentHandle3);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MockDate mockDate0 = new MockDate(1767, 0, (-3241));
      Attachment attachment1 = attachment0.createdAt(mockDate0);
      attachment1.setConnectionPath("");
      Attachment attachment2 = attachment1.id("");
      Boolean boolean0 = new Boolean("");
      Attachment attachment3 = attachment2.transferComplete(boolean0);
      attachment3.setMessage("");
      Attachment attachment4 = attachment3.isReferenced((Boolean) null);
      Long long0 = new Long(62L);
      Attachment attachment5 = attachment4.size(long0);
      Long.divideUnsigned(0, 4L);
      Long long1 = new Long(0);
      attachment5.completeTimeTicks(long1);
      attachment5.id("    attachmentId: ");
      attachment0.creatorId("");
      System.setCurrentTimeMillis(45L);
      Attachment attachment6 = attachment0.isRemote((Boolean) null);
      System.setCurrentTimeMillis(0L);
      attachment6.getMessage();
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message("Ai4-m.r\"w J}W'bU^C");
      Boolean boolean0 = Boolean.FALSE;
      Attachment attachment2 = attachment1.isRemote(boolean0);
      Long long0 = Long.valueOf(0L);
      Attachment attachment3 = attachment2.completeTimeTicks(long0);
      Long long1 = new Long(0L);
      Attachment attachment4 = attachment3.createTime(long1);
      Attachment attachment5 = attachment4.datasourceType("Ai4-m.r\"w J}W'bU^C");
      attachment5.getCompleteTimeTicks();
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Long long0 = new Long((-1208L));
      Attachment attachment1 = attachment0.createTime(long0);
      Attachment attachment2 = attachment1.attachmentType("l6M");
      Attachment attachment3 = attachment2.datasourceType("l6M");
      Attachment attachment4 = attachment3.completeTimeTicks(long0);
      Boolean boolean0 = Boolean.FALSE;
      Boolean.compare(false, false);
      attachment2.setUserProvidedPathKey(boolean0);
      Double double0 = new Double((-1208L));
      attachment1.setVersion(double0);
      Boolean boolean1 = Boolean.valueOf("Zb`\"US&q6e@>");
      Attachment attachment5 = attachment4.isObjectKeyReadOnly(boolean1);
      attachment5.setAttachmentType("s|/)Fa]OC");
      LogLevel logLevel0 = LogLevel.TRACE;
      ByteBufFormat byteBufFormat0 = ByteBufFormat.SIMPLE;
      LoggingHandler loggingHandler0 = new LoggingHandler("l6M", logLevel0, byteBufFormat0);
      Attachment attachment6 = attachment0.attachmentId("s|/)Fa]OC");
      attachment1.setUserData(attachment6);
      attachment2.equals(loggingHandler0);
      Long.getLong((String) null);
      attachment0.setCreateTime((Long) null);
      attachment5.equals(byteBufFormat0);
      attachment5.getVersion();
      attachment5.getCompleteTimeTicks();
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Attachment attachment1 = attachment0.handle(attachmentHandle0);
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment2 = attachment1.isRemote(boolean0);
      Boolean.logicalXor(true, true);
      Attachment attachment3 = attachment2.transferComplete(boolean0);
      Attachment attachment4 = attachment3.createdAt((Date) null);
      Long long0 = new Long(0L);
      attachment4.setCreateTime(long0);
      Attachment attachment5 = attachment4.creatorId("");
      Integer integer0 = new Integer(0);
      attachment5.equals(integer0);
      Double double0 = new Double(0);
      Attachment attachment6 = attachment0.version(double0);
      Long long1 = new Long(0);
      attachment1.setSize(long1);
      attachment6.setHref(">It']H)F!");
      Boolean boolean1 = Boolean.TRUE;
      attachment2.isReferenced(boolean1);
      Attachment attachment7 = attachment1.completeTimeTicks(long1);
      attachment3.setHref(">It']H)F!");
      attachment7.getTransferComplete();
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.id("");
      Attachment attachment2 = attachment1.href("DI|V@zpL=ndg%Y/ed");
      Long long0 = new Long(3447L);
      Attachment attachment3 = attachment2.size(long0);
      attachment3.completeTimeTicks((Long) null);
      Attachment attachment4 = attachment2.completeTimeTicks((Long) null);
      attachment4.getSize();
      attachment0.attachmentId("DI|V@zpL=ndg%Y/ed");
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentId((String) null);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment2 = attachment1.usage(metadataUsage0);
      Boolean boolean0 = Boolean.valueOf(false);
      Attachment attachment3 = attachment2.isManaged(boolean0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Long long0 = new Long(500L);
      AttachmentHandle attachmentHandle1 = attachmentHandle0.maxPartNum(long0);
      Double double0 = new Double(500L);
      attachment3.version(double0);
      AttachmentHandle attachmentHandle2 = attachmentHandle1.uploadId((String) null);
      Attachment attachment4 = attachment3.handle(attachmentHandle2);
      attachment4.setUsage(metadataUsage0);
      Long long1 = new Long(500L);
      metadataUsage0.setLastAccessTime(long1);
      Attachment attachment5 = attachment3.createTime((Long) null);
      Attachment attachment6 = attachment5.message("");
      Boolean boolean1 = Boolean.valueOf(true);
      attachment6.isRemote(boolean1);
      attachment6.getVersion();
      Boolean boolean2 = new Boolean((String) null);
      attachment2.isUserProvidedPathKey(boolean2);
      Attachment attachment7 = attachment1.datasourceType("    isRemote: ");
      attachment3.equals(attachment0);
      attachment2.isObjectKeyReadOnly(boolean1);
      Attachment attachment8 = attachment0.version((Double) null);
      attachment8.href("    href: ");
      Attachment attachment9 = attachment1.href((String) null);
      attachment9.completeTimeTicks(long1);
      attachment7.getCompleteTimeTicks();
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean((String) null);
      Double double0 = new Double((-1953.1920591786));
      Double.sum((-1953.1920591786), 1.0);
      attachment0.version(double0);
      Attachment attachment1 = attachment0.isManaged(boolean0);
      Boolean boolean1 = Boolean.FALSE;
      Attachment attachment2 = attachment1.isUserProvidedPathKey(boolean1);
      Boolean boolean2 = new Boolean(true);
      Boolean.logicalAnd(true, false);
      attachment2.isManaged(boolean2);
      Boolean.logicalAnd(false, false);
      Attachment attachment3 = attachment2.message(",kA*dG+KCV5z");
      Attachment attachment4 = attachment3.isReferenced(boolean0);
      attachment4.mime(",kA*dG+KCV5z");
      Boolean.logicalXor(true, true);
      Attachment attachment5 = attachment4.creatorId((String) null);
      Attachment attachment6 = attachment5.attachmentType("");
      attachment6.getAttachmentType();
      attachment1.isReferenced(boolean0);
      attachment1.id("-");
      Long long0 = new Long(2501L);
      attachment5.size(long0);
      attachment5.id(",kA*dG+KCV5z");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentId("");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Long long0 = new Long(0L);
      MetadataUsage metadataUsage1 = metadataUsage0.lastAccessTime(long0);
      attachment1.name("'F1nxTv");
      attachment1.size(long0);
      Attachment attachment2 = attachment1.usage(metadataUsage1);
      attachment2.description("'F1nxTv");
      metadataUsage0.equals(attachment2);
      attachment2.setReferenced((Boolean) null);
      attachment2.getAttachmentType();
      attachment2.getSize();
      System.setCurrentTimeMillis((-1874L));
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean(false);
      Attachment attachment1 = attachment0.isReferenced(boolean0);
      Boolean.compare(false, false);
      Attachment attachment2 = attachment1.id("&2&");
      attachment2.getUserData();
      attachment0.setUserData((Object) null);
      Long long0 = new Long((-243L));
      attachment0.assetType("&2&");
      Attachment attachment3 = attachment2.size(long0);
      Long.getLong("&2&", (-243L));
      Long long1 = new Long((-243L));
      attachment3.testDoc(long1);
      Attachment attachment4 = attachment3.createTime(long0);
      Attachment attachment5 = attachment4.isObjectKeyReadOnly(boolean0);
      Attachment attachment6 = attachment5.id("DcWLtS\"6^4\"FSxj,4o");
      attachment1.size(long0);
      System.setCurrentTimeMillis((-243L));
      Boolean boolean1 = Boolean.TRUE;
      Boolean.logicalXor(false, false);
      Boolean.compare(true, true);
      Boolean.getBoolean("&2&");
      attachment1.isRemote(boolean1);
      attachment2.getTransferComplete();
      attachment3.attachmentId("w< vj+_Z4RGd_");
      attachment6.getCompleteTimeTicks();
      attachment0.getCompleteTimeTicks();
      attachment0.getSize();
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean(true);
      Attachment attachment1 = attachment0.transferComplete(boolean0);
      Long long0 = new Long((-1895L));
      Attachment attachment2 = attachment1.completeTimeTicks(long0);
      Attachment attachment3 = attachment2.datasourceType(":QRSQIu&q=_x1M");
      Long.getLong(":QRSQIu&q=_x1M");
      Attachment attachment4 = attachment3.message("@`O");
      Attachment attachment5 = attachment4.createTime(long0);
      Attachment attachment6 = attachment5.transferComplete(boolean0);
      attachment2.mime(":QRSQIu&q=_x1M");
      attachment5.objectKey("bzhT");
      Double double0 = new Double((-1895L));
      attachment6.setVersion(double0);
      attachment5.setDatasourceType("@`O");
      ThaiBuddhistDate thaiBuddhistDate0 = MockThaiBuddhistDate.now();
      attachment6.equals(thaiBuddhistDate0);
      attachment0.getDatasourceType();
      attachment0.creatorId("    datasourceType: ");
      Attachment attachment7 = attachment6.attachmentType("bzhT");
      attachment7.setId("");
      attachment6.getDatasourceType();
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.maxPartNum((Long) null);
      attachment4.handle(attachmentHandle1);
      attachment0.href(":QRSQIu&q=_x1M");
      attachment2.getCompleteTimeTicks();
      Long long1 = new Long(242L);
      attachment6.createTime(long1);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.datasourceType("n >= 0 required but it was ");
      Long long0 = new Long((-5235L));
      Attachment attachment2 = attachment1.createTime(long0);
      Attachment attachment3 = attachment2.id("n >= 0 required but it was ");
      attachment3.toString();
      attachment3.href("");
      Boolean boolean0 = new Boolean(false);
      Attachment attachment4 = attachment3.size(long0);
      Attachment attachment5 = attachment4.isUserProvidedPathKey(boolean0);
      String string0 = attachment0.getAttachmentType();
      attachment4.userData(attachment5);
      Attachment attachment6 = attachment3.attachmentType("");
      attachment4.getCreateTime();
      Boolean boolean1 = Boolean.valueOf(true);
      attachment4.isObjectKeyReadOnly(boolean1);
      Attachment attachment7 = attachment4.datasourceType("");
      attachment7.setCreatedAt((Date) null);
      Boolean boolean2 = Boolean.TRUE;
      Boolean.logicalXor(false, false);
      attachment2.setUserProvidedPathKey(boolean2);
      attachment5.getSize();
      attachment3.hashCode();
      attachment6.attachmentType(string0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message(">H");
      Attachment attachment2 = attachment1.attachmentId(">H");
      Boolean boolean0 = new Boolean(false);
      Attachment attachment3 = attachment2.transferComplete(boolean0);
      Boolean.logicalAnd(false, false);
      Attachment attachment4 = attachment3.creatorId(">H");
      Boolean boolean1 = Boolean.valueOf(">H");
      Attachment attachment5 = attachment4.isManaged(boolean1);
      Boolean boolean2 = Boolean.TRUE;
      attachment5.setUserProvidedPathKey(boolean2);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.uploadId("");
      AttachmentHandle attachmentHandle2 = attachmentHandle1.key("");
      Long long0 = new Long(442L);
      Long.getLong(">H", 76L);
      AttachmentHandle attachmentHandle3 = attachmentHandle2.maxPartNum(long0);
      attachmentHandle3.setUploadId("The iterator returned a null value");
      attachment5.setHandle(attachmentHandle3);
      Boolean boolean3 = new Boolean(true);
      attachment2.isReferenced(boolean3);
      Attachment attachment6 = attachment1.creatorId("The iterator returned a null value");
      AttachmentHandle attachmentHandle4 = new AttachmentHandle();
      attachment5.handle(attachmentHandle4);
      attachment6.getSize();
      attachment4.setAttachmentType("");
      Boolean boolean4 = attachment3.getUserProvidedPathKey();
      assertTrue(boolean4.equals((Object)boolean3));
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.FALSE;
      Attachment attachment1 = attachment0.isObjectKeyReadOnly(boolean0);
      MockDate mockDate0 = new MockDate(0L);
      Attachment attachment2 = attachment1.createdAt(mockDate0);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Long long0 = new Long(1848L);
      MetadataUsage metadataUsage1 = metadataUsage0.lastUpdateTime(long0);
      Attachment attachment3 = attachment2.usage(metadataUsage1);
      Attachment attachment4 = attachment3.creatorId((String) null);
      Attachment attachment5 = attachment4.message("c__V lNPIte>J48g");
      attachment5.setCreatorId((String) null);
      Boolean boolean1 = Boolean.valueOf(true);
      Attachment attachment6 = attachment5.isReferenced(boolean1);
      attachment4.setDescription("nA");
      Boolean boolean2 = new Boolean("nA");
      Boolean boolean3 = Boolean.TRUE;
      Boolean.logicalOr(true, true);
      attachment2.isObjectKeyReadOnly(boolean3);
      attachment1.isRemote(boolean2);
      Double double0 = new Double((-4935.178109));
      attachment5.setVersion(double0);
      attachment4.getDatasourceType();
      attachment6.getHref();
      Boolean boolean4 = attachment1.getReferenced();
      assertFalse(boolean4.equals((Object)boolean0));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Double double0 = new Double(593.0298);
      Attachment attachment1 = attachment0.version(double0);
      Long long0 = new Long(4L);
      Attachment attachment2 = attachment1.size(long0);
      Attachment attachment3 = attachment2.message((String) null);
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment4 = attachment3.isObjectKeyReadOnly(boolean0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachment4.setAssetCategory(assetCategory0);
      Boolean.logicalXor(true, true);
      Attachment attachment5 = attachment4.transferComplete(boolean0);
      Boolean boolean1 = Boolean.TRUE;
      attachment3.setRemote(boolean1);
      Attachment attachment6 = attachment5.createTime(long0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Double.isFinite((-1.0));
      AttachmentHandle attachmentHandle1 = attachmentHandle0.key("uB3)gw->t:a?_z`RxN");
      Attachment attachment7 = attachment6.handle(attachmentHandle1);
      attachment6.setHref((String) null);
      attachment7.getDatasourceType();
      attachment7.datasourceType("uB3)gw->t:a?_z`RxN");
      Boolean boolean2 = attachment1.getObjectKeyReadOnly();
      attachment0.setObjectKeyReadOnly(boolean2);
      assertSame(attachment0, attachment4);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.FALSE;
      Attachment attachment1 = attachment0.isObjectKeyReadOnly(boolean0);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Long long0 = new Long(640L);
      MetadataUsage metadataUsage1 = metadataUsage0.lastAccessTime(long0);
      Attachment attachment2 = attachment1.usage(metadataUsage1);
      Double double0 = new Double(640L);
      Attachment attachment3 = attachment2.version(double0);
      attachment1.setTransferComplete(boolean0);
      Long.toUnsignedString((-2704L));
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      metadataUsage1.lastAccessorId("18446744073709548912");
      Attachment attachment4 = attachment3.handle(attachmentHandle0);
      boolean boolean1 = attachment4.equals(attachment3);
      assertTrue(boolean1);
      
      MetadataUsage metadataUsage2 = attachment0.getUsage();
      ServerHttpResponse serverHttpResponse0 = mock(ServerHttpResponse.class, new ViolatedAssumptionAnswer());
      doReturn((HttpStatus) null).when(serverHttpResponse0).getStatusCode();
      ServerHttpResponseDecorator serverHttpResponseDecorator0 = new ServerHttpResponseDecorator(serverHttpResponse0);
      HttpHeadResponseDecorator httpHeadResponseDecorator0 = new HttpHeadResponseDecorator(serverHttpResponseDecorator0);
      httpHeadResponseDecorator0.getRawStatusCode();
      metadataUsage2.accessCount((Integer) null);
      Attachment attachment5 = attachment0.usage(metadataUsage2);
      attachment5.getRemote();
      Attachment attachment6 = attachment1.attachmentType(", sslHandshakeTimeoutMillis=");
      MockDate mockDate0 = new MockDate(4, 4, 1815, 0, 0);
      attachment2.setCreatedAt(mockDate0);
      attachment5.href(".LcG>rDY3k X_e3:");
      attachment6.size(long0);
      assertFalse(boolean0.equals((Object)boolean1));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.datasourceType("O? 2UKX5ZdF.&S");
      Attachment attachment2 = attachment1.href("    isObjectKeyReadOnly: ");
      Attachment attachment3 = attachment2.attachmentId("S(Q");
      Boolean boolean0 = new Boolean("O? 2UKX5ZdF.&S");
      Long long0 = new Long(675L);
      attachment0.createTime(long0);
      Attachment attachment4 = attachment3.isRemote(boolean0);
      Long long1 = new Long(0L);
      attachment3.setId((String) null);
      Attachment attachment5 = attachment4.createTime(long1);
      Attachment attachment6 = attachment5.creatorId("S(Q");
      attachment0.getSize();
      Attachment attachment7 = attachment6.datasourceType("    isObjectKeyReadOnly: ");
      Boolean boolean1 = Boolean.valueOf("O? 2UKX5ZdF.&S");
      attachment2.setTransferComplete(boolean1);
      Boolean.logicalOr(true, true);
      attachment0.transferComplete(boolean0);
      Double double0 = new Double(0L);
      attachment7.setVersion(double0);
      attachment2.getCreatedAt();
      attachment6.getTransferComplete();
      attachment7.getHref();
      attachment6.getAttachmentId();
      Boolean boolean2 = Boolean.TRUE;
      Attachment attachment8 = attachment4.transferComplete(boolean2);
      assertSame(attachment8, attachment0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentId("]\"~%3");
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.uploadId("]\"~%3");
      Long long0 = new Long(0L);
      Long.compare(0L, 2236L);
      attachmentHandle1.setMaxPartNum(long0);
      Boolean boolean0 = Boolean.FALSE;
      attachment0.setReferenced(boolean0);
      Long long1 = new Long(0L);
      AttachmentHandle attachmentHandle2 = attachmentHandle1.maxPartNum(long1);
      attachmentHandle1.setKey("");
      Long long2 = new Long((-1826L));
      attachmentHandle2.setMaxPartNum(long2);
      attachment1.setReferenced(boolean0);
      Attachment attachment2 = attachment1.handle(attachmentHandle2);
      Boolean boolean1 = Boolean.valueOf("]\"~%3");
      attachmentHandle1.maxPartNum(long1);
      attachment2.setConnectionPath("]\"~%3");
      Attachment attachment3 = attachment2.isRemote(boolean1);
      attachment3.setMime("");
      Boolean boolean2 = attachment3.getRemote();
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Double double0 = new Double(4474.9509164);
      Attachment attachment1 = attachment0.version(double0);
      Attachment attachment2 = attachment1.attachmentType("U7e");
      Attachment attachment3 = attachment2.message("");
      Attachment attachment4 = attachment3.href("U7e");
      MockDate mockDate0 = new MockDate();
      attachment4.createdAt(mockDate0);
      Attachment attachment5 = attachment4.datasourceType(" is not allowed to be shared");
      boolean boolean0 = attachment5.equals(attachment4);
      assertTrue(boolean0);
      
      Attachment attachment6 = attachment1.id("U7e");
      attachment4.getCompleteTimeTicks();
      Boolean boolean1 = new Boolean("");
      attachment6.isObjectKeyReadOnly(boolean1);
      assertFalse(boolean1.equals((Object)boolean0));
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.datasourceType("");
      Attachment attachment2 = attachment1.creatorId("");
      Long long0 = new Long(0L);
      Attachment attachment3 = attachment2.size(long0);
      Attachment attachment4 = attachment3.id("");
      Long.compareUnsigned(0L, 3406L);
      attachment1.setObjectKey("");
      Boolean boolean0 = Boolean.valueOf(false);
      attachment2.isObjectKeyReadOnly(boolean0);
      attachment4.getCreatorId();
      Attachment attachment5 = attachment3.href("");
      attachment1.getCreatedAt();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      metadataUsage0.setLastUpdateTime(long0);
      attachment2.usage(metadataUsage0);
      Double double0 = new Double(407.09500115419);
      Double.max(3406L, 0L);
      Attachment attachment6 = attachment2.version(double0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachment6.assetCategory(assetCategory0);
      attachment5.getId();
      attachment4.setCreatedAt((Date) null);
      Boolean boolean1 = attachment1.getObjectKeyReadOnly();
      Boolean.getBoolean("mYE]F_Fqj#(g&iE");
      Attachment attachment7 = attachment5.href("");
      attachment2.setReferenced(boolean1);
      attachment0.getCreateTime();
      attachment4.getAttachmentId();
      attachment7.setObjectKeyReadOnly(boolean1);
      assertSame(attachment7, attachment6);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      attachment0.datasourceType("r4x;nK|QiL /s\"GY33");
      Boolean boolean0 = Boolean.valueOf(true);
      Attachment attachment1 = attachment0.isObjectKeyReadOnly(boolean0);
      Attachment attachment2 = attachment1.isUserProvidedPathKey(boolean0);
      Attachment attachment3 = attachment2.version((Double) null);
      Attachment attachment4 = attachment3.attachmentId("YH6|mr!P{");
      Long long0 = new Long(1101L);
      attachment4.createTime(long0);
      Boolean.getBoolean(":l^FIs#zSf/*C)v");
      attachment4.datasourceType("");
      Attachment attachment5 = attachment4.datasourceType("YH6|mr!P{");
      Attachment attachment6 = attachment5.isManaged(boolean0);
      attachment1.setHref("");
      Long long1 = attachment6.getCreateTime();
      assertEquals(1101L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment1 = attachment0.isManaged(boolean0);
      Long long0 = new Long(0L);
      Attachment attachment2 = attachment1.createTime(long0);
      Attachment attachment3 = attachment2.datasourceType((String) null);
      Attachment attachment4 = attachment3.id("$H5u%+x`=ln79vm");
      Attachment attachment5 = attachment4.attachmentId("$H5u%+x`=ln79vm");
      String string0 = attachment5.getId();
      assertEquals("$H5u%+x`=ln79vm", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean((String) null);
      Attachment attachment1 = attachment0.isReferenced(boolean0);
      Double double0 = new Double(1376.575934515);
      Attachment attachment2 = attachment1.version(double0);
      Long long0 = new Long(0L);
      Attachment attachment3 = attachment2.size(long0);
      Boolean boolean1 = Boolean.FALSE;
      Attachment attachment4 = attachment3.transferComplete(boolean1);
      Attachment attachment5 = attachment4.creatorId((String) null);
      attachment5.getVersion();
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.maxPartNum(long0);
      attachmentHandle1.setKey((String) null);
      attachmentHandle0.key((String) null);
      AttachmentHandle attachmentHandle2 = attachmentHandle1.uploadId(",hG`;EH}5T()8-");
      Attachment attachment6 = attachment0.handle(attachmentHandle2);
      attachment3.size(long0);
      Boolean boolean2 = Boolean.TRUE;
      Attachment attachment7 = attachment6.isRemote(boolean2);
      assertNull(attachment7.getUserProvidedPathKey());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean(true);
      Attachment attachment1 = attachment0.isRemote(boolean0);
      Boolean boolean1 = Boolean.FALSE;
      Attachment attachment2 = attachment1.isUserProvidedPathKey(boolean1);
      Double double0 = new Double(568.5260795752002);
      attachment1.version(double0);
      Attachment attachment3 = attachment2.id("IH_Mup");
      attachment3.setManaged(boolean1);
      Attachment attachment4 = attachment3.isManaged(boolean0);
      Double double1 = new Double(0.0);
      Attachment attachment5 = attachment4.version(double1);
      Long long0 = new Long(1L);
      attachment5.setCreateTime(long0);
      attachment5.setDatasourceType("aB.fcyk}RE#");
      attachment0.datasourceType("IH_Mup");
      attachment2.getHref();
      attachment0.getRemote();
      Boolean boolean2 = new Boolean(true);
      Attachment attachment6 = attachment1.isManaged(boolean2);
      attachment6.setConnectionId("");
      Boolean boolean3 = new Boolean("mI&c`,LRj");
      attachment3.isReferenced(boolean3);
      Long long1 = new Long(1000L);
      Attachment attachment7 = attachment4.completeTimeTicks(long1);
      assertNull(attachment7.getTransferComplete());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.FALSE;
      Attachment attachment1 = attachment0.isRemote(boolean0);
      Boolean boolean1 = Boolean.valueOf("mg!Fr>.");
      attachment1.isObjectKeyReadOnly(boolean1);
      Long long0 = new Long(0L);
      Attachment attachment2 = attachment1.completeTimeTicks(long0);
      attachment0.setDatasourceType("Source was a (constant) empty");
      Attachment attachment3 = attachment2.attachmentType("Source was a (constant) empty");
      Attachment attachment4 = attachment3.datasourceType("Source was a (constant) empty");
      Long.getLong("", 0L);
      Attachment attachment5 = attachment4.isUserProvidedPathKey(boolean0);
      attachment5.getHandle();
      attachment3.setCreateTime(long0);
      attachment3.getManaged();
      Attachment attachment6 = attachment5.datasourceType("mg!Fr>.");
      attachment6.datasourceType("mg!Fr>.");
      Boolean boolean2 = Boolean.TRUE;
      attachment0.isManaged(boolean2);
      Attachment attachment7 = attachment6.datasourceType("mg!Fr>.");
      attachment2.getAttachmentType();
      Boolean boolean3 = attachment7.getObjectKeyReadOnly();
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentType("");
      Long long0 = new Long(2127L);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      attachment1.setHandle(attachmentHandle0);
      Attachment attachment2 = attachment1.size(long0);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      metadataUsage0.toString();
      Attachment attachment3 = attachment2.usage(metadataUsage0);
      attachment2.getHandle();
      Long long1 = new Long(2127L);
      attachment3.setCompleteTimeTicks(long1);
      assertNull(attachment3.getId());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message("$HKXJ*[L+@mz\"");
      Long long0 = new Long(118L);
      Attachment attachment2 = attachment1.size(long0);
      Long long1 = new Long((-1200L));
      Attachment attachment3 = attachment2.createTime(long1);
      Attachment attachment4 = attachment3.attachmentId("$HKXJ*[L+@mz\"");
      Attachment attachment5 = attachment4.creatorId((String) null);
      Boolean boolean0 = attachment5.getManaged();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentId("6)<Zlq>;+vE%Bhh");
      Attachment attachment2 = attachment1.attachmentType("Vv?;gj}#IzJ @iG");
      Attachment attachment3 = attachment2.id("Vv?;gj}#IzJ @iG");
      Boolean boolean0 = new Boolean("($9ATH");
      Attachment attachment4 = attachment3.isManaged(boolean0);
      Long long0 = new Long(2395L);
      Attachment attachment5 = attachment4.size(long0);
      String string0 = attachment5.getAttachmentType();
      assertEquals("Vv?;gj}#IzJ @iG", string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message((String) null);
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.attachmentType("&g;T)8Gf96x$N;cYV");
      Attachment attachment4 = attachment3.datasourceType("");
      Attachment attachment5 = attachment4.isUserProvidedPathKey((Boolean) null);
      String string0 = attachment5.getAttachmentId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.creatorId("    usage: ");
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Attachment attachment2 = attachment1.handle(attachmentHandle0);
      Long long0 = new Long((-1693L));
      Attachment attachment3 = attachment2.createTime(long0);
      Attachment attachment4 = attachment3.datasourceType("#/\b]o<UQh3");
      Double double0 = new Double(1.0);
      Attachment attachment5 = attachment4.version(double0);
      String string0 = attachment5.getCreatorId();
      assertEquals("    usage: ", string0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      attachment0.getId();
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment1 = attachment0.isManaged(boolean0);
      assertNull(attachment1.getDescription());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.isRemote((Boolean) null);
      Double double0 = new Double(565.806);
      Long long0 = new Long(0L);
      Long.toUnsignedString(0L);
      attachment1.setCreateTime(long0);
      Attachment attachment2 = attachment1.version(double0);
      Boolean boolean0 = Boolean.TRUE;
      Boolean.logicalOr(false, true);
      attachment1.setManaged(boolean0);
      Attachment attachment3 = attachment2.attachmentId((String) null);
      attachment3.version(double0);
      Boolean boolean1 = Boolean.FALSE;
      Attachment attachment4 = attachment3.isUserProvidedPathKey(boolean1);
      attachment4.setTestDoc(long0);
      Attachment attachment5 = attachment4.isObjectKeyReadOnly((Boolean) null);
      Double.sum(574.1696892240285, (-3695.297));
      Boolean.logicalXor(false, false);
      attachment5.setCreatorId("    href: ");
      attachment4.getUserProvidedPathKey();
      attachment4.getCompleteTimeTicks();
      attachment1.getHref();
      attachment0.getRemote();
      Long long1 = attachment5.getCreateTime();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MetadataUsage metadataUsage1 = metadataUsage0.lastAccessorId((String) null);
      Attachment attachment1 = attachment0.usage(metadataUsage1);
      Long long0 = new Long(854L);
      Attachment attachment2 = attachment1.size(long0);
      Long long1 = new Long(854L);
      Attachment attachment3 = attachment2.createTime(long1);
      Long long2 = attachment3.getCompleteTimeTicks();
      assertNull(long2);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment2 = attachment1.attachmentId("    datasourceType: ");
      Attachment attachment3 = attachment2.attachmentType("");
      Attachment attachment4 = attachment3.message("");
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Long long0 = new Long(0L);
      AttachmentHandle attachmentHandle1 = attachmentHandle0.maxPartNum(long0);
      attachment4.setHandle(attachmentHandle1);
      attachment3.setAssetType("");
      Attachment attachment5 = attachment4.href("l)TM");
      attachment5.getVersion();
      attachment5.objectKey("l)TM");
      Attachment attachment6 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment5.getTransferComplete();
      attachment6.getObjectKeyReadOnly();
      attachment5.getAttachmentId();
      Boolean boolean0 = attachment1.getTransferComplete();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      attachment0.creatorId("");
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment1 = attachment0.isManaged(boolean0);
      Boolean boolean1 = attachment1.getManaged();
      attachment1.setTransferComplete(boolean1);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachment0.setTransferComplete(boolean1);
      MockDate mockDate0 = new MockDate();
      Boolean boolean2 = attachment0.getManaged();
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentType("    completeTimeTicks: ");
      Attachment attachment2 = attachment1.attachmentId("    completeTimeTicks: ");
      Boolean boolean0 = new Boolean(true);
      Attachment attachment3 = attachment2.isUserProvidedPathKey(boolean0);
      Attachment attachment4 = attachment3.isReferenced(boolean0);
      Attachment attachment5 = attachment4.href("    completeTimeTicks: ");
      String string0 = attachment5.getCreatorId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MockDate mockDate0 = new MockDate((-320), 0, 8);
      Attachment attachment1 = attachment0.createdAt(mockDate0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Attachment attachment2 = attachment1.handle(attachmentHandle0);
      Double double0 = new Double(0);
      Attachment attachment3 = attachment2.version(double0);
      Boolean boolean0 = new Boolean(true);
      attachment3.isReferenced(boolean0);
      Boolean boolean1 = new Boolean(false);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly(boolean1);
      Attachment attachment5 = attachment4.isManaged(boolean1);
      Boolean boolean2 = new Boolean("Stream opened, now {} active streams, {} max active streams.");
      attachment5.setManaged(boolean2);
      attachment5.toString();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment6 = attachment3.usage(metadataUsage0);
      assertNull(attachment6.getTransferComplete());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean("    message: ");
      Attachment attachment1 = attachment0.isUserProvidedPathKey(boolean0);
      Attachment attachment2 = attachment1.href("?Bs1N`fL");
      Attachment attachment3 = attachment2.isObjectKeyReadOnly(boolean0);
      Attachment attachment4 = attachment3.attachmentType("");
      MockDate mockDate0 = new MockDate((-2026L));
      Attachment attachment5 = attachment4.createdAt(mockDate0);
      Boolean boolean1 = attachment5.getRemote();
      assertNull(boolean1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.id("reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber");
      Boolean boolean0 = new Boolean(true);
      Attachment attachment2 = attachment1.isRemote(boolean0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Attachment attachment3 = attachment2.handle(attachmentHandle0);
      Attachment attachment4 = attachment3.creatorId("rCQOXX4R@L?F|D!");
      Long long0 = new Long(0L);
      Attachment attachment5 = attachment4.completeTimeTicks(long0);
      Double double0 = attachment5.getVersion();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      attachment0.setRemote((Boolean) null);
      Double double0 = new Double((-1162.34139));
      attachment0.setVersion(double0);
      assertNull(attachment0.getCreateTime());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.createTime((Long) null);
      Boolean boolean0 = Boolean.valueOf("Q>1JgVD]^W_vq<x");
      Attachment attachment2 = attachment1.isRemote(boolean0);
      MockDate mockDate0 = new MockDate(0, 315, 0);
      Attachment attachment3 = attachment2.createdAt(mockDate0);
      Attachment attachment4 = attachment3.message("!0I@do&ej<`9vwPB");
      Double double0 = new Double(315);
      Attachment attachment5 = attachment4.version(double0);
      Date date0 = attachment5.getCreatedAt();
      assertSame(date0, mockDate0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Long long0 = new Long(1336L);
      Attachment attachment1 = attachment0.size(long0);
      Attachment attachment2 = attachment1.message("websocketHandler");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MetadataUsage metadataUsage1 = metadataUsage0.lastUpdateTime(long0);
      Attachment attachment3 = attachment2.usage(metadataUsage1);
      Attachment attachment4 = attachment3.creatorId("websocketHandler");
      Boolean boolean0 = Boolean.valueOf("websocketHandler");
      Attachment attachment5 = attachment4.isRemote(boolean0);
      attachment5.name("websocketHandler");
      attachment5.getMessage();
      attachment0.getCreatedAt();
      attachment0.setDatasourceType(":#bNNr");
      Date date0 = attachment0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.valueOf("k*");
      Attachment attachment1 = attachment0.isReferenced(boolean0);
      Attachment attachment2 = attachment1.isObjectKeyReadOnly(boolean0);
      AssetCategory assetCategory0 = AssetCategory.USER;
      attachment1.assetCategory(assetCategory0);
      Attachment attachment3 = attachment2.attachmentId("k*");
      Long long0 = new Long(0L);
      Attachment attachment4 = attachment3.createTime(long0);
      MockDate mockDate0 = new MockDate(0, 0, 766, (-271), (-271), 0);
      Attachment attachment5 = attachment4.createdAt(mockDate0);
      attachment5.completeTimeTicks(long0);
      attachment2.getReferenced();
      Attachment attachment6 = attachment5.isUserProvidedPathKey(boolean0);
      assertNull(attachment6.getHref());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Long long0 = new Long(4319L);
      Attachment attachment1 = attachment0.createTime(long0);
      Attachment attachment2 = attachment1.creatorId("com.ibm.watson.data.client.model.Attachment");
      MockDate mockDate0 = new MockDate(4319L);
      Attachment attachment3 = attachment2.createdAt(mockDate0);
      Attachment attachment4 = attachment3.isUserProvidedPathKey((Boolean) null);
      Attachment attachment5 = attachment4.isObjectKeyReadOnly((Boolean) null);
      attachment5.setCreatorId("com.ibm.watson.data.client.model.Attachment");
      assertNull(attachment5.getObjectKeyReadOnly());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean(true);
      Attachment attachment1 = attachment0.transferComplete(boolean0);
      Attachment attachment2 = attachment1.datasourceType((String) null);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Long long0 = new Long(0L);
      AttachmentHandle attachmentHandle1 = attachmentHandle0.maxPartNum(long0);
      Attachment attachment3 = attachment2.handle(attachmentHandle1);
      Attachment attachment4 = attachment3.attachmentId("=SDPv<G}32");
      Attachment attachment5 = attachment4.isObjectKeyReadOnly(boolean0);
      String string0 = attachment5.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.datasourceType((String) null);
      Long long0 = new Long((-571L));
      attachment1.setTestDoc(long0);
      attachment1.equals((Object) null);
      Long long1 = new Long((-1L));
      attachment1.setTestDoc(long1);
      Attachment attachment2 = attachment1.creatorId("6-j2H9+#Vdn3%O]");
      attachment2.objectKey("reactor.core.publisher.FluxSwitchMap$SwitchMapInner");
      AssetCategory assetCategory0 = AssetCategory.USER;
      attachment2.assetCategory(assetCategory0);
      attachment2.setAttachmentType((String) null);
      Attachment attachment3 = attachment0.id((String) null);
      attachment3.getUserProvidedPathKey();
      attachment0.attachmentType((String) null);
      attachment0.setAttachmentType("");
      attachment2.userData("reactor.core.publisher.FluxSwitchMap$SwitchMapInner");
      attachment0.getHref();
      attachment1.getCreateTime();
      Boolean boolean0 = new Boolean(false);
      attachment1.setReferenced(boolean0);
      attachment2.getDatasourceType();
      Attachment attachment4 = attachment3.isReferenced((Boolean) null);
      assertNull(attachment4.getAssetType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.completeTimeTicks((Long) null);
      Double double0 = new Double(0.5);
      Attachment attachment2 = attachment1.version(double0);
      attachment2.mime("");
      Boolean boolean0 = new Boolean("com.ibm.watson.data.client.model.Attachment");
      Attachment attachment3 = attachment2.isObjectKeyReadOnly(boolean0);
      Attachment attachment4 = attachment3.attachmentId("d%0y(<");
      attachment4.getUsage();
      attachment1.setCreatedAt((Date) null);
      Boolean boolean1 = new Boolean("d%0y(<");
      Boolean.getBoolean("d%0y(<");
      Attachment attachment5 = attachment0.transferComplete(boolean1);
      String string0 = attachment5.getAttachmentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentType("");
      attachment0.setId("_RwBMSn.Nt!BLk");
      Boolean boolean0 = new Boolean(true);
      Attachment attachment2 = attachment1.isObjectKeyReadOnly(boolean0);
      attachment2.getCreateTime();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MockDate mockDate0 = new MockDate();
      MetadataUsage metadataUsage1 = metadataUsage0.lastAccessedAt(mockDate0);
      attachment2.getUserData();
      metadataUsage1.equals((Object) null);
      Attachment attachment3 = attachment0.datasourceType("JQS<Z_i^ylp+E[e,(");
      MetadataUsage metadataUsage2 = metadataUsage1.lastAccessorId("p;yIX$pg*");
      MetadataUsage metadataUsage3 = metadataUsage2.lastUpdatedAt(mockDate0);
      MetadataUsage metadataUsage4 = metadataUsage3.lastUpdaterId("_RwBMSn.Nt!BLk");
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.maxPartNum((Long) null);
      AttachmentHandle attachmentHandle2 = attachmentHandle1.uploadId("");
      Attachment attachment4 = attachment2.handle(attachmentHandle2);
      metadataUsage4.equals(attachment4);
      metadataUsage4.lastAccessTime((Long) null);
      attachment0.usage(metadataUsage4);
      Boolean boolean1 = attachment3.getTransferComplete();
      assertNull(boolean1);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.valueOf(true);
      Attachment attachment1 = attachment0.transferComplete(boolean0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Boolean.logicalXor(true, false);
      attachmentHandle0.toString();
      Double double0 = new Double((-1.0));
      Attachment attachment2 = attachment1.version(double0);
      Boolean.getBoolean("class AttachmentHandle {\n    key: null\n    uploadId: null\n    maxPartNum: null\n}");
      Attachment attachment3 = attachment1.handle(attachmentHandle0);
      attachment3.getVersion();
      attachment3.getAttachmentId();
      attachment3.getDatasourceType();
      attachment2.name("yjz");
      Boolean boolean1 = new Boolean("class AttachmentHandle {\n    key: null\n    uploadId: null\n    maxPartNum: null\n}");
      attachment0.isRemote(boolean1);
      AttachmentHandle attachmentHandle1 = attachmentHandle0.key("");
      attachment2.setHandle(attachmentHandle1);
      attachment0.getCreatorId();
      attachment1.getReferenced();
      attachment3.setAttachmentId((String) null);
      AttachmentHandle attachmentHandle2 = attachmentHandle0.key("R");
      Attachment attachment4 = attachment1.handle(attachmentHandle2);
      assertNull(attachment4.getId());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.valueOf("{mN<IL");
      Attachment attachment1 = attachment0.isReferenced(boolean0);
      Boolean boolean1 = Boolean.FALSE;
      Attachment attachment2 = attachment1.isManaged(boolean1);
      Attachment attachment3 = attachment2.datasourceType("io.netty.channel.VoidChannelPromise");
      Attachment attachment4 = attachment3.href("{mN<IL");
      Attachment attachment5 = attachment4.isRemote(boolean0);
      Boolean boolean2 = attachment5.getManaged();
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentId("    id: ");
      Boolean boolean0 = new Boolean("    isObjectKeyReadOnly: ");
      Attachment attachment2 = attachment1.transferComplete(boolean0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.uploadId("    id: ");
      attachment2.setMessage(",");
      attachment1.assetType("    id: ");
      Attachment attachment3 = attachment2.handle(attachmentHandle1);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly(boolean0);
      Long long0 = new Long((-1617L));
      Integer integer0 = new Integer(14);
      attachmentHandle1.equals(integer0);
      Attachment attachment5 = attachment4.createTime(long0);
      attachment5.setMessage("    id: ");
      attachment4.setMessage("*Kw`n&sH?vaPul");
      attachment4.isObjectKeyReadOnly(boolean0);
      String string0 = attachment4.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      attachment0.getHandle();
      Boolean boolean0 = Boolean.TRUE;
      attachment0.mime("!WD4`j2");
      attachment0.isManaged(boolean0);
      Boolean boolean1 = Boolean.valueOf("' with value '");
      attachment0.setObjectKeyReadOnly(boolean1);
      attachment0.assetType("");
      attachment0.equals(" was constructed with the default constructor.");
      attachment0.hashCode();
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = attachment0.usage(metadataUsage0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Attachment attachment2 = attachment1.handle(attachmentHandle0);
      Double double0 = new Double((-3143.40430487));
      Attachment attachment3 = attachment2.version(double0);
      Attachment attachment4 = attachment3.attachmentId("%TIfze!(Z;rU&sMffH");
      Attachment attachment5 = attachment4.isObjectKeyReadOnly((Boolean) null);
      attachment5.toString();
      attachment5.attachmentType("%TIfze!(Z;rU&sMffH");
      Attachment attachment6 = attachment5.usage(metadataUsage0);
      MinguoEra minguoEra0 = MinguoEra.ROC;
      boolean boolean0 = attachment6.equals(minguoEra0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.isUserProvidedPathKey((Boolean) null);
      Long long0 = new Long((-2674L));
      Attachment attachment2 = attachment1.createTime(long0);
      MockDate mockDate0 = new MockDate();
      Attachment attachment3 = attachment2.createdAt(mockDate0);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment5 = attachment4.transferComplete((Boolean) null);
      attachment5.getObjectKeyReadOnly();
      Attachment attachment6 = attachment1.transferComplete((Boolean) null);
      Boolean boolean0 = new Boolean("oH;V3VCxHK5n");
      attachment4.isRemote(boolean0);
      attachment6.getUserProvidedPathKey();
      attachment2.getCreateTime();
      attachment5.setReferenced((Boolean) null);
      assertEquals((-2674L), (long)attachment5.getCreateTime());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MockDate mockDate0 = new MockDate((-1516L));
      Attachment attachment1 = attachment0.createdAt(mockDate0);
      Attachment attachment2 = attachment1.datasourceType("    version: ");
      Attachment attachment3 = attachment2.href("reactor.left.decompressor");
      Boolean boolean0 = Boolean.valueOf(false);
      Attachment attachment4 = attachment3.transferComplete(boolean0);
      Attachment attachment5 = attachment4.attachmentType("    version: ");
      Long long0 = new Long(4294967296L);
      attachment5.setCompleteTimeTicks(long0);
      attachment0.setDatasourceType("reactor.left.decompressor");
      attachment1.getDatasourceType();
      Attachment attachment6 = attachment4.isUserProvidedPathKey(boolean0);
      assertNull(attachment6.getRemote());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MockDate mockDate0 = new MockDate((-3296), (-3296), (-3296), (-3296), (-3296));
      MetadataUsage metadataUsage1 = metadataUsage0.lastUpdatedAt(mockDate0);
      MetadataUsage metadataUsage2 = metadataUsage1.lastAccessedAt(mockDate0);
      Long long0 = new Long((-3296));
      MetadataUsage metadataUsage3 = metadataUsage2.lastUpdateTime(long0);
      attachment0.setUsage(metadataUsage3);
      Date date0 = attachment0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.FALSE;
      Boolean.logicalOr(true, true);
      Attachment attachment1 = attachment0.transferComplete(boolean0);
      Boolean boolean1 = new Boolean(true);
      Boolean.getBoolean("    createdAt: ");
      attachment0.setRemote(boolean1);
      attachment1.setMessage("    createdAt: ");
      attachment0.getCreatedAt();
      attachment1.setObjectKeyReadOnly(boolean0);
      Boolean boolean2 = attachment0.getTransferComplete();
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean(true);
      Attachment attachment1 = attachment0.isRemote(boolean0);
      Boolean boolean1 = Boolean.valueOf(true);
      attachment1.setTransferComplete(boolean1);
      Long long0 = new Long(0L);
      Attachment attachment2 = attachment1.completeTimeTicks(long0);
      Attachment attachment3 = attachment2.isUserProvidedPathKey(boolean0);
      Attachment attachment4 = attachment3.href("");
      Attachment attachment5 = attachment4.message("");
      Long long1 = new Long(1L);
      attachment5.setSize(long1);
      Long long2 = new Long(0L);
      Attachment attachment6 = attachment5.completeTimeTicks(long2);
      Long long3 = new Long(1L);
      attachment3.size(long3);
      attachment2.setCreateTime(long3);
      String string0 = attachment6.getHref();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachment0.setAssetCategory(assetCategory0);
      Boolean boolean0 = Boolean.FALSE;
      attachment0.setTransferComplete(boolean0);
      MinguoEra minguoEra0 = MinguoEra.ROC;
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.key("/DgS_j~VB;uIg");
      attachment0.setHandle(attachmentHandle1);
      attachment0.equals(minguoEra0);
      attachment0.toString();
      Attachment attachment1 = attachment0.id("class Attachment {\n    assetType: null\n    name: null\n    description: null\n    mime: null\n    testDoc: null\n    connectionId: null\n    connectionPath: null\n    objectKey: null\n    userData: null\n    isPartitioned: null\n    assetCategory: com.ibm.watson.data.client.model.enums.AssetCategory@0000000003\n    id: null\n    version: null\n    attachmentId: null\n    datasourceType: null\n    attachmentType: null\n    href: null\n    createdAt: null\n    message: null\n    creatorId: null\n    createTime: null\n    size: null\n    isRemote: null\n    isManaged: null\n    isReferenced: null\n    isObjectKeyReadOnly: null\n    isUserProvidedPathKey: null\n    transferComplete: java.lang.Boolean@0000000004\n    completeTimeTicks: null\n    handle: com.ibm.watson.data.client.model.AttachmentHandle@0000000002\n    usage: null\n}");
      attachment0.getUsage();
      Long long0 = attachment1.getSize();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.datasourceType("");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment2 = attachment1.usage(metadataUsage0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Long long0 = new Long((-1747L));
      AttachmentHandle attachmentHandle1 = attachmentHandle0.maxPartNum(long0);
      Attachment attachment3 = attachment2.handle(attachmentHandle1);
      Attachment attachment4 = attachment3.transferComplete((Boolean) null);
      Attachment attachment5 = attachment4.createTime(long0);
      Boolean boolean0 = Boolean.FALSE;
      attachment5.setUserProvidedPathKey(boolean0);
      assertNull(attachment5.getMessage());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.FALSE;
      Attachment attachment1 = attachment0.isObjectKeyReadOnly(boolean0);
      Attachment attachment2 = attachment1.id("kK1)Vbm00IYL$77");
      assertSame(attachment2, attachment0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MockDate mockDate0 = new MockDate();
      MetadataUsage metadataUsage1 = metadataUsage0.lastUpdatedAt(mockDate0);
      MetadataUsage metadataUsage2 = metadataUsage1.lastAccessorId("");
      Attachment attachment1 = attachment0.usage(metadataUsage2);
      Attachment attachment2 = attachment1.createdAt(mockDate0);
      Attachment attachment3 = attachment2.usage(metadataUsage0);
      assertNull(attachment3.getDatasourceType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentType("HircbO([Fo&E");
      Long long0 = new Long((-3295L));
      Attachment attachment2 = attachment1.completeTimeTicks(long0);
      Attachment attachment3 = attachment2.message("reactor.ipc.netty.options.ClientProxyOptions");
      Attachment attachment4 = attachment3.isManaged((Boolean) null);
      Attachment attachment5 = attachment4.href("HircbO([Fo&E");
      attachment5.setHref("=~pBH5GP][W");
      assertNull(attachment5.getRemote());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.isReferenced((Boolean) null);
      Attachment attachment2 = attachment1.isRemote((Boolean) null);
      Attachment attachment3 = attachment2.creatorId((String) null);
      Attachment attachment4 = attachment3.href((String) null);
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment5 = attachment4.isUserProvidedPathKey(boolean0);
      Attachment attachment6 = attachment5.id((String) null);
      assertNull(attachment6.getManaged());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentId("O");
      Double double0 = new Double(0.0);
      Attachment attachment2 = attachment1.version(double0);
      Double double1 = attachment2.getVersion();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.valueOf(false);
      Attachment attachment1 = attachment0.isUserProvidedPathKey(boolean0);
      Attachment attachment2 = attachment0.isReferenced(boolean0);
      attachment2.getObjectKeyReadOnly();
      Boolean boolean1 = Boolean.TRUE;
      attachment1.setTransferComplete(boolean1);
      assertNull(attachment1.getRemote());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.creatorId("]%^Yx!mf<Ml28X468");
      Boolean boolean0 = new Boolean(false);
      Attachment attachment2 = attachment1.isRemote(boolean0);
      assertNull(attachment2.getAttachmentType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message("(U`%vP2zaxwa8v");
      Attachment attachment2 = attachment1.attachmentType("S,FPJjqfYv&Kxo");
      Long long0 = new Long((-1366L));
      Attachment attachment3 = attachment2.createTime(long0);
      assertNull(attachment3.getAttachmentId());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      String string0 = attachment0.getAttachmentType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.FALSE;
      attachment0.setManaged(boolean1);
      Attachment attachment5 = attachment0.creatorId((String) null);
      boolean boolean2 = attachment0.equals(attachment1);
      assertFalse(boolean2);
      
      Boolean boolean3 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean3);
      assertTrue(attachment1.equals((Object)attachment5));
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.TRUE;
      attachment0.attachmentId("");
      attachment0.equals(attachment2);
      Boolean boolean2 = Boolean.FALSE;
      Integer integer0 = Integer.getInteger("networkInterface");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      assertTrue(attachment1.equals((Object)attachment0));
      
      Boolean boolean0 = Boolean.TRUE;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      attachment1.setUserProvidedPathKey(boolean0);
      Boolean boolean1 = Boolean.TRUE;
      boolean boolean2 = attachment0.equals(attachment1);
      assertFalse(boolean2);
      
      Boolean boolean3 = Boolean.FALSE;
      attachment0.isRemote(boolean1);
      assertFalse(attachment0.equals((Object)attachment1));
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      assertTrue(attachment1.equals((Object)attachment0));
      
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      attachment1.setName("'_/");
      Boolean.valueOf("6MMVeLVHMN5[6Z2+");
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      boolean boolean1 = attachment0.equals(attachment2);
      assertFalse(boolean1);
      
      Boolean boolean2 = Boolean.FALSE;
      assertTrue(boolean2.equals((Object)boolean1));
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment4 = (Attachment)attachment3.objectKey((String) null);
      assertTrue(attachment4.equals((Object)attachment0));
      
      Long long0 = new Long(0L);
      attachment4.setCreateTime(long0);
      attachment2.version((Double) null);
      Boolean boolean0 = new Boolean((String) null);
      Attachment attachment5 = attachment3.isManaged(boolean0);
      Boolean boolean1 = Boolean.valueOf((String) null);
      attachment5.setTransferComplete(boolean1);
      attachment5.getCompleteTimeTicks();
      Attachment attachment6 = attachment1.isRemote(boolean0);
      Double double0 = new Double(0.0);
      boolean boolean2 = attachment0.equals(attachment6);
      assertFalse(boolean2);
      
      Boolean boolean3 = Boolean.TRUE;
      attachment1.transferComplete(boolean3);
      Boolean boolean4 = Boolean.FALSE;
      Integer.getInteger((String) null);
      attachment6.getDatasourceType();
      assertFalse(attachment1.equals((Object)attachment0));
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.transferComplete((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment5 = (Attachment)attachment4.objectKey((String) null);
      Attachment attachment6 = attachment3.version((Double) null);
      attachment6.equals((Object) null);
      assertTrue(attachment3.equals((Object)attachment0));
      
      Boolean boolean0 = Boolean.TRUE;
      attachment5.usage(metadataUsage0);
      attachment0.equals(attachment1);
      attachment4.completeTimeTicks((Long) null);
      attachment0.isRemote(boolean0);
      Random.setNextRandom(0);
      boolean boolean1 = attachment4.equals(attachment0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      attachment2.setCreateTime((Long) null);
      assertTrue(attachment2.equals((Object)attachment0));
      
      Long long0 = new Long(12L);
      attachment2.createTime(long0);
      attachment2.objectKey((String) null);
      Attachment attachment3 = attachment2.datasourceType("6MMVeLVHMN5[6Z2+");
      Attachment attachment4 = attachment1.version((Double) null);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.uploadId("    createdAt: ");
      attachment4.setHandle(attachmentHandle1);
      Boolean.valueOf((String) null);
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.creatorId((String) null);
      boolean boolean1 = attachment0.equals(attachment1);
      assertFalse(boolean1);
      
      Boolean boolean2 = Boolean.FALSE;
      Integer.getInteger("");
      attachment1.isManaged(boolean2);
      attachment0.message("");
      assertFalse(attachment0.equals((Object)attachment3));
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      attachment4.objectKey((String) null);
      assertTrue(attachment3.equals((Object)attachment0));
      
      MockDate mockDate0 = new MockDate(152, 152, 307, 307, 307);
      attachment1.setCreatedAt(mockDate0);
      Attachment attachment5 = attachment3.version((Double) null);
      Boolean.valueOf((String) null);
      Double double0 = new Double(0.0);
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment6 = attachment0.creatorId((String) null);
      boolean boolean1 = attachment0.equals(attachment1);
      assertFalse(boolean1);
      
      Boolean boolean2 = Boolean.FALSE;
      Integer.getInteger("r!");
      Attachment attachment7 = attachment5.message("r!");
      assertFalse(attachment7.equals((Object)attachment6));
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.attachmentType("");
      attachment0.setId("_RwBMSn.Nt!BLk");
      Boolean boolean0 = new Boolean(true);
      Attachment attachment2 = attachment1.isObjectKeyReadOnly(boolean0);
      attachment2.getCreateTime();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachment2.getUserData();
      Attachment attachment3 = attachment0.datasourceType("JQS<Z_i^ylp+E[e,(");
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean1 = attachment3.getTransferComplete();
      assertNull(boolean1);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = attachment0.usage(metadataUsage0);
      Boolean boolean0 = new Boolean("reactor.core.publisher.FluxDetach");
      attachment1.message("reactor.core.publisher.FluxDetach");
      Attachment attachment2 = attachment1.datasourceType("reactor.core.publisher.FluxDetach");
      Boolean boolean1 = Boolean.valueOf("reactor.core.publisher.FluxDetach");
      Boolean.logicalAnd(false, false);
      attachment2.setManaged(boolean1);
      assertNull(attachment2.getConnectionPath());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Double double0 = new Double(4453.206755457864);
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment0.href("U7e");
      MockDate mockDate0 = new MockDate();
      attachment2.createdAt(mockDate0);
      Attachment attachment3 = attachment2.datasourceType("U7e");
      attachment3.equals(attachment2);
      attachment1.id("U7e");
      attachment1.attachmentId("");
      assertFalse(attachment1.equals((Object)attachment0));
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message("$HKXJ*[L+@mz\"");
      Long long0 = new Long((-1200L));
      Long.min(1714L, 0L);
      attachment1.createTime(long0);
      attachment1.setHref("`]C]rm4a9Vq$");
      Boolean boolean0 = attachment1.getManaged();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = new Boolean(false);
      Attachment attachment1 = attachment0.isRemote(boolean0);
      Boolean.getBoolean("d9/$>)E}7zYhiJ>.}|");
      attachment1.setTransferComplete(boolean0);
      Long long0 = new Long(0L);
      Attachment attachment2 = attachment1.completeTimeTicks(long0);
      Attachment attachment3 = attachment2.isUserProvidedPathKey(boolean0);
      Attachment attachment4 = attachment3.href("");
      Long long1 = new Long(1L);
      attachment3.setSize(long1);
      Long long2 = new Long(0L);
      Attachment attachment5 = attachment4.completeTimeTicks(long2);
      Long long3 = new Long(1L);
      attachment3.size(long3);
      attachment5.getHref();
      Boolean boolean1 = Boolean.valueOf(false);
      Attachment attachment6 = attachment4.isObjectKeyReadOnly(boolean1);
      assertNull(attachment6.getObjectKey());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Long long0 = new Long((-684L));
      Attachment attachment1 = attachment0.completeTimeTicks(long0);
      Attachment attachment2 = attachment1.message("");
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = attachmentHandle0.key((String) null);
      attachment0.setMessage("io.netty.util.concurrent.SingleThreadEventExecutor$1");
      Boolean boolean0 = new Boolean((String) null);
      Attachment attachment3 = attachment2.handle(attachmentHandle1);
      attachment3.setDatasourceType("");
      Attachment attachment4 = attachment3.completeTimeTicks((Long) null);
      attachment3.setAttachmentType("");
      Boolean boolean1 = Boolean.FALSE;
      attachment3.isReferenced(boolean1);
      ImmediateEventExecutor immediateEventExecutor0 = ImmediateEventExecutor.INSTANCE;
      MockThread mockThread0 = new MockThread();
      attachment4.href((String) null);
      attachment0.getVersion();
      Attachment attachment5 = attachment0.size((Long) null);
      attachment4.completeTimeTicks((Long) null);
      attachment5.datasourceType("loO?qheh>xHs%)");
      Attachment attachment6 = attachment2.isUserProvidedPathKey(boolean1);
      assertNull(attachment6.getName());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isRemote((Boolean) null);
      attachment2.setCreateTime((Long) null);
      Attachment attachment4 = attachment3.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment5 = attachment4.isObjectKeyReadOnly((Boolean) null);
      Attachment attachment6 = attachment3.version((Double) null);
      attachment6.equals((Object) null);
      assertTrue(attachment3.equals((Object)attachment0));
      
      metadataUsage0.setLastAccessorId("class Attachment {\n");
      Boolean boolean0 = Boolean.TRUE;
      attachment1.transferComplete(boolean0);
      attachment0.equals(attachment1);
      Boolean boolean1 = Boolean.TRUE;
      attachment4.completeTimeTicks((Long) null);
      Integer.getInteger("class Attachment {\n");
      attachment5.message("class Attachment {\n");
      attachment0.isRemote(boolean0);
      Random.setNextRandom(0);
      boolean boolean2 = attachment4.equals(attachment0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Boolean.valueOf((String) null);
      metadataUsage0.setLastAccessorId("6MMVeLVHMN5[6Z2+");
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment2 = attachment0.creatorId((String) null);
      attachment0.equals(attachment1);
      assertTrue(attachment1.equals((Object)attachment0));
      
      Boolean boolean1 = Boolean.FALSE;
      Attachment attachment3 = attachment1.isManaged(boolean1);
      assertFalse(attachment3.equals((Object)attachment2));
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.href("6MMVeLVHMN5[6Z2+");
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.TRUE;
      attachment1.transferComplete(boolean1);
      attachment0.equals(attachment2);
      Boolean boolean2 = Boolean.FALSE;
      Integer integer0 = Integer.getInteger("networkInterface");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.attachmentType("6MMVeLVHMN5[6Z2+");
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.TRUE;
      attachment1.transferComplete(boolean1);
      attachment0.equals(attachment2);
      Boolean boolean2 = Boolean.FALSE;
      Integer integer0 = Integer.getInteger("networkInterface");
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Attachment attachment1 = new Attachment();
      Attachment attachment2 = attachment1.isManaged((Boolean) null);
      Attachment attachment3 = attachment2.isObjectKeyReadOnly((Boolean) null);
      assertTrue(attachment3.equals((Object)attachment0));
      
      Long long0 = new Long(0L);
      Boolean boolean0 = Boolean.TRUE;
      attachment3.isManaged(boolean0);
      Attachment attachment4 = attachment1.isRemote(boolean0);
      Double double0 = new Double(0.0);
      attachment4.setVersion(double0);
      boolean boolean1 = attachment0.equals(attachment4);
      assertFalse(boolean1);
      
      Boolean boolean2 = Boolean.TRUE;
      Boolean boolean3 = Boolean.FALSE;
      attachment4.getDatasourceType();
      assertFalse(attachment1.equals((Object)attachment0));
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message("X}zf_'YNri, r");
      Attachment attachment2 = attachment0.attachmentType((String) null);
      Attachment attachment3 = attachment2.datasourceType("X}zf_'YNri, r");
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      Attachment attachment4 = attachment3.handle(attachmentHandle0);
      attachment4.setDescription((String) null);
      Attachment attachment5 = attachment4.creatorId("GJef;a_Y3");
      attachment3.equals("GJef;a_Y3");
      attachment5.setId("GJef;a_Y3");
      Long long0 = new Long((-353L));
      attachment4.setCompleteTimeTicks(long0);
      attachment1.getUserProvidedPathKey();
      Boolean.logicalOr(false, true);
      attachment1.isUserProvidedPathKey((Boolean) null);
      attachment2.id("    version: ");
      attachment3.getObjectKeyReadOnly();
      Attachment attachment6 = attachment5.isManaged((Boolean) null);
      assertNull(attachment6.getTestDoc());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.creatorId("syscall:getsockopt");
      Boolean boolean0 = Boolean.TRUE;
      Attachment attachment2 = attachment1.isObjectKeyReadOnly(boolean0);
      attachment2.setMime("syscall:getsockopt");
      attachment2.href("syscall:getsockopt");
      Boolean boolean1 = Boolean.FALSE;
      attachment0.setUserProvidedPathKey(boolean1);
      Attachment attachment3 = attachment2.isUserProvidedPathKey(boolean0);
      Attachment attachment4 = attachment1.id("syscall:getsockopt");
      attachment4.getId();
      attachment3.setAttachmentType("syscall:getsockopt");
      Attachment attachment5 = attachment2.isManaged(boolean0);
      attachment4.setObjectKeyReadOnly(boolean0);
      attachment0.getRemote();
      attachment5.getCreatedAt();
      Boolean boolean2 = Boolean.valueOf(false);
      attachment4.setObjectKeyReadOnly(boolean2);
      assertEquals("syscall:getsockopt", attachment4.getHref());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.TRUE;
      Boolean.logicalXor(true, true);
      Boolean boolean1 = new Boolean("p2");
      attachment0.isObjectKeyReadOnly(boolean1);
      String string0 = attachment0.getAttachmentId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Boolean boolean0 = Boolean.FALSE;
      attachment0.setTransferComplete(boolean0);
      AttachmentHandle attachmentHandle0 = new AttachmentHandle();
      AttachmentHandle attachmentHandle1 = new AttachmentHandle();
      attachment0.setHandle(attachmentHandle1);
      attachment0.toString();
      attachment0.getUsage();
      Long long0 = attachment0.getSize();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.message("pQ:h~R])z,Nx[O`d");
      Boolean boolean0 = Boolean.TRUE;
      Long long0 = new Long((-212L));
      Attachment attachment2 = attachment1.size(long0);
      Long.compare((-212L), (-995L));
      Double double0 = new Double((-212L));
      Attachment attachment3 = attachment2.version(double0);
      Boolean boolean1 = Boolean.FALSE;
      Double.isFinite((-1879.0374542955064));
      Attachment attachment4 = attachment2.creatorId("pQ:h~R])z,Nx[O`d");
      attachment4.attachmentType("pQ:h~R])z,Nx[O`d");
      attachment4.setRemote(boolean1);
      AssetCategory assetCategory0 = AssetCategory.USER;
      Boolean.logicalAnd(false, true);
      attachment4.setAssetCategory(assetCategory0);
      Boolean.logicalXor(true, true);
      Attachment attachment5 = attachment0.createTime(long0);
      Attachment attachment6 = attachment1.createTime(long0);
      Long.getLong("pQ:h~R])z,Nx[O`d", (-212L));
      attachment6.hashCode();
      attachment1.version(double0);
      attachment3.getMessage();
      attachment1.getTransferComplete();
      attachment5.setReferenced(boolean0);
      Attachment attachment7 = attachment4.isObjectKeyReadOnly(boolean0);
      assertNull(attachment7.getIsPartitioned());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      attachment0.setUsage((MetadataUsage) null);
      Boolean boolean0 = Boolean.TRUE;
      attachment0.setUserProvidedPathKey(boolean0);
      attachment0.getReferenced();
      attachment0.getMessage();
      attachment0.getCreatorId();
      Boolean boolean1 = new Boolean((String) null);
      Boolean.logicalOr(false, false);
      Long long0 = new Long((-26L));
      attachment0.getAttachmentType();
      Boolean boolean2 = Boolean.valueOf("");
      Attachment attachment1 = attachment0.isManaged(boolean2);
      Double double0 = attachment1.getVersion();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.creatorId((String) null);
      Boolean boolean0 = Boolean.FALSE;
      Attachment attachment2 = attachment1.isRemote(boolean0);
      Attachment attachment3 = attachment2.message((String) null);
      Boolean boolean1 = Boolean.FALSE;
      attachment2.setIsPartitioned(boolean1);
      attachment3.isUserProvidedPathKey(boolean0);
      ChronoField chronoField0 = ChronoField.CLOCK_HOUR_OF_DAY;
      Integer integer0 = new Integer((-3057));
      attachment2.setCreatorId((String) null);
      assertNull(attachment2.getSize());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      attachment0.datasourceType("ev.s_jL:^");
      Attachment attachment1 = attachment0.id("");
      Attachment attachment2 = (Attachment)attachment1.description("D~p55?F!dY1o");
      Boolean boolean0 = new Boolean("ev.s_jL:^");
      Double double0 = new Double((-509.143735557));
      Attachment attachment3 = attachment0.isObjectKeyReadOnly(boolean0);
      Long long0 = new Long(2402L);
      attachment3.createTime(long0);
      attachment0.equals("");
      attachment0.setAttachmentId("hV3<jYn:Y,\n;WN");
      attachment3.message("D~p55?F!dY1o");
      attachment2.version(double0);
      Object object0 = new Object();
      attachment1.toIndentedString(object0);
      attachment3.getUsage();
      AttachmentHandle attachmentHandle0 = attachment0.getHandle();
      assertNull(attachmentHandle0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Attachment attachment0 = new Attachment();
      Attachment attachment1 = attachment0.creatorId("    completeTimeTicks: ");
      Double double0 = attachment1.getVersion();
      assertNull(double0);
  }
}
