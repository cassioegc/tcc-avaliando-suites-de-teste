/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:13:47 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CreateUserSuccessResponse;
import com.ibm.watson.data.client.model.CreateUserSuccessResponseAllOf1User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CreateUserSuccessResponse_ESTest extends CreateUserSuccessResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponse0.user(createUserSuccessResponseAllOf1User0);
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User1 = createUserSuccessResponse0.getUser();
      assertSame(createUserSuccessResponseAllOf1User1, createUserSuccessResponseAllOf1User0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      CreateUserSuccessResponse createUserSuccessResponse1 = new CreateUserSuccessResponse();
      boolean boolean0 = createUserSuccessResponse0.equals(createUserSuccessResponse1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      CreateUserSuccessResponse createUserSuccessResponse1 = new CreateUserSuccessResponse();
      createUserSuccessResponse1.setMessageCode("O;+X??@=1CW");
      boolean boolean0 = createUserSuccessResponse0.equals(createUserSuccessResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      Object object0 = new Object();
      boolean boolean0 = createUserSuccessResponse0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      boolean boolean0 = createUserSuccessResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      boolean boolean0 = createUserSuccessResponse0.equals(createUserSuccessResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponse0.setUser(createUserSuccessResponseAllOf1User0);
      assertNull(createUserSuccessResponseAllOf1User0.getID());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = createUserSuccessResponse0.getUser();
      assertNull(createUserSuccessResponseAllOf1User0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      String string0 = createUserSuccessResponse0.toString();
      assertEquals("class CreateUserSuccessResponse {\n    messageCode: null\n    message: null\n    user: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      createUserSuccessResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateUserSuccessResponse createUserSuccessResponse0 = new CreateUserSuccessResponse();
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      CreateUserSuccessResponse createUserSuccessResponse1 = createUserSuccessResponse0.user(createUserSuccessResponseAllOf1User0);
      CreateUserSuccessResponse createUserSuccessResponse2 = new CreateUserSuccessResponse();
      boolean boolean0 = createUserSuccessResponse1.equals(createUserSuccessResponse2);
      assertFalse(boolean0);
  }
}
