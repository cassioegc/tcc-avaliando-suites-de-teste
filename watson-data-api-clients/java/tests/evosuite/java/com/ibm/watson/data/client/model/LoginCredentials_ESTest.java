/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:37:51 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.LoginCredentials;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LoginCredentials_ESTest extends LoginCredentials_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      loginCredentials0.username("class LoginCredentials {\n");
      String string0 = loginCredentials0.getUsername();
      assertEquals("class LoginCredentials {\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      LoginCredentials loginCredentials1 = loginCredentials0.username("");
      String string0 = loginCredentials1.getUsername();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      LoginCredentials loginCredentials1 = loginCredentials0.password("");
      String string0 = loginCredentials1.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      LoginCredentials loginCredentials1 = loginCredentials0.username("");
      String string0 = loginCredentials1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      LoginCredentials loginCredentials1 = loginCredentials0.password("class LoginCredentials {\n    password: <redacted>\n    username: null\n}");
      LoginCredentials loginCredentials2 = new LoginCredentials();
      boolean boolean0 = loginCredentials1.equals(loginCredentials2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      Object object0 = new Object();
      boolean boolean0 = loginCredentials0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      LoginCredentials loginCredentials1 = new LoginCredentials();
      boolean boolean0 = loginCredentials0.equals(loginCredentials1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      boolean boolean0 = loginCredentials0.equals(loginCredentials0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      boolean boolean0 = loginCredentials0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      loginCredentials0.setUsername("class LoginCredentials {\n    password: <redacted>\n    username: java.lang.String@0000000002\n}");
      assertNull(loginCredentials0.getPassword());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      loginCredentials0.setPassword("R[8rXPFOS");
      String string0 = loginCredentials0.getPassword();
      assertEquals("R[8rXPFOS", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      String string0 = loginCredentials0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      loginCredentials0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      String string0 = loginCredentials0.toString();
      assertEquals("class LoginCredentials {\n    password: <redacted>\n    username: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      String string0 = loginCredentials0.getUsername();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LoginCredentials loginCredentials0 = new LoginCredentials();
      loginCredentials0.username("9?");
      LoginCredentials loginCredentials1 = new LoginCredentials();
      boolean boolean0 = loginCredentials0.equals(loginCredentials1);
      assertFalse(boolean0);
  }
}
