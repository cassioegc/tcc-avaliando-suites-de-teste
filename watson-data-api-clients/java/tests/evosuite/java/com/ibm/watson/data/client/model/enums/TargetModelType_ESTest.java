/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:37:12 GMT 2021
 */

package com.ibm.watson.data.client.model.enums;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.enums.TargetModelType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TargetModelType_ESTest extends TargetModelType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TargetModelType targetModelType0 = TargetModelType.fromValue("parameter");
      assertEquals(TargetModelType.PARAMETER, targetModelType0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TargetModelType[] targetModelTypeArray0 = TargetModelType.values();
      assertEquals(3, targetModelTypeArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TargetModelType targetModelType0 = TargetModelType.valueOf("HEADER");
      assertEquals(TargetModelType.HEADER, targetModelType0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TargetModelType targetModelType0 = TargetModelType.fromValue("field");
      assertEquals(TargetModelType.FIELD, targetModelType0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        TargetModelType.fromValue("(>hW2~:C<R4mpe");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unexpected value '(>hW2~:C<R4mpe'
         //
         verifyException("com.ibm.watson.data.client.model.enums.TargetModelType", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TargetModelType targetModelType0 = TargetModelType.FIELD;
      String string0 = targetModelType0.getValue();
      assertEquals("field", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TargetModelType targetModelType0 = TargetModelType.FIELD;
      String string0 = targetModelType0.toString();
      assertEquals("field", string0);
  }
}
