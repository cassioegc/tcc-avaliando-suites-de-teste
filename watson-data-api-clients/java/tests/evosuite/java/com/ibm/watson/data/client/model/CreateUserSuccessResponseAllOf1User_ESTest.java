/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:26:22 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CreateUserSuccessResponseAllOf1User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CreateUserSuccessResponseAllOf1User_ESTest extends CreateUserSuccessResponseAllOf1User_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User0.setPassword("ALWAYS");
      String string0 = createUserSuccessResponseAllOf1User0.getPassword();
      assertEquals("ALWAYS", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User0.ID("USE_DEFAULTS");
      String string0 = createUserSuccessResponseAllOf1User0.getID();
      assertEquals("USE_DEFAULTS", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User0.setID(">A7p$Tv4K}7Qj");
      String string0 = createUserSuccessResponseAllOf1User0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User1 = createUserSuccessResponseAllOf1User0.password(">A7p$Tv4K}7Qj");
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User2 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User2.setID("");
      createUserSuccessResponseAllOf1User0.setID("");
      boolean boolean0 = createUserSuccessResponseAllOf1User1.equals(createUserSuccessResponseAllOf1User2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User1 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User1.setID("");
      assertFalse(createUserSuccessResponseAllOf1User1.equals((Object)createUserSuccessResponseAllOf1User0));
      
      createUserSuccessResponseAllOf1User0.setID("");
      boolean boolean0 = createUserSuccessResponseAllOf1User0.equals(createUserSuccessResponseAllOf1User1);
      assertTrue(createUserSuccessResponseAllOf1User1.equals((Object)createUserSuccessResponseAllOf1User0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      Object object0 = new Object();
      boolean boolean0 = createUserSuccessResponseAllOf1User0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      boolean boolean0 = createUserSuccessResponseAllOf1User0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      boolean boolean0 = createUserSuccessResponseAllOf1User0.equals(createUserSuccessResponseAllOf1User0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User0.setID(">A7p$Tv4K}7Qj");
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User1 = new CreateUserSuccessResponseAllOf1User();
      boolean boolean0 = createUserSuccessResponseAllOf1User0.equals(createUserSuccessResponseAllOf1User1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User0.ID("");
      String string0 = createUserSuccessResponseAllOf1User0.getID();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User1 = createUserSuccessResponseAllOf1User0.password("");
      String string0 = createUserSuccessResponseAllOf1User1.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      createUserSuccessResponseAllOf1User0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      String string0 = createUserSuccessResponseAllOf1User0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      String string0 = createUserSuccessResponseAllOf1User0.getID();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CreateUserSuccessResponseAllOf1User createUserSuccessResponseAllOf1User0 = new CreateUserSuccessResponseAllOf1User();
      String string0 = createUserSuccessResponseAllOf1User0.toString();
      assertEquals("class CreateUserSuccessResponseAllOf1User {\n    ID: null\n    password: <redacted>\n}", string0);
  }
}
