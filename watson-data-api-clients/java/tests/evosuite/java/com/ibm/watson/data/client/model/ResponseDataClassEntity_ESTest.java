/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:03:22 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.PaginatedParentRelationshipsList;
import com.ibm.watson.data.client.model.PaginatedRelationshipsList;
import com.ibm.watson.data.client.model.ResponseDataClassEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ResponseDataClassEntity_ESTest extends ResponseDataClassEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      ResponseDataClassEntity responseDataClassEntity1 = responseDataClassEntity0.providerType("(mkBrTsrf^pdU<PcRH");
      String string0 = responseDataClassEntity1.getProviderType();
      assertEquals("(mkBrTsrf^pdU<PcRH", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.setProviderType("");
      String string0 = responseDataClassEntity0.getProviderType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = responseDataClassEntity0.policies(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseDataClassEntity1.getPolicies();
      assertNull(paginatedRelationshipsList1.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      Boolean boolean0 = Boolean.TRUE;
      responseDataClassEntity0.setParentEnabled(boolean0);
      Boolean boolean1 = responseDataClassEntity0.getParentEnabled();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      Boolean boolean0 = XmlSuite.DEFAULT_ALLOW_RETURN_VALUES;
      ResponseDataClassEntity responseDataClassEntity1 = responseDataClassEntity0.parentEnabled(boolean0);
      Boolean boolean1 = responseDataClassEntity1.getParentEnabled();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.definition("2R.&1v");
      String string0 = responseDataClassEntity0.getDefinition();
      assertEquals("2R.&1v", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.definition("");
      String string0 = responseDataClassEntity0.getDefinition();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.defaultLocaleId("");
      String string0 = responseDataClassEntity0.getDefaultLocaleId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      ResponseDataClassEntity responseDataClassEntity2 = responseDataClassEntity1.rules(paginatedRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      responseDataClassEntity0.setPolicies(paginatedRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.referenceData(paginatedRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      responseDataClassEntity0.classifications(paginatedRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      ResponseDataClassEntity responseDataClassEntity2 = responseDataClassEntity1.terms(paginatedRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      ResponseDataClassEntity responseDataClassEntity2 = responseDataClassEntity1.categories(paginatedRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      responseDataClassEntity1.hasTypesDataClasses(paginatedRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      responseDataClassEntity1.parentCategory(paginatedParentRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      responseDataClassEntity1.isATypeOfDataClass(paginatedParentRelationshipsList0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.defaultLocaleId("ITTi");
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      Boolean boolean0 = XmlSuite.DEFAULT_SKIP_FAILED_INVOCATION_COUNTS;
      ResponseDataClassEntity responseDataClassEntity2 = responseDataClassEntity1.parentEnabled(boolean0);
      boolean boolean1 = responseDataClassEntity0.equals(responseDataClassEntity2);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.definition("F");
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      String string0 = responseDataClassEntity0.toString();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      assertTrue(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      
      responseDataClassEntity1.providerType(string0);
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(responseDataClassEntity1.equals((Object)responseDataClassEntity0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      responseDataClassEntity0.setExpression("ITTi");
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      ResponseDataClassEntity responseDataClassEntity1 = new ResponseDataClassEntity();
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      boolean boolean0 = responseDataClassEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      boolean boolean0 = responseDataClassEntity0.equals(responseDataClassEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      Object object0 = new Object();
      boolean boolean0 = responseDataClassEntity0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.setClassifications(paginatedRelationshipsList0);
      assertNull(paginatedRelationshipsList0.getCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseDataClassEntity0.getCategories();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.defaultLocaleId(" wB`2A=L%!dqh");
      String string0 = responseDataClassEntity0.getDefaultLocaleId();
      assertEquals(" wB`2A=L%!dqh", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.referenceData(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseDataClassEntity0.getReferenceData();
      assertNull(paginatedRelationshipsList1.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      responseDataClassEntity0.setParentCategory(paginatedParentRelationshipsList0);
      assertNull(responseDataClassEntity0.getPriority());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.setRules(paginatedRelationshipsList0);
      assertNull(responseDataClassEntity0.getRegularExpression());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.setDefinition((String) null);
      assertNull(responseDataClassEntity0.getDataClassType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseDataClassEntity0.getRules();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = responseDataClassEntity0.classifications(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseDataClassEntity1.getClassifications();
      assertSame(paginatedRelationshipsList0, paginatedRelationshipsList1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.setReferenceData(paginatedRelationshipsList0);
      assertNull(responseDataClassEntity0.getJavaClassName());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.rules(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseDataClassEntity0.getRules();
      assertNull(paginatedRelationshipsList1.getCount());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      String string0 = responseDataClassEntity0.getProviderType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      ResponseDataClassEntity responseDataClassEntity1 = responseDataClassEntity0.parentCategory(paginatedParentRelationshipsList0);
      PaginatedParentRelationshipsList paginatedParentRelationshipsList1 = responseDataClassEntity1.getParentCategory();
      assertNull(paginatedParentRelationshipsList1.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      String string0 = responseDataClassEntity0.getDefaultLocaleId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseDataClassEntity0.getPolicies();
      responseDataClassEntity0.setPolicies(paginatedRelationshipsList0);
      assertNull(responseDataClassEntity0.getMaximumDataLength());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = new PaginatedParentRelationshipsList();
      responseDataClassEntity0.setIsATypeOfDataClass(paginatedParentRelationshipsList0);
      PaginatedParentRelationshipsList paginatedParentRelationshipsList1 = responseDataClassEntity0.getIsATypeOfDataClass();
      assertSame(paginatedParentRelationshipsList1, paginatedParentRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.setDefaultLocaleId("O&vXC A5~vOAH5OBE");
      assertNull(responseDataClassEntity0.getLongDescription());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.setHasTypesDataClasses(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseDataClassEntity0.getHasTypesDataClasses();
      assertNull(paginatedRelationshipsList1.getCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseDataClassEntity0.getClassifications();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.setCategories(paginatedRelationshipsList0);
      assertNull(responseDataClassEntity0.getAllowSubstringMatch());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.categories(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseDataClassEntity0.getCategories();
      assertNull(paginatedRelationshipsList1.getLimit());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseDataClassEntity0.getReferenceData();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = responseDataClassEntity0.getIsATypeOfDataClass();
      assertNull(paginatedParentRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = new PaginatedRelationshipsList();
      responseDataClassEntity0.setTerms(paginatedRelationshipsList0);
      PaginatedRelationshipsList paginatedRelationshipsList1 = responseDataClassEntity0.getTerms();
      assertSame(paginatedRelationshipsList1, paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedParentRelationshipsList paginatedParentRelationshipsList0 = responseDataClassEntity0.getParentCategory();
      assertNull(paginatedParentRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      Boolean boolean0 = responseDataClassEntity0.getParentEnabled();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseDataClassEntity0.getTerms();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      PaginatedRelationshipsList paginatedRelationshipsList0 = responseDataClassEntity0.getHasTypesDataClasses();
      assertNull(paginatedRelationshipsList0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      responseDataClassEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ResponseDataClassEntity responseDataClassEntity0 = new ResponseDataClassEntity();
      String string0 = responseDataClassEntity0.getDefinition();
      assertNull(string0);
  }
}
