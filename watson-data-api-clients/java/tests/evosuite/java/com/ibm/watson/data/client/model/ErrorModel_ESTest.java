/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:58:53 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.ibm.watson.data.client.model.ErrorModel;
import com.ibm.watson.data.client.model.ErrorTargetModel;
import java.util.function.BiFunction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ErrorModel_ESTest extends ErrorModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.hashCode();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.put("[Response Write Completed]", "(");
      ErrorTargetModel errorTargetModel0 = new ErrorTargetModel();
      ErrorModel errorModel1 = errorModel0.target(errorTargetModel0);
      assertNull(errorModel1.getMessage());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      BiFunction<Object, Object, String> biFunction0 = (BiFunction<Object, Object, String>) mock(BiFunction.class, new ViolatedAssumptionAnswer());
      doReturn(":1RD[").when(biFunction0).apply(any() , any());
      errorModel0.compute("<Jo}'u&{2ao", biFunction0);
      ErrorModel errorModel1 = errorModel0.moreInfo(":1RD[");
      assertNull(errorModel1.getMessage());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.putIfAbsent("xFNe5(m66ogC[", (Object) null);
      ErrorModel errorModel1 = errorModel0.message("`b;~v-97T0pv");
      assertNull(errorModel1.getMoreInfo());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorTargetModel errorTargetModel0 = new ErrorTargetModel();
      errorModel0.target(errorTargetModel0);
      ErrorTargetModel errorTargetModel1 = errorModel0.getTarget();
      assertSame(errorTargetModel1, errorTargetModel0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorModel errorModel1 = errorModel0.moreInfo("<Jo}'u&{2ao");
      String string0 = errorModel1.getMoreInfo();
      assertEquals("<Jo}'u&{2ao", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.moreInfo("");
      String string0 = errorModel0.getMoreInfo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.message("[?s<UD!.DL7JQ^[.g|{");
      String string0 = errorModel0.getMessage();
      assertEquals("[?s<UD!.DL7JQ^[.g|{", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.setMessage("");
      String string0 = errorModel0.getMessage();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.code("[Response Write Completed]");
      String string0 = errorModel0.getCode();
      assertEquals("[Response Write Completed]", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorModel errorModel1 = errorModel0.code("");
      String string0 = errorModel1.getCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.put("[Response Write Completed]", "(");
      ErrorModel errorModel1 = errorModel0.code("[Response Write Completed]");
      assertSame(errorModel0, errorModel1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorModel errorModel1 = (ErrorModel)errorModel0.clone();
      assertTrue(errorModel1.equals((Object)errorModel0));
      
      errorModel1.moreInfo("class ErrorModel {\n    java.lang.String@0000000003\n    code: null\n    target: com.ibm.watson.data.client.model.ErrorTargetModel@0000000002\n    message: null\n    moreInfo: java.lang.String@0000000004\n}");
      boolean boolean0 = errorModel0.equals(errorModel1);
      assertFalse(errorModel1.equals((Object)errorModel0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorTargetModel errorTargetModel0 = new ErrorTargetModel();
      errorModel0.target(errorTargetModel0);
      ErrorModel errorModel1 = new ErrorModel();
      boolean boolean0 = errorModel0.equals(errorModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorModel errorModel1 = new ErrorModel();
      errorModel1.code("bootstrapTemplate=");
      boolean boolean0 = errorModel0.equals(errorModel1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorModel errorModel1 = new ErrorModel();
      boolean boolean0 = errorModel0.equals(errorModel1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      boolean boolean0 = errorModel0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      boolean boolean0 = errorModel0.equals(errorModel0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      boolean boolean0 = errorModel0.equals("com.ibm.watson.data.client.model.ErrorModel");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      String string0 = errorModel0.getCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.setMoreInfo("com.ibm.watson.data.client.model.ErrorModel");
      assertNull(errorModel0.getMessage());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorTargetModel errorTargetModel0 = errorModel0.getTarget();
      assertNull(errorTargetModel0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      String string0 = errorModel0.getMoreInfo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      String string0 = errorModel0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      ErrorTargetModel errorTargetModel0 = new ErrorTargetModel();
      errorModel0.setTarget(errorTargetModel0);
      assertNull(errorTargetModel0.getName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      String string0 = errorModel0.getMessage();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ErrorModel errorModel0 = new ErrorModel();
      errorModel0.setCode("reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber");
      assertEquals(0, errorModel0.size());
  }
}
