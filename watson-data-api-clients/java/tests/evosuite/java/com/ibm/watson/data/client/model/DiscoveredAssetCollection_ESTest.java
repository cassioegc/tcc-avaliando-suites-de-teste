/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 13:46:38 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.DiscoveredAsset;
import com.ibm.watson.data.client.model.DiscoveredAssetCollection;
import com.ibm.watson.data.client.model.DiscoveredAssetExtendedMetadataProperty;
import com.ibm.watson.data.client.model.DiscoveredAssetField;
import com.ibm.watson.data.client.model.DiscoveredAssetFieldType;
import com.ibm.watson.data.client.model.DiscoveredAssetType;
import com.ibm.watson.data.client.model.DiscoveryLog;
import com.ibm.watson.data.client.model.HrefModel;
import com.ibm.watson.data.client.model.enums.Severity;
import io.netty.channel.ChannelDuplexHandler;
import io.netty.channel.DelegatingChannelPromiseNotifier;
import io.netty.channel.epoll.EpollSocketChannel;
import io.netty.handler.logging.LogLevel;
import io.netty.handler.logging.LoggingHandler;
import io.netty.util.concurrent.ImmediateEventExecutor;
import io.netty.util.concurrent.ProgressivePromise;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.LinkedTransferQueue;
import java.util.stream.Stream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.testng.xml.XmlRun;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DiscoveredAssetCollection_ESTest extends DiscoveredAssetCollection_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.prev(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.description(".]euJKAlBC@,iG*e");
      discoveredAssetCollection1.getFields();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.fields((List<DiscoveredAssetField>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.path(".]euJKAlBC@,iG*e");
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      discoveredAsset0.getDetails();
      discoveryLog0.details((Map<String, Object>) null);
      Severity severity0 = Severity.INFO;
      DiscoveryLog discoveryLog1 = discoveryLog0.severity(severity0);
      DiscoveryLog discoveryLog2 = discoveryLog1.putDetailsItem("?CnYdF^.T'U", (Object) null);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.putInteractionPropertiesItem(".]euJKAlBC@,iG*e", discoveryLog2);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      discoveredAssetCollection5.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      discoveredAssetCollection4.getPath();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.offset(integer0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.prev(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.first(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.id("!+X=g#");
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.data(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.data(discoveredAssetCollection4);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.id("");
      discoveredAssetCollection3.getExtendedMetadata();
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.type("2SL|{lP`n$'g5A s");
      Integer integer1 = XmlSuite.DEFAULT_THREAD_COUNT;
      DiscoveredAsset discoveredAsset2 = discoveredAsset1.putDetailsItem("Vw?MB", integer1);
      DiscoveredAssetCollection discoveredAssetCollection8 = discoveredAssetCollection3.addAssetsItem(discoveredAsset2);
      HrefModel hrefModel1 = new HrefModel();
      discoveredAssetCollection6.setFirst(hrefModel1);
      ArrayList<DiscoveredAsset> arrayList0 = new ArrayList<DiscoveredAsset>();
      Integer.max(0, (-1011));
      discoveredAsset0.setPath("");
      discoveredAssetCollection6.assets(arrayList0);
      LinkedList<DiscoveredAssetType> linkedList0 = new LinkedList<DiscoveredAssetType>();
      discoveredAssetCollection4.assetTypes(linkedList0);
      discoveredAssetCollection7.getOffset();
      discoveredAssetCollection4.getProperties();
      discoveredAssetCollection8.getLogs();
      discoveredAssetCollection0.getId();
      discoveredAssetCollection0.first(hrefModel0);
      discoveredAssetCollection4.getProperties();
      Random.setNextRandom(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getFields();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      discoveredAssetCollection0.setInteractionProperties(hashMap0);
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.fields((List<DiscoveredAssetField>) null);
      Map<String, Object> map0 = discoveredAssetCollection1.getInteractionProperties();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.interactionProperties(map0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.putPropertiesItem("d&PhPJzSRYfRgg!K", discoveredAssetCollection0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.logs(stack0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.prev(hrefModel0);
      discoveredAssetCollection5.setNext(hrefModel0);
      discoveredAssetCollection1.path("d&PhPJzSRYfRgg!K");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.prev(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.description("    last: ");
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.tags((List<String>) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addAssetsItem(discoveredAsset1);
      DiscoveredAsset discoveredAsset2 = discoveredAsset0.addTagsItem("    last: ");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.data(discoveredAsset2);
      discoveredAsset2.equals((Object) null);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.description("    last: ");
      DiscoveredAssetField discoveredAssetField2 = discoveredAssetField1.name("[d~\"Eif[I");
      DiscoveredAssetFieldType discoveredAssetFieldType0 = new DiscoveredAssetFieldType();
      Boolean boolean0 = new Boolean("    last: ");
      DiscoveredAssetFieldType discoveredAssetFieldType1 = discoveredAssetFieldType0.signed(boolean0);
      DiscoveredAssetField discoveredAssetField3 = discoveredAssetField2.type(discoveredAssetFieldType1);
      discoveredAssetCollection3.addFieldsItem(discoveredAssetField3);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.offset(integer0);
      discoveredAssetCollection5.getProperties();
      discoveredAssetCollection0.getOffset();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.description("");
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.prev(hrefModel0);
      ArrayList<DiscoveredAsset> arrayList0 = new ArrayList<DiscoveredAsset>();
      LinkedList<DiscoveredAssetField> linkedList0 = new LinkedList<DiscoveredAssetField>();
      discoveredAssetCollection2.fields(linkedList0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.assets(arrayList0);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.putPropertiesItem("", discoveredAssetCollection0);
      arrayList0.removeAll(linkedList0);
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection4.last(hrefModel0);
      hrefModel0.toString();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.totalCount(integer0);
      discoveredAssetCollection5.setProperties((Map<String, Object>) null);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      discoveredAssetCollection5.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      discoveredAssetCollection3.toString();
      discoveredAssetCollection4.getAssets();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.details((Map<String, Object>) null);
      discoveredAssetCollection6.getAssetTypes();
      discoveredAssetCollection1.getLogs();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArrayList<DiscoveredAsset> arrayList0 = new ArrayList<DiscoveredAsset>();
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      LinkedList<DiscoveredAssetField> linkedList0 = new LinkedList<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.totalCount(integer0);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addAssetTypesItem(discoveredAssetType0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.last((HrefModel) null);
      Vector<DiscoveredAssetType> vector0 = new Vector<DiscoveredAssetType>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.assetTypes(vector0);
      discoveredAssetCollection1.last((HrefModel) null);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.path("ST");
      discoveredAssetCollection5.getAssetTypes();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.offset(integer0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection0.addLogsItem((DiscoveryLog) null);
      discoveredAssetCollection2.last((HrefModel) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection1.first((HrefModel) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.description("f&iGihl)");
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      discoveredAssetCollection4.getProperties();
      discoveredAssetCollection0.interactionProperties((Map<String, Object>) null);
      stack0.add((DiscoveryLog) null);
      HashSet<DiscoveredAssetExtendedMetadataProperty> hashSet0 = new HashSet<DiscoveredAssetExtendedMetadataProperty>();
      stack0.removeAll(hashSet0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.logs(stack0);
      discoveredAssetCollection5.equals((Object) null);
      Integer integer1 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection4.offset(integer1);
      Integer integer2 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      discoveredAssetCollection5.setTotalCount(integer2);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.last((HrefModel) null);
      discoveredAssetCollection6.getDescription();
      discoveredAssetCollection5.getFirst();
      Stack<DiscoveredAsset> stack1 = new Stack<DiscoveredAsset>();
      discoveredAssetCollection5.setAssets(stack1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putInteractionPropertiesItem("    details: ", "    details: ");
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.logs((List<DiscoveryLog>) null);
      discoveredAssetCollection1.getProperties();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.properties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.description("    details: ");
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.data(integer0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.name("");
      discoveredAssetField0.setDescription("    details: ");
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection0.description("    details: ");
      discoveredAssetCollection6.getAssetTypes();
      discoveredAssetCollection4.assetTypes((List<DiscoveredAssetType>) null);
      DiscoveredAssetField discoveredAssetField2 = discoveredAssetField1.description("");
      discoveredAssetCollection5.addFieldsItem(discoveredAssetField2);
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("");
      discoveredAssetCollection0.next(hrefModel1);
      discoveredAssetCollection1.getFields();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      ChannelDuplexHandler channelDuplexHandler0 = new ChannelDuplexHandler();
      DiscoveryLog discoveryLog1 = discoveryLog0.putDetailsItem("    details: ", channelDuplexHandler0);
      discoveredAssetCollection0.getProperties();
      DiscoveryLog discoveryLog2 = discoveryLog1.details((Map<String, Object>) null);
      Severity severity0 = Severity.ERROR;
      DiscoveryLog discoveryLog3 = discoveryLog2.severity(severity0);
      DiscoveryLog discoveryLog4 = discoveryLog3.message("#Wuq7:f5");
      discoveredAssetCollection5.addLogsItem(discoveryLog4);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addAssetsItem((DiscoveredAsset) null);
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.offset(integer0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.description("");
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addFieldsItem(discoveredAssetField1);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.path("");
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.type((String) null);
      Boolean boolean0 = XmlSuite.DEFAULT_ALLOW_RETURN_VALUES;
      DiscoveredAssetType discoveredAssetType2 = discoveredAssetType1.dataset(boolean0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.addAssetTypesItem(discoveredAssetType2);
      discoveredAssetCollection5.description((String) null);
      discoveredAssetCollection5.getDetails();
      discoveredAssetCollection4.getTotalCount();
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("");
      discoveredAssetCollection5.prev(hrefModel1);
      ArrayList<DiscoveredAssetExtendedMetadataProperty> arrayList0 = new ArrayList<DiscoveredAssetExtendedMetadataProperty>();
      discoveredAssetCollection5.extendedMetadata(arrayList0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.path("DX -Bt+q'~hRbSu(D");
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.logs(stack0);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveryLog discoveryLog1 = discoveryLog0.message("");
      discoveryLog1.getDetails();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection1.setTotalCount(integer0);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.details((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.putPropertiesItem("    properties: ", discoveredAssetCollection3);
      discoveredAssetCollection5.setProperties((Map<String, Object>) null);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection4.prev(hrefModel0);
      discoveredAssetCollection0.getOffset();
      discoveredAssetCollection4.addLogsItem(discoveryLog1);
      discoveredAssetCollection1.setId("    id: ");
      Integer integer1 = XmlSuite.DEFAULT_VERBOSE;
      discoveredAssetCollection6.putDetailsItem("org.testng.TestNGException", integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      LinkedList<DiscoveredAssetField> linkedList0 = new LinkedList<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.fields(linkedList0);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection0.addLogsItem(discoveryLog0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.logs(stack0);
      discoveredAssetCollection0.getAssets();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.assets((List<DiscoveredAsset>) null);
      discoveredAssetCollection4.getOffset();
      discoveredAssetCollection4.getPath();
      discoveredAssetCollection0.getDescription();
      discoveredAssetCollection2.setAssets((List<DiscoveredAsset>) null);
      discoveredAssetCollection1.getPath();
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.description((String) null);
      DiscoveredAssetField discoveredAssetField2 = discoveredAssetField1.name((String) null);
      DiscoveredAssetFieldType discoveredAssetFieldType0 = new DiscoveredAssetFieldType();
      Boolean boolean0 = XmlSuite.DEFAULT_GROUP_BY_INSTANCES;
      DiscoveredAssetFieldType discoveredAssetFieldType1 = discoveredAssetFieldType0.signed(boolean0);
      DiscoveredAssetFieldType discoveredAssetFieldType2 = discoveredAssetFieldType1.nullable(boolean0);
      DiscoveredAssetField discoveredAssetField3 = discoveredAssetField2.type(discoveredAssetFieldType2);
      discoveredAssetCollection1.addFieldsItem(discoveredAssetField3);
      HrefModel hrefModel0 = new HrefModel();
      discoveredAssetCollection0.setNext(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      String string0 = "XHHZk>*W:$1 DQ)-X";
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.path("XHHZk>*W:$1 DQ)-X");
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      hashMap0.put("XHHZk>*W:$1 DQ)-X", discoveredAssetCollection0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection0.properties(hashMap0);
      discoveredAssetCollection2.hashCode();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection1.addLogsItem(discoveryLog0);
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection1.totalCount(integer0);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = null;
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection3.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      discoveredAssetCollection5.interactionProperties(hashMap0);
      String string1 = "";
      Boolean boolean0 = new Boolean(string1);
      discoveredAssetType0.datasetContainer(boolean0);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.putDetailsItem(string0, discoveredAssetType0);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.addAssetTypesItem(discoveredAssetType0);
      Object object0 = new Object();
      DiscoveredAssetCollection discoveredAssetCollection8 = discoveredAssetCollection7.putInteractionPropertiesItem(string0, object0);
      discoveredAssetCollection8.getFields();
      String string2 = "Buffer size must be strictly positive: ";
      DiscoveredAssetCollection discoveredAssetCollection9 = discoveredAssetCollection4.id(string2);
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href(string1);
      discoveredAssetCollection9.setFirst(hrefModel1);
      Object object1 = new Object();
      discoveredAssetCollection0.data(object1);
      discoveredAssetCollection6.properties(hashMap0);
      DiscoveredAssetType discoveredAssetType1 = new DiscoveredAssetType();
      discoveredAssetCollection3.addAssetTypesItem(discoveredAssetType1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("    interactionProperties: ");
      discoveredAssetCollection0.first(hrefModel1);
      discoveryLog0.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.interactionProperties((Map<String, Object>) null);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.id("");
      discoveredAssetExtendedMetadataProperty0.toString();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.description("\n");
      HrefModel hrefModel2 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.prev(hrefModel2);
      HrefModel hrefModel3 = discoveredAssetCollection5.getFirst();
      discoveredAssetCollection4.setDescription("2&TH),4");
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty1 = new DiscoveredAssetExtendedMetadataProperty();
      discoveredAssetExtendedMetadataProperty1.value(discoveredAssetCollection1);
      discoveredAssetCollection4.putInteractionPropertiesItem("2&TH),4", discoveredAssetExtendedMetadataProperty1);
      discoveredAssetCollection5.setProperties((Map<String, Object>) null);
      discoveredAssetCollection1.setFirst(hrefModel2);
      discoveredAssetCollection0.setPath("class DiscoveredAssetExtendedMetadataProperty {\n    name: null\n    value: null\n}");
      discoveredAssetCollection4.putDetailsItem("\n", discoveredAssetExtendedMetadataProperty0);
      discoveredAssetCollection5.putDetailsItem("class DiscoveredAssetExtendedMetadataProperty {\n    name: null\n    value: null\n}", hrefModel3);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.extendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.assets((List<DiscoveredAsset>) null);
      discoveredAssetCollection0.equals((Object) null);
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("kJY(jw3wv|gpvY");
      hrefModel1.toString();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection0.prev(hrefModel1);
      Integer integer0 = Integer.valueOf(0);
      discoveredAssetCollection3.setTotalCount(integer0);
      HrefModel hrefModel2 = new HrefModel();
      HrefModel hrefModel3 = hrefModel2.href("kJY(jw3wv|gpvY");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection2.last(hrefModel3);
      Object object0 = new Object();
      discoveredAssetCollection4.putPropertiesItem("?F9%Lv02{dR", object0);
      discoveredAssetCollection1.description("class HrefModel {\n    href: java.lang.String@0000000003\n}");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.description("");
      discoveredAssetCollection1.equals((Object) null);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      Vector<DiscoveredAssetField> vector0 = new Vector<DiscoveredAssetField>();
      discoveredAssetCollection0.toString();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      LogLevel logLevel0 = LogLevel.ERROR;
      LoggingHandler loggingHandler0 = new LoggingHandler(logLevel0);
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putPropertiesItem("m[0O98W oeH'Ube", loggingHandler0);
      Stack<DiscoveredAssetExtendedMetadataProperty> stack0 = new Stack<DiscoveredAssetExtendedMetadataProperty>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.extendedMetadata(stack0);
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.totalCount(integer0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.last(hrefModel0);
      discoveredAssetCollection4.first(hrefModel0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetFieldType discoveredAssetFieldType0 = new DiscoveredAssetFieldType();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.type(discoveredAssetFieldType0);
      hrefModel0.equals(discoveredAssetField1);
      Map<String, Object> map0 = discoveredAssetCollection2.getProperties();
      discoveredAssetCollection4.last(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.properties(map0);
      discoveredAssetCollection5.getLogs();
      Integer integer1 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection1.offset(integer1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putPropertiesItem(".j?jd`_F/P,4", ".j?jd`_F/P,4");
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.id(".j?jd`_F/P,4");
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.description("");
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.next(hrefModel1);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.addLogsItem(discoveryLog0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.logs(stack0);
      discoveredAssetCollection6.setLogs(stack0);
      discoveredAssetCollection1.setPath("");
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      discoveredAssetCollection4.setTotalCount(integer0);
      discoveredAssetCollection3.path("eg[ra'i[FJs");
      discoveredAssetCollection5.setPrev(hrefModel1);
      discoveredAssetCollection4.getPrev();
      discoveredAssetCollection6.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.extendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      discoveredAssetCollection7.setPath(".j?jd`_F/P,4");
      discoveredAssetCollection4.addLogsItem(discoveryLog0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addFieldsItem(discoveredAssetField0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.last(hrefModel0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection2.offset(integer0);
      discoveredAsset0.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.details((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.id("!4yK");
      HrefModel hrefModel1 = hrefModel0.href("[{}] User Handler requesting close connection");
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.next(hrefModel1);
      discoveredAssetCollection5.getData();
      hrefModel0.setHref("[{}] User Handler requesting close connection");
      discoveredAssetCollection5.getPrev();
      discoveredAssetCollection2.properties((Map<String, Object>) null);
      ImmediateEventExecutor immediateEventExecutor0 = ImmediateEventExecutor.INSTANCE;
      ProgressivePromise<DelegatingChannelPromiseNotifier> progressivePromise0 = immediateEventExecutor0.newProgressivePromise();
      discoveredAssetCollection4.putPropertiesItem("!4yK", progressivePromise0);
      discoveredAssetCollection1.getId();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveryLog discoveryLog1 = discoveryLog0.details((Map<String, Object>) null);
      DiscoveryLog discoveryLog2 = discoveryLog1.putDetailsItem("!4yK", integer0);
      Severity severity0 = Severity.INFO;
      DiscoveryLog discoveryLog3 = discoveryLog2.severity(severity0);
      DiscoveryLog discoveryLog4 = discoveryLog3.message("");
      discoveredAssetCollection0.addLogsItem(discoveryLog4);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getAssetTypes();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.assetTypes((List<DiscoveredAssetType>) null);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.extendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addAssetTypesItem((DiscoveredAssetType) null);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveryLog discoveryLog1 = discoveryLog0.message("<mNpx*+o/U`!z");
      discoveryLog1.getDetails();
      discoveredAssetCollection1.setInteractionProperties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.putDetailsItem("<mNpx*+o/U`!z", (Object) null);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.last(hrefModel0);
      discoveredAssetCollection5.getDetails();
      discoveredAssetCollection4.getLast();
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.name("<mNpx*+o/U`!z");
      DiscoveredAssetField discoveredAssetField2 = discoveredAssetField1.type((DiscoveredAssetFieldType) null);
      DiscoveredAssetField discoveredAssetField3 = discoveredAssetField2.description("reactor.ipc.netty.channel.ChannelOperations");
      discoveredAssetCollection2.addFieldsItem(discoveredAssetField3);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getProperties();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.properties((Map<String, Object>) null);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addAssetsItem(discoveredAsset0);
      Stack<DiscoveredAssetField> stack0 = new Stack<DiscoveredAssetField>();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      discoveredAssetCollection2.setTotalCount(integer0);
      LinkedTransferQueue<DiscoveredAssetType> linkedTransferQueue0 = new LinkedTransferQueue<DiscoveredAssetType>();
      stack0.removeAll(linkedTransferQueue0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.fields(stack0);
      Integer integer1 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.offset(integer1);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      Severity severity0 = Severity.WARNING;
      DiscoveryLog discoveryLog1 = discoveryLog0.severity(severity0);
      DiscoveryLog discoveryLog2 = discoveryLog1.message("A#6%f=");
      DiscoveryLog discoveryLog3 = discoveryLog2.putDetailsItem("A#6%f=", linkedTransferQueue0);
      discoveredAssetCollection1.addLogsItem(discoveryLog3);
      stack0.parallelStream();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.next(hrefModel0);
      discoveredAssetCollection5.getPath();
      discoveredAssetCollection3.getAssets();
      discoveredAssetCollection3.getTotalCount();
      discoveredAssetCollection4.setDetails((Map<String, Object>) null);
      discoveredAssetCollection0.getProperties();
      LinkedList<DiscoveredAssetType> linkedList0 = new LinkedList<DiscoveredAssetType>(linkedTransferQueue0);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.assetTypes(linkedList0);
      discoveredAssetCollection6.getPrev();
      discoveredAssetCollection2.setDetails((Map<String, Object>) null);
      discoveredAssetCollection1.assetTypes(linkedList0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      discoveredAsset0.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.properties((Map<String, Object>) null);
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.offset(integer0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.id("}.+4dA<5a[LssIk");
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      Boolean boolean0 = XmlSuite.DEFAULT_GROUP_BY_INSTANCES;
      discoveredAssetCollection2.next((HrefModel) null);
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.dataset(boolean0);
      DiscoveredAssetType discoveredAssetType2 = discoveredAssetType1.type("}.+4dA<5a[LssIk");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addAssetTypesItem(discoveredAssetType2);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.totalCount(integer0);
      ArrayList<DiscoveredAssetField> arrayList0 = new ArrayList<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.fields(arrayList0);
      discoveredAssetCollection2.getInteractionProperties();
      discoveredAssetCollection1.interactionProperties((Map<String, Object>) null);
      discoveredAssetCollection6.setOffset(integer0);
      discoveredAssetCollection1.data("}.+4dA<5a[LssIk");
      discoveredAssetCollection1.setDescription("Only one write subscriber supported");
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.interactionProperties((Map<String, Object>) null);
      List<DiscoveredAssetType> list0 = discoveredAssetCollection7.getAssetTypes();
      Vector<DiscoveredAssetExtendedMetadataProperty> vector0 = new Vector<DiscoveredAssetExtendedMetadataProperty>();
      discoveredAssetCollection6.extendedMetadata(vector0);
      discoveredAssetCollection0.setAssetTypes(list0);
      discoveredAssetCollection7.putDetailsItem("Only one write subscriber supported", discoveredAssetCollection3);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.properties(hashMap0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.description((String) null);
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      Integer.toUnsignedLong((-99));
      discoveredAssetCollection0.setTotalCount(integer0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.id("Gi!");
      HrefModel hrefModel0 = new HrefModel();
      hrefModel0.setHref("Gi!");
      HrefModel hrefModel1 = hrefModel0.href((String) null);
      ArrayList<DiscoveryLog> arrayList0 = new ArrayList<DiscoveryLog>();
      discoveredAssetCollection2.logs(arrayList0);
      discoveredAssetCollection3.setLast(hrefModel1);
      discoveredAssetCollection3.toString();
      discoveredAssetCollection1.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.extendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      discoveredAssetCollection4.data(discoveredAssetCollection3);
      discoveredAssetCollection3.getLogs();
      EpollSocketChannel epollSocketChannel0 = null;
      try {
        epollSocketChannel0 = new EpollSocketChannel((-2076));
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.channel.epoll.LinuxSocket
         //
         verifyException("io.netty.channel.epoll.AbstractEpollStreamChannel", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putInteractionPropertiesItem(":lps", (Object) null);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addLogsItem(discoveryLog0);
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.offset(integer0);
      ArrayList<DiscoveryLog> arrayList0 = new ArrayList<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.logs(arrayList0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.first(hrefModel0);
      discoveredAssetCollection5.getInteractionProperties();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putInteractionPropertiesItem("-Dio.netty.allocator.numHeapArenas: {}", "-Dio.netty.allocator.numHeapArenas: {}");
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.first((HrefModel) null);
      discoveredAssetCollection2.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.extendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href((String) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.next(hrefModel1);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.data("-Dio.netty.allocator.numHeapArenas: {}");
      discoveredAssetCollection5.getNext();
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      hrefModel1.setHref("    first: ");
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.description("");
      discoveredAssetCollection2.addFieldsItem(discoveredAssetField1);
      discoveredAssetCollection5.setData((Object) null);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection2.data(discoveredAssetCollection4);
      discoveredAssetCollection6.putInteractionPropertiesItem("", "-Dio.netty.allocator.numHeapArenas: {}");
      discoveredAssetCollection3.getExtendedMetadata();
      discoveredAssetCollection3.getNext();
      discoveredAssetCollection5.getExtendedMetadata();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.extendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      ArrayList<DiscoveredAssetField> arrayList0 = new ArrayList<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.fields(arrayList0);
      LinkedList<DiscoveryLog> linkedList0 = new LinkedList<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.logs(linkedList0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.path("    next: ");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addAssetsItem(discoveredAsset1);
      discoveredAssetCollection2.setId("");
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("It@@;v3tR|U.Un");
      discoveredAssetCollection2.setFirst(hrefModel1);
      discoveredAsset1.name("#qps/Xf?cB");
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection2.setTotalCount(integer0);
      HrefModel hrefModel2 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.last(hrefModel2);
      HrefModel hrefModel3 = new HrefModel();
      discoveredAssetCollection4.setPrev(hrefModel3);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.dataset((Boolean) null);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.putPropertiesItem("    next: ", discoveredAssetType1);
      discoveredAssetCollection6.putPropertiesItem("}Nm:C-_zc>{", "}Nm:C-_zc>{");
      discoveredAssetCollection4.getAssets();
      discoveredAssetCollection4.setData(hrefModel3);
      discoveredAssetCollection6.setPrev(hrefModel3);
      discoveredAssetCollection6.logs(linkedList0);
      discoveredAssetCollection6.getFields();
      discoveredAssetCollection4.setExtendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getLogs();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.logs((List<DiscoveryLog>) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.interactionProperties(hashMap0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.putInteractionPropertiesItem("g_=bC", discoveredAssetCollection1);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      Boolean boolean0 = Boolean.valueOf(false);
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.hasChildren(boolean0);
      discoveredAsset1.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.properties((Map<String, Object>) null);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty1 = discoveredAssetExtendedMetadataProperty0.name("g_=bC");
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.description("g_=bC");
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty2 = discoveredAssetExtendedMetadataProperty1.value(discoveredAssetField1);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty2);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      discoveredAssetCollection5.addLogsItem(discoveryLog0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.first(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.description((String) null);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetFieldType discoveredAssetFieldType0 = new DiscoveredAssetFieldType();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.type(discoveredAssetFieldType0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addFieldsItem(discoveredAssetField1);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection1.last(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection3.id((String) null);
      ArrayList<DiscoveredAssetExtendedMetadataProperty> arrayList0 = new ArrayList<DiscoveredAssetExtendedMetadataProperty>();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.extendedMetadata(arrayList0);
      discoveredAssetCollection1.getInteractionProperties();
      discoveredAssetCollection5.path((String) null);
      discoveredAssetCollection6.setProperties((Map<String, Object>) null);
      discoveredAssetCollection5.properties((Map<String, Object>) null);
      discoveredAssetCollection0.getNext();
      discoveredAssetCollection5.getNext();
      discoveredAssetCollection4.getLogs();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.last(hrefModel0);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      discoveryLog0.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.details((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.properties((Map<String, Object>) null);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.offset(integer0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.description("rm6");
      discoveredAssetCollection5.setFirst(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getAssetTypes();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.assetTypes((List<DiscoveredAssetType>) null);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.last((HrefModel) null);
      discoveredAssetCollection0.getFields();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.fields((List<DiscoveredAssetField>) null);
      discoveredAssetCollection2.setDescription((String) null);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.properties(hashMap0);
      Stack<DiscoveredAsset> stack0 = new Stack<DiscoveredAsset>();
      discoveredAssetCollection3.assets(stack0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.description((String) null);
      discoveredAssetCollection5.path((String) null);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetFieldType discoveredAssetFieldType0 = new DiscoveredAssetFieldType();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.type(discoveredAssetFieldType0);
      DiscoveredAssetField discoveredAssetField2 = discoveredAssetField1.description((String) null);
      DiscoveredAssetField discoveredAssetField3 = discoveredAssetField2.name((String) null);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.addFieldsItem(discoveredAssetField3);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.last((HrefModel) null);
      discoveredAssetCollection5.setData(discoveredAssetCollection7);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.addTagsItem(",@sWYeMD!JqJ4R'd");
      DiscoveredAsset discoveredAsset2 = discoveredAsset1.path(",@sWYeMD!JqJ4R'd");
      discoveredAssetCollection7.putPropertiesItem(",@sWYeMD!JqJ4R'd", discoveredAsset2);
      discoveredAssetCollection0.getAssetTypes();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.first(hrefModel0);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addAssetTypesItem(discoveredAssetType0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.details(hashMap0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      discoveredAssetCollection1.setInteractionProperties(hashMap0);
      discoveredAssetField0.description("org.testng.xml.XmlMethodSelectors");
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.description("org.testng.xml.XmlMethodSelectors");
      DiscoveredAssetField discoveredAssetField2 = discoveredAssetField1.name("org.testng.xml.XmlMethodSelectors");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addFieldsItem(discoveredAssetField2);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.data(discoveredAssetCollection0);
      LinkedList<DiscoveryLog> linkedList0 = new LinkedList<DiscoveryLog>();
      discoveredAssetCollection5.setLogs(linkedList0);
      discoveredAssetCollection3.getDescription();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection3.assetTypes((List<DiscoveredAssetType>) null);
      Stack<DiscoveredAssetField> stack0 = new Stack<DiscoveredAssetField>();
      stack0.add(discoveredAssetField2);
      discoveredAssetCollection3.setFields(stack0);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.interactionProperties(hashMap0);
      DiscoveredAssetCollection discoveredAssetCollection8 = discoveredAssetCollection7.last(hrefModel0);
      discoveredAssetCollection6.path((String) null);
      discoveredAssetCollection4.last(hrefModel0);
      discoveredAssetCollection8.toString();
      discoveredAssetCollection7.setProperties(hashMap0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getFields();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.fields((List<DiscoveredAssetField>) null);
      discoveredAssetCollection1.getInteractionProperties();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.interactionProperties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.putPropertiesItem("d&PhPJzSRYfRgg!K", discoveredAssetCollection0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.logs(stack0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.prev(hrefModel0);
      discoveredAssetCollection5.setNext(hrefModel0);
      discoveredAssetCollection5.putPropertiesItem("", "d&PhPJzSRYfRgg!K");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.first(hrefModel0);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addAssetTypesItem(discoveredAssetType0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      discoveredAsset0.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.details((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.description("");
      discoveredAssetType0.setType("    offset: ");
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.totalCount(integer0);
      discoveredAssetCollection5.getDetails();
      discoveredAssetCollection3.getFirst();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection0.addAssetTypesItem(discoveredAssetType0);
      discoveredAssetCollection6.getDescription();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.path("+GhX880`cPg/72L");
      discoveredAssetCollection0.setProperties((Map<String, Object>) null);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.last(hrefModel0);
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.details(hashMap0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.logs(stack0);
      discoveredAssetCollection4.setPrev(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection3.last(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection4.putInteractionPropertiesItem("", discoveredAssetCollection5);
      discoveredAssetCollection6.setLogs(stack0);
      LinkedList<DiscoveredAssetField> linkedList0 = new LinkedList<DiscoveredAssetField>();
      discoveredAssetCollection5.fields(linkedList0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlSuite xmlSuite1 = xmlSuite0.shallowCopy();
      Integer integer0 = xmlSuite1.getVerbose();
      discoveredAssetCollection1.offset(integer0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addLogsItem(discoveryLog0);
      HrefModel hrefModel0 = new HrefModel();
      hrefModel0.toString();
      HrefModel hrefModel1 = hrefModel0.href("");
      discoveredAssetCollection1.setNext(hrefModel1);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.description("Method Not Allowed");
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      Boolean boolean0 = XmlSuite.DEFAULT_PRESERVE_ORDER;
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.dataset(boolean0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addAssetTypesItem(discoveredAssetType1);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.properties((Map<String, Object>) null);
      Boolean.compare(true, true);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.putPropertiesItem("Method Not Allowed", discoveredAssetField0);
      discoveredAssetCollection5.putInteractionPropertiesItem("reactor.core.publisher.FluxSkip", discoveredAssetCollection1);
      discoveredAssetCollection5.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection3.addAssetTypesItem(discoveredAssetType1);
      List<DiscoveryLog> list0 = discoveredAssetCollection1.getLogs();
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection1.logs(list0);
      discoveredAssetCollection7.setExtendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      discoveredAssetCollection2.setDescription(">n\"Ks43h");
      discoveredAssetCollection1.getFields();
      discoveredAssetCollection1.getPath();
      discoveredAssetCollection7.getId();
      discoveredAssetCollection6.getFields();
      discoveredAssetCollection3.id(">n\"Ks43h");
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addLogsItem((DiscoveryLog) null);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.last(hrefModel0);
      LinkedList<DiscoveredAsset> linkedList0 = new LinkedList<DiscoveredAsset>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.assets(linkedList0);
      Stack<DiscoveredAssetField> stack0 = new Stack<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.fields(stack0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.putPropertiesItem((String) null, (Object) null);
      discoveredAssetCollection5.next(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getProperties();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.details((Map<String, Object>) null);
      ArrayList<DiscoveredAsset> arrayList0 = new ArrayList<DiscoveredAsset>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.assets(arrayList0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.description("");
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      discoveredAssetCollection1.getInteractionProperties();
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.details((Map<String, Object>) null);
      DiscoveredAsset discoveredAsset2 = discoveredAsset1.addTagsItem("");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addAssetsItem(discoveredAsset2);
      discoveredAssetCollection1.setDescription("");
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.putInteractionPropertiesItem("", discoveredAssetCollection2);
      Vector<DiscoveryLog> vector0 = new Vector<DiscoveryLog>();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      Severity severity0 = Severity.ERROR;
      DiscoveryLog discoveryLog1 = discoveryLog0.severity(severity0);
      DiscoveryLog discoveryLog2 = discoveryLog1.putDetailsItem("", discoveredAsset0);
      DiscoveryLog discoveryLog3 = discoveryLog2.details((Map<String, Object>) null);
      DiscoveryLog discoveryLog4 = discoveryLog3.message("");
      vector0.add(discoveryLog4);
      discoveredAssetCollection5.setLogs(vector0);
      discoveredAssetCollection2.getTotalCount();
      LinkedList<DiscoveredAssetField> linkedList0 = new LinkedList<DiscoveredAssetField>();
      discoveredAssetCollection4.setFields(linkedList0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      LinkedList<DiscoveryLog> linkedList0 = new LinkedList<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.logs(linkedList0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.id((String) null);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.prev(hrefModel0);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection1.data(discoveredAssetCollection3);
      discoveredAssetCollection5.getAssetTypes();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection4.assetTypes((List<DiscoveredAssetType>) null);
      discoveredAssetCollection6.getData();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addFieldsItem(discoveredAssetField0);
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.data(integer0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.id("    description: ");
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addAssetsItem(discoveredAsset1);
      List<DiscoveredAsset> list0 = discoveredAssetCollection1.getAssets();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.assets(list0);
      discoveredAssetCollection3.getInteractionProperties();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.details((Map<String, Object>) null);
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("");
      discoveredAssetCollection5.setLast(hrefModel1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      ArrayList<DiscoveredAssetExtendedMetadataProperty> arrayList0 = new ArrayList<DiscoveredAssetExtendedMetadataProperty>();
      Stream.Builder<DiscoveredAssetExtendedMetadataProperty> stream_Builder0 = Stream.builder();
      arrayList0.forEach(stream_Builder0);
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.extendedMetadata(arrayList0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection0.putInteractionPropertiesItem("hs,/(P", "hs,/(P");
      Stack<DiscoveredAssetField> stack0 = new Stack<DiscoveredAssetField>();
      discoveredAssetCollection2.setFields(stack0);
      discoveredAssetCollection0.getPrev();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty1 = discoveredAssetExtendedMetadataProperty0.value(discoveredAssetCollection1);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty2 = discoveredAssetExtendedMetadataProperty1.name("hs,/(P");
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty2);
      LinkedList<DiscoveredAssetType> linkedList0 = new LinkedList<DiscoveredAssetType>();
      discoveredAssetCollection1.assetTypes(linkedList0);
      discoveredAssetExtendedMetadataProperty2.toString();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.data(integer0);
      discoveredAssetCollection1.getExtendedMetadata();
      discoveredAssetCollection2.getDetails();
      Integer integer1 = XmlSuite.DEFAULT_THREAD_COUNT;
      Integer.sum(1515, 435);
      discoveredAssetCollection0.totalCount(integer1);
      discoveredAssetCollection2.getProperties();
      discoveredAssetCollection2.getPath();
      discoveredAssetCollection2.getProperties();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection2.details((Map<String, Object>) null);
      discoveredAssetCollection3.getAssetTypes();
      discoveredAssetCollection5.putDetailsItem((String) null, discoveredAssetCollection1);
      discoveredAssetCollection4.getDetails();
      discoveredAssetCollection5.details((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.id((String) null);
      discoveredAssetCollection6.details((Map<String, Object>) null);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.prev(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.next(hrefModel0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      discoveredAsset0.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.details((Map<String, Object>) null);
      LinkedList<DiscoveredAssetField> linkedList0 = new LinkedList<DiscoveredAssetField>();
      discoveredAssetCollection3.fields(linkedList0);
      ArrayList<DiscoveredAsset> arrayList0 = new ArrayList<DiscoveredAsset>();
      discoveredAssetCollection3.getId();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      ArrayList<DiscoveredAssetExtendedMetadataProperty> arrayList0 = new ArrayList<DiscoveredAssetExtendedMetadataProperty>();
      discoveredAssetCollection0.setExtendedMetadata(arrayList0);
      discoveredAssetCollection0.setDescription((String) null);
      discoveredAssetCollection0.toString();
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      discoveredAssetCollection0.setData(discoveredAssetType0);
      HrefModel hrefModel0 = new HrefModel();
      discoveredAssetCollection0.last(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.properties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.interactionProperties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.path((String) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addFieldsItem((DiscoveredAssetField) null);
      Vector<DiscoveryLog> vector0 = new Vector<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.logs(vector0);
      discoveredAssetCollection5.getData();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putInteractionPropertiesItem((String) null, (Object) null);
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.offset(integer0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.first((HrefModel) null);
      discoveredAssetCollection1.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.interactionProperties((Map<String, Object>) null);
      discoveredAssetCollection3.getAssets();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.assets((List<DiscoveredAsset>) null);
      discoveredAssetCollection5.setInteractionProperties((Map<String, Object>) null);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Vector<DiscoveryLog> vector0 = new Vector<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.logs(vector0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.prev(hrefModel0);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      ArrayList<DiscoveredAssetExtendedMetadataProperty> arrayList0 = new ArrayList<DiscoveredAssetExtendedMetadataProperty>();
      discoveredAssetCollection2.setExtendedMetadata(arrayList0);
      Boolean boolean0 = XmlSuite.DEFAULT_PRESERVE_ORDER;
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.datasetContainer(boolean0);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      vector0.add(discoveryLog0);
      LinkedList<DiscoveredAsset> linkedList0 = new LinkedList<DiscoveredAsset>();
      discoveredAssetCollection0.setAssets(linkedList0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addAssetTypesItem(discoveredAssetType1);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.putDetailsItem("", discoveredAssetCollection1);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.next(hrefModel0);
      discoveredAssetCollection5.setPath("");
      discoveredAssetCollection1.getPath();
      discoveryLog0.getDetails();
      discoveredAssetCollection3.details((Map<String, Object>) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.extendedMetadata((List<DiscoveredAssetExtendedMetadataProperty>) null);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addLogsItem(discoveryLog0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.putInteractionPropertiesItem("=*yIP%ThD$J", discoveredAssetCollection0);
      LinkedList<DiscoveredAssetType> linkedList0 = new LinkedList<DiscoveredAssetType>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.assetTypes(linkedList0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.interactionProperties((Map<String, Object>) null);
      discoveredAssetCollection5.getLast();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getInteractionProperties();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.properties((Map<String, Object>) null);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addAssetTypesItem(discoveredAssetType0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.data(discoveredAssetCollection0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.next(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.first(hrefModel0);
      discoveredAssetCollection2.getLogs();
      discoveredAssetCollection5.logs((List<DiscoveryLog>) null);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Integer integer0 = new Integer(511);
      discoveredAssetCollection0.setTotalCount(integer0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addFieldsItem(discoveredAssetField0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.assets((List<DiscoveredAsset>) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.path("");
      discoveredAssetCollection2.getAssetTypes();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.assetTypes((List<DiscoveredAssetType>) null);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.description("doOnRedirect");
      discoveredAssetCollection5.setAssetTypes((List<DiscoveredAssetType>) null);
      discoveredAssetCollection4.getFirst();
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      LinkedList<DiscoveryLog> linkedList0 = new LinkedList<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.logs(linkedList0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.last(hrefModel0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      discoveredAsset0.getDetails();
      discoveredAsset0.path("s#fBI,%O6*.~c");
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.properties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addAssetsItem(discoveredAsset0);
      Vector<DiscoveredAssetField> vector0 = new Vector<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.fields(vector0);
      discoveredAssetCollection5.getPrev();
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.totalCount(integer0);
      LinkedList<DiscoveredAssetExtendedMetadataProperty> linkedList0 = new LinkedList<DiscoveredAssetExtendedMetadataProperty>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.extendedMetadata(linkedList0);
      discoveredAssetCollection1.getProperties();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.interactionProperties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.id("v{tbez9= }S|5A");
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      Boolean boolean0 = XmlSuite.DEFAULT_JUNIT;
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.dataset(boolean0);
      DiscoveredAssetType discoveredAssetType2 = discoveredAssetType1.type("v{tbez9= }S|5A");
      DiscoveredAssetType discoveredAssetType3 = discoveredAssetType2.datasetContainer(boolean0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.addAssetTypesItem(discoveredAssetType3);
      discoveredAssetCollection5.setDetails((Map<String, Object>) null);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)8;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putDetailsItem("B+Oil?", "B+Oil?");
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      HashMap<String, DiscoveredAssetType> hashMap0 = new HashMap<String, DiscoveredAssetType>();
      discoveredAssetCollection0.getAssets();
      discoveredAssetCollection1.setAssets((List<DiscoveredAsset>) null);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      hashMap0.put("", discoveredAssetType0);
      HashMap<String, Object> hashMap1 = new HashMap<String, Object>(hashMap0);
      Boolean boolean0 = XmlSuite.DEFAULT_PRESERVE_ORDER;
      discoveredAssetType0.setDataset(boolean0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection1.properties(hashMap1);
      HrefModel hrefModel0 = new HrefModel();
      hrefModel0.setHref("B+Oil?");
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.type("");
      hashMap0.put("}(i?E%AVFX", discoveredAssetType1);
      discoveredAssetCollection0.putDetailsItem("", discoveredAssetCollection3);
      discoveredAssetExtendedMetadataProperty0.equals(discoveredAssetType1);
      HrefModel hrefModel1 = hrefModel0.href("{4+;");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection2.first(hrefModel1);
      discoveredAssetCollection3.equals(hashMap1);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection2.id("B+Oil?");
      Integer integer0 = new Integer((byte)8);
      discoveredAssetCollection2.totalCount(integer0);
      discoveredAssetCollection3.putDetailsItem("f3Jt+!@=n8X/", "B+Oil?");
      discoveredAssetCollection4.equals(discoveredAssetCollection5);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.id("!QJ9wse?2D");
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.details(hashMap0);
      ArrayList<DiscoveredAssetField> arrayList0 = new ArrayList<DiscoveredAssetField>();
      discoveredAssetCollection2.setFields(arrayList0);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addAssetTypesItem((DiscoveredAssetType) null);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.offset((Integer) null);
      LinkedList<DiscoveredAssetExtendedMetadataProperty> linkedList0 = new LinkedList<DiscoveredAssetExtendedMetadataProperty>();
      linkedList0.pollLast();
      discoveredAssetCollection3.interactionProperties(hashMap0);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.extendedMetadata(linkedList0);
      discoveredAssetCollection1.assets((List<DiscoveredAsset>) null);
      discoveredAssetCollection3.getAssets();
      discoveredAssetCollection6.getProperties();
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("!QJ9wse?2D");
      discoveredAssetCollection4.prev(hrefModel1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.next(hrefModel0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.addAssetsItem(discoveredAsset0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.prev(hrefModel0);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveryLog discoveryLog1 = discoveryLog0.details((Map<String, Object>) null);
      discoveryLog1.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.details((Map<String, Object>) null);
      discoveredAssetCollection2.setInteractionProperties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.putDetailsItem("", (Object) null);
      discoveredAssetCollection4.setPath("");
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.putInteractionPropertiesItem("", (Object) null);
      discoveredAssetCollection2.data(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.putDetailsItem((String) null, (Object) null);
      System.setCurrentTimeMillis(3513L);
      discoveredAssetCollection2.getTotalCount();
      discoveredAssetCollection7.details((Map<String, Object>) null);
      discoveredAssetCollection0.data("");
      discoveredAssetCollection1.getTotalCount();
      discoveredAssetCollection6.details((Map<String, Object>) null);
      discoveredAssetCollection0.first(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addAssetTypesItem(discoveredAssetType0);
      LinkedList<DiscoveredAsset> linkedList0 = new LinkedList<DiscoveredAsset>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.assets(linkedList0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      Boolean boolean0 = XmlSuite.DEFAULT_PRESERVE_ORDER;
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.hasChildren(boolean0);
      discoveredAsset1.getDetails();
      discoveredAsset0.hasChildren(boolean0);
      DiscoveredAsset discoveredAsset2 = discoveredAsset0.details((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.addAssetsItem(discoveredAsset2);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.offset(integer0);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty1 = discoveredAssetExtendedMetadataProperty0.name("l&Z_P0mef}37f");
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty1);
      List<DiscoveredAssetExtendedMetadataProperty> list0 = discoveredAssetCollection0.getExtendedMetadata();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.extendedMetadata(list0);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection1.addAssetTypesItem(discoveredAssetType0);
      ArrayList<DiscoveredAssetType> arrayList0 = new ArrayList<DiscoveredAssetType>();
      DiscoveredAssetCollection discoveredAssetCollection8 = discoveredAssetCollection1.assetTypes(arrayList0);
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.datasetContainer(boolean0);
      DiscoveredAssetCollection discoveredAssetCollection9 = discoveredAssetCollection8.putPropertiesItem("l&Z_P0mef}37f", discoveredAssetType1);
      discoveredAssetCollection9.offset((Integer) null);
      discoveredAssetType0.setDataset(boolean0);
      discoveredAssetCollection7.getLogs();
      discoveredAssetCollection9.offset(integer0);
      discoveredAssetCollection2.equals(discoveredAssetCollection6);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putPropertiesItem("", "");
      Vector<DiscoveredAssetExtendedMetadataProperty> vector0 = new Vector<DiscoveredAssetExtendedMetadataProperty>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.extendedMetadata(vector0);
      Vector<DiscoveryLog> vector1 = new Vector<DiscoveryLog>();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      vector0.add(discoveredAssetExtendedMetadataProperty0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.logs(vector1);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.prev((HrefModel) null);
      discoveredAssetCollection2.setFirst((HrefModel) null);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection2.data("Access-Control-Allow-Origin");
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection5.data(integer0);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.addTagsItem("    description: ");
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      DiscoveredAsset discoveredAsset2 = discoveredAsset1.tags(list0);
      DiscoveredAsset discoveredAsset3 = discoveredAsset2.name("    next: ");
      discoveredAsset3.setName("");
      discoveredAsset3.getDetails();
      discoveredAssetCollection4.setDetails((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection4.id("iq5YBmmT2I,v");
      LinkedList<DiscoveredAsset> linkedList0 = new LinkedList<DiscoveredAsset>();
      discoveredAssetCollection6.assets(linkedList0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Stack<DiscoveredAssetType> stack0 = new Stack<DiscoveredAssetType>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.assetTypes(stack0);
      Vector<DiscoveredAssetExtendedMetadataProperty> vector0 = new Vector<DiscoveredAssetExtendedMetadataProperty>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.extendedMetadata(vector0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      discoveredAssetCollection2.addFieldsItem(discoveredAssetField0);
      int int0 = 2476;
      LinkedHashSet<DiscoveredAssetExtendedMetadataProperty> linkedHashSet0 = new LinkedHashSet<DiscoveredAssetExtendedMetadataProperty>(2476);
      // Undeclared exception!
      try { 
        vector0.addAll(2476, (Collection<? extends DiscoveredAssetExtendedMetadataProperty>) linkedHashSet0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2476
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      Stack<DiscoveredAssetType> stack0 = new Stack<DiscoveredAssetType>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.assetTypes(stack0);
      Vector<DiscoveredAssetExtendedMetadataProperty> vector0 = new Vector<DiscoveredAssetExtendedMetadataProperty>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.extendedMetadata(vector0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      vector0.ensureCapacity(0);
      discoveredAssetCollection2.addFieldsItem(discoveredAssetField0);
      int int0 = 2476;
      LinkedHashSet<DiscoveredAssetExtendedMetadataProperty> linkedHashSet0 = new LinkedHashSet<DiscoveredAssetExtendedMetadataProperty>(2476);
      // Undeclared exception!
      try { 
        vector0.addAll(2476, (Collection<? extends DiscoveredAssetExtendedMetadataProperty>) linkedHashSet0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Array index out of range: 2476
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.logs(stack0);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveryLog discoveryLog1 = discoveryLog0.message("]dC3~cJyNpVp'^$.f");
      discoveryLog1.getDetails();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      discoveredAssetCollection0.setTotalCount(integer0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.details((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.putPropertiesItem("    properties: ", discoveredAssetCollection2);
      Severity severity0 = Severity.INFO;
      discoveryLog1.setSeverity(severity0);
      discoveredAssetCollection4.setProperties((Map<String, Object>) null);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection3.prev(hrefModel0);
      discoveredAssetCollection0.getOffset();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection3.addLogsItem(discoveryLog1);
      discoveredAssetCollection0.setId("    id: ");
      Integer integer1 = XmlSuite.DEFAULT_VERBOSE;
      discoveredAssetCollection5.putDetailsItem("org.testng.TestNGException", integer1);
      discoveredAssetCollection6.first(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.getAssetTypes();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.assetTypes((List<DiscoveredAssetType>) null);
      Integer integer0 = new Integer(8);
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.totalCount(integer0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.prev(hrefModel0);
      discoveredAssetCollection2.description(":+oSNSYlj-./1 ");
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addLogsItem(discoveryLog0);
      Stack<DiscoveryLog> stack0 = new Stack<DiscoveryLog>();
      discoveredAssetCollection4.logs(stack0);
      discoveredAssetCollection0.setNext(hrefModel0);
      discoveredAssetCollection4.getDetails();
      discoveryLog0.message(":+oSNSYlj-./1 ");
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection3.details((Map<String, Object>) null);
      discoveredAssetCollection5.last(hrefModel0);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.path((String) null);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection5.description("");
      discoveredAssetCollection7.setPath("");
      discoveredAssetCollection7.interactionProperties((Map<String, Object>) null);
      discoveredAssetCollection4.setLogs(stack0);
      LinkedList<DiscoveredAsset> linkedList0 = new LinkedList<DiscoveredAsset>();
      discoveredAssetCollection5.assets(linkedList0);
      DiscoveredAssetCollection discoveredAssetCollection8 = discoveredAssetCollection0.description("ae&'M_");
      discoveredAssetCollection8.setAssetTypes((List<DiscoveredAssetType>) null);
      discoveredAssetCollection0.hashCode();
      discoveredAssetCollection6.getId();
      Integer integer1 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      discoveredAssetCollection3.setOffset(integer1);
      discoveredAssetCollection5.id("B1");
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.addLogsItem(discoveryLog0);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.type("d @KY5L`5T;");
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.putDetailsItem("    data: ", discoveredAssetType1);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.description("d @KY5L`5T;");
      discoveredAssetCollection1.equals(discoveredAssetType0);
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty1 = discoveredAssetExtendedMetadataProperty0.value(hrefModel0);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty2 = discoveredAssetExtendedMetadataProperty1.name("2o;l8hhM{{ )");
      discoveredAssetCollection2.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty2);
      HrefModel hrefModel1 = hrefModel0.href("    last: ");
      discoveredAssetCollection3.setId("    data: ");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.last(hrefModel1);
      Vector<DiscoveredAssetExtendedMetadataProperty> vector0 = new Vector<DiscoveredAssetExtendedMetadataProperty>();
      discoveredAssetCollection4.extendedMetadata(vector0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.first(hrefModel1);
      Stack<DiscoveredAssetField> stack0 = new Stack<DiscoveredAssetField>();
      discoveredAssetCollection5.setFields(stack0);
      discoveredAssetCollection2.last(hrefModel1);
      discoveredAssetCollection1.setId("    last: ");
      discoveredAssetCollection3.getAssetTypes();
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.putDetailsItem("}", "}");
      Stack<DiscoveredAssetType> stack0 = new Stack<DiscoveredAssetType>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.assetTypes(stack0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.path("io.netty.util.concurrent.PromiseTask");
      ArrayList<DiscoveredAssetField> arrayList0 = new ArrayList<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.fields(arrayList0);
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.name("");
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection2.addFieldsItem(discoveredAssetField1);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection4.interactionProperties((Map<String, Object>) null);
      ArrayList<DiscoveredAssetExtendedMetadataProperty> arrayList1 = new ArrayList<DiscoveredAssetExtendedMetadataProperty>();
      discoveredAssetCollection6.setExtendedMetadata(arrayList1);
      HrefModel hrefModel0 = new HrefModel();
      discoveredAssetCollection6.setPrev(hrefModel0);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      discoveredAssetExtendedMetadataProperty0.equals(discoveredAssetCollection5);
      Object object0 = new Object();
      discoveredAssetCollection1.setData(object0);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty1 = discoveredAssetExtendedMetadataProperty0.name("");
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection1.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty1);
      HrefModel hrefModel1 = new HrefModel();
      discoveredAssetCollection7.prev(hrefModel1);
      discoveredAssetCollection2.details((Map<String, Object>) null);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      XmlSuite xmlSuite0 = new XmlSuite();
      Boolean boolean0 = xmlSuite0.getGroupByInstances();
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.dataset(boolean0);
      discoveredAssetCollection2.addAssetTypesItem(discoveredAssetType1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      ArrayList<DiscoveredAssetExtendedMetadataProperty> arrayList0 = new ArrayList<DiscoveredAssetExtendedMetadataProperty>();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.extendedMetadata(arrayList0);
      discoveredAssetCollection1.getExtendedMetadata();
      ArrayList<DiscoveryLog> arrayList1 = new ArrayList<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection0.logs(arrayList1);
      DiscoveredAsset discoveredAsset0 = new DiscoveredAsset();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection1.description("    properties: ");
      DiscoveredAsset discoveredAsset1 = discoveredAsset0.name("");
      DiscoveredAsset discoveredAsset2 = discoveredAsset1.type("");
      DiscoveredAsset discoveredAsset3 = discoveredAsset2.path("");
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      discoveredAssetCollection2.getProperties();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection0.interactionProperties((Map<String, Object>) null);
      discoveredAssetCollection4.getInteractionProperties();
      discoveredAsset1.setDetails((Map<String, Object>) null);
      Severity severity0 = Severity.ERROR;
      DiscoveryLog discoveryLog1 = discoveryLog0.severity(severity0);
      discoveredAssetCollection1.getInteractionProperties();
      discoveryLog1.toString();
      DiscoveryLog discoveryLog2 = discoveryLog1.details((Map<String, Object>) null);
      discoveredAssetCollection3.details((Map<String, Object>) null);
      DiscoveredAsset discoveredAsset4 = discoveredAsset3.putDetailsItem("", discoveryLog2);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection0.addAssetsItem(discoveredAsset4);
      HrefModel hrefModel0 = new HrefModel();
      HrefModel hrefModel1 = hrefModel0.href("");
      discoveredAssetCollection5.prev(hrefModel1);
      HrefModel hrefModel2 = new HrefModel();
      discoveredAssetCollection0.prev(hrefModel2);
      discoveredAssetCollection5.setLast(hrefModel2);
      discoveredAssetCollection3.setNext(hrefModel2);
      discoveredAssetCollection0.getInteractionProperties();
      discoveredAssetCollection4.getFirst();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.next(hrefModel0);
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection1.offset(integer0);
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.description((String) null);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty0 = new DiscoveredAssetExtendedMetadataProperty();
      discoveredAssetExtendedMetadataProperty0.equals(discoveredAssetCollection2);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty1 = discoveredAssetExtendedMetadataProperty0.value(discoveredAssetCollection3);
      DiscoveredAssetExtendedMetadataProperty discoveredAssetExtendedMetadataProperty2 = discoveredAssetExtendedMetadataProperty1.name("j8g`&5*D");
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.addExtendedMetadataItem(discoveredAssetExtendedMetadataProperty2);
      Stack<DiscoveredAssetField> stack0 = new Stack<DiscoveredAssetField>();
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection4.fields(stack0);
      discoveredAssetExtendedMetadataProperty1.equals(discoveredAssetCollection2);
      DiscoveryLog discoveryLog0 = new DiscoveryLog();
      discoveryLog0.getDetails();
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection5.properties((Map<String, Object>) null);
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection6.properties((Map<String, Object>) null);
      discoveredAssetCollection2.assetTypes((List<DiscoveredAssetType>) null);
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      discoveredAssetCollection7.addAssetTypesItem(discoveredAssetType0);
      DiscoveredAssetCollection discoveredAssetCollection8 = discoveredAssetCollection2.putPropertiesItem((String) null, (Object) null);
      discoveredAssetCollection8.getTotalCount();
      DiscoveredAssetField discoveredAssetField0 = new DiscoveredAssetField();
      DiscoveredAssetField discoveredAssetField1 = discoveredAssetField0.name("    interactionProperties: ");
      stack0.add(discoveredAssetField1);
      discoveredAssetCollection7.setLast(hrefModel0);
      discoveredAssetCollection7.hashCode();
      Map<String, Object> map0 = discoveryLog0.getDetails();
      discoveredAssetCollection2.setProperties(map0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      discoveredAssetCollection0.description("");
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      Vector<DiscoveredAssetField> vector0 = new Vector<DiscoveredAssetField>();
      String string0 = discoveredAssetCollection0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DiscoveredAssetCollection discoveredAssetCollection0 = new DiscoveredAssetCollection();
      HrefModel hrefModel0 = new HrefModel();
      DiscoveredAssetCollection discoveredAssetCollection1 = discoveredAssetCollection0.last(hrefModel0);
      Vector<DiscoveredAsset> vector0 = new Vector<DiscoveredAsset>();
      discoveredAssetCollection1.getAssetTypes();
      DiscoveredAssetCollection discoveredAssetCollection2 = discoveredAssetCollection0.assetTypes((List<DiscoveredAssetType>) null);
      ArrayList<DiscoveryLog> arrayList0 = new ArrayList<DiscoveryLog>();
      DiscoveredAssetCollection discoveredAssetCollection3 = discoveredAssetCollection2.logs(arrayList0);
      arrayList0.iterator();
      DiscoveredAssetCollection discoveredAssetCollection4 = discoveredAssetCollection3.putPropertiesItem("Zt\"N!mST)", discoveredAssetCollection0);
      DiscoveredAssetCollection discoveredAssetCollection5 = discoveredAssetCollection1.logs(arrayList0);
      DiscoveredAssetCollection discoveredAssetCollection6 = discoveredAssetCollection0.assetTypes((List<DiscoveredAssetType>) null);
      discoveredAssetCollection4.getTotalCount();
      DiscoveredAssetCollection discoveredAssetCollection7 = discoveredAssetCollection1.properties((Map<String, Object>) null);
      discoveredAssetCollection7.getFields();
      DiscoveredAssetType discoveredAssetType0 = new DiscoveredAssetType();
      Boolean boolean0 = Boolean.valueOf(false);
      DiscoveredAssetType discoveredAssetType1 = discoveredAssetType0.datasetContainer(boolean0);
      DiscoveredAssetType discoveredAssetType2 = discoveredAssetType1.type("Zt\"N!mST)");
      discoveredAssetCollection0.addAssetTypesItem(discoveredAssetType2);
      discoveredAssetCollection2.setFields((List<DiscoveredAssetField>) null);
      discoveredAssetCollection2.getNext();
      discoveredAssetCollection0.getDescription();
      discoveredAssetCollection2.setDescription("IQ25@%i|0P%'A9g");
      discoveredAssetCollection7.description("");
      discoveredAssetCollection4.getInteractionProperties();
      discoveredAssetCollection4.getTotalCount();
      discoveredAssetCollection6.setFields((List<DiscoveredAssetField>) null);
      discoveredAssetCollection7.getNext();
      Map<String, Object> map0 = discoveredAssetCollection5.getDetails();
      assertNull(map0);
  }
}
