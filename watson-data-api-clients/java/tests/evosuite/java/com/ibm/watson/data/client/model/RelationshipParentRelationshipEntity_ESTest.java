/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:11:03 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.GlossaryObjectMetadata;
import com.ibm.watson.data.client.model.ParentRelationshipEntity;
import com.ibm.watson.data.client.model.RelationshipParentRelationshipEntity;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RelationshipParentRelationshipEntity_ESTest extends RelationshipParentRelationshipEntity_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      ParentRelationshipEntity parentRelationshipEntity0 = new ParentRelationshipEntity();
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity1 = relationshipParentRelationshipEntity0.entity(parentRelationshipEntity0);
      ParentRelationshipEntity parentRelationshipEntity1 = relationshipParentRelationshipEntity1.getEntity();
      assertNull(parentRelationshipEntity1.getParentId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      relationshipParentRelationshipEntity0.setMetadata(glossaryObjectMetadata0);
      String string0 = relationshipParentRelationshipEntity0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity1 = new RelationshipParentRelationshipEntity();
      boolean boolean0 = relationshipParentRelationshipEntity0.equals(relationshipParentRelationshipEntity1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      boolean boolean0 = relationshipParentRelationshipEntity0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      boolean boolean0 = relationshipParentRelationshipEntity0.equals(relationshipParentRelationshipEntity0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      Integer integer0 = new Integer(2);
      boolean boolean0 = relationshipParentRelationshipEntity0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      ParentRelationshipEntity parentRelationshipEntity0 = new ParentRelationshipEntity();
      relationshipParentRelationshipEntity0.setEntity(parentRelationshipEntity0);
      assertNull(parentRelationshipEntity0.getChildCategoryId());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      ParentRelationshipEntity parentRelationshipEntity0 = new ParentRelationshipEntity();
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity1 = relationshipParentRelationshipEntity0.entity(parentRelationshipEntity0);
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity2 = new RelationshipParentRelationshipEntity();
      boolean boolean0 = relationshipParentRelationshipEntity1.equals(relationshipParentRelationshipEntity2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      relationshipParentRelationshipEntity0.metadata(glossaryObjectMetadata0);
      GlossaryObjectMetadata glossaryObjectMetadata1 = relationshipParentRelationshipEntity0.getMetadata();
      assertNull(glossaryObjectMetadata1.getReadOnly());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      relationshipParentRelationshipEntity0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      ParentRelationshipEntity parentRelationshipEntity0 = relationshipParentRelationshipEntity0.getEntity();
      assertNull(parentRelationshipEntity0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      relationshipParentRelationshipEntity0.setMetadata(glossaryObjectMetadata0);
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity1 = new RelationshipParentRelationshipEntity();
      boolean boolean0 = relationshipParentRelationshipEntity0.equals(relationshipParentRelationshipEntity1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RelationshipParentRelationshipEntity relationshipParentRelationshipEntity0 = new RelationshipParentRelationshipEntity();
      GlossaryObjectMetadata glossaryObjectMetadata0 = relationshipParentRelationshipEntity0.getMetadata();
      assertNull(glossaryObjectMetadata0);
  }
}
