/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:41:30 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ImportedRule;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ImportedRule_ESTest extends ImportedRule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      ImportedRule importedRule1 = importedRule0.ruleGuidInRequest("Q}yV%.fj#n50HL=");
      String string0 = importedRule1.getRuleGuidInRequest();
      assertEquals("Q}yV%.fj#n50HL=", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.setName("\n");
      String string0 = importedRule0.getName();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.setName("");
      String string0 = importedRule0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      Integer integer0 = new Integer((-1046));
      importedRule0.index(integer0);
      Integer integer1 = importedRule0.getIndex();
      assertEquals((-1046), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      Integer integer0 = new Integer(0);
      importedRule0.index(integer0);
      Integer integer1 = importedRule0.getIndex();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      Integer integer0 = new Integer(2);
      ImportedRule importedRule1 = importedRule0.index(integer0);
      Integer integer1 = importedRule1.getIndex();
      assertEquals(2, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.setGuid("4294963558");
      String string0 = importedRule0.getGuid();
      assertEquals("4294963558", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.guid("");
      String string0 = importedRule0.getGuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.setGuid("class ImportedRule {\n    name: null\n    index: null\n    guid: null\n    ruleGuidInRequest: null\n}");
      String string0 = importedRule0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.ruleGuidInRequest("\n    ");
      ImportedRule importedRule1 = new ImportedRule();
      boolean boolean0 = importedRule0.equals(importedRule1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      ImportedRule importedRule1 = new ImportedRule();
      assertTrue(importedRule1.equals((Object)importedRule0));
      
      importedRule1.setGuid("+wL^'$S");
      boolean boolean0 = importedRule1.equals(importedRule0);
      assertFalse(importedRule1.equals((Object)importedRule0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      ImportedRule importedRule1 = new ImportedRule();
      assertTrue(importedRule1.equals((Object)importedRule0));
      
      Integer integer0 = new Integer(0);
      ImportedRule importedRule2 = importedRule1.index(integer0);
      boolean boolean0 = importedRule0.equals(importedRule2);
      assertFalse(importedRule1.equals((Object)importedRule0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      ImportedRule importedRule1 = new ImportedRule();
      boolean boolean0 = importedRule0.equals(importedRule1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      boolean boolean0 = importedRule0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      boolean boolean0 = importedRule0.equals(importedRule0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      Object object0 = new Object();
      boolean boolean0 = importedRule0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      String string0 = importedRule0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      String string0 = importedRule0.getGuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      Integer integer0 = importedRule0.getIndex();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.name("P($J}sjh");
      ImportedRule importedRule1 = new ImportedRule();
      boolean boolean0 = importedRule0.equals(importedRule1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.hashCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      importedRule0.setRuleGuidInRequest("");
      String string0 = importedRule0.getRuleGuidInRequest();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      Integer integer0 = new Integer(0);
      importedRule0.setIndex(integer0);
      assertEquals(0, (int)importedRule0.getIndex());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ImportedRule importedRule0 = new ImportedRule();
      String string0 = importedRule0.getRuleGuidInRequest();
      assertNull(string0);
  }
}
