/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:56:17 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import com.ibm.watson.data.client.model.JobRunPostBodyJobRun;
import com.ibm.watson.data.client.model.JobRunPostBodyJobRunConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JobRunPostBodyJobRun_ESTest extends JobRunPostBodyJobRun_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      JobRunPostBodyJobRunConfiguration jobRunPostBodyJobRunConfiguration0 = mock(JobRunPostBodyJobRunConfiguration.class, new ViolatedAssumptionAnswer());
      doReturn("null").when(jobRunPostBodyJobRunConfiguration0).toString();
      jobRunPostBodyJobRun0.setConfiguration(jobRunPostBodyJobRunConfiguration0);
      JobRunPostBodyJobRunConfiguration jobRunPostBodyJobRunConfiguration1 = jobRunPostBodyJobRun0.getConfiguration();
      assertSame(jobRunPostBodyJobRunConfiguration1, jobRunPostBodyJobRunConfiguration0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      JobRunPostBodyJobRun jobRunPostBodyJobRun1 = new JobRunPostBodyJobRun();
      boolean boolean0 = jobRunPostBodyJobRun1.equals(jobRunPostBodyJobRun0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      boolean boolean0 = jobRunPostBodyJobRun0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      boolean boolean0 = jobRunPostBodyJobRun0.equals(jobRunPostBodyJobRun0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      boolean boolean0 = jobRunPostBodyJobRun0.equals("class JobRunPostBodyJobRun {\n    _configuration: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      JobRunPostBodyJobRun jobRunPostBodyJobRun1 = jobRunPostBodyJobRun0._configuration((JobRunPostBodyJobRunConfiguration) null);
      assertSame(jobRunPostBodyJobRun0, jobRunPostBodyJobRun1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      String string0 = jobRunPostBodyJobRun0.toString();
      assertEquals("class JobRunPostBodyJobRun {\n    _configuration: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      JobRunPostBodyJobRunConfiguration jobRunPostBodyJobRunConfiguration0 = jobRunPostBodyJobRun0.getConfiguration();
      assertNull(jobRunPostBodyJobRunConfiguration0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      jobRunPostBodyJobRun0.hashCode();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      JobRunPostBodyJobRun jobRunPostBodyJobRun0 = new JobRunPostBodyJobRun();
      JobRunPostBodyJobRunConfiguration jobRunPostBodyJobRunConfiguration0 = mock(JobRunPostBodyJobRunConfiguration.class, new ViolatedAssumptionAnswer());
      jobRunPostBodyJobRun0.setConfiguration(jobRunPostBodyJobRunConfiguration0);
      String string0 = jobRunPostBodyJobRun0.toString();
      assertNotNull(string0);
  }
}
