/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:49:14 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.JobRuntimeConfiguration;
import java.util.List;
import java.util.Stack;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlClass;
import org.testng.xml.XmlRun;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JobRuntimeConfiguration_ESTest extends JobRuntimeConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.setVersion("s:P=(UVnDi16]%Z}");
      String string0 = jobRuntimeConfiguration0.getVersion();
      assertEquals("s:P=(UVnDi16]%Z}", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.version("");
      String string0 = jobRuntimeConfiguration0.getVersion();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      XmlRun xmlRun0 = new XmlRun();
      List<String> list0 = xmlRun0.getIncludes();
      jobRuntimeConfiguration0.envVariables(list0);
      List<String> list1 = jobRuntimeConfiguration0.getEnvVariables();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      JobRuntimeConfiguration jobRuntimeConfiguration1 = jobRuntimeConfiguration0.addEnvVariablesItem("channelInactive");
      List<String> list0 = jobRuntimeConfiguration1.getEnvVariables();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.envType("/fMQ;`dNAAQo");
      String string0 = jobRuntimeConfiguration0.getEnvType();
      assertEquals("/fMQ;`dNAAQo", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.envType("");
      String string0 = jobRuntimeConfiguration0.getEnvType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      JobRuntimeConfiguration jobRuntimeConfiguration1 = jobRuntimeConfiguration0.envId("/fMQ;`dNAAQo");
      String string0 = jobRuntimeConfiguration1.getEnvId();
      assertEquals("/fMQ;`dNAAQo", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.envId("");
      String string0 = jobRuntimeConfiguration0.getEnvId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.deploymentJobDefinitionId("sG7vj");
      String string0 = jobRuntimeConfiguration0.getDeploymentJobDefinitionId();
      assertEquals("sG7vj", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.deploymentJobDefinitionId("");
      String string0 = jobRuntimeConfiguration0.getDeploymentJobDefinitionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0);
      List<String> list0 = xmlTest0.getExcludedGroups();
      jobRuntimeConfiguration0.envVariables(list0);
      // Undeclared exception!
      try { 
        jobRuntimeConfiguration0.addEnvVariablesItem("\"8:Be5,)FY/9t=");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      Class<String> class0 = String.class;
      XmlClass xmlClass0 = new XmlClass(class0);
      List<String> list0 = xmlClass0.getExcludedMethods();
      jobRuntimeConfiguration0.setEnvVariables(list0);
      String string0 = jobRuntimeConfiguration0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      JobRuntimeConfiguration jobRuntimeConfiguration1 = jobRuntimeConfiguration0.deploymentJobDefinitionId("");
      JobRuntimeConfiguration jobRuntimeConfiguration2 = new JobRuntimeConfiguration();
      boolean boolean0 = jobRuntimeConfiguration1.equals(jobRuntimeConfiguration2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      JobRuntimeConfiguration jobRuntimeConfiguration1 = new JobRuntimeConfiguration();
      assertTrue(jobRuntimeConfiguration1.equals((Object)jobRuntimeConfiguration0));
      
      jobRuntimeConfiguration1.version("%D1[y[ 8z[LoMZf");
      boolean boolean0 = jobRuntimeConfiguration0.equals(jobRuntimeConfiguration1);
      assertFalse(jobRuntimeConfiguration1.equals((Object)jobRuntimeConfiguration0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      Stack<String> stack0 = new Stack<String>();
      jobRuntimeConfiguration0.envVariables(stack0);
      JobRuntimeConfiguration jobRuntimeConfiguration1 = new JobRuntimeConfiguration();
      boolean boolean0 = jobRuntimeConfiguration0.equals(jobRuntimeConfiguration1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      JobRuntimeConfiguration jobRuntimeConfiguration1 = new JobRuntimeConfiguration();
      boolean boolean0 = jobRuntimeConfiguration1.equals(jobRuntimeConfiguration0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      boolean boolean0 = jobRuntimeConfiguration0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      boolean boolean0 = jobRuntimeConfiguration0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      boolean boolean0 = jobRuntimeConfiguration0.equals(jobRuntimeConfiguration0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.setDeploymentJobDefinitionId("class JobPostBodyConfiguration {\n    envId: java.lang.String@0000000002\n    envVariables: java.util.ArrayList@0000000003\n    version: java.lang.String@0000000002\n    deploymentJobDefinitionId: java.lang.String@0000000002\n}");
      assertNull(jobRuntimeConfiguration0.getEnvId());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.setEnvType("v");
      assertNull(jobRuntimeConfiguration0.getVersion());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      String string0 = jobRuntimeConfiguration0.getEnvType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      List<String> list0 = jobRuntimeConfiguration0.getEnvVariables();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      String string0 = jobRuntimeConfiguration0.getVersion();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.setEnvId(",maxTaskQueuedPerThread=");
      assertNull(jobRuntimeConfiguration0.getVersion());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      jobRuntimeConfiguration0.hashCode();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      String string0 = jobRuntimeConfiguration0.getDeploymentJobDefinitionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      JobRuntimeConfiguration jobRuntimeConfiguration1 = jobRuntimeConfiguration0.envId(",maxTaskQueuedPerThread=");
      JobRuntimeConfiguration jobRuntimeConfiguration2 = new JobRuntimeConfiguration();
      boolean boolean0 = jobRuntimeConfiguration1.equals(jobRuntimeConfiguration2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JobRuntimeConfiguration jobRuntimeConfiguration0 = new JobRuntimeConfiguration();
      String string0 = jobRuntimeConfiguration0.getEnvId();
      assertNull(string0);
  }
}
