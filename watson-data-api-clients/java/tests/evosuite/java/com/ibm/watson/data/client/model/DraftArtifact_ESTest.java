/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 14:27:18 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.DraftArtifact;
import com.ibm.watson.data.client.model.SearchRelatedAsset;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;
import org.testng.internal.DynamicGraph;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DraftArtifact_ESTest extends DraftArtifact_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.workflowStatus("]");
      String string0 = draftArtifact0.getWorkflowStatus();
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.workflowId("mzN$gyo<^BfV");
      String string0 = draftArtifact0.getWorkflowId();
      assertEquals("mzN$gyo<^BfV", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.workflowId("");
      String string0 = draftArtifact0.getWorkflowId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = draftArtifact0.versionId("\n");
      String string0 = draftArtifact1.getVersionId();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.versionId("");
      String string0 = draftArtifact0.getVersionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.type("");
      String string0 = draftArtifact0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DynamicGraph<String> dynamicGraph0 = new DynamicGraph<String>();
      List<String> list0 = dynamicGraph0.getFreeNodes();
      draftArtifact0.tags(list0);
      List<String> list1 = draftArtifact0.getTags();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      SearchRelatedAsset searchRelatedAsset0 = new SearchRelatedAsset();
      draftArtifact0.parentCategory(searchRelatedAsset0);
      SearchRelatedAsset searchRelatedAsset1 = draftArtifact0.getParentCategory();
      assertNull(searchRelatedAsset1.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.name("1e|pBnl`");
      String string0 = draftArtifact0.getName();
      assertEquals("1e|pBnl`", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setModifiedBy("Allow");
      String string0 = draftArtifact0.getModifiedBy();
      assertEquals("Allow", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = draftArtifact0.longDescription("    type: ");
      String string0 = draftArtifact1.getLongDescription();
      assertEquals("    type: ", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.longDescription("");
      String string0 = draftArtifact0.getLongDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      XmlTest xmlTest0 = new XmlTest();
      Boolean boolean0 = xmlTest0.getPreserveOrder();
      draftArtifact0.isEnabled(boolean0);
      Boolean boolean1 = draftArtifact0.getIsEnabled();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.draftMode("    isEnabled: ");
      String string0 = draftArtifact0.getDraftMode();
      assertEquals("    isEnabled: ", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.draftMode("");
      String string0 = draftArtifact0.getDraftMode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = draftArtifact0.createdBy("``3+E@(HvxAy>=\"");
      String string0 = draftArtifact1.getCreatedBy();
      assertEquals("``3+E@(HvxAy>=\"", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = draftArtifact0.createdBy("");
      String string0 = draftArtifact1.getCreatedBy();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      MockDate mockDate0 = new MockDate(29, (-1525), 1117, 4538, (-200), (-200));
      draftArtifact0.createdAt(mockDate0);
      Date date0 = draftArtifact0.getCreatedAt();
      assertEquals("Thu Jun 27 22:36:40 GMT 1805", date0.toString());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = draftArtifact0.artifactId("!bojhpha^YM!>f|=8OM");
      String string0 = draftArtifact1.getArtifactId();
      assertEquals("!bojhpha^YM!>f|=8OM", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setArtifactId("");
      String string0 = draftArtifact0.getArtifactId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getSuiteFiles();
      draftArtifact0.setAbbreviations(list0);
      List<String> list1 = draftArtifact0.getAbbreviations();
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.addAbbreviationsItem("*<G>a*uJ#");
      List<String> list0 = draftArtifact0.getAbbreviations();
      assertTrue(list0.contains("*<G>a*uJ#"));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, (int) xmlSuite0.DEFAULT_VERBOSE);
      List<String> list0 = xmlTest0.getIncludedGroups();
      DraftArtifact draftArtifact1 = draftArtifact0.abbreviations(list0);
      // Undeclared exception!
      try { 
        draftArtifact1.addAbbreviationsItem("doOnConnected");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableCollection", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getExcludedGroups();
      draftArtifact0.tags(list0);
      String string0 = draftArtifact0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getExcludedGroups();
      draftArtifact0.abbreviations(list0);
      DraftArtifact draftArtifact1 = new DraftArtifact();
      boolean boolean0 = draftArtifact0.equals(draftArtifact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = new DraftArtifact();
      assertTrue(draftArtifact1.equals((Object)draftArtifact0));
      
      draftArtifact1.createdBy("l$?|&");
      boolean boolean0 = draftArtifact0.equals(draftArtifact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      MockDate mockDate0 = new MockDate();
      DraftArtifact draftArtifact1 = draftArtifact0.createdAt(mockDate0);
      DraftArtifact draftArtifact2 = new DraftArtifact();
      boolean boolean0 = draftArtifact1.equals(draftArtifact2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = new DraftArtifact();
      assertTrue(draftArtifact1.equals((Object)draftArtifact0));
      
      draftArtifact0.type("yR+^o/L4eb");
      boolean boolean0 = draftArtifact0.equals(draftArtifact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = new DraftArtifact();
      assertTrue(draftArtifact1.equals((Object)draftArtifact0));
      
      draftArtifact1.setVersionId("");
      boolean boolean0 = draftArtifact0.equals(draftArtifact1);
      assertFalse(draftArtifact1.equals((Object)draftArtifact0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      boolean boolean0 = draftArtifact0.equals("Cma?uy7S&");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      boolean boolean0 = draftArtifact0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      boolean boolean0 = draftArtifact0.equals(draftArtifact0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getExcludedGroups();
      DraftArtifact draftArtifact1 = draftArtifact0.tags(list0);
      DraftArtifact draftArtifact2 = new DraftArtifact();
      boolean boolean0 = draftArtifact1.equals(draftArtifact2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.addTagsItem("");
      List<String> list0 = draftArtifact0.getTags();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      XmlSuite xmlSuite0 = new XmlSuite();
      List<String> list0 = xmlSuite0.getExcludedGroups();
      draftArtifact0.tags(list0);
      DraftArtifact draftArtifact1 = draftArtifact0.addTagsItem("E*L");
      assertNull(draftArtifact1.getWorkflowStatus());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      List<String> list0 = draftArtifact0.getAbbreviations();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      DraftArtifact draftArtifact1 = draftArtifact0.modifiedBy("CONNECT");
      assertNull(draftArtifact1.getWorkflowStatus());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setDraftMode("1>U;fQcZ%*fk2");
      assertNull(draftArtifact0.getModifiedBy());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getWorkflowStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setWorkflowStatus("com.fasterxml.jackson.annotation.JsonInclude$Include");
      assertNull(draftArtifact0.getIsEnabled());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getModifiedBy();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      Date date0 = draftArtifact0.getModifiedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setLongDescription("Invalid ETag: does not end with \"");
      assertNull(draftArtifact0.getIsEnabled());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.hashCode();
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setCreatedAt((Date) null);
      assertNull(draftArtifact0.getDraftMode());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getWorkflowId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getArtifactId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setModifiedAt((Date) null);
      assertNull(draftArtifact0.getLongDescription());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setWorkflowId(" H,xOvy");
      assertNull(draftArtifact0.getDraftMode());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      SearchRelatedAsset searchRelatedAsset0 = new SearchRelatedAsset();
      draftArtifact0.setParentCategory(searchRelatedAsset0);
      DraftArtifact draftArtifact1 = new DraftArtifact();
      boolean boolean0 = draftArtifact0.equals(draftArtifact1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      Date date0 = draftArtifact0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getCreatedBy();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      Boolean boolean0 = Boolean.FALSE;
      draftArtifact0.isEnabled(boolean0);
      Boolean boolean1 = draftArtifact0.getIsEnabled();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getDraftMode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setName("");
      String string0 = draftArtifact0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      Boolean boolean0 = draftArtifact0.getIsEnabled();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getVersionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      List<String> list0 = draftArtifact0.getTags();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setType("Cma?uy7S&");
      String string0 = draftArtifact0.getType();
      assertEquals("Cma?uy7S&", string0);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      Boolean boolean0 = new Boolean(true);
      draftArtifact0.setIsEnabled(boolean0);
      assertNull(draftArtifact0.getWorkflowStatus());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      MockDate mockDate0 = new MockDate(961, 2, 961, 2, 385);
      draftArtifact0.modifiedAt(mockDate0);
      Date date0 = draftArtifact0.getModifiedAt();
      assertEquals("Wed Oct 17 08:25:00 GMT 2863", date0.toString());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setModifiedBy("");
      String string0 = draftArtifact0.getModifiedBy();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      SearchRelatedAsset searchRelatedAsset0 = draftArtifact0.getParentCategory();
      assertNull(searchRelatedAsset0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.workflowStatus("");
      String string0 = draftArtifact0.getWorkflowStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      Vector<String> vector0 = new Vector<String>();
      draftArtifact0.setTags(vector0);
      assertNull(draftArtifact0.getDraftMode());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      draftArtifact0.setCreatedBy("");
      assertNull(draftArtifact0.getWorkflowStatus());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getLongDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      DraftArtifact draftArtifact0 = new DraftArtifact();
      String string0 = draftArtifact0.getType();
      assertNull(string0);
  }
}
