/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 01:07:51 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ArtifactRelationships;
import com.ibm.watson.data.client.model.ArtifactRelationshipsResponse;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ArtifactRelationshipsResponse_ESTest extends ArtifactRelationshipsResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      ArtifactRelationships artifactRelationships0 = new ArtifactRelationships();
      artifactRelationshipsResponse0.addArtifactsItem(artifactRelationships0);
      List<ArtifactRelationships> list0 = artifactRelationshipsResponse0.getArtifacts();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      ArtifactRelationships artifactRelationships0 = new ArtifactRelationships();
      artifactRelationshipsResponse0.addArtifactsItem(artifactRelationships0);
      String string0 = artifactRelationshipsResponse0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      ArtifactRelationshipsResponse artifactRelationshipsResponse1 = new ArtifactRelationshipsResponse();
      boolean boolean0 = artifactRelationshipsResponse1.equals(artifactRelationshipsResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      boolean boolean0 = artifactRelationshipsResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      boolean boolean0 = artifactRelationshipsResponse0.equals(artifactRelationshipsResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      boolean boolean0 = artifactRelationshipsResponse0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      ArtifactRelationships artifactRelationships0 = new ArtifactRelationships();
      ArtifactRelationshipsResponse artifactRelationshipsResponse1 = artifactRelationshipsResponse0.addArtifactsItem(artifactRelationships0);
      ArtifactRelationshipsResponse artifactRelationshipsResponse2 = artifactRelationshipsResponse0.addArtifactsItem(artifactRelationships0);
      assertSame(artifactRelationshipsResponse2, artifactRelationshipsResponse1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      List<ArtifactRelationships> list0 = artifactRelationshipsResponse0.getArtifacts();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      LinkedList<ArtifactRelationships> linkedList0 = new LinkedList<ArtifactRelationships>();
      ArtifactRelationshipsResponse artifactRelationshipsResponse1 = artifactRelationshipsResponse0.artifacts(linkedList0);
      List<ArtifactRelationships> list0 = artifactRelationshipsResponse1.getArtifacts();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      LinkedList<ArtifactRelationships> linkedList0 = new LinkedList<ArtifactRelationships>();
      artifactRelationshipsResponse0.setArtifacts(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      artifactRelationshipsResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ArtifactRelationshipsResponse artifactRelationshipsResponse0 = new ArtifactRelationshipsResponse();
      String string0 = artifactRelationshipsResponse0.toString();
      assertEquals("class ArtifactRelationshipsResponse {\n    artifacts: null\n}", string0);
  }
}
