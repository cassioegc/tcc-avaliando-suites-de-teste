/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:25:40 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AnalysisSummary;
import com.ibm.watson.data.client.model.DataProfileColumn;
import com.ibm.watson.data.client.model.ValueAnalysis;
import java.util.ArrayList;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataProfileColumn_ESTest extends DataProfileColumn_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      ValueAnalysis valueAnalysis0 = new ValueAnalysis();
      dataProfileColumn0.setValueAnalysis(valueAnalysis0);
      ValueAnalysis valueAnalysis1 = dataProfileColumn0.getValueAnalysis();
      assertSame(valueAnalysis1, valueAnalysis0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      AnalysisSummary analysisSummary0 = new AnalysisSummary();
      dataProfileColumn0.setQualityAnalysis(analysisSummary0);
      AnalysisSummary analysisSummary1 = dataProfileColumn0.getQualityAnalysis();
      assertSame(analysisSummary1, analysisSummary0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      dataProfileColumn0.setName("    valueAnalysis: ");
      String string0 = dataProfileColumn0.getName();
      assertEquals("    valueAnalysis: ", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      dataProfileColumn0.setName("");
      String string0 = dataProfileColumn0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      DataProfileColumn dataProfileColumn1 = new DataProfileColumn();
      assertTrue(dataProfileColumn1.equals((Object)dataProfileColumn0));
      
      AnalysisSummary analysisSummary0 = new AnalysisSummary();
      dataProfileColumn1.setQualityAnalysis(analysisSummary0);
      boolean boolean0 = dataProfileColumn0.equals(dataProfileColumn1);
      assertFalse(dataProfileColumn1.equals((Object)dataProfileColumn0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      DataProfileColumn dataProfileColumn1 = new DataProfileColumn();
      assertTrue(dataProfileColumn1.equals((Object)dataProfileColumn0));
      
      ValueAnalysis valueAnalysis0 = new ValueAnalysis();
      dataProfileColumn1.setValueAnalysis(valueAnalysis0);
      boolean boolean0 = dataProfileColumn1.equals(dataProfileColumn0);
      assertFalse(dataProfileColumn1.equals((Object)dataProfileColumn0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      dataProfileColumn0.setName("{ZqPZmH%");
      DataProfileColumn dataProfileColumn1 = new DataProfileColumn();
      boolean boolean0 = dataProfileColumn0.equals(dataProfileColumn1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      DataProfileColumn dataProfileColumn1 = new DataProfileColumn();
      boolean boolean0 = dataProfileColumn0.equals(dataProfileColumn1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      boolean boolean0 = dataProfileColumn0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      boolean boolean0 = dataProfileColumn0.equals(dataProfileColumn0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      boolean boolean0 = dataProfileColumn0.equals("class DataProfileColumn {\n    name: null\n    valueAnalysis: null\n    qualityAnalysis: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      AnalysisSummary analysisSummary0 = new AnalysisSummary();
      dataProfileColumn0.setQualityAnalysis(analysisSummary0);
      String string0 = dataProfileColumn0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      ValueAnalysis valueAnalysis0 = dataProfileColumn0.getValueAnalysis();
      assertNull(valueAnalysis0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      ValueAnalysis valueAnalysis0 = new ValueAnalysis();
      dataProfileColumn0.setValueAnalysis(valueAnalysis0);
      Vector<String> vector0 = new Vector<String>();
      ArrayList<Object> arrayList0 = new ArrayList<Object>(vector0);
      arrayList0.add((Object) valueAnalysis0);
      valueAnalysis0.setWordDistribution(arrayList0);
      // Undeclared exception!
      try { 
        dataProfileColumn0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      AnalysisSummary analysisSummary0 = dataProfileColumn0.getQualityAnalysis();
      assertNull(analysisSummary0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      dataProfileColumn0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataProfileColumn dataProfileColumn0 = new DataProfileColumn();
      String string0 = dataProfileColumn0.getName();
      assertNull(string0);
  }
}
