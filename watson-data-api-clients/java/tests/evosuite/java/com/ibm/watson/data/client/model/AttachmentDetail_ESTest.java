/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:52:00 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AttachmentDetail;
import com.ibm.watson.data.client.model.MetadataUsage;
import com.ibm.watson.data.client.model.enums.AssetCategory;
import io.netty.handler.logging.ByteBufFormat;
import io.netty.handler.logging.LogLevel;
import io.netty.handler.logging.LoggingHandler;
import java.time.Instant;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AttachmentDetail_ESTest extends AttachmentDetail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail1.creatorId("a}aw>e'MhOX");
      Boolean boolean0 = Boolean.valueOf(false);
      attachmentDetail2.transferComplete(boolean0);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("|avY\raLqb");
      attachmentDetail0.equals(attachmentDetail3);
      AttachmentDetail attachmentDetail4 = attachmentDetail0.datasourceType("a}aw>e'MhOX");
      attachmentDetail4.equals(attachmentDetail3);
      try { 
        Long.valueOf("a}aw>e'MhOX");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"a}aw>e'MhOX\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MockDate mockDate0 = new MockDate(0L);
      attachmentDetail0.setCreatedAt(mockDate0);
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail2.usage(metadataUsage0);
      MockDate mockDate1 = new MockDate(15L);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("bs#,%0d|A");
      attachmentDetail0.equals(attachmentDetail3);
      attachmentDetail0.datasourceType("a}aw>e'MhOX");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail1.creatorId("a}aw>e'MhOX");
      attachmentDetail2.getCreatedAt();
      attachmentDetail2.toIndentedString(long0);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href((String) null);
      attachmentDetail0.equals(attachmentDetail3);
      AttachmentDetail attachmentDetail4 = attachmentDetail0.datasourceType("a}aw>e'MhOX");
      attachmentDetail4.equals(attachmentDetail3);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.size(long0);
      MockDate mockDate0 = new MockDate();
      AttachmentDetail attachmentDetail4 = attachmentDetail2.href("|avY\raLqb");
      attachmentDetail0.equals(attachmentDetail4);
      attachmentDetail0.datasourceType("a}aw>e'MhOX");
      System.setCurrentTimeMillis(15L);
      LogLevel logLevel0 = LogLevel.DEBUG;
      LoggingHandler loggingHandler0 = new LoggingHandler("K@14.", logLevel0);
      attachmentDetail3.equals(loggingHandler0);
      Random.setNextRandom(656);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("|avY\raLqb");
      attachmentDetail0.equals(attachmentDetail3);
      attachmentDetail0.datasourceType("a}aw>e'MhOX");
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail2));
      
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail2.usage(metadataUsage0);
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("|avY\raLqb");
      attachmentDetail3.setCreatorId("a}aw>e'MhOX");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail3);
      assertFalse(boolean0);
      
      attachmentDetail0.datasourceType("a}aw>e'MhOX");
      assertFalse(attachmentDetail0.equals((Object)attachmentDetail3));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail0));
      
      AttachmentDetail attachmentDetail2 = attachmentDetail1.creatorId("a}aw>e'MhOX");
      attachmentDetail1.getUsage();
      attachmentDetail1.getUrl();
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("|avY\raLqb");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail3);
      assertFalse(boolean0);
      
      attachmentDetail0.attachmentId("");
      assertFalse(attachmentDetail0.equals((Object)attachmentDetail2));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      assertTrue(attachmentDetail2.equals((Object)attachmentDetail0));
      
      Boolean boolean0 = new Boolean("a}aw>e'MhOX");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.objectKeyIsReadOnly(boolean0);
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail3.datasourceType((String) null);
      attachmentDetail2.attachmentId("\n");
      AttachmentDetail attachmentDetail4 = attachmentDetail1.url("a}aw>e'MhOX");
      attachmentDetail0.equals(attachmentDetail4);
      boolean boolean1 = attachmentDetail2.equals(attachmentDetail0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail2));
      
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail2.usage(metadataUsage0);
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("|avY\raLqb");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail3);
      assertFalse(boolean0);
      
      attachmentDetail0.datasourceType("a}aw>e'MhOX");
      assertFalse(attachmentDetail0.equals((Object)attachmentDetail1));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      assertTrue(attachmentDetail2.equals((Object)attachmentDetail1));
      
      Boolean boolean0 = new Boolean("a}aw>e'MhOX");
      attachmentDetail2.objectKeyIsReadOnly(boolean0);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail2.datasourceType("a}aw>e'MhOX");
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail3 = attachmentDetail1.url("|avY\raLqb");
      attachmentDetail0.equals(attachmentDetail3);
      boolean boolean1 = attachmentDetail2.equals(attachmentDetail0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail0));
      
      AttachmentDetail attachmentDetail2 = attachmentDetail1.creatorId("a}aw>e'MhOX");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail0.datasourceType("a}aw>e'MhOX");
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail0.size(long0);
      attachmentDetail1.setUrl("?uhxrre2/");
      attachmentDetail2.getCreatedAt();
      Integer integer0 = new Integer((-238));
      attachmentDetail2.equals(integer0);
      AttachmentDetail attachmentDetail3 = attachmentDetail1.url("|avY\raLqb");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail2));
      
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail2.datasourceType("a}aw>e'MhOX");
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail3 = attachmentDetail1.url("|avY\raLqb");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail0));
      
      AttachmentDetail attachmentDetail2 = attachmentDetail1.creatorId("a}aw>e'MhOX");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.connectionId("a}aw>e'MhOX");
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail0.size(long0);
      attachmentDetail1.setUrl("");
      attachmentDetail2.getCreatedAt();
      Integer integer0 = new Integer((-238));
      attachmentDetail2.equals(integer0);
      AttachmentDetail attachmentDetail3 = attachmentDetail1.url("|avY\raLqb");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.datasourceType("T |4kg)4iX9i<8");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.url("T |4kg)4iX9i<8");
      String string0 = "C@*K.EB_0'";
      attachmentDetail2.objectKey("C@*K.EB_0'");
      Boolean boolean0 = Boolean.FALSE;
      AttachmentDetail attachmentDetail3 = attachmentDetail2.objectKeyIsReadOnly(boolean0);
      Boolean.logicalXor(true, true);
      attachmentDetail3.setDescription("T |4kg)4iX9i<8");
      Boolean boolean1 = Boolean.valueOf("E/B_,");
      Boolean.getBoolean("C@*K.EB_0'");
      attachmentDetail3.name("O{!{u*Z2MiYd,");
      Boolean.logicalOr(false, true);
      attachmentDetail0.setObjectKeyIsReadOnly(boolean1);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.transferComplete(boolean0);
      attachmentDetail2.setUserData(attachmentDetail4);
      attachmentDetail0.isPartitioned(boolean0);
      Long long0 = new Long(0L);
      // Undeclared exception!
      try { 
        attachmentDetail4.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.createdAt((Date) null);
      attachmentDetail1.userData(attachmentDetail0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.attachmentId((String) null);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Long long0 = new Long(0L);
      AttachmentDetail attachmentDetail3 = attachmentDetail1.usage(metadataUsage0);
      Long long1 = new Long(0L);
      attachmentDetail3.size(long1);
      MetadataUsage metadataUsage1 = metadataUsage0.lastUpdateTime(long0);
      attachmentDetail2.connectionPath("c}/v_NIcHu1w@y");
      AttachmentDetail attachmentDetail4 = attachmentDetail2.usage(metadataUsage1);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.url("");
      attachmentDetail5.testDoc(long0);
      Long.compare(124L, 124L);
      Long.compare(0L, 0L);
      AttachmentDetail attachmentDetail6 = attachmentDetail5.datasourceType("Hd|-w_XHR");
      attachmentDetail6.setUrl((String) null);
      AttachmentDetail attachmentDetail7 = attachmentDetail6.size(long0);
      attachmentDetail7.getSize();
      attachmentDetail2.setDatasourceType("");
      Boolean boolean0 = new Boolean((String) null);
      attachmentDetail5.setTransferComplete(boolean0);
      attachmentDetail0.href("Hd|-w_XHR");
      attachmentDetail0.getCreatorId();
      Long long2 = attachmentDetail7.getSize();
      assertTrue(long2.equals((Object)long1));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.url("It di0s1wlg3");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.creatorId("It di0s1wlg3");
      Boolean boolean0 = Boolean.TRUE;
      MockDate mockDate0 = new MockDate();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.createdAt(mockDate0);
      Boolean.getBoolean("");
      AttachmentDetail attachmentDetail4 = attachmentDetail2.objectKeyIsReadOnly(boolean0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.transferComplete(boolean0);
      attachmentDetail4.getAttachmentId();
      attachmentDetail0.getCreatorId();
      attachmentDetail2.hashCode();
      Boolean.logicalOr(true, true);
      attachmentDetail1.testDoc((Long) null);
      attachmentDetail4.getCreatorId();
      attachmentDetail2.getObjectKeyIsReadOnly();
      AttachmentDetail attachmentDetail6 = attachmentDetail5.createdAt(mockDate0);
      attachmentDetail3.setHref((String) null);
      attachmentDetail2.size((Long) null);
      AttachmentDetail attachmentDetail7 = attachmentDetail5.url("");
      assertSame(attachmentDetail7, attachmentDetail6);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(0L);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.size(long0);
      Boolean boolean0 = Boolean.valueOf("qBc7%-");
      attachmentDetail1.isPartitioned(boolean0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.size((Long) null);
      attachmentDetail2.setUserData((Object) null);
      Long.max(0L, 532L);
      attachmentDetail1.setCreatorId("");
      String string0 = attachmentDetail0.getCreatorId();
      MockDate mockDate0 = new MockDate();
      attachmentDetail0.toIndentedString("qBc7%-");
      Long.divideUnsigned(0L, 532L);
      attachmentDetail0.createdAt(mockDate0);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.creatorId("class AttachmentDetail {\n");
      attachmentDetail1.setAttachmentId("");
      String string1 = attachmentDetail3.getAttachmentId();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.datasourceType("    usage: ");
      MockDate mockDate0 = new MockDate(739, 739, 508);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.createdAt(mockDate0);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.usage(metadataUsage0);
      metadataUsage0.setLastUpdateTime((Long) null);
      metadataUsage0.lastUpdatedAt(mockDate0);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.attachmentId("Iterating over a toIterable() / toStream() is blocking, which is not supported in thread ");
      Long long0 = new Long((-2622L));
      Integer integer0 = new Integer((-626));
      attachmentDetail4.userData(integer0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachmentDetail3.setAssetCategory(assetCategory0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.size(long0);
      mockDate0.clone();
      attachmentDetail5.setUsage(metadataUsage0);
      attachmentDetail2.connectionPath("Z]E");
      attachmentDetail1.getUsage();
      attachmentDetail2.getSize();
      String string0 = attachmentDetail1.getUrl();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.usage(metadataUsage0);
      Boolean boolean0 = Boolean.FALSE;
      AttachmentDetail attachmentDetail2 = attachmentDetail1.transferComplete(boolean0);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.attachmentId("mu@@o_K]z@d|");
      MockDate mockDate0 = new MockDate(7, 206, 7, 7, 506, 507);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.createdAt(mockDate0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.href("mu@@o_K]z@d|");
      Boolean boolean1 = attachmentDetail5.getTransferComplete();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.href("");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.url("");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.creatorId("");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail4 = attachmentDetail3.usage(metadataUsage0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.attachmentId("");
      attachmentDetail4.hashCode();
      attachmentDetail3.setUsage(metadataUsage0);
      Long long0 = new Long(0L);
      attachmentDetail5.setSize(long0);
      Boolean boolean0 = Boolean.FALSE;
      attachmentDetail4.setObjectKeyIsReadOnly(boolean0);
      attachmentDetail3.usage(metadataUsage0);
      attachmentDetail3.getHref();
      attachmentDetail0.getUsage();
      attachmentDetail4.objectKeyIsReadOnly(boolean0);
      attachmentDetail1.setUrl("");
      assertNull(attachmentDetail1.getAssetType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.assetType("org.mockserver.scheduler.Scheduler$SchedulerThreadFactory");
      Boolean boolean0 = new Boolean(false);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.objectKeyIsReadOnly(boolean0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.attachmentId("5{)ZD1KJi");
      Boolean.logicalAnd(false, false);
      attachmentDetail2.toIndentedString(attachmentDetail0);
      attachmentDetail1.setObjectKeyIsReadOnly(boolean0);
      attachmentDetail1.getUrl();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.size((Long) null);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.datasourceType("");
      attachmentDetail4.setObjectKey("\"g=p{#{UDKynZP5G%");
      AttachmentDetail attachmentDetail5 = attachmentDetail1.size((Long) null);
      attachmentDetail5.setHref("");
      attachmentDetail0.setAttachmentId("");
      attachmentDetail0.creatorId("reactor.core.publisher.MonoElapsed");
      attachmentDetail2.getDatasourceType();
      attachmentDetail1.setAttachmentId("    size: ");
      assertEquals("\"g=p{#{UDKynZP5G%", attachmentDetail1.getObjectKey());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.usage(metadataUsage0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.creatorId("b");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("    creatorId: ");
      AttachmentDetail attachmentDetail4 = attachmentDetail3.attachmentId("");
      attachmentDetail3.setUrl("");
      Boolean boolean0 = new Boolean(true);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.transferComplete(boolean0);
      AssetCategory assetCategory0 = AssetCategory.SYSTEM;
      attachmentDetail5.assetCategory(assetCategory0);
      attachmentDetail5.attachmentId("");
      attachmentDetail5.getUsage();
      Boolean boolean1 = attachmentDetail0.getTransferComplete();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(1L);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.size(long0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.datasourceType("~kHljCQhHS^");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.toString();
      Integer integer0 = new Integer(1580);
      MetadataUsage metadataUsage1 = metadataUsage0.accessCount(integer0);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.usage(metadataUsage1);
      metadataUsage1.toString();
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url("");
      AssetCategory assetCategory0 = AssetCategory.USER;
      attachmentDetail4.setAssetCategory(assetCategory0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.href("");
      Long long1 = attachmentDetail5.getSize();
      assertEquals(1L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.size((Long) null);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.datasourceType("");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MetadataUsage metadataUsage1 = metadataUsage0.lastUpdaterId("");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.usage(metadataUsage1);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url("");
      AttachmentDetail attachmentDetail5 = attachmentDetail4.href((String) null);
      Boolean boolean0 = attachmentDetail5.getTransferComplete();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = Boolean.TRUE;
      AttachmentDetail attachmentDetail1 = attachmentDetail0.transferComplete(boolean0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.url("N|]k}t9F9G'");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.attachmentId("N|]k}t9F9G'");
      Boolean boolean1 = new Boolean("N|]k}t9F9G'");
      AttachmentDetail attachmentDetail4 = attachmentDetail3.objectKeyIsReadOnly(boolean1);
      attachmentDetail3.setConnectionId("`F ++iQ0Y");
      attachmentDetail3.setTransferComplete(boolean0);
      Boolean.logicalXor(false, false);
      attachmentDetail0.setDatasourceType("N|]k}t9F9G'");
      Long long0 = new Long(0L);
      attachmentDetail0.setSize(long0);
      attachmentDetail4.getUrl();
      attachmentDetail3.getDatasourceType();
      AttachmentDetail attachmentDetail5 = attachmentDetail4.href("N|]k}t9F9G'");
      assertSame(attachmentDetail5, attachmentDetail0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MetadataUsage metadataUsage1 = metadataUsage0.lastAccessorId("UJ&@I");
      MockDate mockDate0 = new MockDate();
      MetadataUsage metadataUsage2 = metadataUsage1.lastAccessedAt(mockDate0);
      MetadataUsage metadataUsage3 = metadataUsage2.lastAccessTime((Long) null);
      attachmentDetail0.setUsage(metadataUsage3);
      assertSame(metadataUsage2, metadataUsage3);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.attachmentId("r~!THGh>&\"4ewc\u00048'F");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.datasourceType("r~!THGh>&\"4ewc\u00048'F");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.creatorId("r~!THGh>&\"4ewc\u00048'F");
      attachmentDetail1.datasourceType("position");
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url("r~!THGh>&\"4ewc\u00048'F");
      AttachmentDetail attachmentDetail5 = attachmentDetail4.href("G'CaAoH$(Ap:z&&lFa$");
      Long long0 = new Long(0L);
      attachmentDetail5.setSize(long0);
      assertNull(attachmentDetail5.getObjectKeyIsReadOnly());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MockDate mockDate0 = new MockDate((-17L));
      AttachmentDetail attachmentDetail1 = attachmentDetail0.createdAt(mockDate0);
      Boolean boolean0 = new Boolean("");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.transferComplete(boolean0);
      Long long0 = new Long((-1L));
      AttachmentDetail attachmentDetail3 = attachmentDetail2.size(long0);
      attachmentDetail2.setAttachmentId(";]M;7l");
      Boolean boolean1 = new Boolean("!|q@R}%\"7@U*hD\"K");
      attachmentDetail1.setTransferComplete(boolean1);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url("");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MetadataUsage metadataUsage1 = metadataUsage0.lastUpdatedAt(mockDate0);
      Long long1 = new Long((-17L));
      attachmentDetail4.setConnectionPath(";]M;7l");
      MetadataUsage metadataUsage2 = metadataUsage1.lastAccessTime(long1);
      Integer integer0 = Integer.valueOf(524288);
      MetadataUsage metadataUsage3 = metadataUsage2.accessCount(integer0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.usage(metadataUsage3);
      attachmentDetail5.setAttachmentId("8");
      attachmentDetail4.getAttachmentId();
      metadataUsage1.lastAccessorId("8");
      attachmentDetail2.getUsage();
      Boolean boolean2 = Boolean.valueOf("8");
      attachmentDetail5.setTransferComplete(boolean2);
      attachmentDetail4.getDatasourceType();
      attachmentDetail3.getUrl();
      attachmentDetail5.setTransferComplete(boolean2);
      attachmentDetail0.getUrl();
      attachmentDetail3.getCreatedAt();
      Date date0 = attachmentDetail2.getCreatedAt();
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MockDate mockDate0 = new MockDate((-2996), (-2996), (-2996));
      AttachmentDetail attachmentDetail1 = attachmentDetail0.createdAt(mockDate0);
      Boolean boolean0 = Boolean.valueOf((String) null);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.objectKeyIsReadOnly(boolean0);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MetadataUsage metadataUsage1 = metadataUsage0.lastAccessTime((Long) null);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.usage(metadataUsage1);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url((String) null);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.size((Long) null);
      attachmentDetail5.setUrl((String) null);
      Boolean boolean1 = Boolean.TRUE;
      attachmentDetail0.objectKeyIsReadOnly(boolean1);
      AttachmentDetail attachmentDetail6 = attachmentDetail4.url("7TSMy2r");
      attachmentDetail6.getCreatedAt();
      attachmentDetail2.getSize();
      attachmentDetail3.setHref((String) null);
      assertNull(attachmentDetail3.getDescription());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.creatorId("-5$9]");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.url("    datasourceType: ");
      attachmentDetail2.getCreatorId();
      Long long0 = new Long(0L);
      Long.toUnsignedString((-3708L));
      Long.min(1109L, 1109L);
      attachmentDetail1.size(long0);
      attachmentDetail1.url("-5$9]");
      attachmentDetail0.setCreatorId("qd@YXH");
      assertNull(attachmentDetail0.getObjectKey());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = Boolean.FALSE;
      AttachmentDetail attachmentDetail1 = attachmentDetail0.transferComplete(boolean0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.url("    size: ");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("    size: ");
      Long long0 = new Long((-1613L));
      AttachmentDetail attachmentDetail4 = attachmentDetail3.size(long0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.datasourceType("");
      MetadataUsage metadataUsage0 = attachmentDetail5.getUsage();
      assertNull(metadataUsage0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = Boolean.TRUE;
      AttachmentDetail attachmentDetail1 = attachmentDetail0.transferComplete(boolean0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.attachmentId("Gpkx>T$Tbir~");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.creatorId("Gpkx>T$Tbir~");
      MockDate mockDate0 = new MockDate();
      AttachmentDetail attachmentDetail4 = attachmentDetail3.createdAt(mockDate0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.usage((MetadataUsage) null);
      attachmentDetail5.setTransferComplete(boolean0);
      assertNull(attachmentDetail5.getConnectionId());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.attachmentId("class AttachmentDetail {\n");
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail2 = attachmentDetail1.usage(metadataUsage0);
      Boolean boolean0 = new Boolean("dY]\"')]x`T");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.objectKeyIsReadOnly(boolean0);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url("k7B)");
      Long long0 = new Long(4L);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.size(long0);
      String string0 = attachmentDetail5.getDatasourceType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.getUrl();
      Boolean boolean0 = new Boolean("pOD ^&&~4PJ*&53");
      Boolean.logicalXor(true, true);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.objectKeyIsReadOnly(boolean0);
      LogLevel logLevel0 = LogLevel.INFO;
      ByteBufFormat byteBufFormat0 = ByteBufFormat.SIMPLE;
      LoggingHandler loggingHandler0 = new LoggingHandler(logLevel0, byteBufFormat0);
      attachmentDetail1.setUserData(loggingHandler0);
      attachmentDetail0.setAttachmentId((String) null);
      assertFalse(attachmentDetail0.getObjectKeyIsReadOnly());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.getCreatorId();
      attachmentDetail0.setUrl("channelFactory: ");
      AttachmentDetail attachmentDetail1 = attachmentDetail0.datasourceType("");
      attachmentDetail0.equals(attachmentDetail1);
      attachmentDetail0.setMime((String) null);
      attachmentDetail1.setUrl("");
      String string0 = attachmentDetail0.getAttachmentId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.attachmentId((String) null);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.creatorId("    createdAt: ");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("    createdAt: ");
      attachmentDetail2.setMime("6|OaMONSUw]1");
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url((String) null);
      Instant instant0 = MockInstant.ofEpochSecond(2345L, 2345L);
      Date date0 = Date.from(instant0);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.createdAt(date0);
      attachmentDetail5.equals(attachmentDetail0);
      attachmentDetail2.getHref();
      attachmentDetail2.assetType("");
      attachmentDetail1.href("    usage: ");
      attachmentDetail5.getObjectKeyIsReadOnly();
      String string0 = attachmentDetail2.getHref();
      assertEquals("    usage: ", string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      Integer integer0 = new Integer((-4106));
      MetadataUsage metadataUsage1 = metadataUsage0.accessCount(integer0);
      MetadataUsage metadataUsage2 = metadataUsage1.lastAccessorId("hw&");
      AttachmentDetail attachmentDetail1 = attachmentDetail0.usage(metadataUsage2);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.href("F.qW`=E");
      boolean boolean0 = attachmentDetail2.equals("F.qW`=E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(0L);
      attachmentDetail0.size(long0);
      attachmentDetail0.creatorId("yo.-.{lnG<7");
      AttachmentDetail attachmentDetail1 = attachmentDetail0.attachmentId("_");
      Boolean boolean0 = Boolean.TRUE;
      attachmentDetail1.setIsPartitioned(boolean0);
      String string0 = attachmentDetail1.getHref();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.creatorId("");
      MockDate mockDate0 = new MockDate(8192, 8192, 8192, 8192, 8192, 623);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.createdAt(mockDate0);
      Boolean boolean0 = new Boolean("");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.transferComplete(boolean0);
      AttachmentDetail attachmentDetail4 = attachmentDetail3.url("");
      Long long0 = new Long(490L);
      AttachmentDetail attachmentDetail5 = attachmentDetail4.size(long0);
      attachmentDetail5.setDatasourceType("");
      assertNull(attachmentDetail5.getMime());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(0L);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.size(long0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.href("tc?]B");
      assertNull(attachmentDetail2.getName());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.setHref("i");
      Boolean boolean0 = new Boolean(false);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.transferComplete(boolean0);
      assertSame(attachmentDetail1, attachmentDetail0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = Boolean.FALSE;
      AttachmentDetail attachmentDetail1 = attachmentDetail0.objectKeyIsReadOnly(boolean0);
      attachmentDetail1.getObjectKeyIsReadOnly();
      AttachmentDetail attachmentDetail2 = attachmentDetail0.datasourceType("jKb");
      assertSame(attachmentDetail2, attachmentDetail0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.usage(metadataUsage0);
      MockDate mockDate0 = new MockDate();
      AttachmentDetail attachmentDetail2 = attachmentDetail1.createdAt(mockDate0);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.url("hK57$8cQ!o8)&vy");
      AttachmentDetail attachmentDetail4 = attachmentDetail3.datasourceType("}");
      AttachmentDetail attachmentDetail5 = attachmentDetail4.createdAt(mockDate0);
      assertSame(attachmentDetail1, attachmentDetail5);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.url("6Tt}y*iS%On*XV@Sl");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.href("");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.creatorId("6Tt}y*iS%On*XV@Sl");
      attachmentDetail0.getUserData();
      attachmentDetail3.equals((Object) null);
      attachmentDetail0.setUrl("y|'Wd");
      attachmentDetail1.url("9cKN@O");
      Long long0 = attachmentDetail1.getSize();
      assertNull(long0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.objectKeyIsReadOnly((Boolean) null);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.attachmentId("4");
      attachmentDetail1.setDescription("4");
      Long long0 = new Long(100L);
      AttachmentDetail attachmentDetail3 = attachmentDetail2.size(long0);
      attachmentDetail3.getUrl();
      attachmentDetail3.hashCode();
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = Boolean.valueOf(false);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.objectKeyIsReadOnly(boolean0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.href("    usage: ");
      Boolean boolean1 = new Boolean("    usage: ");
      attachmentDetail2.setObjectKeyIsReadOnly(boolean1);
      Boolean boolean2 = Boolean.valueOf("    usage: ");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.transferComplete(boolean2);
      assertSame(attachmentDetail3, attachmentDetail1);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MockDate mockDate0 = new MockDate(0L);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.createdAt(mockDate0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.url("mMF.mj>w%fht");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.datasourceType("mMF.mj>w%fht");
      attachmentDetail3.setCreatedAt(mockDate0);
      assertNull(attachmentDetail3.getCreatorId());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = new Boolean("");
      AttachmentDetail attachmentDetail1 = attachmentDetail0.transferComplete(boolean0);
      AttachmentDetail attachmentDetail2 = attachmentDetail1.creatorId("");
      assertNull(attachmentDetail2.getSize());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.url("");
      Boolean boolean0 = Boolean.valueOf(false);
      attachmentDetail0.objectKeyIsReadOnly(boolean0);
      AttachmentDetail attachmentDetail1 = attachmentDetail0.creatorId("");
      assertSame(attachmentDetail0, attachmentDetail1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.href("io.netty.channel.embedded.EmbeddedEventLoop");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.datasourceType("io.netty.channel.embedded.EmbeddedEventLoop");
      AttachmentDetail attachmentDetail3 = attachmentDetail2.attachmentId("io.netty.channel.embedded.EmbeddedEventLoop");
      String string0 = attachmentDetail3.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.setObjectKey("vj,!tO");
      AttachmentDetail attachmentDetail1 = attachmentDetail0.attachmentId("`E s?Q(=4q(~zoATw");
      assertSame(attachmentDetail1, attachmentDetail0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Date date0 = attachmentDetail0.getCreatedAt();
      assertNull(date0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MockDate mockDate0 = new MockDate((-5L));
      attachmentDetail0.setCreatedAt(mockDate0);
      Long long0 = new Long((-5L));
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail0.getUsage();
      AttachmentDetail attachmentDetail2 = attachmentDetail1.usage(metadataUsage0);
      MockDate mockDate1 = new MockDate((-5L));
      AttachmentDetail attachmentDetail3 = attachmentDetail1.href("bs#,%0d|A");
      attachmentDetail0.equals(attachmentDetail3);
      attachmentDetail2.toString();
      assertFalse(attachmentDetail1.equals((Object)attachmentDetail0));
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = Boolean.valueOf(true);
      attachmentDetail0.setTransferComplete(boolean0);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      attachmentDetail1.getUsage();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail2));
      
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("|avY\raLqb");
      boolean boolean1 = attachmentDetail0.equals(attachmentDetail3);
      assertFalse(boolean1);
      
      attachmentDetail1.url("FguqR.>:j");
      assertFalse(attachmentDetail1.equals((Object)attachmentDetail2));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      assertTrue(attachmentDetail2.equals((Object)attachmentDetail1));
      
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.usage(metadataUsage0);
      attachmentDetail2.getCreatedAt();
      AttachmentDetail attachmentDetail4 = attachmentDetail2.href("|avY\raLqb");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail4);
      assertFalse(boolean0);
      
      attachmentDetail0.datasourceType("a}aw>e'MhOX");
      assertFalse(attachmentDetail0.equals((Object)attachmentDetail3));
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.url("a}aw>e'MhOX");
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      Boolean boolean0 = new Boolean("a}aw>e'MhOX");
      attachmentDetail2.objectKeyIsReadOnly(boolean0);
      attachmentDetail1.getUsage();
      attachmentDetail1.getUrl();
      attachmentDetail0.url("a}aw>e'MhOX");
      boolean boolean1 = attachmentDetail0.equals(attachmentDetail2);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail0));
      
      FileSystemHandling.shouldAllThrowIOExceptions();
      Long long0 = new Long(10L);
      attachmentDetail0.size(long0);
      boolean boolean0 = attachmentDetail1.equals(attachmentDetail0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Boolean boolean0 = Boolean.TRUE;
      AttachmentDetail attachmentDetail1 = attachmentDetail0.url("N|]k}t9F9G'");
      AttachmentDetail attachmentDetail2 = attachmentDetail1.attachmentId("N|]k}t9F9G'");
      Boolean boolean1 = new Boolean("N|]k}t9F9G'");
      AttachmentDetail attachmentDetail3 = attachmentDetail0.url("N|]k}t9F9G'");
      attachmentDetail0.setDatasourceType("N|]k}t9F9G'");
      attachmentDetail3.getUrl();
      attachmentDetail2.getDatasourceType();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N|]k}t9F9G'");
      System.setCurrentTimeMillis(1L);
      attachmentDetail0.equals(attachmentDetail0);
      MetadataUsage metadataUsage0 = new MetadataUsage();
      MockDate mockDate0 = null;
      try {
        mockDate0 = new MockDate("N|]k}t9F9G'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Date", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.url("5-O?]*b*Q");
      Boolean boolean0 = Boolean.TRUE;
      AttachmentDetail attachmentDetail2 = attachmentDetail1.objectKeyIsReadOnly(boolean0);
      attachmentDetail0.setObjectKeyIsReadOnly(boolean0);
      Long.getLong("5-O?]*b*Q");
      attachmentDetail2.setUsage(metadataUsage0);
      assertNull(metadataUsage0.getLastAccessTime());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.getSize();
      attachmentDetail0.getHref();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.attachmentId((String) null);
      MockDate mockDate0 = new MockDate();
      AttachmentDetail attachmentDetail2 = attachmentDetail1.createdAt(mockDate0);
      AttachmentDetail attachmentDetail3 = new AttachmentDetail();
      attachmentDetail0.setAttachmentId("dOQ-E<<");
      attachmentDetail0.getTransferComplete();
      String string0 = attachmentDetail1.getAttachmentId();
      attachmentDetail2.setCreatorId((String) null);
      String string1 = attachmentDetail1.toString();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.setName("%V;?g'2oTol6apPQ");
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      AttachmentDetail attachmentDetail2 = attachmentDetail1.href("|avY\raLqb");
      boolean boolean0 = attachmentDetail0.equals(attachmentDetail2);
      assertFalse(boolean0);
      
      boolean boolean1 = attachmentDetail2.equals("%V;?g'2oTol6apPQ");
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      Long long0 = new Long(15L);
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail2));
      
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      AttachmentDetail attachmentDetail3 = attachmentDetail1.creatorId("a}aw>e'MhOX");
      AttachmentDetail attachmentDetail4 = attachmentDetail2.href((String) null);
      attachmentDetail0.equals(attachmentDetail4);
      AttachmentDetail attachmentDetail5 = attachmentDetail1.usage(metadataUsage0);
      attachmentDetail5.equals(attachmentDetail4);
      AttachmentDetail attachmentDetail6 = attachmentDetail1.attachmentId("a}aw>e'MhOX");
      attachmentDetail6.attachmentId("a}aw>e'MhOX");
      boolean boolean0 = attachmentDetail3.equals(attachmentDetail4);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      AttachmentDetail attachmentDetail1 = new AttachmentDetail();
      AttachmentDetail attachmentDetail2 = new AttachmentDetail();
      MetadataUsage metadataUsage0 = new MetadataUsage();
      attachmentDetail1.getUsage();
      assertTrue(attachmentDetail1.equals((Object)attachmentDetail0));
      
      attachmentDetail1.setUrl("a}aw>e'MhOX");
      attachmentDetail1.getUrl();
      AttachmentDetail attachmentDetail3 = attachmentDetail2.href("|avY\raLqb");
      attachmentDetail0.equals(attachmentDetail3);
      AttachmentDetail attachmentDetail4 = attachmentDetail1.datasourceType("a}aw>e'MhOX");
      boolean boolean0 = attachmentDetail4.equals(attachmentDetail3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      AttachmentDetail attachmentDetail0 = new AttachmentDetail();
      attachmentDetail0.setDescription("");
      attachmentDetail0.hashCode();
      attachmentDetail0.getCreatorId();
      AttachmentDetail attachmentDetail1 = attachmentDetail0.url("");
      attachmentDetail0.getUserData();
      Boolean.valueOf("");
      attachmentDetail1.equals((Object) null);
      attachmentDetail0.setHref("");
      MockDate mockDate0 = new MockDate(2432, 2432, 1826);
      attachmentDetail0.setCreatedAt(mockDate0);
      attachmentDetail1.getObjectKeyIsReadOnly();
      attachmentDetail0.transferComplete((Boolean) null);
      Long long0 = new Long(2432);
      attachmentDetail1.setSize(long0);
      String string0 = attachmentDetail1.toString();
      assertNotNull(string0);
  }
}
