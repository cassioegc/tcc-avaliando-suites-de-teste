/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:03:29 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.SpaceMember;
import com.ibm.watson.data.client.model.WriteableSpaceMembers;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WriteableSpaceMembers_ESTest extends WriteableSpaceMembers_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      WriteableSpaceMembers writeableSpaceMembers1 = writeableSpaceMembers0.members((List<SpaceMember>) null);
      List<SpaceMember> list0 = writeableSpaceMembers1.getMembers();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      WriteableSpaceMembers writeableSpaceMembers1 = writeableSpaceMembers0.addMembersItem((SpaceMember) null);
      List<SpaceMember> list0 = writeableSpaceMembers1.getMembers();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      writeableSpaceMembers0.members((List<SpaceMember>) null);
      SpaceMember spaceMember0 = new SpaceMember();
      // Undeclared exception!
      try { 
        writeableSpaceMembers0.addMembersItem(spaceMember0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.WriteableSpaceMembers", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      SpaceMember spaceMember0 = new SpaceMember();
      boolean boolean0 = writeableSpaceMembers0.equals(spaceMember0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      boolean boolean0 = writeableSpaceMembers0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      boolean boolean0 = writeableSpaceMembers0.equals(writeableSpaceMembers0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      WriteableSpaceMembers writeableSpaceMembers1 = new WriteableSpaceMembers();
      boolean boolean0 = writeableSpaceMembers0.equals(writeableSpaceMembers1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      String string0 = writeableSpaceMembers0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      writeableSpaceMembers0.setMembers((List<SpaceMember>) null);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      List<SpaceMember> list0 = writeableSpaceMembers0.getMembers();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      writeableSpaceMembers0.hashCode();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WriteableSpaceMembers writeableSpaceMembers0 = new WriteableSpaceMembers();
      WriteableSpaceMembers writeableSpaceMembers1 = writeableSpaceMembers0.members((List<SpaceMember>) null);
      String string0 = writeableSpaceMembers1.toString();
      assertEquals("class WriteableSpaceMembers {\n    members: null\n}", string0);
  }
}
