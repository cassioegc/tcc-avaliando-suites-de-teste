/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 17:14:59 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.TransactionHistory;
import com.ibm.watson.data.client.model.TransactionStatusItem;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TransactionStatusItem_ESTest extends TransactionStatusItem_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.setUpdatedAt("Timeout on blocking read for ");
      String string0 = transactionStatusItem0.getUpdatedAt();
      assertEquals("Timeout on blocking read for ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.setStatus("reactor.core.publisher.MonoZip$ZipCoordinator");
      String string0 = transactionStatusItem0.getStatus();
      assertEquals("reactor.core.publisher.MonoZip$ZipCoordinator", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.name("RGDJH6w}0^7*\u0007");
      String string0 = transactionStatusItem0.getName();
      assertEquals("RGDJH6w}0^7*\u0007", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.id("/j%VV+>.|(vbdX[5*^");
      String string0 = transactionStatusItem0.getId();
      assertEquals("/j%VV+>.|(vbdX[5*^", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.setId("");
      String string0 = transactionStatusItem0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      Vector<TransactionHistory> vector0 = new Vector<TransactionHistory>();
      transactionStatusItem0.history(vector0);
      List<TransactionHistory> list0 = transactionStatusItem0.getHistory();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      TransactionHistory transactionHistory0 = new TransactionHistory();
      transactionStatusItem0.addHistoryItem(transactionHistory0);
      List<TransactionHistory> list0 = transactionStatusItem0.getHistory();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.description("reactor.left.httpAggregator");
      String string0 = transactionStatusItem0.getDescription();
      assertEquals("reactor.left.httpAggregator", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.description("");
      String string0 = transactionStatusItem0.getDescription();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.createdAt("reactor.left.httpAggregator");
      String string0 = transactionStatusItem0.getCreatedAt();
      assertEquals("reactor.left.httpAggregator", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      assertTrue(transactionStatusItem1.equals((Object)transactionStatusItem0));
      
      transactionStatusItem1.setUpdatedAt("Channel released, now {} active connections and {} inactive connections");
      boolean boolean0 = transactionStatusItem1.equals(transactionStatusItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      assertTrue(transactionStatusItem1.equals((Object)transactionStatusItem0));
      
      transactionStatusItem1.status("n=;LQ[s");
      boolean boolean0 = transactionStatusItem1.equals(transactionStatusItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      assertTrue(transactionStatusItem1.equals((Object)transactionStatusItem0));
      
      transactionStatusItem0.setName(">t.)9w^8I cx2&");
      boolean boolean0 = transactionStatusItem1.equals(transactionStatusItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.id("n=;LQ[s");
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      boolean boolean0 = transactionStatusItem0.equals(transactionStatusItem1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      boolean boolean0 = transactionStatusItem0.equals(transactionStatusItem1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      assertTrue(transactionStatusItem1.equals((Object)transactionStatusItem0));
      
      TransactionStatusItem transactionStatusItem2 = transactionStatusItem0.updatedAt("");
      transactionStatusItem1.description("^C=ehyuuMz");
      boolean boolean0 = transactionStatusItem2.equals(transactionStatusItem1);
      assertFalse(transactionStatusItem1.equals((Object)transactionStatusItem0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.createdAt("drNvf&`5[D*6LaX5");
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      boolean boolean0 = transactionStatusItem1.equals(transactionStatusItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      boolean boolean0 = transactionStatusItem0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      boolean boolean0 = transactionStatusItem0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      boolean boolean0 = transactionStatusItem0.equals(transactionStatusItem0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      LinkedList<TransactionHistory> linkedList0 = new LinkedList<TransactionHistory>();
      transactionStatusItem0.history(linkedList0);
      TransactionStatusItem transactionStatusItem1 = new TransactionStatusItem();
      boolean boolean0 = transactionStatusItem1.equals(transactionStatusItem0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      TransactionHistory transactionHistory0 = new TransactionHistory();
      transactionStatusItem0.addHistoryItem(transactionHistory0);
      TransactionStatusItem transactionStatusItem1 = transactionStatusItem0.addHistoryItem(transactionHistory0);
      assertNull(transactionStatusItem1.getCreatedAt());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.setDescription("o");
      assertNull(transactionStatusItem0.getName());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.setCreatedAt("V~63e");
      assertNull(transactionStatusItem0.getName());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.status("");
      String string0 = transactionStatusItem0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      String string0 = transactionStatusItem0.getUpdatedAt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      String string0 = transactionStatusItem0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.createdAt("");
      String string0 = transactionStatusItem0.getCreatedAt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      List<TransactionHistory> list0 = transactionStatusItem0.getHistory();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.setUpdatedAt("");
      String string0 = transactionStatusItem0.getUpdatedAt();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.setName("");
      String string0 = transactionStatusItem0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      Stack<TransactionHistory> stack0 = new Stack<TransactionHistory>();
      transactionStatusItem0.setHistory(stack0);
      assertNull(transactionStatusItem0.getName());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.updatedAt("");
      String string0 = transactionStatusItem0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      transactionStatusItem0.hashCode();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      String string0 = transactionStatusItem0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      String string0 = transactionStatusItem0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      String string0 = transactionStatusItem0.getCreatedAt();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TransactionStatusItem transactionStatusItem0 = new TransactionStatusItem();
      String string0 = transactionStatusItem0.getId();
      assertNull(string0);
  }
}
