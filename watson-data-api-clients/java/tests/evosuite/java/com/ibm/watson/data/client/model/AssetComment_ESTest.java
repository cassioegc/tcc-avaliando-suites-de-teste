/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:40:06 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AssetComment;
import com.ibm.watson.data.client.model.AssetCommentEntity;
import com.ibm.watson.data.client.model.AssetCommentModificationEntity;
import com.ibm.watson.data.client.model.AssetCommentPropertyModification;
import com.ibm.watson.data.client.model.AssetCommentsModificationDetails;
import com.ibm.watson.data.client.model.CommentMetadata;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AssetComment_ESTest extends AssetComment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      CommentMetadata commentMetadata0 = new CommentMetadata();
      AssetComment assetComment1 = assetComment0.metadata(commentMetadata0);
      CommentMetadata commentMetadata1 = assetComment1.getMetadata();
      assertSame(commentMetadata1, commentMetadata0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      AssetCommentEntity assetCommentEntity0 = new AssetCommentEntity();
      AssetCommentPropertyModification assetCommentPropertyModification0 = new AssetCommentPropertyModification();
      AssetCommentEntity assetCommentEntity1 = assetCommentEntity0.addModificationDetailsItem(assetCommentPropertyModification0);
      AssetComment assetComment1 = assetComment0.entity(assetCommentEntity1);
      LinkedList<AssetCommentsModificationDetails> linkedList0 = new LinkedList<AssetCommentsModificationDetails>();
      AssetCommentsModificationDetails assetCommentsModificationDetails0 = new AssetCommentsModificationDetails();
      AssetCommentModificationEntity assetCommentModificationEntity0 = new AssetCommentModificationEntity();
      AssetCommentModificationEntity assetCommentModificationEntity1 = assetCommentModificationEntity0.modificationDetails(assetCommentPropertyModification0);
      AssetCommentsModificationDetails assetCommentsModificationDetails1 = assetCommentsModificationDetails0.entity(assetCommentModificationEntity1);
      linkedList0.add(assetCommentsModificationDetails1);
      assetCommentPropertyModification0.initialValues(linkedList0);
      // Undeclared exception!
      try { 
        assetComment1.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      AssetCommentEntity assetCommentEntity0 = new AssetCommentEntity();
      assetComment0.setEntity(assetCommentEntity0);
      String string0 = assetComment0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      AssetComment assetComment1 = new AssetComment();
      boolean boolean0 = assetComment0.equals(assetComment1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      boolean boolean0 = assetComment0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      boolean boolean0 = assetComment0.equals(assetComment0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      Object object0 = new Object();
      boolean boolean0 = assetComment0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      assetComment0.hashCode();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      AssetCommentEntity assetCommentEntity0 = new AssetCommentEntity();
      assetComment0.setEntity(assetCommentEntity0);
      AssetComment assetComment1 = new AssetComment();
      boolean boolean0 = assetComment0.equals(assetComment1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      AssetCommentEntity assetCommentEntity0 = new AssetCommentEntity();
      assetComment0.entity(assetCommentEntity0);
      AssetCommentEntity assetCommentEntity1 = assetComment0.getEntity();
      assertNull(assetCommentEntity1.getOldWfStatus());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      CommentMetadata commentMetadata0 = assetComment0.getMetadata();
      assertNull(commentMetadata0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      CommentMetadata commentMetadata0 = new CommentMetadata();
      assetComment0.setMetadata(commentMetadata0);
      assertNull(commentMetadata0.getAssetAncestorId());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      AssetCommentEntity assetCommentEntity0 = assetComment0.getEntity();
      assertNull(assetCommentEntity0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AssetComment assetComment0 = new AssetComment();
      CommentMetadata commentMetadata0 = new CommentMetadata();
      AssetComment assetComment1 = assetComment0.metadata(commentMetadata0);
      AssetComment assetComment2 = new AssetComment();
      boolean boolean0 = assetComment1.equals(assetComment2);
      assertFalse(boolean0);
  }
}
