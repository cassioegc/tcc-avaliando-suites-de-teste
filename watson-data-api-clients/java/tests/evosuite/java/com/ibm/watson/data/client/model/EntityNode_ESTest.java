/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 15:06:14 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.EntityNode;
import com.ibm.watson.data.client.model.FailureInfo;
import com.ibm.watson.data.client.model.RelationshipNode;
import com.ibm.watson.data.client.model.enums.EntityStatus;
import com.ibm.watson.data.client.model.enums.MappableEntityType;
import com.ibm.watson.data.client.model.enums.MappableOMRSEntity;
import com.ibm.watson.data.client.model.enums.MappableOMRSRelationship;
import com.ibm.watson.data.client.model.enums.PurgeStatus;
import io.netty.channel.embedded.EmbeddedChannel;
import java.util.ArrayList;
import java.util.EmptyStackException;
import java.util.LinkedList;
import java.util.List;
import java.util.PriorityQueue;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mockserver.scheduler.Scheduler;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EntityNode_ESTest extends EntityNode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      FileSystemHandling.shouldAllThrowIOExceptions();
      relationshipNode0.targetGuid("    pruned: ");
      entityNode1.omrsGuid("");
      Boolean boolean0 = new Boolean(false);
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      entityNode0.setOmrsGuid("");
      Boolean boolean0 = new Boolean(false);
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      Boolean boolean0 = XmlSuite.DEFAULT_GROUP_BY_INSTANCES;
      entityNode0.setMissing(boolean0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      relationshipNode0.targetGuid("    pruned: ");
      Boolean boolean1 = new Boolean(false);
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
      EntityNode entityNode2 = entityNode0.prunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode1.equals(entityNode2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      entityNode1.status(entityStatus0);
      relationshipNode0.targetGuid("    pruned: ");
      Boolean boolean0 = new Boolean(false);
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
      entityNode0.prunedRelationships((List<MappableOMRSRelationship>) null);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_PURGED;
      entityNode0.purgeStatus(purgeStatus0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      EntityNode entityNode0 = new EntityNode();
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      entityNode0.setStatus(entityStatus0);
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      Boolean boolean0 = new Boolean(false);
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      Boolean boolean0 = XmlSuite.DEFAULT_ALLOW_RETURN_VALUES;
      entityNode0.pruned(boolean0);
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      FailureInfo failureInfo0 = new FailureInfo();
      LinkedList<MappableOMRSRelationship> linkedList0 = new LinkedList<MappableOMRSRelationship>();
      entityNode1.setPrunedRelationships(linkedList0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      entityNode1.setMessageAssetId("    pruned: ");
      relationshipNode0.targetGuid("    pruned: ");
      entityNode0.equals(entityNode1);
      entityNode0.equals(mappableEntityType0);
      entityNode0.toString();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      relationshipNode0.targetGuid("    pruned: ");
      entityNode0.equals(entityNode1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      entityNode0.setPurgeStatus(purgeStatus0);
      EntityNode entityNode1 = new EntityNode();
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      RelationshipNode relationshipNode0 = new RelationshipNode();
      relationshipNode0.targetGuid("    pruned: ");
      Boolean boolean0 = new Boolean(false);
      entityNode1.pruned(boolean0);
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
      MappableEntityType mappableEntityType1 = MappableEntityType.COLUMN;
      entityNode1.mappableType(mappableEntityType1);
      entityNode1.mappableType(mappableEntityType0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      entityNode1.purgeStatus(purgeStatus0);
      relationshipNode0.targetGuid("    pruned: ");
      entityNode0.equals(entityNode1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)30;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      relationshipNode0.targetGuid("    pruned: ");
      Boolean boolean0 = new Boolean(false);
      EntityNode entityNode2 = entityNode1.pruned(boolean0);
      entityNode0.equals(entityNode1);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode3 = entityNode2.purgeStatus(purgeStatus0);
      entityNode3.pruned(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SEMANTICASSIGNMENT;
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      failureInfo0.timestamp("");
      EntityNode entityNode2 = entityNode1.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("    pruned: ");
      EntityNode entityNode3 = entityNode2.addRelationshipsItem(relationshipNode1);
      Boolean boolean0 = new Boolean(false);
      EntityNode entityNode4 = entityNode1.pruned(boolean0);
      entityNode4.pruned(boolean0);
      EntityNode entityNode5 = entityNode3.prunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode5.getRelationships();
      Boolean.compare(false, false);
      entityNode0.equals(entityNode1);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      entityNode4.pruned(boolean0);
      entityNode3.equals(purgeStatus0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp("");
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo1);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("    pruned: ");
      EntityNode entityNode3 = entityNode2.addRelationshipsItem(relationshipNode1);
      Boolean boolean0 = new Boolean(false);
      entityNode1.pruned(boolean0);
      EntityNode entityNode4 = entityNode3.prunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode4.getRelationships();
      Boolean.compare(false, true);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SCHEMAATTRIBUTETYPE;
      entityNode4.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      entityNode0.equals(entityNode1);
      failureInfo1.setTimestamp("    pruned: ");
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode5 = entityNode4.purgeStatus(purgeStatus0);
      entityNode5.pruned(boolean0);
      entityNode3.equals(purgeStatus0);
      entityNode2.pruned(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp("");
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo1);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("    pruned: ");
      EntityNode entityNode3 = entityNode2.addRelationshipsItem(relationshipNode1);
      Boolean boolean0 = new Boolean(false);
      entityNode1.pruned(boolean0);
      EntityNode entityNode4 = entityNode3.prunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode4.getRelationships();
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode5 = entityNode4.purgeStatus(purgeStatus0);
      entityNode5.pruned(boolean0);
      entityNode3.equals(purgeStatus0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      EntityNode entityNode2 = entityNode1.mappableType(mappableEntityType0);
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp("");
      EntityNode entityNode3 = entityNode2.failureInfo(failureInfo1);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("    pruned: ");
      EntityNode entityNode4 = entityNode3.addRelationshipsItem(relationshipNode1);
      Boolean boolean0 = new Boolean(false);
      entityNode1.pruned(boolean0);
      EntityNode entityNode5 = entityNode4.prunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode5.getRelationships();
      Boolean.compare(false, true);
      entityNode0.equals(entityNode1);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode6 = entityNode5.purgeStatus(purgeStatus0);
      entityNode6.pruned(boolean0);
      entityNode4.equals(purgeStatus0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      EntityNode entityNode1 = new EntityNode();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DATABASE;
      EntityNode entityNode2 = entityNode1.entityType(mappableOMRSEntity0);
      EntityNode entityNode3 = entityNode2.omrsGuid("reactor.left.wsFrameAggregator");
      Stack<MappableOMRSRelationship> stack0 = new Stack<MappableOMRSRelationship>();
      entityNode2.setOmrsGuid("reactor.left.wsFrameAggregator");
      EntityNode entityNode4 = entityNode3.prunedRelationships(stack0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.DATACONTENTFORDATASET;
      entityNode3.hashCode();
      EntityNode entityNode5 = entityNode4.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      entityNode5.getMissing();
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityNode entityNode6 = entityNode3.omrsGuid("reactor.left.wsFrameAggregator");
      entityNode2.setPurgeStatus(purgeStatus0);
      MappableOMRSEntity mappableOMRSEntity1 = MappableOMRSEntity.RELATIONALCOLUMNTYPE;
      entityNode0.equals(arrayList0);
      entityNode5.setEntityType(mappableOMRSEntity1);
      entityNode1.setPrunedRelationships(stack0);
      entityNode3.equals(entityNode0);
      entityNode6.setPrunedRelationships(stack0);
      entityNode5.setOmrsGuid("reactor.left.wsFrameAggregator");
      RelationshipNode relationshipNode0 = new RelationshipNode();
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.camsVersion("");
      FailureInfo failureInfo2 = failureInfo1.camsInstance("");
      RelationshipNode relationshipNode1 = relationshipNode0.failureInfo(failureInfo2);
      entityNode6.addRelationshipsItem(relationshipNode1);
      entityNode5.setRelationships(arrayList0);
      entityNode1.setEntityType(mappableOMRSEntity1);
      entityNode2.setOmrsGuid("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      EntityNode entityNode1 = entityNode0.mappableType(mappableEntityType0);
      Boolean boolean0 = XmlSuite.DEFAULT_ALLOW_RETURN_VALUES;
      Boolean.logicalAnd(false, false);
      entityNode0.setMissing(boolean0);
      entityNode1.setMappableType(mappableEntityType0);
      EntityNode entityNode2 = entityNode1.messageAssetId("");
      entityNode1.getRelationships();
      Boolean boolean1 = Boolean.TRUE;
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp("");
      failureInfo1.setCamsVersion("");
      failureInfo1.setCamsInstance("");
      entityNode0.setFailureInfo(failureInfo1);
      Boolean.logicalAnd(false, false);
      entityNode0.setMissing(boolean1);
      entityNode1.getMissing();
      entityNode2.getFailureInfo();
      entityNode1.getMissing();
      entityNode2.getEntityType();
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      entityNode0.setPurgeStatus(purgeStatus0);
      entityNode1.relationships((List<RelationshipNode>) null);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityNode entityNode1 = entityNode0.purgeStatus(purgeStatus0);
      FailureInfo failureInfo0 = new FailureInfo();
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.RELATIONALCOLUMNTYPE;
      EntityNode entityNode3 = entityNode2.entityType(mappableOMRSEntity0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.failureInfo(failureInfo0);
      RelationshipNode relationshipNode2 = relationshipNode1.target(entityNode1);
      EntityNode entityNode4 = entityNode3.addRelationshipsItem(relationshipNode2);
      String string0 = "#D";
      EntityNode entityNode5 = entityNode4.omrsGuid("#D");
      FailureInfo failureInfo1 = failureInfo0.thread("#D");
      String string1 = "@^C\"tsX8W_k&GDdjR7+";
      entityNode5.setOmrsGuid("@^C\"tsX8W_k&GDdjR7+");
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      entityNode5.setStatus(entityStatus0);
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      arrayList0.add(relationshipNode1);
      arrayList0.spliterator();
      arrayList0.add(relationshipNode2);
      entityNode1.setRelationships(arrayList0);
      entityNode3.setFailureInfo(failureInfo1);
      MappableEntityType mappableEntityType0 = MappableEntityType.SCHEMA;
      entityNode0.mappableType(mappableEntityType0);
      // Undeclared exception!
      try { 
        entityNode4.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.failureInfo((FailureInfo) null);
      assertNull(entityNode1.getMappableType());
      
      EntityNode entityNode2 = entityNode1.omrsGuid("lo5vK(6A/w,z6n{h");
      LinkedList<RelationshipNode> linkedList0 = new LinkedList<RelationshipNode>();
      EntityNode entityNode3 = entityNode2.relationships(linkedList0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DATABASE;
      entityNode1.entityType(mappableOMRSEntity0);
      EntityNode entityNode4 = entityNode3.pruned((Boolean) null);
      entityNode3.setFailureInfo((FailureInfo) null);
      entityNode3.hashCode();
      entityNode2.setRelationships(linkedList0);
      EntityStatus entityStatus0 = EntityStatus.EXISTS;
      entityNode0.status(entityStatus0);
      entityNode2.missing((Boolean) null);
      EntityNode entityNode5 = entityNode4.missing((Boolean) null);
      XmlSuite xmlSuite0 = new XmlSuite();
      Boolean boolean0 = xmlSuite0.getGroupByInstances();
      entityNode5.setMissing(boolean0);
      entityNode0.getOmrsGuid();
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_PURGED;
      entityNode2.setPurgeStatus(purgeStatus0);
      assertEquals(PurgeStatus.NOT_PURGED, entityNode2.getPurgeStatus());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.CONNECTIONENDPOINT;
      EntityNode entityNode1 = entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.stackTrace("IVS9f4N9aE");
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo1);
      EntityNode entityNode3 = entityNode2.addRelationshipsItem((RelationshipNode) null);
      failureInfo1.setTransactionId("    entityType: ");
      EntityNode entityNode4 = entityNode3.messageAssetId("");
      entityNode4.hashCode();
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      EntityNode entityNode5 = entityNode3.status(entityStatus0);
      Boolean boolean0 = XmlSuite.DEFAULT_JUNIT;
      Boolean.getBoolean("jx5Eb?(blRm<dw:0");
      entityNode2.setPruned(boolean0);
      entityNode2.pruned(boolean0);
      entityNode3.getPruned();
      entityNode5.getFailureInfo();
      EntityNode entityNode6 = entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      EntityNode entityNode7 = entityNode6.missing(boolean0);
      assertSame(entityNode7, entityNode6);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.messageAssetId("pnmfp)");
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      EntityNode entityNode2 = entityNode1.status(entityStatus0);
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.stackTrace("pnmfp)");
      EntityStatus entityStatus1 = EntityStatus.DOES_NOT_EXIST;
      entityNode1.status(entityStatus1);
      EntityNode entityNode3 = entityNode2.failureInfo(failureInfo1);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode4 = entityNode3.purgeStatus(purgeStatus0);
      entityNode4.setMessageAssetId("pnmfp)");
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.RELATIONALDBSCHEMATYPE;
      entityNode3.entityType(mappableOMRSEntity0);
      EntityNode entityNode5 = entityNode4.omrsGuid("");
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlSuite xmlSuite1 = xmlSuite0.shallowCopy();
      Vector<XmlTest> vector0 = new Vector<XmlTest>();
      xmlSuite1.setTests(vector0);
      Boolean boolean0 = xmlSuite1.isJUnit();
      entityNode5.missing(boolean0);
      entityNode3.getOmrsGuid();
      Object object0 = new Object();
      entityNode5.equals(object0);
      LinkedList<MappableOMRSRelationship> linkedList0 = new LinkedList<MappableOMRSRelationship>();
      EntityNode entityNode6 = entityNode5.prunedRelationships(linkedList0);
      entityNode6.omrsGuid("");
      failureInfo0.setCamsInstance("");
      entityNode0.getMappableType();
      entityNode4.messageAssetId("pnmfp)");
      entityNode4.getEntityType();
      PurgeStatus purgeStatus1 = PurgeStatus.PURGED;
      EntityNode entityNode7 = entityNode6.purgeStatus(purgeStatus1);
      assertEquals(EntityStatus.DOES_NOT_EXIST, entityNode7.getStatus());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid((String) null);
      FailureInfo failureInfo0 = new FailureInfo();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SEMANTICASSIGNMENT;
      relationshipNode0.setRelationshipType(mappableOMRSRelationship0);
      RelationshipNode relationshipNode2 = relationshipNode1.failureInfo(failureInfo0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_PURGED;
      RelationshipNode relationshipNode3 = relationshipNode2.purgeStatus(purgeStatus0);
      EntityNode entityNode1 = entityNode0.addRelationshipsItem(relationshipNode3);
      entityNode1.setOmrsGuid((String) null);
      entityNode1.messageAssetId("");
      Vector<MappableOMRSRelationship> vector0 = new Vector<MappableOMRSRelationship>();
      entityNode1.setPrunedRelationships(vector0);
      entityNode1.getStatus();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlSuite xmlSuite1 = xmlSuite0.shallowCopy();
      xmlSuite1.setGroupByInstances(false);
      entityNode0.messageAssetId("    purgeStatus: ");
      Boolean boolean0 = xmlSuite1.getAllowReturnValues();
      EntityNode entityNode1 = entityNode0.missing(boolean0);
      entityNode1.missing(xmlSuite1.DEFAULT_MIXED);
      Stack<MappableOMRSRelationship> stack0 = new Stack<MappableOMRSRelationship>();
      entityNode1.setPrunedRelationships(stack0);
      xmlSuite1.setParentSuite(xmlSuite0);
      Stack<RelationshipNode> stack1 = new Stack<RelationshipNode>();
      EntityNode entityNode2 = entityNode1.relationships(stack1);
      entityNode1.getRelationships();
      entityNode2.getMappableType();
      entityNode1.getRelationships();
      Boolean boolean1 = XmlSuite.DEFAULT_ALLOW_RETURN_VALUES;
      entityNode0.setPruned(boolean1);
      Boolean boolean2 = entityNode0.getPruned();
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.messageAssetId("_XyajV)YoL{2L'hMo}");
      entityNode1.getPrunedRelationships();
      EntityNode entityNode2 = entityNode1.prunedRelationships((List<MappableOMRSRelationship>) null);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.target(entityNode2);
      EntityNode entityNode3 = entityNode2.addRelationshipsItem(relationshipNode1);
      Boolean boolean0 = XmlSuite.DEFAULT_PRESERVE_ORDER;
      entityNode2.pruned(boolean0);
      Boolean boolean1 = XmlSuite.DEFAULT_SKIP_FAILED_INVOCATION_COUNTS;
      EntityNode entityNode4 = entityNode3.pruned(boolean1);
      MappableEntityType mappableEntityType0 = MappableEntityType.DATA_FILE;
      Boolean.logicalXor(false, true);
      EntityNode entityNode5 = entityNode4.mappableType(mappableEntityType0);
      entityNode5.getRelationships();
      EntityNode entityNode6 = entityNode5.mappableType(mappableEntityType0);
      assertSame(entityNode6, entityNode4);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.TABULARCOLUMN;
      EntityNode entityNode1 = entityNode0.entityType(mappableOMRSEntity0);
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      entityNode0.setRelationships(arrayList0);
      entityNode0.getRelationships();
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      EntityNode entityNode2 = entityNode0.mappableType(mappableEntityType0);
      entityNode2.getPrunedRelationships();
      entityNode0.setPrunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode0.getMappableType();
      EntityNode entityNode3 = entityNode1.messageAssetId("7{p6|ouVIe&~${l\"AP");
      entityNode3.setOmrsGuid("");
      assertNull(entityNode3.getPruned());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = Boolean.valueOf(false);
      EntityNode entityNode1 = entityNode0.missing(boolean0);
      Vector<MappableOMRSRelationship> vector0 = new Vector<MappableOMRSRelationship>();
      entityNode0.prunedRelationships(vector0);
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityNode entityNode2 = entityNode1.purgeStatus(purgeStatus0);
      List<MappableOMRSRelationship> list0 = entityNode2.getPrunedRelationships();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.omrsGuid("");
      EntityNode entityNode2 = entityNode1.relationships((List<RelationshipNode>) null);
      XmlSuite xmlSuite0 = new XmlSuite();
      Boolean boolean0 = xmlSuite0.skipFailedInvocationCounts();
      entityNode2.setMessageAssetId(";HUx`MALw5B*ZVo?;");
      EntityNode entityNode3 = entityNode2.missing(boolean0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode4 = entityNode3.purgeStatus(purgeStatus0);
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      EntityNode entityNode5 = entityNode4.status(entityStatus0);
      EntityNode entityNode6 = entityNode5.missing(boolean0);
      xmlSuite0.setPreserveOrder((Boolean) null);
      entityNode4.omrsGuid("");
      entityNode0.omrsGuid("");
      MappableEntityType mappableEntityType0 = MappableEntityType.SCHEMA;
      Boolean.getBoolean(";HUx`MALw5B*ZVo?;");
      entityNode6.setMappableType(mappableEntityType0);
      entityNode6.setStatus(entityStatus0);
      entityNode0.setPruned(xmlSuite0.DEFAULT_ALLOW_RETURN_VALUES);
      entityNode2.getMessageAssetId();
      PurgeStatus purgeStatus1 = entityNode1.getPurgeStatus();
      assertEquals(PurgeStatus.NOT_DETERMINED, purgeStatus1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.ASSETSCHEMATYPE;
      EntityNode entityNode1 = entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      EntityNode entityNode2 = entityNode1.mappableType(mappableEntityType0);
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      EntityNode entityNode3 = entityNode2.status(entityStatus0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      entityNode0.setMappableType(mappableEntityType0);
      RelationshipNode relationshipNode1 = relationshipNode0.messageAssetId("cY@ 'N");
      RelationshipNode relationshipNode2 = relationshipNode1.omrsGuid("com.ibm.watson.data.client.model.EntityNode");
      EntityNode entityNode4 = entityNode3.addRelationshipsItem(relationshipNode2);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.TABULARSCHEMATYPE;
      EntityNode entityNode5 = entityNode4.entityType(mappableOMRSEntity0);
      entityNode5.getPrunedRelationships();
      entityNode0.setMessageAssetId("cY@ 'N");
      entityNode5.getMissing();
      entityNode5.toString();
      relationshipNode2.omrsGuid("com.ibm.watson.data.client.model.EntityNode");
      entityNode2.setMappableType(mappableEntityType0);
      entityNode0.setPruned((Boolean) null);
      assertEquals(MappableOMRSEntity.TABULARSCHEMATYPE, entityNode0.getEntityType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      XmlSuite xmlSuite0 = new XmlSuite();
      xmlSuite0.setGuiceStage("6|");
      MappableEntityType mappableEntityType0 = MappableEntityType.SCHEMA;
      EntityNode entityNode1 = entityNode0.mappableType(mappableEntityType0);
      Boolean boolean0 = xmlSuite0.getGroupByInstances();
      Boolean.logicalOr((boolean) xmlSuite0.DEFAULT_JUNIT, (boolean) xmlSuite0.DEFAULT_PRESERVE_ORDER);
      entityNode0.setPruned(boolean0);
      entityNode0.equals((Object) null);
      FailureInfo failureInfo0 = new FailureInfo();
      Long long0 = new Long((long) xmlSuite0.DEFAULT_VERBOSE);
      FailureInfo failureInfo1 = failureInfo0.threadId(long0);
      failureInfo1.timestamp("null");
      FailureInfo failureInfo2 = failureInfo1.thread("6|");
      FailureInfo failureInfo3 = failureInfo0.camsInstance("6|");
      entityNode0.setOmrsGuid("6|");
      Long long1 = new Long((-634L));
      failureInfo0.threadId(long1);
      FailureInfo failureInfo4 = failureInfo2.camsVersion("_P.Z\"B");
      failureInfo0.equals(mappableEntityType0);
      failureInfo1.equals(mappableEntityType0);
      failureInfo4.setCamsInstance("6|");
      FailureInfo failureInfo5 = failureInfo4.camsInstance("6|");
      failureInfo5.setCamsInstance("close");
      failureInfo5.setThreadId(long0);
      EntityNode entityNode2 = entityNode0.failureInfo(failureInfo5);
      entityNode2.getMappableType();
      entityNode0.failureInfo(failureInfo3);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DATABASE;
      entityNode1.setEntityType(mappableOMRSEntity0);
      EntityNode entityNode3 = entityNode0.pruned(xmlSuite0.DEFAULT_GROUP_BY_INSTANCES);
      assertSame(entityNode3, entityNode0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.omrsGuid((String) null);
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      EntityNode entityNode2 = entityNode1.status(entityStatus0);
      XmlSuite xmlSuite0 = new XmlSuite();
      Boolean boolean0 = xmlSuite0.skipFailedInvocationCounts();
      EntityNode entityNode3 = entityNode2.pruned(boolean0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.RELATIONALTABLE;
      EntityNode entityNode4 = entityNode3.entityType(mappableOMRSEntity0);
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      EntityNode entityNode5 = entityNode4.relationships(arrayList0);
      Boolean boolean1 = entityNode5.getMissing();
      assertNull(boolean1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = Boolean.TRUE;
      Boolean.compare(false, false);
      EntityNode entityNode1 = entityNode0.missing(boolean0);
      MappableEntityType mappableEntityType0 = MappableEntityType.SCHEMA;
      EntityNode entityNode2 = entityNode1.mappableType(mappableEntityType0);
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.transactionId((String) null);
      EntityNode entityNode3 = entityNode2.failureInfo(failureInfo1);
      EntityNode entityNode4 = entityNode3.pruned(boolean0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.failureInfo(failureInfo0);
      EntityNode entityNode5 = entityNode4.addRelationshipsItem(relationshipNode1);
      entityNode5.getPruned();
      EntityStatus entityStatus0 = EntityStatus.EXISTS;
      entityNode1.status(entityStatus0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode6 = entityNode5.purgeStatus(purgeStatus0);
      MappableEntityType mappableEntityType1 = MappableEntityType.GLOSSARY_TERM;
      EntityNode entityNode7 = entityNode4.mappableType(mappableEntityType1);
      ArrayList<MappableOMRSRelationship> arrayList0 = new ArrayList<MappableOMRSRelationship>();
      entityNode7.prunedRelationships(arrayList0);
      entityNode6.getStatus();
      EntityNode entityNode8 = entityNode0.addRelationshipsItem(relationshipNode1);
      assertNull(entityNode8.getEntityType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = new Boolean(true);
      EntityNode entityNode1 = entityNode0.pruned(boolean0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode2 = entityNode1.purgeStatus(purgeStatus0);
      EntityNode entityNode3 = entityNode2.messageAssetId((String) null);
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp((String) null);
      FailureInfo failureInfo2 = failureInfo1.transactionId((String) null);
      EntityNode entityNode4 = entityNode3.failureInfo(failureInfo2);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.target(entityNode1);
      RelationshipNode relationshipNode2 = relationshipNode1.omrsGuid("");
      RelationshipNode relationshipNode3 = relationshipNode2.failureInfo(failureInfo0);
      EntityNode entityNode5 = entityNode4.addRelationshipsItem(relationshipNode3);
      String string0 = entityNode5.getMessageAssetId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode1 = entityNode0.purgeStatus(purgeStatus0);
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      EntityNode entityNode2 = entityNode1.status(entityStatus0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.TABULARCOLUMN;
      EntityNode entityNode3 = entityNode2.entityType(mappableOMRSEntity0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SCHEMAATTRIBUTETYPE;
      entityNode3.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      MappableEntityType mappableEntityType0 = MappableEntityType.GLOSSARY_TERM;
      EntityNode entityNode4 = entityNode3.mappableType(mappableEntityType0);
      entityNode4.setOmrsGuid("");
      entityNode1.setOmrsGuid("    messageAssetId: ");
      Boolean boolean0 = Boolean.TRUE;
      entityNode1.missing(boolean0);
      entityNode1.mappableType(mappableEntityType0);
      FailureInfo failureInfo0 = entityNode0.getFailureInfo();
      assertNull(failureInfo0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.omrsGuid("");
      MappableEntityType mappableEntityType0 = MappableEntityType.DATA_FILE;
      entityNode1.setMappableType(mappableEntityType0);
      EntityNode entityNode2 = entityNode1.missing((Boolean) null);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SCHEMAATTRIBUTETYPE;
      EntityNode entityNode3 = entityNode2.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.RELATIONALCOLUMN;
      EntityNode entityNode4 = entityNode3.entityType(mappableOMRSEntity0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      entityNode4.omrsGuid("");
      relationshipNode0.messageAssetId("");
      EntityNode entityNode5 = entityNode4.addRelationshipsItem(relationshipNode0);
      entityNode5.equals(entityNode1);
      entityNode2.equals(mappableOMRSRelationship0);
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      entityNode0.status(entityStatus0);
      MappableEntityType mappableEntityType1 = MappableEntityType.TABULAR_COLUMN;
      EntityNode entityNode6 = entityNode4.mappableType(mappableEntityType1);
      assertSame(entityNode0, entityNode6);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      XmlSuite xmlSuite0 = new XmlSuite();
      xmlSuite0.getAllowReturnValues();
      Stack<MappableOMRSRelationship> stack0 = new Stack<MappableOMRSRelationship>();
      entityNode0.setPrunedRelationships(stack0);
      xmlSuite0.setParentSuite(xmlSuite0);
      Stack<RelationshipNode> stack1 = new Stack<RelationshipNode>();
      entityNode0.getRelationships();
      entityNode0.getRelationships();
      Boolean boolean0 = XmlSuite.DEFAULT_ALLOW_RETURN_VALUES;
      Boolean boolean1 = entityNode0.getPruned();
      assertNull(boolean1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = Boolean.TRUE;
      entityNode0.setMessageAssetId("");
      EntityNode entityNode1 = entityNode0.pruned(boolean0);
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityNode entityNode2 = entityNode1.purgeStatus(purgeStatus0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.CONNECTIONCONNECTORTYPE;
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTORTYPE;
      entityNode2.setEntityType(mappableOMRSEntity0);
      EntityNode entityNode3 = entityNode2.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      entityNode1.setMessageAssetId("b9.V");
      MappableEntityType mappableEntityType0 = MappableEntityType.TABULAR_COLUMN;
      EntityNode entityNode4 = entityNode3.mappableType(mappableEntityType0);
      entityNode4.getRelationships();
      entityNode0.getMissing();
      entityNode4.getPurgeStatus();
      MappableOMRSEntity mappableOMRSEntity1 = MappableOMRSEntity.RELATIONALDBSCHEMATYPE;
      entityNode4.setEntityType(mappableOMRSEntity1);
      assertEquals(MappableOMRSEntity.RELATIONALDBSCHEMATYPE, entityNode4.getEntityType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      EntityNode entityNode1 = entityNode0.status(entityStatus0);
      FailureInfo failureInfo0 = new FailureInfo();
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("");
      EntityNode entityNode3 = entityNode2.addRelationshipsItem(relationshipNode1);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTION;
      EntityNode entityNode4 = entityNode3.entityType(mappableOMRSEntity0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_PURGED;
      EntityNode entityNode5 = entityNode4.purgeStatus(purgeStatus0);
      String string0 = entityNode5.getOmrsGuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityStatus entityStatus0 = EntityStatus.EXISTS;
      EntityNode entityNode1 = entityNode0.status(entityStatus0);
      EntityNode entityNode2 = entityNode1.messageAssetId("    pruned: ");
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.TABULARCOLUMNTYPE;
      EntityNode entityNode3 = entityNode2.entityType(mappableOMRSEntity0);
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      EntityNode entityNode4 = entityNode3.mappableType(mappableEntityType0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode5 = entityNode4.purgeStatus(purgeStatus0);
      Boolean boolean0 = entityNode5.getMissing();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.omrsGuid("*tQ\"rZ?LPcQcAd%#Q^");
      RelationshipNode relationshipNode0 = new RelationshipNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode1 = relationshipNode0.failureInfo(failureInfo0);
      EntityNode entityNode2 = entityNode1.addRelationshipsItem(relationshipNode1);
      Boolean boolean0 = XmlSuite.DEFAULT_MIXED;
      EntityNode entityNode3 = entityNode2.missing(boolean0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.TABULARSCHEMATYPE;
      EntityNode entityNode4 = entityNode3.entityType(mappableOMRSEntity0);
      EntityNode entityNode5 = entityNode4.pruned(boolean0);
      assertSame(entityNode5, entityNode4);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = XmlSuite.DEFAULT_GROUP_BY_INSTANCES;
      EntityNode entityNode1 = entityNode0.pruned(boolean0);
      MappableEntityType mappableEntityType0 = MappableEntityType.COLUMNLESS_TABLE;
      EntityNode entityNode2 = entityNode1.mappableType(mappableEntityType0);
      EntityNode entityNode3 = entityNode2.missing(boolean0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode4 = entityNode3.purgeStatus(purgeStatus0);
      entityNode4.hashCode();
      entityNode4.setOmrsGuid("");
      entityNode0.setOmrsGuid("");
      entityNode3.toString();
      Boolean boolean1 = entityNode2.getMissing();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      PriorityQueue<MappableOMRSRelationship> priorityQueue0 = new PriorityQueue<MappableOMRSRelationship>();
      Vector<MappableOMRSRelationship> vector0 = new Vector<MappableOMRSRelationship>(priorityQueue0);
      EntityNode entityNode1 = entityNode0.prunedRelationships(vector0);
      Stack<RelationshipNode> stack0 = new Stack<RelationshipNode>();
      EntityNode entityNode2 = entityNode1.relationships(stack0);
      Boolean boolean0 = new Boolean(true);
      EntityNode entityNode3 = entityNode2.pruned(boolean0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.target(entityNode2);
      EntityNode entityNode4 = entityNode3.addRelationshipsItem(relationshipNode1);
      EntityNode entityNode5 = entityNode4.missing(boolean0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.DATACONTENTFORDATASET;
      EntityNode entityNode6 = entityNode5.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      assertSame(entityNode6, entityNode4);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      EntityNode entityNode1 = entityNode0.status(entityStatus0);
      Boolean boolean0 = Boolean.TRUE;
      EntityNode entityNode2 = entityNode1.missing(boolean0);
      EntityNode entityNode3 = entityNode2.failureInfo((FailureInfo) null);
      EntityNode entityNode4 = entityNode3.messageAssetId("");
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SEMANTICASSIGNMENT;
      EntityNode entityNode5 = entityNode4.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      String string0 = entityNode5.getMessageAssetId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = XmlSuite.DEFAULT_ALLOW_RETURN_VALUES;
      entityNode0.setMissing(boolean0);
      entityNode0.hashCode();
      entityNode0.setMissing((Boolean) null);
      assertNull(entityNode0.getMessageAssetId());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.omrsGuid("ADQU/.l7tJ%I");
      MappableEntityType mappableEntityType0 = MappableEntityType.TABULAR_COLUMN;
      entityNode1.setMappableType(mappableEntityType0);
      EntityNode entityNode2 = entityNode1.messageAssetId("1Lelt}A4]#\"ip(=\"D");
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.GLOSSARYTERM;
      EntityNode entityNode3 = entityNode2.entityType(mappableOMRSEntity0);
      FailureInfo failureInfo0 = entityNode3.getFailureInfo();
      assertNull(failureInfo0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      EntityNode entityNode1 = entityNode0.addRelationshipsItem(relationshipNode0);
      EntityNode entityNode2 = entityNode1.messageAssetId("S3apMcjLSW}lRzowM");
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.transactionId("r~<55GgT*!L,rb%/9$");
      FailureInfo failureInfo2 = failureInfo1.camsVersion("r~<55GgT*!L,rb%/9$");
      EntityNode entityNode3 = entityNode2.failureInfo(failureInfo2);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.RELATIONALCOLUMN;
      EntityNode entityNode4 = entityNode3.entityType(mappableOMRSEntity0);
      MappableOMRSEntity mappableOMRSEntity1 = MappableOMRSEntity.CONNECTORTYPE;
      entityNode4.setEntityType(mappableOMRSEntity1);
      assertNull(entityNode4.getPruned());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableEntityType mappableEntityType0 = MappableEntityType.GLOSSARY_TERM;
      EntityNode entityNode1 = entityNode0.mappableType(mappableEntityType0);
      assertEquals(MappableEntityType.GLOSSARY_TERM, entityNode1.getMappableType());
      
      Boolean boolean0 = Boolean.FALSE;
      EntityNode entityNode2 = entityNode1.missing(boolean0);
      FailureInfo failureInfo0 = new FailureInfo();
      EntityNode entityNode3 = entityNode2.failureInfo(failureInfo0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_PURGED;
      EntityNode entityNode4 = entityNode3.purgeStatus(purgeStatus0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DATAFILE;
      EntityNode entityNode5 = entityNode4.entityType(mappableOMRSEntity0);
      Boolean boolean1 = entityNode5.getPruned();
      assertNull(boolean1);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.omrsGuid("");
      List<RelationshipNode> list0 = entityNode1.getRelationships();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      EntityNode entityNode1 = entityNode0.addRelationshipsItem(relationshipNode0);
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityNode entityNode2 = entityNode1.purgeStatus(purgeStatus0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.CONNECTIONENDPOINT;
      XmlTest xmlTest0 = new XmlTest();
      Boolean boolean0 = xmlTest0.getPreserveOrder();
      EntityNode entityNode3 = entityNode1.pruned(boolean0);
      boolean boolean1 = entityNode2.equals(entityNode3);
      assertTrue(boolean1);
      
      EntityNode entityNode4 = entityNode2.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      Boolean boolean2 = XmlSuite.DEFAULT_GROUP_BY_INSTANCES;
      EntityNode entityNode5 = entityNode4.pruned(boolean2);
      EntityNode entityNode6 = entityNode5.relationships((List<RelationshipNode>) null);
      entityNode6.messageAssetId("");
      assertFalse(boolean2.equals((Object)boolean1));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      entityNode0.setStatus(entityStatus0);
      Stack<MappableOMRSRelationship> stack0 = new Stack<MappableOMRSRelationship>();
      EntityNode entityNode1 = entityNode0.prunedRelationships(stack0);
      MappableEntityType mappableEntityType0 = MappableEntityType.SCHEMA;
      entityNode1.mappableType(mappableEntityType0);
      // Undeclared exception!
      try { 
        stack0.pop();
        fail("Expecting exception: EmptyStackException");
      
      } catch(EmptyStackException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Stack", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      entityNode0.getStatus();
      Boolean boolean0 = XmlSuite.DEFAULT_PRESERVE_ORDER;
      entityNode0.setPruned(boolean0);
      assertTrue(entityNode0.getPruned());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = XmlSuite.DEFAULT_MIXED;
      EntityNode entityNode1 = entityNode0.pruned(boolean0);
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      EntityNode entityNode2 = entityNode1.status(entityStatus0);
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.operation("");
      EntityNode entityNode3 = entityNode2.failureInfo(failureInfo1);
      EntityNode entityNode4 = entityNode3.missing(boolean0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.CONNECTIONTOASSET;
      EntityNode entityNode5 = entityNode4.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      entityNode5.setFailureInfo(failureInfo1);
      assertNull(entityNode5.getMappableType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.ATTRIBUTEFORSCHEMA;
      EntityNode entityNode1 = entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      ArrayList<MappableOMRSRelationship> arrayList0 = new ArrayList<MappableOMRSRelationship>();
      EntityNode entityNode2 = entityNode1.prunedRelationships(arrayList0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.TABULARSCHEMATYPE;
      EntityNode entityNode3 = entityNode2.entityType(mappableOMRSEntity0);
      MappableEntityType mappableEntityType0 = MappableEntityType.COLUMN;
      entityNode3.setMappableType(mappableEntityType0);
      assertSame(entityNode0, entityNode3);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Vector<RelationshipNode> vector0 = new Vector<RelationshipNode>();
      EntityNode entityNode1 = entityNode0.relationships(vector0);
      FailureInfo failureInfo0 = new FailureInfo();
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo0);
      EntityStatus entityStatus0 = EntityStatus.EXISTS;
      EntityNode entityNode3 = entityNode2.status(entityStatus0);
      ArrayList<MappableOMRSRelationship> arrayList0 = new ArrayList<MappableOMRSRelationship>();
      EntityNode entityNode4 = entityNode3.prunedRelationships(arrayList0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SEMANTICASSIGNMENT;
      EntityNode entityNode5 = entityNode4.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      entityNode5.getPurgeStatus();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      entityNode0.setPurgeStatus(purgeStatus0);
      entityNode0.getMissing();
      entityNode0.setMessageAssetId("");
      String string0 = entityNode0.getOmrsGuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.relationships((List<RelationshipNode>) null);
      EntityStatus entityStatus0 = EntityStatus.EXISTS;
      EntityNode entityNode2 = entityNode1.status(entityStatus0);
      Boolean boolean0 = Boolean.valueOf("reactor.core.publisher.MonoRunnable$MonoRunnableEagerSubscription");
      EntityNode entityNode3 = entityNode2.pruned(boolean0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SCHEMAATTRIBUTETYPE;
      EntityNode entityNode4 = entityNode3.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      EntityNode entityNode5 = entityNode4.omrsGuid("reactor.core.publisher.MonoRunnable$MonoRunnableEagerSubscription");
      entityNode5.getMappableType();
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      boolean boolean0 = entityNode0.equals(integer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableEntityType mappableEntityType0 = MappableEntityType.DATA_FILE;
      EntityNode entityNode1 = entityNode0.mappableType(mappableEntityType0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTION;
      EntityNode entityNode2 = entityNode1.entityType(mappableOMRSEntity0);
      EntityNode entityNode3 = entityNode2.relationships((List<RelationshipNode>) null);
      entityNode3.getPrunedRelationships();
      EntityNode entityNode4 = entityNode3.prunedRelationships((List<MappableOMRSRelationship>) null);
      MappableOMRSEntity mappableOMRSEntity1 = entityNode4.getEntityType();
      assertEquals(MappableOMRSEntity.CONNECTION, mappableOMRSEntity1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      EntityNode entityNode1 = entityNode0.mappableType(mappableEntityType0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_PURGED;
      EntityNode entityNode2 = entityNode1.purgeStatus(purgeStatus0);
      LinkedList<RelationshipNode> linkedList0 = new LinkedList<RelationshipNode>();
      EntityNode entityNode3 = entityNode2.relationships(linkedList0);
      entityNode3.setPurgeStatus(purgeStatus0);
      assertNull(entityNode3.getEntityType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.CONNECTIONTOASSET;
      EntityNode entityNode1 = entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      EntityNode entityNode2 = entityNode1.addRelationshipsItem(relationshipNode0);
      Boolean boolean0 = XmlSuite.DEFAULT_JUNIT;
      EntityNode entityNode3 = entityNode2.missing(boolean0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode4 = entityNode3.purgeStatus(purgeStatus0);
      EntityNode entityNode5 = entityNode4.messageAssetId("6.}/*BG[;\"/:6ks{");
      entityNode5.setMessageAssetId("6.}/*BG[;\"/:6ks{");
      assertNull(entityNode5.getPruned());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = entityNode0.relationships((List<RelationshipNode>) null);
      Stack<MappableOMRSRelationship> stack0 = new Stack<MappableOMRSRelationship>();
      EntityNode entityNode2 = entityNode1.prunedRelationships(stack0);
      Boolean boolean0 = Boolean.valueOf(true);
      EntityNode entityNode3 = entityNode2.missing(boolean0);
      Boolean boolean1 = new Boolean((String) null);
      EntityNode entityNode4 = entityNode3.pruned(boolean1);
      assertSame(entityNode4, entityNode1);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode1 = relationshipNode0.failureInfo(failureInfo0);
      EntityNode entityNode1 = entityNode0.addRelationshipsItem(relationshipNode1);
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      EntityNode entityNode2 = entityNode1.relationships(arrayList0);
      Vector<MappableOMRSRelationship> vector0 = new Vector<MappableOMRSRelationship>();
      entityNode2.setPrunedRelationships(vector0);
      assertNull(entityNode2.getPruned());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      EntityNode entityNode1 = entityNode0.status(entityStatus0);
      entityNode1.getEntityType();
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      entityNode0.getPrunedRelationships();
      EntityNode entityNode1 = entityNode0.prunedRelationships((List<MappableOMRSRelationship>) null);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SCHEMAATTRIBUTETYPE;
      EntityNode entityNode2 = entityNode1.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_PURGED;
      EntityNode entityNode3 = entityNode2.purgeStatus(purgeStatus0);
      LinkedList<RelationshipNode> linkedList0 = new LinkedList<RelationshipNode>();
      entityNode3.setRelationships(linkedList0);
      assertNull(entityNode3.getOmrsGuid());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.CONNECTORTYPE;
      EntityNode entityNode1 = entityNode0.entityType(mappableOMRSEntity0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.ATTRIBUTEFORSCHEMA;
      EntityNode entityNode2 = entityNode1.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      assertNull(entityNode2.getStatus());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      assertTrue(entityNode1.equals((Object)entityNode0));
      
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.CONNECTIONENDPOINT;
      entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("    pruned: ");
      boolean boolean0 = entityNode0.equals(entityNode1);
      assertFalse(boolean0);
      
      entityNode1.addRelationshipsItem(relationshipNode1);
      assertFalse(entityNode1.equals((Object)entityNode0));
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      XmlSuite xmlSuite0 = new XmlSuite();
      xmlSuite0.toString();
      XmlSuite xmlSuite1 = xmlSuite0.shallowCopy();
      Boolean boolean0 = xmlSuite1.isJUnit();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      assertTrue(entityNode1.equals((Object)entityNode0));
      
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      Boolean boolean0 = new Boolean(false);
      EntityNode entityNode2 = entityNode1.pruned(boolean0);
      boolean boolean1 = entityNode0.equals(entityNode1);
      assertFalse(boolean1);
      
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      entityNode2.purgeStatus(purgeStatus0);
      assertTrue(boolean0.equals((Object)boolean1));
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[1] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      Boolean boolean0 = XmlSuite.DEFAULT_MIXED;
      entityNode0.setMissing(boolean0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      relationshipNode0.targetGuid("    pruned: ");
      Boolean boolean1 = new Boolean(true);
      Boolean.compare(true, true);
      entityNode1.hashCode();
      entityNode0.equals(entityNode1);
      EntityNode entityNode2 = entityNode0.prunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode2.setMessageAssetId("    pruned: ");
      entityNode1.equals(entityNode2);
      Random.setNextRandom(8);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      assertTrue(entityNode1.equals((Object)entityNode0));
      
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.timestamp("");
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo1);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("");
      EntityNode entityNode3 = entityNode2.addRelationshipsItem(relationshipNode1);
      Boolean boolean0 = new Boolean(false);
      entityNode1.pruned(boolean0);
      EntityNode entityNode4 = entityNode3.prunedRelationships((List<MappableOMRSRelationship>) null);
      entityNode4.getRelationships();
      boolean boolean1 = entityNode0.equals(entityNode1);
      assertFalse(boolean1);
      
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode5 = entityNode4.purgeStatus(purgeStatus0);
      entityNode5.pruned(boolean0);
      boolean boolean2 = entityNode3.equals(purgeStatus0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      Boolean boolean0 = new Boolean(false);
      boolean boolean1 = entityNode0.equals(entityNode1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      EntityNode entityNode0 = new EntityNode();
      EntityNode entityNode1 = new EntityNode();
      assertTrue(entityNode1.equals((Object)entityNode0));
      
      MappableEntityType mappableEntityType0 = MappableEntityType.CONNECTION;
      EntityNode entityNode2 = entityNode1.mappableType(mappableEntityType0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      RelationshipNode relationshipNode1 = relationshipNode0.targetGuid("    pruned: ");
      entityNode0.equals(entityNode1);
      entityNode2.addRelationshipsItem(relationshipNode1);
      assertFalse(entityNode1.equals((Object)entityNode0));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      PurgeStatus purgeStatus0 = PurgeStatus.NOT_DETERMINED;
      EntityNode entityNode1 = entityNode0.purgeStatus(purgeStatus0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode1 = relationshipNode0.failureInfo(failureInfo0);
      EntityNode entityNode2 = entityNode1.addRelationshipsItem(relationshipNode1);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.DATACONTENTFORDATASET;
      entityNode2.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      delayQueue0.poll();
      boolean boolean0 = entityNode1.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.SEMANTICASSIGNMENT;
      EntityNode entityNode1 = entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      FailureInfo failureInfo0 = new FailureInfo();
      RelationshipNode relationshipNode0 = new RelationshipNode();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Boolean boolean0 = new Boolean(false);
      entityNode1.pruned(boolean0);
      boolean boolean1 = entityNode0.equals(entityNode1);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityNode entityNode1 = entityNode0.purgeStatus(purgeStatus0);
      FailureInfo failureInfo0 = new FailureInfo();
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo0);
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.RELATIONALCOLUMNTYPE;
      EntityNode entityNode3 = entityNode2.entityType(mappableOMRSEntity0);
      FailureInfo failureInfo1 = failureInfo0.thread("");
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      arrayList0.spliterator();
      entityNode1.setRelationships(arrayList0);
      entityNode3.setFailureInfo(failureInfo1);
      MappableEntityType mappableEntityType0 = MappableEntityType.SCHEMA;
      entityNode0.mappableType(mappableEntityType0);
      entityNode1.getOmrsGuid();
      entityNode3.getStatus();
      entityNode1.getPurgeStatus();
      EntityNode entityNode4 = entityNode0.mappableType(mappableEntityType0);
      entityNode3.setMessageAssetId("@^C\"tsX8Wvk&GDdjR7+");
      MappableEntityType mappableEntityType1 = MappableEntityType.SCHEMA;
      entityNode4.setMappableType(mappableEntityType1);
      EntityNode entityNode5 = entityNode1.messageAssetId("");
      assertEquals(MappableOMRSEntity.RELATIONALCOLUMNTYPE, entityNode5.getEntityType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      EntityNode entityNode1 = new EntityNode();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.DATABASE;
      EntityNode entityNode2 = entityNode1.entityType(mappableOMRSEntity0);
      EntityNode entityNode3 = entityNode2.omrsGuid("reactor.left.wsFrameAggregator");
      Stack<MappableOMRSRelationship> stack0 = new Stack<MappableOMRSRelationship>();
      entityNode2.setOmrsGuid("reactor.left.wsFrameAggregator");
      EntityNode entityNode4 = entityNode3.prunedRelationships(stack0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.DATACONTENTFORDATASET;
      entityNode3.hashCode();
      EntityNode entityNode5 = entityNode4.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      entityNode5.getMissing();
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityNode entityNode6 = entityNode3.omrsGuid("reactor.left.wsFrameAggregator");
      entityNode2.setPurgeStatus(purgeStatus0);
      MappableOMRSEntity mappableOMRSEntity1 = MappableOMRSEntity.RELATIONALCOLUMNTYPE;
      entityNode0.equals(arrayList0);
      entityNode5.setEntityType(mappableOMRSEntity1);
      entityNode1.setPrunedRelationships(stack0);
      entityNode3.equals(entityNode0);
      entityNode6.setPrunedRelationships(stack0);
      entityNode5.setOmrsGuid("reactor.left.wsFrameAggregator");
      RelationshipNode relationshipNode0 = new RelationshipNode();
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.camsInstance("");
      RelationshipNode relationshipNode1 = relationshipNode0.failureInfo(failureInfo1);
      entityNode6.addRelationshipsItem(relationshipNode1);
      entityNode5.setRelationships(arrayList0);
      entityNode1.setEntityType(mappableOMRSEntity1);
      entityNode2.setOmrsGuid("");
      LinkedList<RelationshipNode> linkedList0 = new LinkedList<RelationshipNode>();
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = XmlSuite.DEFAULT_JUNIT;
      EntityNode entityNode1 = entityNode0.missing(boolean0);
      EntityStatus entityStatus0 = EntityStatus.DOES_NOT_EXIST;
      EntityNode entityNode2 = entityNode1.status(entityStatus0);
      EntityNode entityNode3 = entityNode2.messageAssetId(")t>.GYmy}g");
      MappableEntityType mappableEntityType0 = MappableEntityType.COLUMN;
      entityNode2.setMappableType(mappableEntityType0);
      EntityNode entityNode4 = entityNode3.mappableType(mappableEntityType0);
      EntityNode entityNode5 = entityNode1.omrsGuid("");
      EntityNode entityNode6 = entityNode5.messageAssetId("");
      entityNode4.toString();
      MappableOMRSEntity mappableOMRSEntity0 = MappableOMRSEntity.TABULARCOLUMNTYPE;
      entityNode6.setEntityType(mappableOMRSEntity0);
      MappableOMRSEntity mappableOMRSEntity1 = MappableOMRSEntity.RELATIONALTABLETYPE;
      entityNode6.setEntityType(mappableOMRSEntity1);
      entityNode0.omrsGuid("");
      MappableOMRSEntity mappableOMRSEntity2 = entityNode1.getEntityType();
      assertSame(mappableOMRSEntity2, mappableOMRSEntity1);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      Boolean boolean0 = new Boolean("G`LXGV5E*");
      EntityNode entityNode1 = entityNode0.pruned(boolean0);
      RelationshipNode relationshipNode0 = new RelationshipNode();
      EntityNode entityNode2 = entityNode1.addRelationshipsItem(relationshipNode0);
      MappableEntityType mappableEntityType0 = MappableEntityType.TABULAR_COLUMN;
      EntityNode entityNode3 = entityNode2.mappableType(mappableEntityType0);
      PurgeStatus purgeStatus0 = PurgeStatus.PURGED;
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      EntityNode entityNode4 = entityNode2.status(entityStatus0);
      EntityStatus entityStatus1 = EntityStatus.DOES_NOT_EXIST;
      entityNode2.setPurgeStatus(purgeStatus0);
      EntityNode entityNode5 = entityNode3.status(entityStatus1);
      entityNode0.setStatus(entityStatus1);
      MappableEntityType mappableEntityType1 = MappableEntityType.CONNECTION;
      Boolean.logicalOr(false, false);
      entityNode5.setMappableType(mappableEntityType1);
      entityNode1.setPurgeStatus(purgeStatus0);
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.ATTRIBUTEFORSCHEMA;
      entityNode2.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      EntityNode entityNode6 = entityNode1.purgeStatus(purgeStatus0);
      EmbeddedChannel embeddedChannel0 = new EmbeddedChannel();
      boolean boolean1 = entityNode6.equals(embeddedChannel0);
      assertFalse(boolean1);
      
      MappableEntityType mappableEntityType2 = MappableEntityType.GLOSSARY_TERM;
      EntityNode entityNode7 = entityNode1.mappableType(mappableEntityType2);
      entityNode2.getMessageAssetId();
      entityNode1.setOmrsGuid("io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf");
      entityNode4.omrsGuid("io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf");
      entityNode7.getStatus();
      entityNode6.getMappableType();
      entityNode7.setFailureInfo((FailureInfo) null);
      Vector<RelationshipNode> vector0 = new Vector<RelationshipNode>();
      entityNode2.setRelationships(vector0);
      assertTrue(boolean0.equals((Object)boolean1));
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      EntityStatus entityStatus0 = EntityStatus.EXISTS;
      EntityNode entityNode1 = entityNode0.status(entityStatus0);
      FailureInfo failureInfo0 = new FailureInfo();
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo0);
      MappableEntityType mappableEntityType0 = MappableEntityType.TABULAR_COLUMN;
      EntityNode entityNode3 = entityNode2.mappableType(mappableEntityType0);
      entityNode0.setStatus(entityStatus0);
      Boolean boolean0 = Boolean.FALSE;
      entityNode3.hashCode();
      entityNode3.status(entityStatus0);
      entityNode0.getMappableType();
      ArrayList<RelationshipNode> arrayList0 = new ArrayList<RelationshipNode>();
      EntityNode entityNode4 = entityNode3.relationships(arrayList0);
      ArrayList<MappableOMRSRelationship> arrayList1 = new ArrayList<MappableOMRSRelationship>();
      entityNode3.setPrunedRelationships(arrayList1);
      entityNode4.messageAssetId("org.springframework.web.filter.reactive.ForwardedHeaderFilter");
      entityNode1.setMissing(boolean0);
      entityNode4.hashCode();
      EntityNode entityNode5 = entityNode4.messageAssetId("org.springframework.web.filter.reactive.ForwardedHeaderFilter");
      List<MappableOMRSRelationship> list0 = entityNode3.getPrunedRelationships();
      entityNode5.prunedRelationships(list0);
      entityNode0.setStatus(entityStatus0);
      Scheduler.SchedulerThreadFactory scheduler_SchedulerThreadFactory0 = new Scheduler.SchedulerThreadFactory("org.springframework.web.filter.reactive.ForwardedHeaderFilter");
      MockThread mockThread0 = new MockThread("org.springframework.web.filter.reactive.ForwardedHeaderFilter");
      MockThread mockThread1 = new MockThread();
      assertFalse(mockThread1.equals((Object)mockThread0));
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      EntityNode entityNode0 = new EntityNode();
      MappableOMRSRelationship mappableOMRSRelationship0 = MappableOMRSRelationship.CONNECTIONENDPOINT;
      EntityNode entityNode1 = entityNode0.addPrunedRelationshipsItem(mappableOMRSRelationship0);
      FailureInfo failureInfo0 = new FailureInfo();
      FailureInfo failureInfo1 = failureInfo0.stackTrace("IVS9f4N9aE");
      EntityNode entityNode2 = entityNode1.failureInfo(failureInfo1);
      EntityNode entityNode3 = entityNode2.addRelationshipsItem((RelationshipNode) null);
      failureInfo1.setTransactionId("XM|Co2l");
      EntityNode entityNode4 = entityNode2.addRelationshipsItem((RelationshipNode) null);
      entityNode4.hashCode();
      EntityStatus entityStatus0 = EntityStatus.NOT_DETERMINED;
      EntityNode entityNode5 = entityNode3.status(entityStatus0);
      Boolean boolean0 = XmlSuite.DEFAULT_JUNIT;
      Boolean.getBoolean("jx5Eb?(blRm<dw:0");
      entityNode2.setPruned(boolean0);
      entityNode3.getPruned();
      entityNode5.getFailureInfo();
      EntityNode entityNode6 = entityNode0.missing(boolean0);
      assertNull(entityNode6.getPurgeStatus());
  }
}
