/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 02:07:18 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.RepositoryConformanceWorkbenchConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RepositoryConformanceWorkbenchConfig_ESTest extends RepositoryConformanceWorkbenchConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig1 = repositoryConformanceWorkbenchConfig0.tutRepositoryServerName("%K/zF}`V vd<kO9M");
      String string0 = repositoryConformanceWorkbenchConfig1.getTutRepositoryServerName();
      assertEquals("%K/zF}`V vd<kO9M", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig1 = repositoryConformanceWorkbenchConfig0.tutRepositoryServerName("");
      String string0 = repositoryConformanceWorkbenchConfig1.getTutRepositoryServerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig1 = new RepositoryConformanceWorkbenchConfig();
      boolean boolean0 = repositoryConformanceWorkbenchConfig0.equals(repositoryConformanceWorkbenchConfig1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      boolean boolean0 = repositoryConformanceWorkbenchConfig0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      boolean boolean0 = repositoryConformanceWorkbenchConfig0.equals(repositoryConformanceWorkbenchConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      boolean boolean0 = repositoryConformanceWorkbenchConfig0.equals("class RepositoryConformanceWorkbenchConfig {\n    tutRepositoryServerName: java.lang.String@0000000002\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      String string0 = repositoryConformanceWorkbenchConfig0.toString();
      assertEquals("class RepositoryConformanceWorkbenchConfig {\n    tutRepositoryServerName: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      repositoryConformanceWorkbenchConfig0.hashCode();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      repositoryConformanceWorkbenchConfig0.setTutRepositoryServerName("wl;?y1{rDC!");
      assertEquals("wl;?y1{rDC!", repositoryConformanceWorkbenchConfig0.getTutRepositoryServerName());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      String string0 = repositoryConformanceWorkbenchConfig0.getTutRepositoryServerName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig0 = new RepositoryConformanceWorkbenchConfig();
      RepositoryConformanceWorkbenchConfig repositoryConformanceWorkbenchConfig1 = repositoryConformanceWorkbenchConfig0.tutRepositoryServerName("wl;?y1{rDC!");
      String string0 = repositoryConformanceWorkbenchConfig1.toString();
      assertNotNull(string0);
  }
}
