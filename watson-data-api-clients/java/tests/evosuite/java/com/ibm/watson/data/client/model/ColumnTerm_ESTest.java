/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:51:10 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ColumnTerm;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ColumnTerm_ESTest extends ColumnTerm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setTermId("class ColumnTerm {\n");
      String string0 = columnTerm0.getTermId();
      assertEquals("class ColumnTerm {\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setTermId("");
      String string0 = columnTerm0.getTermId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setTermDisplayName("class ColumnTerm {\n");
      String string0 = columnTerm0.getTermDisplayName();
      assertEquals("class ColumnTerm {\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setTermDisplayName("");
      String string0 = columnTerm0.getTermDisplayName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setSourceMetadataCollectionId("moTD/h$&)$PZ:.&f-F");
      String string0 = columnTerm0.getSourceMetadataCollectionId();
      assertEquals("moTD/h$&)$PZ:.&f-F", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setSourceMetadataCollectionId("");
      String string0 = columnTerm0.getSourceMetadataCollectionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setTermId("class ColumnTerm {\n");
      String string0 = columnTerm0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setSourceMetadataCollectionId("moTD/h$&)$PZ:.&f-F");
      ColumnTerm columnTerm1 = new ColumnTerm();
      boolean boolean0 = columnTerm1.equals(columnTerm0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      ColumnTerm columnTerm1 = new ColumnTerm();
      boolean boolean0 = columnTerm0.equals(columnTerm1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      boolean boolean0 = columnTerm0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      boolean boolean0 = columnTerm0.equals(columnTerm0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      boolean boolean0 = columnTerm0.equals("class ColumnTerm {\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      String string0 = columnTerm0.getSourceMetadataCollectionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.hashCode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setTermDisplayName("class ColumnTerm {\n");
      ColumnTerm columnTerm1 = new ColumnTerm();
      boolean boolean0 = columnTerm0.equals(columnTerm1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      String string0 = columnTerm0.getTermId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      String string0 = columnTerm0.getTermDisplayName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ColumnTerm columnTerm0 = new ColumnTerm();
      columnTerm0.setTermId("class ColumnTerm {\n");
      ColumnTerm columnTerm1 = new ColumnTerm();
      boolean boolean0 = columnTerm0.equals(columnTerm1);
      assertFalse(boolean0);
  }
}
