/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:42:43 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.QueryCondition;
import com.ibm.watson.data.client.model.WorkflowQuery;
import com.ibm.watson.data.client.model.enums.QueryConditionType;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class WorkflowQuery_ESTest extends WorkflowQuery_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      ArrayList<QueryCondition> arrayList0 = new ArrayList<QueryCondition>();
      workflowQuery0.conditions(arrayList0);
      List<QueryCondition> list0 = workflowQuery0.getConditions();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      WorkflowQuery workflowQuery1 = new WorkflowQuery();
      boolean boolean0 = workflowQuery0.equals(workflowQuery1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      QueryConditionType queryConditionType0 = QueryConditionType.WORKFLOW_ID;
      boolean boolean0 = workflowQuery0.equals(queryConditionType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      boolean boolean0 = workflowQuery0.equals(workflowQuery0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      boolean boolean0 = workflowQuery0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      WorkflowQuery workflowQuery1 = workflowQuery0.addConditionsItem((QueryCondition) null);
      List<QueryCondition> list0 = workflowQuery1.getConditions();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      QueryCondition queryCondition0 = new QueryCondition();
      LinkedList<QueryCondition> linkedList0 = new LinkedList<QueryCondition>();
      workflowQuery0.setConditions(linkedList0);
      WorkflowQuery workflowQuery1 = workflowQuery0.addConditionsItem(queryCondition0);
      assertSame(workflowQuery0, workflowQuery1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      LinkedList<QueryCondition> linkedList0 = new LinkedList<QueryCondition>();
      workflowQuery0.setConditions(linkedList0);
      String string0 = workflowQuery0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      String string0 = workflowQuery0.toString();
      assertEquals("class WorkflowQuery {\n    conditions: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      List<QueryCondition> list0 = workflowQuery0.getConditions();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WorkflowQuery workflowQuery0 = new WorkflowQuery();
      workflowQuery0.hashCode();
  }
}
