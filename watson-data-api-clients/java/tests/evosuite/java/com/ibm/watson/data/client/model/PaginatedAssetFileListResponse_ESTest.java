/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 16:39:17 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.AssetFileMetadata;
import com.ibm.watson.data.client.model.HrefModel;
import com.ibm.watson.data.client.model.PaginatedAssetFileListResponse;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PaginatedAssetFileListResponse_ESTest extends PaginatedAssetFileListResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer(0);
      paginatedAssetFileListResponse0.totalCount(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getTotalCount();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer((-159));
      paginatedAssetFileListResponse0.totalCount(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getTotalCount();
      assertEquals((-159), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer(399);
      paginatedAssetFileListResponse0.setTotalCount(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getTotalCount();
      assertEquals(399, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      ArrayList<AssetFileMetadata> arrayList0 = new ArrayList<AssetFileMetadata>();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.resources(arrayList0);
      List<AssetFileMetadata> list0 = paginatedAssetFileListResponse1.getResources();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = XmlSuite.DEFAULT_THREAD_COUNT;
      paginatedAssetFileListResponse0.offset(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getOffset();
      assertEquals(5, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = Integer.valueOf(0);
      paginatedAssetFileListResponse0.setOffset(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getOffset();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer((-3000));
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.offset(integer0);
      Integer integer1 = paginatedAssetFileListResponse1.getOffset();
      assertEquals((-3000), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer((-2046));
      paginatedAssetFileListResponse0.limit(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getLimit();
      assertEquals((-2046), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer(0);
      paginatedAssetFileListResponse0.setLimit(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getLimit();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = XmlSuite.DEFAULT_VERBOSE;
      paginatedAssetFileListResponse0.setLimit(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getLimit();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = Integer.getInteger("!pK>gQgBo", 1467);
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.limit(integer0);
      Integer integer1 = paginatedAssetFileListResponse1.getLimit();
      assertEquals(1467, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetFileListResponse0.last(hrefModel0);
      HrefModel hrefModel1 = paginatedAssetFileListResponse0.getLast();
      assertNull(hrefModel1.getHref());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetFileListResponse0.last(hrefModel0);
      String string0 = paginatedAssetFileListResponse0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.last(hrefModel0);
      Vector<AssetFileMetadata> vector0 = new Vector<AssetFileMetadata>();
      paginatedAssetFileListResponse0.setResources(vector0);
      PaginatedAssetFileListResponse paginatedAssetFileListResponse2 = new PaginatedAssetFileListResponse();
      paginatedAssetFileListResponse2.last(hrefModel0);
      boolean boolean0 = paginatedAssetFileListResponse2.equals(paginatedAssetFileListResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.last(hrefModel0);
      PaginatedAssetFileListResponse paginatedAssetFileListResponse2 = new PaginatedAssetFileListResponse();
      paginatedAssetFileListResponse2.last(hrefModel0);
      assertTrue(paginatedAssetFileListResponse2.equals((Object)paginatedAssetFileListResponse1));
      
      paginatedAssetFileListResponse0.previous(hrefModel0);
      boolean boolean0 = paginatedAssetFileListResponse2.equals(paginatedAssetFileListResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.last(hrefModel0);
      PaginatedAssetFileListResponse paginatedAssetFileListResponse2 = new PaginatedAssetFileListResponse();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse3 = paginatedAssetFileListResponse2.last(hrefModel0);
      assertTrue(paginatedAssetFileListResponse2.equals((Object)paginatedAssetFileListResponse0));
      
      paginatedAssetFileListResponse3.setNext(hrefModel0);
      boolean boolean0 = paginatedAssetFileListResponse2.equals(paginatedAssetFileListResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.last(hrefModel0);
      PaginatedAssetFileListResponse paginatedAssetFileListResponse2 = new PaginatedAssetFileListResponse();
      assertFalse(paginatedAssetFileListResponse2.equals((Object)paginatedAssetFileListResponse0));
      
      paginatedAssetFileListResponse2.last(hrefModel0);
      boolean boolean0 = paginatedAssetFileListResponse2.equals(paginatedAssetFileListResponse1);
      assertTrue(paginatedAssetFileListResponse2.equals((Object)paginatedAssetFileListResponse1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = new PaginatedAssetFileListResponse();
      assertTrue(paginatedAssetFileListResponse1.equals((Object)paginatedAssetFileListResponse0));
      
      paginatedAssetFileListResponse1.first(hrefModel0);
      boolean boolean0 = paginatedAssetFileListResponse1.equals(paginatedAssetFileListResponse0);
      assertFalse(paginatedAssetFileListResponse1.equals((Object)paginatedAssetFileListResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer((-1037));
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = new PaginatedAssetFileListResponse();
      assertTrue(paginatedAssetFileListResponse1.equals((Object)paginatedAssetFileListResponse0));
      
      paginatedAssetFileListResponse0.offset(integer0);
      boolean boolean0 = paginatedAssetFileListResponse1.equals(paginatedAssetFileListResponse0);
      assertFalse(paginatedAssetFileListResponse1.equals((Object)paginatedAssetFileListResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer((-1037));
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = new PaginatedAssetFileListResponse();
      assertTrue(paginatedAssetFileListResponse1.equals((Object)paginatedAssetFileListResponse0));
      
      paginatedAssetFileListResponse1.setLimit(integer0);
      boolean boolean0 = paginatedAssetFileListResponse1.equals(paginatedAssetFileListResponse0);
      assertFalse(paginatedAssetFileListResponse1.equals((Object)paginatedAssetFileListResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer((-1037));
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = new PaginatedAssetFileListResponse();
      paginatedAssetFileListResponse0.totalCount(integer0);
      boolean boolean0 = paginatedAssetFileListResponse1.equals(paginatedAssetFileListResponse0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      boolean boolean0 = paginatedAssetFileListResponse0.equals(hrefModel0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      boolean boolean0 = paginatedAssetFileListResponse0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      boolean boolean0 = paginatedAssetFileListResponse0.equals(paginatedAssetFileListResponse0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      AssetFileMetadata assetFileMetadata0 = new AssetFileMetadata();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.addResourcesItem(assetFileMetadata0);
      List<AssetFileMetadata> list0 = paginatedAssetFileListResponse1.getResources();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Vector<AssetFileMetadata> vector0 = new Vector<AssetFileMetadata>();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.resources(vector0);
      AssetFileMetadata assetFileMetadata0 = new AssetFileMetadata();
      paginatedAssetFileListResponse1.addResourcesItem(assetFileMetadata0);
      assertTrue(vector0.contains(assetFileMetadata0));
      assertEquals(1, vector0.size());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.next(hrefModel0);
      assertNull(paginatedAssetFileListResponse1.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetFileListResponse0.setLast(hrefModel0);
      assertNull(paginatedAssetFileListResponse0.getLimit());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = paginatedAssetFileListResponse0.getLast();
      assertNull(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.last(hrefModel0);
      PaginatedAssetFileListResponse paginatedAssetFileListResponse2 = new PaginatedAssetFileListResponse();
      boolean boolean0 = paginatedAssetFileListResponse2.equals(paginatedAssetFileListResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      List<AssetFileMetadata> list0 = paginatedAssetFileListResponse0.getResources();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetFileListResponse0.setNext(hrefModel0);
      HrefModel hrefModel1 = paginatedAssetFileListResponse0.getNext();
      assertNull(hrefModel1.getHref());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = paginatedAssetFileListResponse0.getNext();
      assertNull(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetFileListResponse0.setFirst(hrefModel0);
      HrefModel hrefModel1 = paginatedAssetFileListResponse0.getFirst();
      assertSame(hrefModel1, hrefModel0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      PaginatedAssetFileListResponse paginatedAssetFileListResponse1 = paginatedAssetFileListResponse0.previous(hrefModel0);
      HrefModel hrefModel1 = paginatedAssetFileListResponse1.getPrevious();
      assertSame(hrefModel1, hrefModel0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = paginatedAssetFileListResponse0.getFirst();
      assertNull(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = paginatedAssetFileListResponse0.getTotalCount();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = paginatedAssetFileListResponse0.getLimit();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      paginatedAssetFileListResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = new Integer((-1037));
      paginatedAssetFileListResponse0.offset(integer0);
      Integer integer1 = paginatedAssetFileListResponse0.getOffset();
      assertEquals((-1037), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = new HrefModel();
      paginatedAssetFileListResponse0.setPrevious(hrefModel0);
      assertNull(paginatedAssetFileListResponse0.getTotalCount());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      HrefModel hrefModel0 = paginatedAssetFileListResponse0.getPrevious();
      assertNull(hrefModel0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      PaginatedAssetFileListResponse paginatedAssetFileListResponse0 = new PaginatedAssetFileListResponse();
      Integer integer0 = paginatedAssetFileListResponse0.getOffset();
      assertNull(integer0);
  }
}
