/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:39:09 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.PaginatedDataClassList;
import com.ibm.watson.data.client.model.PaginatedList;
import com.ibm.watson.data.client.model.ResponseDataClass;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PaginatedDataClassList_ESTest extends PaginatedDataClassList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      LinkedList<ResponseDataClass> linkedList0 = new LinkedList<ResponseDataClass>();
      PaginatedDataClassList paginatedDataClassList1 = paginatedDataClassList0.resources(linkedList0);
      List<ResponseDataClass> list0 = paginatedDataClassList1.getResources();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      ResponseDataClass responseDataClass0 = new ResponseDataClass();
      paginatedDataClassList0.addResourcesItem(responseDataClass0);
      List<ResponseDataClass> list0 = paginatedDataClassList0.getResources();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      ResponseDataClass responseDataClass0 = new ResponseDataClass();
      paginatedDataClassList0.addResourcesItem(responseDataClass0);
      PaginatedDataClassList paginatedDataClassList1 = new PaginatedDataClassList();
      boolean boolean0 = paginatedDataClassList0.equals(paginatedDataClassList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      PaginatedDataClassList paginatedDataClassList1 = new PaginatedDataClassList();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      PaginatedList paginatedList0 = paginatedDataClassList1.limit(integer0);
      boolean boolean0 = paginatedDataClassList0.equals(paginatedList0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      PaginatedDataClassList paginatedDataClassList1 = new PaginatedDataClassList();
      boolean boolean0 = paginatedDataClassList0.equals(paginatedDataClassList1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      boolean boolean0 = paginatedDataClassList0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      boolean boolean0 = paginatedDataClassList0.equals(paginatedDataClassList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      boolean boolean0 = paginatedDataClassList0.equals("class PaginatedDataClassList {\n    limit: java.lang.Integer@0000000005\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: java.util.ArrayList@0000000004\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      ResponseDataClass responseDataClass0 = new ResponseDataClass();
      paginatedDataClassList0.addResourcesItem(responseDataClass0);
      PaginatedDataClassList paginatedDataClassList1 = paginatedDataClassList0.addResourcesItem(responseDataClass0);
      assertNull(paginatedDataClassList1.getLimit());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      paginatedDataClassList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      paginatedDataClassList0.setResources((List<ResponseDataClass>) null);
      assertNull(paginatedDataClassList0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      List<ResponseDataClass> list0 = paginatedDataClassList0.getResources();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaginatedDataClassList paginatedDataClassList0 = new PaginatedDataClassList();
      String string0 = paginatedDataClassList0.toString();
      assertEquals("class PaginatedDataClassList {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
  }
}
