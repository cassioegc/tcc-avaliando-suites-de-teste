/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 22:56:03 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.HrefModel;
import com.ibm.watson.data.client.model.PaginatedReferenceDataSetList;
import com.ibm.watson.data.client.model.ResponseReferenceDataSet;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PaginatedReferenceDataSetList_ESTest extends PaginatedReferenceDataSetList_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      LinkedList<ResponseReferenceDataSet> linkedList0 = new LinkedList<ResponseReferenceDataSet>();
      paginatedReferenceDataSetList0.resources(linkedList0);
      List<ResponseReferenceDataSet> list0 = paginatedReferenceDataSetList0.getResources();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      ResponseReferenceDataSet responseReferenceDataSet0 = new ResponseReferenceDataSet();
      PaginatedReferenceDataSetList paginatedReferenceDataSetList1 = paginatedReferenceDataSetList0.addResourcesItem(responseReferenceDataSet0);
      List<ResponseReferenceDataSet> list0 = paginatedReferenceDataSetList1.getResources();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      PaginatedReferenceDataSetList paginatedReferenceDataSetList1 = new PaginatedReferenceDataSetList();
      boolean boolean0 = paginatedReferenceDataSetList0.equals(paginatedReferenceDataSetList1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      HrefModel hrefModel0 = new HrefModel();
      paginatedReferenceDataSetList0.setLast(hrefModel0);
      PaginatedReferenceDataSetList paginatedReferenceDataSetList1 = new PaginatedReferenceDataSetList();
      boolean boolean0 = paginatedReferenceDataSetList0.equals(paginatedReferenceDataSetList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      Object object0 = new Object();
      boolean boolean0 = paginatedReferenceDataSetList0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      boolean boolean0 = paginatedReferenceDataSetList0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      boolean boolean0 = paginatedReferenceDataSetList0.equals(paginatedReferenceDataSetList0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      ResponseReferenceDataSet responseReferenceDataSet0 = new ResponseReferenceDataSet();
      PaginatedReferenceDataSetList paginatedReferenceDataSetList1 = paginatedReferenceDataSetList0.addResourcesItem(responseReferenceDataSet0);
      PaginatedReferenceDataSetList paginatedReferenceDataSetList2 = new PaginatedReferenceDataSetList();
      boolean boolean0 = paginatedReferenceDataSetList2.equals(paginatedReferenceDataSetList1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      ResponseReferenceDataSet responseReferenceDataSet0 = new ResponseReferenceDataSet();
      paginatedReferenceDataSetList0.addResourcesItem(responseReferenceDataSet0);
      PaginatedReferenceDataSetList paginatedReferenceDataSetList1 = paginatedReferenceDataSetList0.addResourcesItem(responseReferenceDataSet0);
      assertNull(paginatedReferenceDataSetList1.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      String string0 = paginatedReferenceDataSetList0.toString();
      assertEquals("class PaginatedReferenceDataSetList {\n    limit: null\n    count: null\n    first: null\n    next: null\n    offset: null\n    last: null\n    prev: null\n    resources: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      List<ResponseReferenceDataSet> list0 = paginatedReferenceDataSetList0.getResources();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      paginatedReferenceDataSetList0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PaginatedReferenceDataSetList paginatedReferenceDataSetList0 = new PaginatedReferenceDataSetList();
      LinkedList<ResponseReferenceDataSet> linkedList0 = new LinkedList<ResponseReferenceDataSet>();
      paginatedReferenceDataSetList0.setResources(linkedList0);
      assertEquals(0, linkedList0.size());
  }
}
