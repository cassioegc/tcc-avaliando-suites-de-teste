/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:33:34 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.DataSchemaFieldRange;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataSchemaFieldRange_ESTest extends DataSchemaFieldRange_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double((-1.0));
      DataSchemaFieldRange dataSchemaFieldRange1 = dataSchemaFieldRange0.min(double0);
      Double double1 = dataSchemaFieldRange1.getMin();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(0.0);
      DataSchemaFieldRange dataSchemaFieldRange1 = dataSchemaFieldRange0.min(double0);
      Double double1 = dataSchemaFieldRange1.getMin();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(2068.47);
      DataSchemaFieldRange dataSchemaFieldRange1 = dataSchemaFieldRange0.min(double0);
      Double double1 = dataSchemaFieldRange1.getMin();
      assertEquals(2068.47, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(236.7408);
      dataSchemaFieldRange0.setMin(double0);
      Double double1 = dataSchemaFieldRange0.getMin();
      assertEquals(236.7408, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double((-1.0));
      dataSchemaFieldRange0.setMax(double0);
      Double double1 = dataSchemaFieldRange0.getMax();
      assertEquals((-1.0), (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(0.0);
      DataSchemaFieldRange dataSchemaFieldRange1 = dataSchemaFieldRange0.max(double0);
      Double double1 = dataSchemaFieldRange1.getMax();
      assertEquals(0.0, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(9.5197613168964);
      dataSchemaFieldRange0.max(double0);
      Double double1 = dataSchemaFieldRange0.getMax();
      assertEquals(9.5197613168964, (double)double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(236.7408);
      DataSchemaFieldRange dataSchemaFieldRange1 = dataSchemaFieldRange0.max(double0);
      String string0 = dataSchemaFieldRange1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      DataSchemaFieldRange dataSchemaFieldRange1 = new DataSchemaFieldRange();
      boolean boolean0 = dataSchemaFieldRange0.equals(dataSchemaFieldRange1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double((-2600.220607745283));
      dataSchemaFieldRange0.min(double0);
      DataSchemaFieldRange dataSchemaFieldRange1 = new DataSchemaFieldRange();
      boolean boolean0 = dataSchemaFieldRange0.equals(dataSchemaFieldRange1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(236.7408);
      boolean boolean0 = dataSchemaFieldRange0.equals(double0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      boolean boolean0 = dataSchemaFieldRange0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      boolean boolean0 = dataSchemaFieldRange0.equals(dataSchemaFieldRange0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = new Double(1.0);
      DataSchemaFieldRange dataSchemaFieldRange1 = dataSchemaFieldRange0.max(double0);
      DataSchemaFieldRange dataSchemaFieldRange2 = new DataSchemaFieldRange();
      boolean boolean0 = dataSchemaFieldRange1.equals(dataSchemaFieldRange2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = dataSchemaFieldRange0.getMax();
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      dataSchemaFieldRange0.hashCode();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataSchemaFieldRange dataSchemaFieldRange0 = new DataSchemaFieldRange();
      Double double0 = dataSchemaFieldRange0.getMin();
      assertNull(double0);
  }
}
