/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:20:10 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.ModelLocation;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ModelLocation_ESTest extends ModelLocation_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.pipelineModel("0Q");
      String string0 = modelLocation0.getPipelineModel();
      assertEquals("0Q", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.pipelineModel("");
      String string0 = modelLocation0.getPipelineModel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.pipeline("");
      String string0 = modelLocation0.getPipeline();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      ModelLocation modelLocation1 = modelLocation0.model("com.fasterxml.jackson.annotation.JsonInclude$Include");
      String string0 = modelLocation1.getModel();
      assertEquals("com.fasterxml.jackson.annotation.JsonInclude$Include", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.setModel("");
      String string0 = modelLocation0.getModel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      ModelLocation modelLocation1 = new ModelLocation();
      assertTrue(modelLocation1.equals((Object)modelLocation0));
      
      modelLocation0.setModel("ALWAYS");
      boolean boolean0 = modelLocation1.equals(modelLocation0);
      assertFalse(modelLocation1.equals((Object)modelLocation0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      ModelLocation modelLocation1 = new ModelLocation();
      modelLocation1.pipeline("-");
      boolean boolean0 = modelLocation1.equals(modelLocation0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      ModelLocation modelLocation1 = new ModelLocation();
      boolean boolean0 = modelLocation0.equals(modelLocation1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      boolean boolean0 = modelLocation0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      boolean boolean0 = modelLocation0.equals(modelLocation0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      Object object0 = new Object();
      boolean boolean0 = modelLocation0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.setPipeline("USE_DEFAULTS");
      String string0 = modelLocation0.getPipeline();
      assertEquals("USE_DEFAULTS", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      String string0 = modelLocation0.getModel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      ModelLocation modelLocation1 = modelLocation0.pipelineModel(".qs4A=WY'");
      ModelLocation modelLocation2 = new ModelLocation();
      boolean boolean0 = modelLocation1.equals(modelLocation2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.model("k5");
      String string0 = modelLocation0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.setPipelineModel("");
      assertNull(modelLocation0.getPipeline());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      modelLocation0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      String string0 = modelLocation0.getPipelineModel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ModelLocation modelLocation0 = new ModelLocation();
      String string0 = modelLocation0.getPipeline();
      assertNull(string0);
  }
}
