/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:53:49 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.MetadataMutable;
import com.ibm.watson.data.client.model.PublishAssetRequest;
import com.ibm.watson.data.client.model.enums.PermissionMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PublishAssetRequest_ESTest extends PublishAssetRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      PermissionMode permissionMode0 = PermissionMode.PUBLIC;
      PublishAssetRequest publishAssetRequest1 = publishAssetRequest0.mode(permissionMode0);
      PermissionMode permissionMode1 = publishAssetRequest1.getMode();
      assertSame(permissionMode0, permissionMode1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      PublishAssetRequest publishAssetRequest1 = publishAssetRequest0.catalogId("\n");
      String string0 = publishAssetRequest1.getCatalogId();
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      publishAssetRequest0.catalogId("");
      String string0 = publishAssetRequest0.getCatalogId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      PublishAssetRequest publishAssetRequest1 = new PublishAssetRequest();
      boolean boolean0 = publishAssetRequest0.equals(publishAssetRequest1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      PublishAssetRequest publishAssetRequest1 = new PublishAssetRequest();
      assertTrue(publishAssetRequest1.equals((Object)publishAssetRequest0));
      
      publishAssetRequest0.setCatalogId("");
      boolean boolean0 = publishAssetRequest0.equals(publishAssetRequest1);
      assertFalse(publishAssetRequest1.equals((Object)publishAssetRequest0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      PermissionMode permissionMode0 = PermissionMode.HIDDEN;
      boolean boolean0 = publishAssetRequest0.equals(permissionMode0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      boolean boolean0 = publishAssetRequest0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      boolean boolean0 = publishAssetRequest0.equals(publishAssetRequest0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      MetadataMutable metadataMutable0 = new MetadataMutable();
      PublishAssetRequest publishAssetRequest1 = new PublishAssetRequest();
      assertTrue(publishAssetRequest1.equals((Object)publishAssetRequest0));
      
      publishAssetRequest1.metadata(metadataMutable0);
      boolean boolean0 = publishAssetRequest1.equals(publishAssetRequest0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      publishAssetRequest0.setCatalogId("");
      String string0 = publishAssetRequest0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      MetadataMutable metadataMutable0 = new MetadataMutable();
      publishAssetRequest0.setMetadata(metadataMutable0);
      MetadataMutable metadataMutable1 = publishAssetRequest0.getMetadata();
      assertNull(metadataMutable1.getDescription());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      PermissionMode permissionMode0 = PermissionMode.HIDDEN;
      publishAssetRequest0.setMode(permissionMode0);
      assertEquals(PermissionMode.HIDDEN, publishAssetRequest0.getMode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      publishAssetRequest0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      publishAssetRequest0.getMode();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      PermissionMode permissionMode0 = PermissionMode.HIDDEN;
      PublishAssetRequest publishAssetRequest1 = publishAssetRequest0.mode(permissionMode0);
      PublishAssetRequest publishAssetRequest2 = new PublishAssetRequest();
      boolean boolean0 = publishAssetRequest1.equals(publishAssetRequest2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      MetadataMutable metadataMutable0 = publishAssetRequest0.getMetadata();
      assertNull(metadataMutable0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      PublishAssetRequest publishAssetRequest0 = new PublishAssetRequest();
      String string0 = publishAssetRequest0.getCatalogId();
      assertNull(string0);
  }
}
