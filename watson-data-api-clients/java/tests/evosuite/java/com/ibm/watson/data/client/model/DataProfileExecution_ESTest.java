/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 19:53:25 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.DataProfileExecution;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DataProfileExecution_ESTest extends DataProfileExecution_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      Boolean boolean0 = Boolean.TRUE;
      dataProfileExecution0.setSupported(boolean0);
      Boolean boolean1 = dataProfileExecution0.getSupported();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      Boolean boolean0 = Boolean.valueOf("");
      dataProfileExecution0.setSupported(boolean0);
      Boolean boolean1 = dataProfileExecution0.getSupported();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setStatus("NON_NULL");
      String string0 = dataProfileExecution0.getStatus();
      assertEquals("NON_NULL", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setStatus("");
      String string0 = dataProfileExecution0.getStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setDataflowRunId("");
      String string0 = dataProfileExecution0.getDataflowRunId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setDataflowId("?");
      String string0 = dataProfileExecution0.getDataflowId();
      assertEquals("?", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setDataflowId("");
      String string0 = dataProfileExecution0.getDataflowId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setDataflowRunId("e");
      String string0 = dataProfileExecution0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setDataflowRunId("e");
      DataProfileExecution dataProfileExecution1 = new DataProfileExecution();
      boolean boolean0 = dataProfileExecution1.equals(dataProfileExecution0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      DataProfileExecution dataProfileExecution1 = new DataProfileExecution();
      boolean boolean0 = dataProfileExecution1.equals(dataProfileExecution0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      DataProfileExecution dataProfileExecution1 = new DataProfileExecution();
      assertTrue(dataProfileExecution1.equals((Object)dataProfileExecution0));
      
      Boolean boolean0 = new Boolean(false);
      dataProfileExecution0.setSupported(boolean0);
      boolean boolean1 = dataProfileExecution1.equals(dataProfileExecution0);
      assertFalse(dataProfileExecution1.equals((Object)dataProfileExecution0));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      Object object0 = new Object();
      boolean boolean0 = dataProfileExecution0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      boolean boolean0 = dataProfileExecution0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      boolean boolean0 = dataProfileExecution0.equals(dataProfileExecution0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setDataflowRunId(":p~)16%wc$e=]");
      String string0 = dataProfileExecution0.getDataflowRunId();
      assertEquals(":p~)16%wc$e=]", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setDataflowId(":p~)16%wc$e=]");
      DataProfileExecution dataProfileExecution1 = new DataProfileExecution();
      boolean boolean0 = dataProfileExecution0.equals(dataProfileExecution1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      String string0 = dataProfileExecution0.getStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      dataProfileExecution0.setStatus("USSx^DFAULS");
      DataProfileExecution dataProfileExecution1 = new DataProfileExecution();
      boolean boolean0 = dataProfileExecution0.equals(dataProfileExecution1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      String string0 = dataProfileExecution0.getDataflowRunId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      Boolean boolean0 = dataProfileExecution0.getSupported();
      dataProfileExecution0.setSupported(boolean0);
      assertNull(dataProfileExecution0.getStatus());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DataProfileExecution dataProfileExecution0 = new DataProfileExecution();
      String string0 = dataProfileExecution0.getDataflowId();
      assertNull(string0);
  }
}
