/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:55:05 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.CopyAssetFileDetail;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CopyAssetFileDetail_ESTest extends CopyAssetFileDetail_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      copyAssetFileDetail0.type("    type: ");
      String string0 = copyAssetFileDetail0.getType();
      assertEquals("    type: ", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      CopyAssetFileDetail copyAssetFileDetail1 = copyAssetFileDetail0.type("");
      String string0 = copyAssetFileDetail1.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      CopyAssetFileDetail copyAssetFileDetail1 = copyAssetFileDetail0.path("t~Wu");
      String string0 = copyAssetFileDetail1.getPath();
      assertEquals("t~Wu", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      CopyAssetFileDetail copyAssetFileDetail1 = copyAssetFileDetail0.path("");
      String string0 = copyAssetFileDetail1.getPath();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      CopyAssetFileDetail copyAssetFileDetail1 = copyAssetFileDetail0.guid("    path: ");
      String string0 = copyAssetFileDetail1.getGuid();
      assertEquals("    path: ", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      copyAssetFileDetail0.guid("");
      String string0 = copyAssetFileDetail0.getGuid();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      copyAssetFileDetail0.setGuid("NON_DEFAUT");
      String string0 = copyAssetFileDetail0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      CopyAssetFileDetail copyAssetFileDetail1 = new CopyAssetFileDetail();
      assertTrue(copyAssetFileDetail1.equals((Object)copyAssetFileDetail0));
      
      copyAssetFileDetail1.guid("class CopyAssetFileTarget {\n");
      boolean boolean0 = copyAssetFileDetail0.equals(copyAssetFileDetail1);
      assertFalse(copyAssetFileDetail1.equals((Object)copyAssetFileDetail0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      CopyAssetFileDetail copyAssetFileDetail1 = new CopyAssetFileDetail();
      boolean boolean0 = copyAssetFileDetail0.equals(copyAssetFileDetail1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      boolean boolean0 = copyAssetFileDetail0.equals("NON_DEFAUT");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      boolean boolean0 = copyAssetFileDetail0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      boolean boolean0 = copyAssetFileDetail0.equals(copyAssetFileDetail0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      CopyAssetFileDetail copyAssetFileDetail1 = copyAssetFileDetail0.type("#uNU**Yx,_kqMyWF$59");
      CopyAssetFileDetail copyAssetFileDetail2 = new CopyAssetFileDetail();
      boolean boolean0 = copyAssetFileDetail1.equals(copyAssetFileDetail2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      copyAssetFileDetail0.path("class CopyAssetFileTarget {\n");
      CopyAssetFileDetail copyAssetFileDetail1 = new CopyAssetFileDetail();
      boolean boolean0 = copyAssetFileDetail0.equals(copyAssetFileDetail1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      String string0 = copyAssetFileDetail0.getPath();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      copyAssetFileDetail0.setType("dP5|");
      assertEquals("dP5|", copyAssetFileDetail0.getType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      copyAssetFileDetail0.hashCode();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      String string0 = copyAssetFileDetail0.getGuid();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      copyAssetFileDetail0.setPath("class CopyAssetFileTarget {\n");
      assertNull(copyAssetFileDetail0.getGuid());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CopyAssetFileDetail copyAssetFileDetail0 = new CopyAssetFileDetail();
      String string0 = copyAssetFileDetail0.getType();
      assertNull(string0);
  }
}
