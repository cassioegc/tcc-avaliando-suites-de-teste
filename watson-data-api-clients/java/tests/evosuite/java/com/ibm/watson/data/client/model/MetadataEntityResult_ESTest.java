/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 15 00:41:33 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.AbstractAssetEntity;
import com.ibm.watson.data.client.model.MetadataEntityResult;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MetadataEntityResult_ESTest extends MetadataEntityResult_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      StringBuilder stringBuilder0 = new StringBuilder(9);
      metadataEntityResult0.toString(stringBuilder0);
      assertEquals("    metadata: null\n    attachments: null\n    href: null\n    entity: null\n", stringBuilder0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      HashMap<String, AbstractAssetEntity> hashMap0 = new HashMap<String, AbstractAssetEntity>();
      MetadataEntityResult metadataEntityResult1 = metadataEntityResult0.entity(hashMap0);
      Map<String, AbstractAssetEntity> map0 = metadataEntityResult1.getEntity();
      assertTrue(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      HashMap<String, AbstractAssetEntity> hashMap0 = new HashMap<String, AbstractAssetEntity>();
      AbstractAssetEntity abstractAssetEntity0 = new AbstractAssetEntity();
      hashMap0.put("\n", abstractAssetEntity0);
      metadataEntityResult0.entity(hashMap0);
      Map<String, AbstractAssetEntity> map0 = metadataEntityResult0.getEntity();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      // Undeclared exception!
      try { 
        metadataEntityResult0.toString((StringBuilder) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ibm.watson.data.client.model.MetadataAssetResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      MetadataEntityResult metadataEntityResult1 = new MetadataEntityResult();
      metadataEntityResult1.setHref("");
      boolean boolean0 = metadataEntityResult0.equals(metadataEntityResult1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      MetadataEntityResult metadataEntityResult1 = new MetadataEntityResult();
      boolean boolean0 = metadataEntityResult0.equals(metadataEntityResult1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      boolean boolean0 = metadataEntityResult0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      boolean boolean0 = metadataEntityResult0.equals(metadataEntityResult0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      HashMap<String, AbstractAssetEntity> hashMap0 = new HashMap<String, AbstractAssetEntity>();
      boolean boolean0 = metadataEntityResult0.equals(hashMap0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      Map<String, AbstractAssetEntity> map0 = metadataEntityResult0.getEntity();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      HashMap<String, AbstractAssetEntity> hashMap0 = new HashMap<String, AbstractAssetEntity>();
      metadataEntityResult0.setEntity(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      metadataEntityResult0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      HashMap<String, AbstractAssetEntity> hashMap0 = new HashMap<String, AbstractAssetEntity>();
      MetadataEntityResult metadataEntityResult1 = metadataEntityResult0.entity(hashMap0);
      MetadataEntityResult metadataEntityResult2 = new MetadataEntityResult();
      boolean boolean0 = metadataEntityResult1.equals(metadataEntityResult2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MetadataEntityResult metadataEntityResult0 = new MetadataEntityResult();
      String string0 = metadataEntityResult0.toString();
      assertEquals("class MetadataEntityResult {\n    metadata: null\n    attachments: null\n    href: null\n    entity: null\n}", string0);
  }
}
