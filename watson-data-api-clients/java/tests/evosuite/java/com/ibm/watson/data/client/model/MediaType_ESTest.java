/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 18:12:14 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.MediaType;
import java.time.ZoneId;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;
import org.testng.xml.XmlTest;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MediaType_ESTest extends MediaType_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Boolean boolean0 = Boolean.TRUE;
      MediaType mediaType1 = mediaType0.wildcardType(boolean0);
      Boolean boolean1 = mediaType1.getWildcardType();
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Boolean boolean0 = XmlSuite.DEFAULT_SKIP_FAILED_INVOCATION_COUNTS;
      MediaType mediaType1 = mediaType0.wildcardType(boolean0);
      Boolean boolean1 = mediaType1.getWildcardType();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      XmlSuite xmlSuite0 = new XmlSuite();
      mediaType0.setWildcardSubtype(xmlSuite0.DEFAULT_PRESERVE_ORDER);
      Boolean boolean0 = mediaType0.getWildcardSubtype();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Boolean boolean0 = XmlSuite.DEFAULT_MIXED;
      mediaType0.wildcardSubtype(boolean0);
      Boolean boolean1 = mediaType0.getWildcardSubtype();
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      mediaType0.setType("class MediaType {\n    type: null\n    subtype: null\n    parameters: null\n    wildcardType: null\n    wildcardSubtype: null\n}");
      String string0 = mediaType0.getType();
      assertEquals("class MediaType {\n    type: null\n    subtype: null\n    parameters: null\n    wildcardType: null\n    wildcardSubtype: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      mediaType0.setType("");
      String string0 = mediaType0.getType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      mediaType0.setSubtype("");
      String string0 = mediaType0.getSubtype();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      XmlSuite xmlSuite0 = new XmlSuite();
      XmlTest xmlTest0 = new XmlTest(xmlSuite0, (int) xmlSuite0.DEFAULT_VERBOSE);
      Map<String, String> map0 = xmlTest0.getXmlDependencyGroups();
      MediaType mediaType1 = mediaType0.parameters(map0);
      Map<String, String> map1 = mediaType1.getParameters();
      assertSame(map0, map1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      mediaType0.putParametersItem("'^", "'^");
      String string0 = mediaType0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Boolean boolean0 = Boolean.TRUE;
      MediaType mediaType1 = mediaType0.wildcardType(boolean0);
      MediaType mediaType2 = new MediaType();
      MediaType mediaType3 = mediaType2.wildcardSubtype(boolean0);
      mediaType3.setWildcardType(boolean0);
      boolean boolean1 = mediaType3.equals(mediaType0);
      assertFalse(mediaType2.equals((Object)mediaType1));
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      MediaType mediaType1 = new MediaType();
      assertTrue(mediaType1.equals((Object)mediaType0));
      
      MediaType mediaType2 = mediaType1.putParametersItem("'^", "'^");
      boolean boolean0 = mediaType2.equals(mediaType0);
      assertFalse(mediaType1.equals((Object)mediaType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      MediaType mediaType1 = new MediaType();
      assertTrue(mediaType1.equals((Object)mediaType0));
      
      mediaType0.setSubtype("class MediaType {\n    type: null\n    subtype: null\n    parameters: null\n    wildcardType: null\n    wildcardSubtype: null\n}");
      boolean boolean0 = mediaType1.equals(mediaType0);
      assertFalse(mediaType1.equals((Object)mediaType0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      MediaType mediaType1 = new MediaType();
      mediaType1.setType("class MediaType {\n    type: null\n    subtype: null\n    parameters: null\n    wildcardType: null\n    wildcardSubtype: null\n}");
      boolean boolean0 = mediaType1.equals(mediaType0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      MediaType mediaType1 = new MediaType();
      boolean boolean0 = mediaType1.equals(mediaType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      boolean boolean0 = mediaType0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      boolean boolean0 = mediaType0.equals(mediaType0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      boolean boolean0 = mediaType0.equals("maxTaskExecutePerRun");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      mediaType0.putParametersItem((String) null, "");
      Map<String, String> map0 = mediaType0.getParameters();
      assertFalse(map0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Boolean boolean0 = Boolean.TRUE;
      mediaType0.wildcardType(boolean0);
      MediaType mediaType1 = new MediaType();
      boolean boolean1 = mediaType1.equals(mediaType0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      mediaType0.setParameters(map0);
      // Undeclared exception!
      try { 
        mediaType0.putParametersItem("maxTaskExecutePerRun", "    wildcardSubtype: ");
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Collections$UnmodifiableMap", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      mediaType0.setSubtype("class MediaType {\n    type: null\n    subtype: null\n    parameters: null\n    wildcardType: null\n    wildcardSubtype: null\n}");
      String string0 = mediaType0.getSubtype();
      assertEquals("class MediaType {\n    type: null\n    subtype: null\n    parameters: null\n    wildcardType: null\n    wildcardSubtype: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      MediaType mediaType1 = mediaType0.type((String) null);
      assertNull(mediaType1.getWildcardSubtype());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      MediaType mediaType1 = mediaType0.subtype("class MediaType {\n    type: null\n    subtype: null\n    parameters: null\n    wildcardType: null\n    wildcardSubtype: null\n}");
      assertNull(mediaType1.getWildcardType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Boolean boolean0 = mediaType0.getWildcardSubtype();
      assertNull(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Map<String, String> map0 = mediaType0.getParameters();
      assertNull(map0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      mediaType0.hashCode();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      String string0 = mediaType0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      String string0 = mediaType0.getSubtype();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MediaType mediaType0 = new MediaType();
      Boolean boolean0 = mediaType0.getWildcardType();
      assertNull(boolean0);
  }
}
