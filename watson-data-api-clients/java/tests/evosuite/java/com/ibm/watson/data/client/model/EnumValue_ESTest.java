/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:32:21 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import com.ibm.watson.data.client.model.EnumValue;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnumValue_ESTest extends EnumValue_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      EnumValue enumValue1 = enumValue0.name("vC,E^");
      String string0 = enumValue1.getName();
      assertEquals("vC,E^", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      EnumValue enumValue1 = enumValue0.name("");
      String string0 = enumValue1.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      enumValue0.id("READ_WRITE");
      String string0 = enumValue0.getId();
      assertEquals("READ_WRITE", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      enumValue0.name("");
      String string0 = enumValue0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      EnumValue enumValue1 = new EnumValue();
      boolean boolean0 = enumValue0.equals(enumValue1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      EnumValue enumValue1 = new EnumValue();
      enumValue0.setId("class EnumValue {\n    id: null\n    name: null\n}");
      boolean boolean0 = enumValue0.equals(enumValue1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      boolean boolean0 = enumValue0.equals("class EnumValue {\n    id: null\n    name: null\n}");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      boolean boolean0 = enumValue0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      boolean boolean0 = enumValue0.equals(enumValue0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      EnumValue enumValue1 = new EnumValue();
      assertTrue(enumValue1.equals((Object)enumValue0));
      
      enumValue0.name("");
      boolean boolean0 = enumValue0.equals(enumValue1);
      assertFalse(enumValue1.equals((Object)enumValue0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      enumValue0.id("");
      String string0 = enumValue0.getId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      enumValue0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      String string0 = enumValue0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      enumValue0.setName("");
      assertEquals("", enumValue0.getName());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnumValue enumValue0 = new EnumValue();
      String string0 = enumValue0.getName();
      assertNull(string0);
  }
}
