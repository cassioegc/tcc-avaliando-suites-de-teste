/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 23:59:24 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.Category;
import com.ibm.watson.data.client.model.CategoryEntity;
import com.ibm.watson.data.client.model.GlossaryObjectMetadata;
import com.ibm.watson.data.client.model.RelationshipObject;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Category_ESTest extends Category_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Category category0 = new Category();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      category0.metadata(glossaryObjectMetadata0);
      GlossaryObjectMetadata glossaryObjectMetadata1 = category0.getMetadata();
      assertNull(glossaryObjectMetadata1.getPublishedAncestorId());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Category category0 = new Category();
      CategoryEntity categoryEntity0 = new CategoryEntity();
      category0.setEntity(categoryEntity0);
      CategoryEntity categoryEntity1 = category0.getEntity();
      assertNull(categoryEntity1.getState());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Category category0 = new Category();
      CategoryEntity categoryEntity0 = new CategoryEntity();
      RelationshipObject relationshipObject0 = new RelationshipObject();
      CategoryEntity categoryEntity1 = categoryEntity0.addHasTypesCategoryRelsItem(relationshipObject0);
      relationshipObject0.entity(categoryEntity1);
      category0.setEntity(categoryEntity1);
      // Undeclared exception!
      try { 
        category0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Category category0 = new Category();
      CategoryEntity categoryEntity0 = new CategoryEntity();
      Category category1 = category0.entity(categoryEntity0);
      String string0 = category1.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Category category0 = new Category();
      Category category1 = new Category();
      boolean boolean0 = category0.equals(category1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Category category0 = new Category();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      boolean boolean0 = category0.equals(glossaryObjectMetadata0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Category category0 = new Category();
      boolean boolean0 = category0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Category category0 = new Category();
      boolean boolean0 = category0.equals(category0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Category category0 = new Category();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      Category category1 = category0.metadata(glossaryObjectMetadata0);
      Category category2 = new Category();
      boolean boolean0 = category1.equals(category2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Category category0 = new Category();
      CategoryEntity categoryEntity0 = category0.getEntity();
      assertNull(categoryEntity0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Category category0 = new Category();
      CategoryEntity categoryEntity0 = new CategoryEntity();
      category0.entity(categoryEntity0);
      Category category1 = new Category();
      boolean boolean0 = category0.equals(category1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Category category0 = new Category();
      category0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Category category0 = new Category();
      GlossaryObjectMetadata glossaryObjectMetadata0 = category0.getMetadata();
      assertNull(glossaryObjectMetadata0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Category category0 = new Category();
      GlossaryObjectMetadata glossaryObjectMetadata0 = new GlossaryObjectMetadata();
      category0.setMetadata(glossaryObjectMetadata0);
      assertNull(glossaryObjectMetadata0.getModifiedBy());
  }
}
