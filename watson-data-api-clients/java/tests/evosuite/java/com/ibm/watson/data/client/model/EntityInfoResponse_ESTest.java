/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 16:37:21 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.EntityInfoResponse;
import com.ibm.watson.data.client.model.EntityInfoSummary;
import com.ibm.watson.data.client.model.EntityNode;
import com.ibm.watson.data.client.model.MappableAssetSummary;
import io.netty.util.concurrent.DefaultEventExecutor;
import java.util.ArrayList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.ThreadFactory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.testng.xml.XmlSuite;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EntityInfoResponse_ESTest extends EntityInfoResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.catalogId("");
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.addAssetsItem(mappableAssetSummary0);
      EntityInfoSummary entityInfoSummary0 = new EntityInfoSummary();
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse1.summary(entityInfoSummary0);
      entityInfoResponse2.equals(entityInfoResponse0);
      EntityInfoResponse entityInfoResponse3 = entityInfoResponse2.summary(entityInfoSummary0);
      assertSame(entityInfoResponse3, entityInfoResponse2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoSummary entityInfoSummary0 = new EntityInfoSummary();
      entityInfoResponse0.summary(entityInfoSummary0);
      EntityInfoSummary entityInfoSummary1 = entityInfoResponse0.getSummary();
      assertSame(entityInfoSummary1, entityInfoSummary0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Long long0 = new Long(0L);
      entityInfoResponse0.reportTimestamp(long0);
      Long long1 = entityInfoResponse0.getReportTimestamp();
      assertEquals(0L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Long long0 = new Long(1891L);
      entityInfoResponse0.reportTimestamp(long0);
      Long long1 = entityInfoResponse0.getReportTimestamp();
      assertEquals(1891L, (long)long1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Long long0 = new Long((-76L));
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.reportTimestamp(long0);
      Long long1 = entityInfoResponse1.getReportTimestamp();
      assertEquals((-76L), (long)long1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.setReportTime("~/^MTrbxkE_YqZ");
      String string0 = entityInfoResponse0.getReportTime();
      assertEquals("~/^MTrbxkE_YqZ", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.reportTime("");
      String string0 = entityInfoResponse1.getReportTime();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityNode entityNode0 = new EntityNode();
      entityInfoResponse0.setReachabilityGraph(entityNode0);
      EntityNode entityNode1 = entityInfoResponse0.getReachabilityGraph();
      assertNull(entityNode1.getMappableType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Vector<MappableAssetSummary> vector0 = new Vector<MappableAssetSummary>();
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.deletedAssets(vector0);
      List<MappableAssetSummary> list0 = entityInfoResponse1.getDeletedAssets();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      entityInfoResponse0.addDeletedAssetsItem(mappableAssetSummary0);
      List<MappableAssetSummary> list0 = entityInfoResponse0.getDeletedAssets();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.catalogId("\"AZN|");
      String string0 = entityInfoResponse0.getCatalogId();
      assertEquals("\"AZN|", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.catalogId("");
      String string0 = entityInfoResponse0.getCatalogId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Vector<MappableAssetSummary> vector0 = new Vector<MappableAssetSummary>();
      entityInfoResponse0.assets(vector0);
      List<MappableAssetSummary> list0 = entityInfoResponse0.getAssets();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.addAssetsItem(mappableAssetSummary0);
      List<MappableAssetSummary> list0 = entityInfoResponse1.getAssets();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.assets((List<MappableAssetSummary>) null);
      entityInfoResponse0.setAssets((List<MappableAssetSummary>) null);
      String string0 = entityInfoResponse0.toString();
      assertEquals("class EntityInfoResponse {\n    catalogId: null\n    reportTimestamp: null\n    reportTime: null\n    summary: null\n    assets: null\n    deletedAssets: null\n    reachabilityGraph: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Long long0 = new Long(1L);
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.reportTimestamp(long0);
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse1.assets((List<MappableAssetSummary>) null);
      entityInfoResponse1.toString();
      entityInfoResponse2.setDeletedAssets((List<MappableAssetSummary>) null);
      assertEquals(1L, (long)entityInfoResponse2.getReportTimestamp());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      EntityNode entityNode0 = new EntityNode();
      entityInfoResponse1.reachabilityGraph(entityNode0);
      entityInfoResponse0.equals(entityInfoResponse1);
      DefaultEventExecutor defaultEventExecutor0 = null;
      try {
        defaultEventExecutor0 = new DefaultEventExecutor((ThreadFactory) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // threadFactory
         //
         verifyException("io.netty.util.internal.ObjectUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Stack<MappableAssetSummary> stack0 = new Stack<MappableAssetSummary>();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      assertTrue(entityInfoResponse1.equals((Object)entityInfoResponse0));
      
      entityInfoResponse0.setDeletedAssets(stack0);
      boolean boolean0 = entityInfoResponse0.equals(entityInfoResponse1);
      assertFalse(boolean0);
      
      boolean boolean1 = entityInfoResponse0.equals((Object) null);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      assertTrue(entityInfoResponse1.equals((Object)entityInfoResponse0));
      
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse1.addAssetsItem(mappableAssetSummary0);
      EntityInfoSummary entityInfoSummary0 = new EntityInfoSummary();
      boolean boolean0 = entityInfoResponse2.equals(entityInfoResponse0);
      assertFalse(boolean0);
      
      entityInfoResponse1.addDeletedAssetsItem(mappableAssetSummary0);
      assertFalse(entityInfoResponse1.equals((Object)entityInfoResponse0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      assertTrue(entityInfoResponse1.equals((Object)entityInfoResponse0));
      
      EntityInfoSummary entityInfoSummary0 = new EntityInfoSummary();
      entityInfoResponse1.setSummary(entityInfoSummary0);
      boolean boolean0 = entityInfoResponse1.equals(entityInfoResponse0);
      assertFalse(entityInfoResponse1.equals((Object)entityInfoResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.reportTime(", afterChannelInit=");
      Stack<MappableAssetSummary> stack0 = new Stack<MappableAssetSummary>();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      boolean boolean0 = entityInfoResponse0.equals(entityInfoResponse1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      assertTrue(entityInfoResponse1.equals((Object)entityInfoResponse0));
      
      Long long0 = new Long((-816L));
      entityInfoResponse1.setReportTimestamp(long0);
      boolean boolean0 = entityInfoResponse0.equals(entityInfoResponse1);
      assertFalse(entityInfoResponse1.equals((Object)entityInfoResponse0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Stack<MappableAssetSummary> stack0 = new Stack<MappableAssetSummary>();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      assertTrue(entityInfoResponse1.equals((Object)entityInfoResponse0));
      
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse0.reportTime("=8e");
      entityInfoResponse2.setCatalogId(", afterChannelInit=");
      entityInfoResponse1.getReportTimestamp();
      entityInfoResponse0.equals(entityInfoResponse1);
      assertFalse(entityInfoResponse1.equals((Object)entityInfoResponse0));
      
      entityInfoResponse0.deletedAssets(stack0);
      assertFalse(entityInfoResponse0.equals((Object)entityInfoResponse1));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      Integer integer0 = XmlSuite.DEFAULT_DATA_PROVIDER_THREAD_COUNT;
      entityInfoResponse0.equals(integer0);
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.reportTime("P8;Iwu;");
      assertEquals("P8;Iwu;", entityInfoResponse1.getReportTime());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      entityInfoResponse0.equals(entityInfoResponse1);
      assertTrue(entityInfoResponse1.equals((Object)entityInfoResponse0));
      
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse0.reportTime("P8;Iwu;");
      assertFalse(entityInfoResponse2.equals((Object)entityInfoResponse1));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.catalogId(", afterChannelInit=");
      ArrayList<MappableAssetSummary> arrayList0 = new ArrayList<MappableAssetSummary>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.deletedAssets(arrayList0);
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse1.addDeletedAssetsItem(mappableAssetSummary0);
      EntityInfoResponse entityInfoResponse3 = entityInfoResponse2.reportTime("P8;Iwu;");
      assertEquals("P8;Iwu;", entityInfoResponse3.getReportTime());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.catalogId(", afterChannelInit=");
      ArrayList<MappableAssetSummary> arrayList0 = new ArrayList<MappableAssetSummary>();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      arrayList0.add(mappableAssetSummary0);
      entityInfoResponse0.assets(arrayList0);
      entityInfoResponse0.equals((Object) null);
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse1.addAssetsItem(mappableAssetSummary0);
      EntityInfoResponse entityInfoResponse3 = entityInfoResponse0.reportTime("P8;Iwu;");
      assertSame(entityInfoResponse3, entityInfoResponse2);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.toString();
      entityInfoResponse0.getCatalogId();
      entityInfoResponse0.setDeletedAssets((List<MappableAssetSummary>) null);
      assertNull(entityInfoResponse0.getReportTime());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.hashCode();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      entityInfoResponse0.getReportTime();
      entityInfoResponse0.getSummary();
      EntityNode entityNode0 = new EntityNode();
      assertNull(entityNode0.getPruned());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      List<MappableAssetSummary> list0 = entityInfoResponse0.getAssets();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityNode entityNode0 = new EntityNode();
      EntityInfoResponse entityInfoResponse1 = entityInfoResponse0.reachabilityGraph(entityNode0);
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse1.addAssetsItem(mappableAssetSummary0);
      entityInfoResponse2.catalogId("Z<goX6;");
      List<MappableAssetSummary> list0 = entityInfoResponse0.getDeletedAssets();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EntityInfoResponse entityInfoResponse0 = new EntityInfoResponse();
      EntityInfoResponse entityInfoResponse1 = new EntityInfoResponse();
      MappableAssetSummary mappableAssetSummary0 = new MappableAssetSummary();
      EntityInfoResponse entityInfoResponse2 = entityInfoResponse0.addDeletedAssetsItem(mappableAssetSummary0);
      entityInfoResponse2.getReachabilityGraph();
      Object object0 = new Object();
  }
}
