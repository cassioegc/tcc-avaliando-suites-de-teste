/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 14 21:42:57 GMT 2021
 */

package com.ibm.watson.data.client.model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ibm.watson.data.client.model.Connection;
import com.ibm.watson.data.client.model.StewardshipServicesConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StewardshipServicesConfig_ESTest extends StewardshipServicesConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      stewardshipServicesConfig0.setAccessServiceServerName("(w:hu,QB17&EW-");
      String string0 = stewardshipServicesConfig0.getAccessServiceServerName();
      assertEquals("(w:hu,QB17&EW-", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      stewardshipServicesConfig0.accessServiceServerName("");
      String string0 = stewardshipServicesConfig0.getAccessServiceServerName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      StewardshipServicesConfig stewardshipServicesConfig1 = stewardshipServicesConfig0.accessServiceRootURL("~-@u8-l0+$LLR-");
      String string0 = stewardshipServicesConfig1.getAccessServiceRootURL();
      assertEquals("~-@u8-l0+$LLR-", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      stewardshipServicesConfig0.setAccessServiceRootURL("");
      String string0 = stewardshipServicesConfig0.getAccessServiceRootURL();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      Connection connection0 = new Connection();
      connection0.putConfigurationPropertiesItem("~-@u8-l0+$LLR-", connection0);
      stewardshipServicesConfig0.inboundRequestConnection(connection0);
      // Undeclared exception!
      try { 
        stewardshipServicesConfig0.hashCode();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      boolean boolean0 = stewardshipServicesConfig0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      boolean boolean0 = stewardshipServicesConfig0.equals(stewardshipServicesConfig0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      Connection connection0 = new Connection();
      boolean boolean0 = stewardshipServicesConfig0.equals(connection0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      Connection connection0 = new Connection();
      stewardshipServicesConfig0.setInboundRequestConnection(connection0);
      assertNull(connection0.getGuid());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      Connection connection0 = stewardshipServicesConfig0.getInboundRequestConnection();
      assertNull(connection0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      String string0 = stewardshipServicesConfig0.getAccessServiceRootURL();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      Connection connection0 = new Connection();
      stewardshipServicesConfig0.inboundRequestConnection(connection0);
      Connection connection1 = stewardshipServicesConfig0.getInboundRequestConnection();
      assertNull(connection1.getEncryptedPassword());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      stewardshipServicesConfig0.hashCode();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      String string0 = stewardshipServicesConfig0.toString();
      assertEquals("class StewardshipServicesConfig {\n    accessServiceRootURL: null\n    accessServiceServerName: null\n    inboundRequestConnection: null\n}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      stewardshipServicesConfig0.setAccessServiceServerName("(w:hu,QB17&EW-");
      String string0 = stewardshipServicesConfig0.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StewardshipServicesConfig stewardshipServicesConfig0 = new StewardshipServicesConfig();
      String string0 = stewardshipServicesConfig0.getAccessServiceServerName();
      assertNull(string0);
  }
}
