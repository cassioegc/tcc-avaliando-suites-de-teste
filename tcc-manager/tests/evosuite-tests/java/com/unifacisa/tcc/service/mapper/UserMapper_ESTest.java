/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 25 01:52:09 GMT 2021
 */

package com.unifacisa.tcc.service.mapper;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.unifacisa.tcc.domain.Authority;
import com.unifacisa.tcc.domain.User;
import com.unifacisa.tcc.service.dto.UserDTO;
import com.unifacisa.tcc.service.mapper.UserMapper;
import java.time.Instant;
import java.time.ZoneId;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserMapper_ESTest extends UserMapper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      Long long0 = new Long(0L);
      Instant instant0 = MockInstant.now();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      UserDTO userDTO0 = new UserDTO(long0, "", "", "", "=lbuC", true, "", "=lbuC", "", instant0, "", instant0, linkedHashSet0);
      User user0 = userMapper0.userDTOToUser(userDTO0);
      UserDTO userDTO1 = userMapper0.userToUserDTO(user0);
      assertEquals("", userDTO1.getLastName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      LinkedList<User> linkedList0 = new LinkedList<User>();
      User user0 = new User();
      linkedList0.add(user0);
      List<UserDTO> list0 = userMapper0.usersToUserDTOs(linkedList0);
      List<User> list1 = userMapper0.userDTOsToUsers(list0);
      assertFalse(list1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Set<Authority> set1 = userMapper0.authoritiesFromStrings(set0);
      assertFalse(set1.isEmpty());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      // Undeclared exception!
      try { 
        userMapper0.usersToUserDTOs((List<User>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.service.mapper.UserMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      // Undeclared exception!
      try { 
        userMapper0.userDTOsToUsers((List<UserDTO>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.service.mapper.UserMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      UserDTO userDTO0 = new UserDTO();
      // Undeclared exception!
      try { 
        userMapper0.userDTOToUser(userDTO0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.service.mapper.UserMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      // Undeclared exception!
      try { 
        userMapper0.authoritiesFromStrings((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.service.mapper.UserMapper", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      Locale locale0 = Locale.GERMAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Set<Authority> set1 = userMapper0.authoritiesFromStrings(set0);
      assertEquals(0, set1.size());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      User user0 = userMapper0.userFromId((Long) null);
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      Long long0 = new Long((-5L));
      User user0 = userMapper0.userFromId(long0);
      assertNull(user0.getLangKey());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      User user0 = userMapper0.userDTOToUser((UserDTO) null);
      assertNull(user0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      User user0 = new User();
      UserDTO userDTO0 = userMapper0.userToUserDTO(user0);
      User user1 = userMapper0.userDTOToUser(userDTO0);
      assertNotSame(user0, user1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      LinkedList<UserDTO> linkedList0 = new LinkedList<UserDTO>();
      List<User> list0 = userMapper0.userDTOsToUsers(linkedList0);
      List<UserDTO> list1 = userMapper0.usersToUserDTOs(list0);
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserMapper userMapper0 = new UserMapper();
      // Undeclared exception!
      try { 
        userMapper0.userToUserDTO((User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.service.dto.UserDTO", e);
      }
  }
}
