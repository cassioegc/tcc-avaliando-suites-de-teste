/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 25 02:02:24 GMT 2021
 */

package com.unifacisa.tcc.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.unifacisa.tcc.config.DefaultProfileUtil;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.boot.SpringApplication;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import org.springframework.core.env.ConfigurableEnvironment;
import org.springframework.core.env.Environment;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultProfileUtil_ESTest extends DefaultProfileUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Environment environment0 = mock(Environment.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(environment0).getActiveProfiles();
      doReturn((String[]) null).when(environment0).getDefaultProfiles();
      String[] stringArray1 = DefaultProfileUtil.getActiveProfiles(environment0);
      assertNull(stringArray1);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Environment environment0 = mock(Environment.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(environment0).getActiveProfiles();
      doReturn(stringArray0).when(environment0).getDefaultProfiles();
      String[] stringArray1 = DefaultProfileUtil.getActiveProfiles(environment0);
      assertSame(stringArray1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Environment environment0 = mock(Environment.class, new ViolatedAssumptionAnswer());
      doReturn((String[]) null).when(environment0).getActiveProfiles();
      // Undeclared exception!
      try { 
        DefaultProfileUtil.getActiveProfiles(environment0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.config.DefaultProfileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        DefaultProfileUtil.addDefaultProfile((SpringApplication) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.config.DefaultProfileUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.springframework.context.annotation.AnnotationConfigApplicationContext";
      AnnotationConfigApplicationContext annotationConfigApplicationContext0 = new AnnotationConfigApplicationContext(stringArray0);
      ConfigurableEnvironment configurableEnvironment0 = annotationConfigApplicationContext0.getEnvironment();
      String[] stringArray1 = DefaultProfileUtil.getActiveProfiles(configurableEnvironment0);
      assertEquals(1, stringArray1.length);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      String[] stringArray0 = new String[1];
      Environment environment0 = mock(Environment.class, new ViolatedAssumptionAnswer());
      doReturn(stringArray0).when(environment0).getActiveProfiles();
      String[] stringArray1 = DefaultProfileUtil.getActiveProfiles(environment0);
      assertSame(stringArray0, stringArray1);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      SpringApplication springApplication0 = new SpringApplication(objectArray0);
      DefaultProfileUtil.addDefaultProfile(springApplication0);
      assertTrue(springApplication0.isWebEnvironment());
  }
}
