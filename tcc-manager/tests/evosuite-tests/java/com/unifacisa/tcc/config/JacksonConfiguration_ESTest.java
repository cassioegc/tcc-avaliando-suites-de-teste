/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 25 02:19:02 GMT 2021
 */

package com.unifacisa.tcc.config;

import org.junit.Test;
import static org.junit.Assert.*;
import com.fasterxml.jackson.datatype.hibernate5.Hibernate5Module;
import com.fasterxml.jackson.module.afterburner.AfterburnerModule;
import com.unifacisa.tcc.config.JacksonConfiguration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.zalando.problem.ProblemModule;
import org.zalando.problem.validation.ConstraintViolationProblemModule;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JacksonConfiguration_ESTest extends JacksonConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JacksonConfiguration jacksonConfiguration0 = new JacksonConfiguration();
      Hibernate5Module hibernate5Module0 = jacksonConfiguration0.hibernate5Module();
      assertEquals("jackson-datatype-hibernate", hibernate5Module0.getModuleName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JacksonConfiguration jacksonConfiguration0 = new JacksonConfiguration();
      AfterburnerModule afterburnerModule0 = jacksonConfiguration0.afterburnerModule();
      assertNotNull(afterburnerModule0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JacksonConfiguration jacksonConfiguration0 = new JacksonConfiguration();
      ConstraintViolationProblemModule constraintViolationProblemModule0 = jacksonConfiguration0.constraintViolationProblemModule();
      assertNotNull(constraintViolationProblemModule0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      JacksonConfiguration jacksonConfiguration0 = new JacksonConfiguration();
      ProblemModule problemModule0 = jacksonConfiguration0.problemModule();
      assertNotNull(problemModule0);
  }
}
