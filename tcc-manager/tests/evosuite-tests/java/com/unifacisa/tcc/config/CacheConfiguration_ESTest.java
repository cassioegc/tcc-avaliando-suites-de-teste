/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 25 02:12:22 GMT 2021
 */

package com.unifacisa.tcc.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.unifacisa.tcc.config.CacheConfiguration;
import io.github.jhipster.config.JHipsterProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.boot.autoconfigure.cache.JCacheManagerCustomizer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CacheConfiguration_ESTest extends CacheConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JHipsterProperties.Cache.Ehcache jHipsterProperties_Cache_Ehcache0 = mock(JHipsterProperties.Cache.Ehcache.class, new ViolatedAssumptionAnswer());
      doReturn(0L).when(jHipsterProperties_Cache_Ehcache0).getMaxEntries();
      JHipsterProperties.Cache jHipsterProperties_Cache0 = mock(JHipsterProperties.Cache.class, new ViolatedAssumptionAnswer());
      doReturn(jHipsterProperties_Cache_Ehcache0).when(jHipsterProperties_Cache0).getEhcache();
      JHipsterProperties jHipsterProperties0 = mock(JHipsterProperties.class, new ViolatedAssumptionAnswer());
      doReturn(jHipsterProperties_Cache0).when(jHipsterProperties0).getCache();
      CacheConfiguration cacheConfiguration0 = null;
      try {
        cacheConfiguration0 = new CacheConfiguration(jHipsterProperties0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Size must be greater than 0
         //
         verifyException("org.ehcache.core.config.SizedResourcePoolImpl", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JHipsterProperties.Cache.Ehcache jHipsterProperties_Cache_Ehcache0 = mock(JHipsterProperties.Cache.Ehcache.class, new ViolatedAssumptionAnswer());
      doReturn(1800L).when(jHipsterProperties_Cache_Ehcache0).getMaxEntries();
      doReturn(0).when(jHipsterProperties_Cache_Ehcache0).getTimeToLiveSeconds();
      JHipsterProperties.Cache jHipsterProperties_Cache0 = mock(JHipsterProperties.Cache.class, new ViolatedAssumptionAnswer());
      doReturn(jHipsterProperties_Cache_Ehcache0).when(jHipsterProperties_Cache0).getEhcache();
      JHipsterProperties jHipsterProperties0 = mock(JHipsterProperties.class, new ViolatedAssumptionAnswer());
      doReturn(jHipsterProperties_Cache0).when(jHipsterProperties0).getCache();
      CacheConfiguration cacheConfiguration0 = new CacheConfiguration(jHipsterProperties0);
      JCacheManagerCustomizer jCacheManagerCustomizer0 = cacheConfiguration0.cacheManagerCustomizer();
      assertNotNull(jCacheManagerCustomizer0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JHipsterProperties jHipsterProperties0 = mock(JHipsterProperties.class, new ViolatedAssumptionAnswer());
      doReturn((JHipsterProperties.Cache) null).when(jHipsterProperties0).getCache();
      CacheConfiguration cacheConfiguration0 = null;
      try {
        cacheConfiguration0 = new CacheConfiguration(jHipsterProperties0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.config.CacheConfiguration", e);
      }
  }
}
