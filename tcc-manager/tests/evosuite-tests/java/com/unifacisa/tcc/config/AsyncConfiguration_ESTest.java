/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 25 02:20:39 GMT 2021
 */

package com.unifacisa.tcc.config;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.unifacisa.tcc.config.AsyncConfiguration;
import io.github.jhipster.config.JHipsterProperties;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AsyncConfiguration_ESTest extends AsyncConfiguration_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JHipsterProperties jHipsterProperties0 = mock(JHipsterProperties.class, new ViolatedAssumptionAnswer());
      doReturn((JHipsterProperties.Async) null).when(jHipsterProperties0).getAsync();
      AsyncConfiguration asyncConfiguration0 = new AsyncConfiguration(jHipsterProperties0);
      // Undeclared exception!
      try { 
        asyncConfiguration0.getAsyncExecutor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.config.AsyncConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JHipsterProperties.Async jHipsterProperties_Async0 = mock(JHipsterProperties.Async.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(jHipsterProperties_Async0).getCorePoolSize();
      JHipsterProperties jHipsterProperties0 = mock(JHipsterProperties.class, new ViolatedAssumptionAnswer());
      doReturn(jHipsterProperties_Async0, (JHipsterProperties.Async) null).when(jHipsterProperties0).getAsync();
      AsyncConfiguration asyncConfiguration0 = new AsyncConfiguration(jHipsterProperties0);
      // Undeclared exception!
      try { 
        asyncConfiguration0.getAsyncExecutor();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.config.AsyncConfiguration", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      JHipsterProperties jHipsterProperties0 = mock(JHipsterProperties.class, new ViolatedAssumptionAnswer());
      AsyncConfiguration asyncConfiguration0 = new AsyncConfiguration(jHipsterProperties0);
      AsyncUncaughtExceptionHandler asyncUncaughtExceptionHandler0 = asyncConfiguration0.getAsyncUncaughtExceptionHandler();
      assertNotNull(asyncUncaughtExceptionHandler0);
  }
}
