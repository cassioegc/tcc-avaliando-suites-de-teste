/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Mar 25 02:01:17 GMT 2021
 */

package com.unifacisa.tcc.config;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class DatabaseConfiguration_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.unifacisa.tcc.config.DatabaseConfiguration"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/cassioegc/tcc/tcc-manager"); 
    java.lang.System.setProperty("user.home", "/home/cassioegc"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "cassioegc"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DatabaseConfiguration_ESTest_scaffolding.class.getClassLoader() ,
      "org.h2.util.SortedProperties",
      "liquibase.resource.AbstractResourceAccessor",
      "org.h2.message.DbException",
      "org.h2.util.Utils",
      "liquibase.servicelocator.PackageScanFilter",
      "liquibase.configuration.AbstractConfigurationContainer",
      "org.springframework.context.annotation.ComponentScan$Filter",
      "liquibase.configuration.ConfigurationValueProvider",
      "liquibase.servicelocator.DefaultPackageScanClassResolver",
      "org.springframework.core.env.PropertyResolver",
      "org.h2.engine.SysProperties",
      "org.springframework.core.task.TaskExecutor",
      "liquibase.exception.ServiceNotFoundException",
      "liquibase.util.StringUtils",
      "io.github.jhipster.config.liquibase.AsyncSpringLiquibase",
      "org.springframework.core.io.ResourceLoader",
      "org.h2.util.New",
      "liquibase.database.DatabaseConnection",
      "org.h2.Driver",
      "liquibase.configuration.AbstractConfigurationContainer$ConfigurationContainer",
      "org.springframework.data.repository.config.DefaultRepositoryBaseClass",
      "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
      "org.h2.util.StringUtils",
      "org.springframework.context.annotation.Configuration",
      "org.h2.util.NetUtils",
      "liquibase.resource.ResourceAccessor",
      "org.springframework.core.env.Environment",
      "org.h2.util.Tool",
      "liquibase.configuration.LiquibaseConfiguration",
      "org.springframework.beans.factory.BeanClassLoaderAware",
      "liquibase.servicelocator.PrioritizedService",
      "com.unifacisa.tcc.config.DatabaseConfiguration",
      "org.h2.tools.Server",
      "liquibase.servicelocator.AssignableToPackageScanFilter",
      "liquibase.logging.Logger",
      "org.springframework.beans.factory.Aware",
      "org.springframework.boot.context.properties.ConfigurationProperties",
      "liquibase.logging.core.AbstractLogger",
      "org.springframework.transaction.annotation.EnableTransactionManagement",
      "org.springframework.beans.factory.InitializingBean",
      "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
      "liquibase.logging.core.DefaultLogger",
      "liquibase.configuration.ConfigurationContainer",
      "org.springframework.beans.factory.FactoryBean",
      "org.springframework.beans.factory.BeanFactoryAware",
      "liquibase.servicelocator.WebSpherePackageScanClassResolver",
      "liquibase.integration.spring.SpringLiquibase",
      "org.h2.server.Service",
      "liquibase.exception.UnexpectedLiquibaseException",
      "org.springframework.beans.factory.BeanNameAware",
      "org.h2.util.IOUtils",
      "liquibase.logging.LogLevel",
      "liquibase.configuration.ConfigurationProperty",
      "org.springframework.context.ApplicationEventPublisherAware",
      "org.h2.server.TcpServer",
      "org.h2.api.ErrorCode",
      "org.h2.JdbcDriverBackwardsCompat",
      "org.h2.util.MathUtils",
      "org.springframework.data.repository.query.QueryLookupStrategy$Key",
      "org.springframework.context.annotation.AdviceMode",
      "liquibase.util.StringUtils$StringUtilsFormatter",
      "org.springframework.context.ResourceLoaderAware",
      "org.h2.server.ShutdownHandler",
      "org.springframework.context.annotation.Import",
      "liquibase.exception.DatabaseException",
      "liquibase.logging.LogFactory",
      "liquibase.osgi.OSGiUtil",
      "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
      "liquibase.resource.ClassLoaderResourceAccessor",
      "liquibase.configuration.SystemPropertyProvider",
      "org.springframework.stereotype.Component",
      "liquibase.servicelocator.PackageScanClassResolver",
      "org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean",
      "org.h2.jdbc.JdbcSQLException",
      "liquibase.logging.core.DefaultLoggerConfiguration",
      "org.springframework.data.jpa.repository.config.EnableJpaAuditing",
      "liquibase.servicelocator.ServiceLocator",
      "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
      "liquibase.exception.LiquibaseException",
      "org.springframework.data.jpa.repository.config.EnableJpaRepositories"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("javax.sql.DataSource", false, DatabaseConfiguration_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties", false, DatabaseConfiguration_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.springframework.core.env.Environment", false, DatabaseConfiguration_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.springframework.core.task.TaskExecutor", false, DatabaseConfiguration_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DatabaseConfiguration_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.unifacisa.tcc.config.DatabaseConfiguration",
      "org.springframework.data.repository.query.QueryLookupStrategy$Key",
      "org.springframework.context.annotation.AdviceMode",
      "org.springframework.beans.factory.annotation.Autowire",
      "org.h2.util.Tool",
      "org.h2.tools.Server",
      "org.h2.server.TcpServer",
      "org.postgresql.core.Logger",
      "org.postgresql.util.SharedTimer",
      "org.postgresql.Driver",
      "org.hsqldb.jdbc.JDBCDriver",
      "org.h2.Driver",
      "org.h2.util.NetUtils",
      "org.h2.util.New",
      "org.h2.util.Utils",
      "org.h2.util.MathUtils",
      "org.h2.engine.SysProperties",
      "liquibase.integration.spring.SpringLiquibase",
      "io.github.jhipster.config.liquibase.AsyncSpringLiquibase",
      "liquibase.logging.core.AbstractLogger",
      "liquibase.logging.core.DefaultLogger",
      "liquibase.logging.LogFactory",
      "liquibase.osgi.OSGiUtil",
      "liquibase.servicelocator.DefaultPackageScanClassResolver",
      "liquibase.servicelocator.WebSpherePackageScanClassResolver",
      "liquibase.resource.AbstractResourceAccessor",
      "liquibase.resource.ClassLoaderResourceAccessor",
      "liquibase.configuration.LiquibaseConfiguration",
      "liquibase.configuration.SystemPropertyProvider",
      "liquibase.configuration.AbstractConfigurationContainer",
      "liquibase.logging.core.DefaultLoggerConfiguration",
      "liquibase.configuration.AbstractConfigurationContainer$ConfigurationContainer",
      "liquibase.configuration.ConfigurationProperty",
      "liquibase.logging.LogLevel",
      "liquibase.util.StringUtils",
      "liquibase.servicelocator.ServiceLocator",
      "liquibase.servicelocator.AssignableToPackageScanFilter",
      "liquibase.exception.ServiceNotFoundException",
      "org.springframework.boot.autoconfigure.liquibase.LiquibaseProperties",
      "com.zaxxer.hikari.HikariConfig",
      "com.zaxxer.hikari.HikariDataSource",
      "com.zaxxer.hikari.util.UtilityElf",
      "org.springframework.util.CustomizableThreadCreator",
      "org.springframework.core.task.SimpleAsyncTaskExecutor",
      "org.springframework.util.ClassUtils",
      "org.springframework.util.Assert",
      "org.springframework.util.StringUtils",
      "org.springframework.util.ConcurrencyThrottleSupport",
      "org.springframework.core.task.SimpleAsyncTaskExecutor$ConcurrencyThrottleAdapter",
      "org.postgresql.ds.common.BaseDataSource",
      "org.postgresql.ds.PGPoolingDataSource",
      "org.postgresql.jdbc3.Jdbc3PoolingDataSource",
      "org.postgresql.ds.PGPoolingDataSource$1",
      "org.springframework.core.env.AbstractEnvironment",
      "org.springframework.core.env.StandardEnvironment",
      "org.springframework.core.env.MutablePropertySources",
      "org.springframework.core.env.AbstractPropertyResolver",
      "org.springframework.core.env.PropertySourcesPropertyResolver",
      "org.springframework.core.env.PropertySource",
      "org.springframework.core.env.EnumerablePropertySource",
      "org.springframework.core.env.MapPropertySource",
      "org.springframework.core.env.SystemEnvironmentPropertySource",
      "org.springframework.core.SpringProperties",
      "org.springframework.util.ObjectUtils",
      "org.springframework.core.task.SyncTaskExecutor",
      "org.postgresql.ds.PGSimpleDataSource",
      "org.h2.jdbcx.JdbcConnectionPool",
      "org.springframework.core.io.DefaultResourceLoader",
      "org.springframework.context.support.AbstractApplicationContext",
      "org.springframework.context.support.GenericApplicationContext",
      "org.springframework.context.annotation.AnnotationConfigApplicationContext",
      "org.springframework.core.io.support.PathMatchingResourcePatternResolver",
      "org.springframework.util.AntPathMatcher",
      "org.springframework.util.AntPathMatcher$PathSeparatorPatternCache",
      "org.springframework.core.SimpleAliasRegistry",
      "org.springframework.beans.factory.support.DefaultSingletonBeanRegistry",
      "org.springframework.beans.factory.support.FactoryBeanRegistrySupport",
      "org.springframework.beans.factory.support.AbstractBeanFactory",
      "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory",
      "org.springframework.beans.factory.support.DefaultListableBeanFactory",
      "org.springframework.core.NamedThreadLocal",
      "org.springframework.beans.factory.support.SimpleInstantiationStrategy",
      "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy",
      "org.springframework.core.PrioritizedParameterNameDiscoverer",
      "org.springframework.core.DefaultParameterNameDiscoverer",
      "org.springframework.core.StandardReflectionParameterNameDiscoverer",
      "org.springframework.core.LocalVariableTableParameterNameDiscoverer",
      "org.springframework.beans.factory.support.SimpleAutowireCandidateResolver",
      "org.springframework.context.annotation.AnnotatedBeanDefinitionReader",
      "org.springframework.context.annotation.AnnotationBeanNameGenerator",
      "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "org.springframework.context.annotation.ScopedProxyMode",
      "org.springframework.context.annotation.ConditionEvaluator",
      "org.springframework.context.annotation.ConditionEvaluator$ConditionContextImpl",
      "org.springframework.context.annotation.AnnotationConfigUtils",
      "org.springframework.core.OrderComparator",
      "org.springframework.core.annotation.AnnotationAwareOrderComparator",
      "org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver",
      "org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver",
      "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver",
      "org.springframework.beans.factory.support.DefaultListableBeanFactory$1",
      "org.springframework.core.AttributeAccessorSupport",
      "org.springframework.beans.BeanMetadataAttributeAccessor",
      "org.springframework.beans.factory.support.AbstractBeanDefinition",
      "org.springframework.beans.factory.support.RootBeanDefinition",
      "org.springframework.beans.factory.support.MethodOverrides",
      "org.springframework.beans.factory.config.ConstructorArgumentValues",
      "org.springframework.beans.MutablePropertyValues",
      "org.springframework.beans.factory.config.BeanDefinitionHolder",
      "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider",
      "org.springframework.context.annotation.ClassPathBeanDefinitionScanner",
      "org.springframework.beans.factory.support.BeanDefinitionDefaults",
      "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter",
      "org.springframework.core.type.filter.AnnotationTypeFilter",
      "org.springframework.core.io.support.ResourcePatternUtils",
      "org.springframework.core.type.classreading.SimpleMetadataReaderFactory",
      "org.springframework.core.type.classreading.CachingMetadataReaderFactory",
      "org.springframework.core.type.classreading.CachingMetadataReaderFactory$1",
      "org.h2.message.TraceObject",
      "org.h2.jdbcx.JdbcDataSource",
      "org.h2.jdbcx.JdbcDataSourceFactory",
      "org.h2.message.TraceSystem",
      "org.h2.message.Trace",
      "org.postgresql.PGProperty",
      "org.postgresql.ds.PGConnectionPoolDataSource",
      "org.postgresql.Driver$1",
      "org.postgresql.jdbc.PgConnection",
      "org.postgresql.util.HostSpec",
      "org.postgresql.core.ConnectionFactory",
      "org.postgresql.core.v3.ConnectionFactoryImpl",
      "org.postgresql.hostchooser.HostRequirement",
      "org.postgresql.core.SocketFactoryFactory",
      "org.postgresql.hostchooser.HostChooserFactory",
      "org.postgresql.hostchooser.SingleHostChooser",
      "org.postgresql.core.PGStream",
      "org.postgresql.util.PSQLException",
      "org.postgresql.util.GT",
      "org.postgresql.util.PSQLState",
      "org.hsqldb.DatabaseURL",
      "org.hsqldb.persist.HsqlProperties",
      "org.hsqldb.map.BaseHashMap",
      "org.hsqldb.map.ValuePoolHashMap",
      "org.hsqldb.map.HashIndex",
      "org.hsqldb.map.ValuePool",
      "com.codahale.metrics.MetricRegistry",
      "com.codahale.metrics.InstrumentedThreadFactory",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$1",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$2",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$3",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$4",
      "com.codahale.metrics.MetricRegistry$MetricBuilder",
      "com.codahale.metrics.Meter",
      "com.codahale.metrics.Clock$UserTimeClock",
      "com.codahale.metrics.Clock",
      "com.codahale.metrics.EWMA",
      "com.codahale.metrics.LongAdderProxy$JdkProvider",
      "com.codahale.metrics.LongAdderProxy$JdkProvider$1",
      "com.codahale.metrics.LongAdderProxy",
      "com.codahale.metrics.Counter",
      "org.springframework.util.PropertyPlaceholderHelper",
      "org.springframework.core.env.AbstractPropertyResolver$1",
      "org.springframework.core.io.AbstractResource",
      "org.springframework.core.io.AbstractFileResolvingResource",
      "org.springframework.core.io.UrlResource",
      "org.springframework.util.CollectionUtils",
      "org.springframework.util.ResourceUtils",
      "org.springframework.core.env.MissingRequiredPropertiesException",
      "org.springframework.context.expression.StandardBeanExpressionResolver",
      "org.springframework.context.expression.StandardBeanExpressionResolver$1",
      "org.springframework.expression.common.TemplateAwareExpressionParser$1",
      "org.springframework.expression.common.TemplateAwareExpressionParser",
      "org.springframework.expression.spel.standard.SpelExpressionParser",
      "org.springframework.expression.spel.SpelCompilerMode",
      "org.springframework.expression.spel.SpelParserConfiguration",
      "org.springframework.beans.support.ResourceEditorRegistrar",
      "org.springframework.context.support.ApplicationContextAwareProcessor",
      "org.springframework.beans.factory.config.EmbeddedValueResolver",
      "org.springframework.beans.factory.config.BeanExpressionContext",
      "org.springframework.context.support.ApplicationListenerDetector",
      "org.springframework.beans.factory.BeanFactoryUtils",
      "org.springframework.context.support.PostProcessorRegistrationDelegate",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceType",
      "org.springframework.util.ConcurrentReferenceHashMap",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment",
      "org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager",
      "org.springframework.core.ResolvableType",
      "org.springframework.core.ResolvableType$1",
      "org.springframework.beans.factory.support.AbstractBeanFactory$1",
      "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$4",
      "org.springframework.beans.factory.support.SimpleInstantiationStrategy$1",
      "org.springframework.beans.BeanUtils",
      "org.springframework.util.ReflectionUtils$4",
      "org.springframework.util.ReflectionUtils$5",
      "org.springframework.util.ReflectionUtils$6",
      "org.springframework.util.ReflectionUtils",
      "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "org.springframework.beans.factory.parsing.PassThroughSourceExtractor",
      "org.springframework.beans.factory.parsing.FailFastProblemReporter",
      "org.springframework.context.annotation.ConfigurationClassPostProcessor$1",
      "org.springframework.beans.PropertyEditorRegistrySupport",
      "org.springframework.beans.TypeConverterSupport",
      "org.springframework.beans.AbstractPropertyAccessor",
      "org.springframework.beans.AbstractNestablePropertyAccessor",
      "org.springframework.beans.BeanWrapperImpl",
      "org.springframework.beans.TypeConverterDelegate",
      "org.springframework.core.io.ResourceEditor",
      "org.springframework.beans.propertyeditors.InputStreamEditor",
      "org.springframework.beans.propertyeditors.InputSourceEditor",
      "org.springframework.beans.propertyeditors.FileEditor",
      "org.springframework.beans.propertyeditors.PathEditor",
      "org.springframework.beans.propertyeditors.ReaderEditor",
      "org.springframework.beans.propertyeditors.URLEditor",
      "org.springframework.beans.propertyeditors.URIEditor",
      "org.springframework.beans.propertyeditors.ClassEditor",
      "org.springframework.beans.propertyeditors.ClassArrayEditor",
      "org.springframework.core.io.support.ResourceArrayPropertyEditor",
      "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$2",
      "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$5",
      "org.springframework.context.support.ApplicationContextAwareProcessor$1",
      "org.springframework.beans.factory.support.DisposableBeanAdapter",
      "org.springframework.core.Conventions",
      "org.springframework.context.annotation.ConfigurationClassUtils",
      "org.springframework.core.type.StandardClassMetadata",
      "org.springframework.core.type.StandardAnnotationMetadata",
      "org.springframework.core.annotation.AnnotatedElementUtils$SimpleAnnotationProcessor",
      "org.springframework.core.annotation.AnnotatedElementUtils$AlwaysTrueBooleanAnnotationProcessor",
      "org.springframework.core.annotation.AnnotatedElementUtils",
      "org.springframework.core.annotation.AnnotationUtils",
      "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter",
      "org.springframework.context.annotation.ConfigurationClassPostProcessor$ImportAwareBeanPostProcessor",
      "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker",
      "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "org.springframework.core.io.support.SpringFactoriesLoader",
      "org.springframework.core.io.support.PropertiesLoaderUtils",
      "org.springframework.beans.ExtendedBeanInfoFactory",
      "org.springframework.beans.CachedIntrospectionResults",
      "org.springframework.util.ConcurrentReferenceHashMap$Restructure",
      "org.springframework.beans.ExtendedBeanInfo",
      "org.springframework.beans.GenericTypeAwarePropertyDescriptor",
      "org.springframework.core.BridgeMethodResolver",
      "org.springframework.core.MethodParameter",
      "org.springframework.core.GenericTypeResolver",
      "org.springframework.core.SerializableTypeWrapper$MethodParameterTypeProvider",
      "org.springframework.core.ResolvableType$DefaultVariableResolver",
      "org.springframework.core.SerializableTypeWrapper",
      "org.springframework.core.SerializableTypeWrapper$TypeProxyInvocationHandler",
      "org.springframework.util.ConcurrentReferenceHashMap$Task",
      "org.springframework.util.ConcurrentReferenceHashMap$1",
      "org.springframework.util.ConcurrentReferenceHashMap$TaskOption",
      "org.springframework.util.ConcurrentReferenceHashMap$Entries",
      "org.springframework.util.ConcurrentReferenceHashMap$Segment$1",
      "org.springframework.util.ConcurrentReferenceHashMap$Entry",
      "org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference",
      "org.springframework.core.SerializableTypeWrapper$MethodInvokeTypeProvider",
      "org.springframework.core.SerializableTypeWrapper$SimpleTypeProvider",
      "org.springframework.core.SerializableTypeWrapper$2",
      "org.springframework.core.SerializableTypeWrapper$1",
      "org.springframework.beans.factory.support.AutowireUtils",
      "org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor",
      "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor",
      "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "org.springframework.jndi.JndiAccessor",
      "org.springframework.jndi.JndiLocatorSupport",
      "org.springframework.jndi.support.SimpleJndiBeanFactory",
      "org.springframework.jndi.JndiTemplate",
      "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor",
      "org.springframework.context.support.MessageSourceSupport",
      "org.springframework.context.support.DelegatingMessageSource",
      "org.springframework.context.event.AbstractApplicationEventMulticaster",
      "org.springframework.context.event.SimpleApplicationEventMulticaster",
      "org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever",
      "org.springframework.context.support.AbstractApplicationContext$1",
      "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$1",
      "org.springframework.context.event.EventListenerMethodProcessor",
      "org.springframework.context.expression.CachedExpressionEvaluator",
      "org.springframework.context.event.EventExpressionEvaluator",
      "org.springframework.beans.factory.annotation.InjectionMetadata",
      "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor$1",
      "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor$2",
      "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$1",
      "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata",
      "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$1",
      "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$2",
      "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$2",
      "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$3",
      "org.springframework.core.annotation.AnnotatedElementUtils$MergedAnnotationAttributesProcessor",
      "org.springframework.context.event.DefaultEventListenerFactory",
      "org.springframework.beans.factory.support.DefaultListableBeanFactory$3",
      "org.springframework.aop.scope.ScopedProxyUtils",
      "org.springframework.aop.framework.autoproxy.AutoProxyUtils",
      "org.springframework.context.event.EventListenerMethodProcessor$1",
      "org.springframework.core.MethodIntrospector",
      "org.springframework.core.MethodIntrospector$1",
      "org.springframework.context.support.DefaultLifecycleProcessor",
      "org.springframework.context.ApplicationEvent",
      "org.springframework.context.event.ApplicationContextEvent",
      "org.springframework.context.event.ContextRefreshedEvent",
      "org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey",
      "org.springframework.context.support.LiveBeansView",
      "org.springframework.util.ConcurrentReferenceHashMap$EntrySet",
      "org.springframework.util.ConcurrentReferenceHashMap$EntryIterator",
      "org.springframework.beans.factory.support.GenericBeanDefinition",
      "org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition",
      "org.springframework.context.annotation.ScopeMetadata",
      "org.springframework.core.annotation.AnnotationAttributes",
      "org.springframework.beans.factory.support.BeanDefinitionReaderUtils",
      "org.postgresql.jdbc3.Jdbc3SimpleDataSource",
      "org.springframework.context.support.AbstractRefreshableApplicationContext",
      "org.springframework.context.support.AbstractRefreshableConfigApplicationContext",
      "org.springframework.context.support.AbstractXmlApplicationContext",
      "org.springframework.context.support.ClassPathXmlApplicationContext",
      "org.springframework.beans.factory.support.AbstractBeanDefinitionReader",
      "org.springframework.core.Constants",
      "org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
      "org.springframework.beans.factory.support.DefaultBeanNameGenerator",
      "org.springframework.beans.factory.parsing.EmptyReaderEventListener",
      "org.springframework.beans.factory.parsing.NullSourceExtractor",
      "org.springframework.beans.factory.xml.DefaultDocumentLoader",
      "org.springframework.util.xml.SimpleSaxErrorHandler",
      "org.springframework.util.xml.XmlValidationModeDetector",
      "org.springframework.beans.factory.xml.DelegatingEntityResolver",
      "org.springframework.beans.factory.xml.ResourceEntityResolver",
      "org.springframework.beans.factory.xml.BeansDtdResolver",
      "org.springframework.beans.factory.xml.PluggableSchemaResolver",
      "org.springframework.core.io.ClassPathResource",
      "org.springframework.core.io.DefaultResourceLoader$ClassPathContextResource",
      "org.springframework.core.io.support.EncodedResource",
      "org.springframework.core.NestedRuntimeException",
      "org.springframework.beans.BeansException",
      "org.springframework.beans.FatalBeanException",
      "org.springframework.beans.factory.BeanDefinitionStoreException",
      "org.h2.util.IOUtils",
      "org.h2.message.DbException",
      "com.zaxxer.hikari.metrics.dropwizard.CodahaleMetricsTrackerFactory",
      "org.h2.jdbc.JdbcConnection",
      "org.h2.engine.SessionWithState",
      "org.h2.engine.SessionRemote",
      "org.h2.value.CompareMode",
      "org.h2.api.ErrorCode",
      "org.h2.util.StringUtils",
      "org.h2.jdbc.JdbcSQLException",
      "org.springframework.beans.factory.NoSuchBeanDefinitionException",
      "org.springframework.util.ReflectionUtils$1",
      "org.springframework.beans.factory.support.SimpleSecurityContextProvider",
      "org.springframework.core.annotation.AnnotationUtils$DefaultValueHolder",
      "org.springframework.core.annotation.AnnotationUtils$AliasDescriptor",
      "org.springframework.core.annotation.AnnotatedElementUtils$2",
      "org.springframework.beans.BeanMetadataAttribute",
      "org.springframework.context.annotation.ConfigurationClassPostProcessor$2",
      "org.springframework.core.io.support.DefaultPropertySourceFactory",
      "org.springframework.context.annotation.ConfigurationClassParser$1",
      "org.springframework.context.annotation.ConfigurationClassParser",
      "org.springframework.context.annotation.ConfigurationClassParser$ImportStack",
      "org.springframework.util.LinkedMultiValueMap",
      "org.springframework.context.annotation.ComponentScanAnnotationParser",
      "org.springframework.context.annotation.ConfigurationClass",
      "org.springframework.core.io.DescriptiveResource",
      "org.springframework.context.annotation.ConfigurationCondition$ConfigurationPhase",
      "org.springframework.context.annotation.ConfigurationClassParser$SourceClass",
      "org.springframework.core.annotation.AbstractAliasAwareAnnotationAttributeExtractor",
      "org.springframework.core.annotation.DefaultAnnotationAttributeExtractor",
      "org.springframework.core.annotation.SynthesizedAnnotationInvocationHandler",
      "org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport",
      "org.springframework.data.jpa.repository.config.JpaAuditingRegistrar",
      "org.springframework.context.annotation.ParserStrategyUtils",
      "org.springframework.data.repository.config.RepositoryBeanDefinitionRegistrarSupport",
      "org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar",
      "org.springframework.context.annotation.AdviceModeImportSelector",
      "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
      "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector$1",
      "org.springframework.core.type.classreading.SimpleMetadataReader",
      "org.springframework.asm.ClassReader",
      "org.springframework.asm.ClassVisitor",
      "org.springframework.core.type.classreading.ClassMetadataReadingVisitor",
      "org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor",
      "org.springframework.asm.Context",
      "org.springframework.asm.FieldVisitor",
      "org.springframework.core.type.classreading.ClassMetadataReadingVisitor$EmptyFieldVisitor",
      "org.springframework.asm.MethodVisitor",
      "org.springframework.core.type.classreading.MethodMetadataReadingVisitor",
      "org.springframework.asm.Type",
      "org.springframework.asm.Label",
      "org.springframework.asm.ClassWriter",
      "org.springframework.asm.Opcodes",
      "org.springframework.asm.AnnotationVisitor",
      "org.springframework.core.type.classreading.AbstractRecursiveAnnotationVisitor",
      "org.springframework.core.type.classreading.RecursiveAnnotationAttributesVisitor",
      "org.springframework.core.type.classreading.AnnotationAttributesReadingVisitor",
      "org.springframework.core.type.classreading.RecursiveAnnotationArrayVisitor",
      "org.springframework.core.type.filter.AssignableTypeFilter",
      "org.springframework.context.annotation.AutoProxyRegistrar",
      "org.springframework.core.type.classreading.AnnotationReadingVisitorUtils",
      "org.springframework.context.annotation.ConfigurationMethod",
      "org.springframework.context.annotation.BeanMethod",
      "org.springframework.core.type.StandardMethodMetadata",
      "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader",
      "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$TrackedConditionEvaluator",
      "org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader$ConfigurationClassBeanDefinition",
      "org.springframework.core.annotation.AnnotatedElementUtils$4",
      "org.springframework.context.annotation.ProfileCondition",
      "org.springframework.beans.factory.parsing.BeanComponentDefinition",
      "org.springframework.data.auditing.config.AnnotationAuditingConfiguration",
      "org.springframework.beans.factory.support.BeanDefinitionBuilder",
      "org.springframework.beans.PropertyValue",
      "org.springframework.data.auditing.CurrentDateTimeProvider",
      "org.springframework.beans.factory.config.RuntimeBeanReference",
      "org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder",
      "org.springframework.data.config.ParsingUtils",
      "org.springframework.data.repository.config.RepositoryConfigurationSourceSupport",
      "org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource",
      "org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport",
      "org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension",
      "org.springframework.data.repository.config.RepositoryConfigurationUtils",
      "org.springframework.data.repository.config.RepositoryConfigurationDelegate",
      "org.springframework.data.repository.config.RepositoryBeanNameGenerator",
      "org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder",
      "org.springframework.data.repository.config.CustomRepositoryImplementationDetector",
      "org.springframework.data.repository.config.RepositoryComponentProvider",
      "org.springframework.data.repository.config.RepositoryComponentProvider$InterfaceTypeFilter",
      "org.springframework.aop.config.AopConfigUtils",
      "org.springframework.asm.Attribute",
      "org.postgresql.jdbc3.Jdbc3ConnectionPool",
      "org.springframework.beans.BeanInstantiationException",
      "org.springframework.beans.factory.BeanCreationException",
      "org.postgresql.ds.PGPooledConnection",
      "org.springframework.core.env.PropertySource$StubPropertySource",
      "org.springframework.core.env.PropertySource$ComparisonPropertySource",
      "com.codahale.metrics.InstrumentedThreadFactory$InstrumentedRunnable",
      "com.zaxxer.hikari.util.PropertyElf",
      "org.springframework.core.io.ClassRelativeResourceLoader",
      "org.springframework.util.concurrent.ListenableFutureTask",
      "org.springframework.core.io.FileSystemResource",
      "org.h2.command.ddl.CreateTableData",
      "org.springframework.context.support.GenericGroovyApplicationContext",
      "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader",
      "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$1",
      "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader$2",
      "org.springframework.beans.factory.parsing.BeanDefinitionParsingException",
      "org.springframework.beans.factory.parsing.Problem",
      "org.springframework.beans.factory.parsing.Location",
      "org.h2.jdbcx.JdbcXAConnection"
    );
  }
}
