/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Mar 25 01:46:03 GMT 2021
 */

package com.unifacisa.tcc.web.rest.util;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class PaginationUtil_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.unifacisa.tcc.web.rest.util.PaginationUtil"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/cassioegc/tcc/tcc-manager"); 
    java.lang.System.setProperty("user.home", "/home/cassioegc"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "cassioegc"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(PaginationUtil_ESTest_scaffolding.class.getClassLoader() ,
      "org.springframework.web.util.UriComponentsBuilder",
      "org.springframework.web.util.HierarchicalUriComponents$1",
      "org.springframework.http.HttpRequest",
      "com.unifacisa.tcc.web.rest.util.PaginationUtil",
      "org.springframework.web.util.UriComponentsBuilder$FullPathComponentBuilder",
      "org.springframework.data.domain.Sort$Direction",
      "org.springframework.util.MimeType",
      "org.springframework.web.util.HierarchicalUriComponents",
      "org.springframework.data.domain.Pageable",
      "org.springframework.data.domain.Sort",
      "org.springframework.http.HttpMessage",
      "org.springframework.web.util.HierarchicalUriComponents$QueryUriTemplateVariables",
      "org.springframework.web.util.HierarchicalUriComponents$Type$11",
      "org.springframework.web.util.HierarchicalUriComponents$Type$12",
      "org.springframework.web.util.HierarchicalUriComponents$Type$10",
      "org.springframework.http.HttpHeaders",
      "org.springframework.http.MediaType",
      "org.springframework.web.util.UriComponents$UriTemplateVariables",
      "org.springframework.data.domain.Page",
      "org.springframework.web.util.HierarchicalUriComponents$FullPathComponent",
      "org.springframework.data.domain.Slice",
      "org.springframework.data.domain.Sort$NullHandling",
      "org.springframework.web.util.UriComponentsBuilder$CompositePathComponentBuilder",
      "org.springframework.web.util.UriComponentsBuilder$PathSegmentComponentBuilder",
      "org.springframework.util.CollectionUtils",
      "org.springframework.web.util.HierarchicalUriComponents$Type",
      "org.springframework.web.util.OpaqueUriComponents",
      "org.springframework.util.LinkedCaseInsensitiveMap",
      "org.springframework.http.MediaType$1",
      "org.springframework.http.MediaType$2",
      "org.springframework.web.util.UriComponentsBuilder$PathComponentBuilder",
      "org.springframework.web.util.HierarchicalUriComponents$PathComponent",
      "org.springframework.web.util.HierarchicalUriComponents$Type$8",
      "org.springframework.web.util.HierarchicalUriComponents$Type$9",
      "org.springframework.util.MimeType$SpecificityComparator",
      "org.springframework.web.util.HierarchicalUriComponents$PathSegmentComponent",
      "org.springframework.web.util.HierarchicalUriComponents$Type$4",
      "org.springframework.web.util.HierarchicalUriComponents$PathComponentComposite",
      "org.springframework.web.util.HierarchicalUriComponents$Type$5",
      "org.springframework.web.util.HierarchicalUriComponents$Type$6",
      "org.springframework.web.util.HierarchicalUriComponents$Type$7",
      "org.springframework.core.convert.converter.Converter",
      "org.springframework.util.InvalidMimeTypeException",
      "org.springframework.web.util.HierarchicalUriComponents$Type$1",
      "org.springframework.web.util.HierarchicalUriComponents$Type$2",
      "org.springframework.web.util.HierarchicalUriComponents$Type$3",
      "org.springframework.util.ObjectUtils",
      "org.springframework.http.HttpMethod",
      "org.springframework.util.MultiValueMap",
      "org.springframework.util.MimeTypeUtils",
      "org.springframework.data.domain.Sort$Order",
      "org.springframework.util.CollectionUtils$MultiValueMapAdapter",
      "org.springframework.util.LinkedCaseInsensitiveMap$1",
      "org.springframework.http.InvalidMediaTypeException",
      "org.springframework.util.LinkedMultiValueMap",
      "org.springframework.util.Assert",
      "org.springframework.web.util.UriComponents",
      "org.springframework.util.StringUtils"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.springframework.data.domain.Page", false, PaginationUtil_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(PaginationUtil_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.unifacisa.tcc.web.rest.util.PaginationUtil",
      "org.springframework.web.util.UriComponentsBuilder",
      "org.springframework.http.HttpHeaders",
      "org.springframework.util.LinkedCaseInsensitiveMap",
      "org.springframework.util.LinkedCaseInsensitiveMap$1",
      "org.springframework.util.Assert",
      "org.springframework.util.LinkedMultiValueMap",
      "org.springframework.web.util.UriComponentsBuilder$CompositePathComponentBuilder",
      "org.springframework.util.StringUtils",
      "org.springframework.util.ObjectUtils",
      "org.springframework.web.util.UriComponents",
      "org.springframework.web.util.HierarchicalUriComponents$1",
      "org.springframework.web.util.HierarchicalUriComponents",
      "org.springframework.util.CollectionUtils",
      "org.springframework.util.CollectionUtils$MultiValueMapAdapter",
      "org.springframework.web.util.HierarchicalUriComponents$Type",
      "org.springframework.http.HttpMethod",
      "org.springframework.web.util.UriComponentsBuilder$FullPathComponentBuilder",
      "org.springframework.web.util.HierarchicalUriComponents$FullPathComponent"
    );
  }
}
