/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 25 02:21:36 GMT 2021
 */

package com.unifacisa.tcc.web.rest.vm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ch.qos.logback.classic.Logger;
import ch.qos.logback.classic.LoggerContext;
import com.unifacisa.tcc.web.rest.vm.LoggerVM;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LoggerVM_ESTest extends LoggerVM_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LoggerVM loggerVM0 = new LoggerVM();
      String string0 = loggerVM0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      LoggerVM loggerVM0 = new LoggerVM();
      loggerVM0.setName("5ltTSR3W_guWl$:");
      String string0 = loggerVM0.getName();
      assertEquals("5ltTSR3W_guWl$:", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      LoggerVM loggerVM0 = new LoggerVM();
      String string0 = loggerVM0.getLevel();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      LoggerVM loggerVM0 = null;
      try {
        loggerVM0 = new LoggerVM((Logger) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.web.rest.vm.LoggerVM", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Logger logger0 = loggerContext0.getLogger("");
      LoggerVM loggerVM0 = new LoggerVM(logger0);
      String string0 = loggerVM0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Logger logger0 = loggerContext0.getLogger("");
      LoggerVM loggerVM0 = new LoggerVM(logger0);
      String string0 = loggerVM0.getLevel();
      assertEquals("DEBUG", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      LoggerContext loggerContext0 = new LoggerContext();
      Logger logger0 = loggerContext0.getLogger("");
      LoggerVM loggerVM0 = new LoggerVM(logger0);
      loggerVM0.setLevel("");
      String string0 = loggerVM0.getLevel();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      LoggerVM loggerVM0 = new LoggerVM();
      String string0 = loggerVM0.toString();
      assertEquals("LoggerVM{name='null', level='null'}", string0);
  }
}
