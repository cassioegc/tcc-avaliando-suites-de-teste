/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 25 01:56:52 GMT 2021
 */

package com.unifacisa.tcc.web.rest;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.unifacisa.tcc.domain.Aluno;
import com.unifacisa.tcc.repository.AlunoRepository;
import com.unifacisa.tcc.web.rest.AlunoResource;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.springframework.http.ResponseEntity;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class AlunoResource_ESTest extends AlunoResource_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Aluno aluno0 = mock(Aluno.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(aluno0).toString();
      AlunoRepository alunoRepository0 = mock(AlunoRepository.class, new ViolatedAssumptionAnswer());
      doReturn(aluno0).when(alunoRepository0).findOne(anyLong());
      AlunoResource alunoResource0 = new AlunoResource(alunoRepository0);
      Long long0 = new Long((-1L));
      ResponseEntity<Aluno> responseEntity0 = alunoResource0.getAluno(long0);
      assertEquals(200, responseEntity0.getStatusCodeValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AlunoResource alunoResource0 = new AlunoResource((AlunoRepository) null);
      Long long0 = new Long((-1L));
      // Undeclared exception!
      try {
        alunoResource0.getAluno(long0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.web.rest.AlunoResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AlunoResource alunoResource0 = new AlunoResource((AlunoRepository) null);
      // Undeclared exception!
      try {
        alunoResource0.getAllAlunos();
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.web.rest.AlunoResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      AlunoResource alunoResource0 = new AlunoResource((AlunoRepository) null);
      Long long0 = new Long((-2110L));
      // Undeclared exception!
      try {
        alunoResource0.deleteAluno(long0);
        fail("Expecting exception: NullPointerException");

      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.unifacisa.tcc.web.rest.AlunoResource", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AlunoRepository alunoRepository0 = mock(AlunoRepository.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(alunoRepository0).findAll();
      AlunoResource alunoResource0 = new AlunoResource(alunoRepository0);
      List<Aluno> list0 = alunoResource0.getAllAlunos();
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      AlunoRepository alunoRepository0 = mock(AlunoRepository.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(alunoRepository0).findOne(anyLong());
      AlunoResource alunoResource0 = new AlunoResource(alunoRepository0);
      Long long0 = new Long(0L);
      ResponseEntity<Aluno> responseEntity0 = alunoResource0.getAluno(long0);
      assertEquals(404, responseEntity0.getStatusCodeValue());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      AlunoRepository alunoRepository0 = mock(AlunoRepository.class, new ViolatedAssumptionAnswer());
      AlunoResource alunoResource0 = new AlunoResource(alunoRepository0);
      Long long0 = new Long((-2953L));
      ResponseEntity<Void> responseEntity0 = alunoResource0.deleteAluno(long0);
      assertEquals(200, responseEntity0.getStatusCodeValue());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      AlunoRepository alunoRepository0 = mock(AlunoRepository.class, new ViolatedAssumptionAnswer());
      AlunoResource alunoResource0 = new AlunoResource(alunoRepository0);
      Long long0 = new Long(3116L);
      Aluno aluno0 = mock(Aluno.class, new ViolatedAssumptionAnswer());
      doReturn(long0).when(aluno0).getId();
      ResponseEntity<Aluno> responseEntity0 = alunoResource0.createAluno(aluno0);
      assertEquals(400, responseEntity0.getStatusCodeValue());
  }
}
