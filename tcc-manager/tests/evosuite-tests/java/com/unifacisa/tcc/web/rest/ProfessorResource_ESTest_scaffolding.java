/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Mar 25 01:55:30 GMT 2021
 */

package com.unifacisa.tcc.web.rest;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class ProfessorResource_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.unifacisa.tcc.web.rest.ProfessorResource"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/cassioegc/tcc/tcc-manager"); 
    java.lang.System.setProperty("user.home", "/home/cassioegc"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "cassioegc"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ProfessorResource_ESTest_scaffolding.class.getClassLoader() ,
      "org.springframework.util.LinkedCaseInsensitiveMap",
      "com.unifacisa.tcc.web.rest.ProfessorResource",
      "org.springframework.web.bind.annotation.RequestMapping",
      "io.github.jhipster.web.util.ResponseUtil",
      "org.springframework.stereotype.Controller",
      "org.springframework.http.ResponseEntity$BodyBuilder",
      "org.springframework.data.repository.CrudRepository",
      "com.unifacisa.tcc.repository.ProfessorRepository",
      "org.springframework.data.repository.Repository",
      "com.unifacisa.tcc.web.rest.util.HeaderUtil",
      "org.springframework.data.domain.Sort",
      "org.springframework.data.domain.Pageable",
      "org.hibernate.cache.spi.access.AccessType",
      "com.unifacisa.tcc.domain.abstractions.Pessoa",
      "org.springframework.stereotype.Repository",
      "org.springframework.data.repository.PagingAndSortingRepository",
      "com.unifacisa.tcc.domain.Aluno",
      "org.springframework.http.HttpHeaders",
      "org.springframework.http.ResponseEntity$DefaultBuilder",
      "org.hibernate.cache.spi.access.UnknownAccessTypeException",
      "org.springframework.util.ObjectUtils",
      "com.unifacisa.tcc.domain.Professor",
      "org.springframework.web.bind.annotation.RequestMethod",
      "org.springframework.util.MultiValueMap",
      "org.hibernate.annotations.CacheConcurrencyStrategy",
      "org.springframework.data.domain.Page",
      "org.springframework.data.domain.Example",
      "org.springframework.web.bind.annotation.ResponseBody",
      "org.springframework.web.bind.annotation.RestController",
      "org.hibernate.annotations.Cache",
      "org.springframework.data.domain.Slice",
      "org.springframework.util.LinkedCaseInsensitiveMap$1",
      "org.springframework.data.repository.query.QueryByExampleExecutor",
      "org.springframework.http.HttpStatus",
      "org.springframework.http.HttpEntity",
      "org.springframework.stereotype.Component",
      "org.springframework.http.ResponseEntity",
      "org.springframework.http.ResponseEntity$HeadersBuilder",
      "org.hibernate.HibernateException",
      "org.springframework.data.jpa.repository.JpaRepository",
      "org.springframework.web.bind.annotation.Mapping",
      "org.springframework.util.Assert"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("com.unifacisa.tcc.domain.Professor", false, ProfessorResource_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("com.unifacisa.tcc.repository.ProfessorRepository", false, ProfessorResource_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ProfessorResource_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.unifacisa.tcc.web.rest.ProfessorResource",
      "org.hibernate.cache.spi.access.AccessType",
      "org.hibernate.annotations.CacheConcurrencyStrategy",
      "org.springframework.http.HttpStatus",
      "com.unifacisa.tcc.web.rest.util.HeaderUtil",
      "org.springframework.http.HttpHeaders",
      "org.springframework.util.LinkedCaseInsensitiveMap",
      "org.springframework.util.LinkedCaseInsensitiveMap$1",
      "org.springframework.util.Assert",
      "org.springframework.http.HttpEntity",
      "org.springframework.http.ResponseEntity",
      "org.springframework.http.ResponseEntity$DefaultBuilder",
      "io.github.jhipster.web.util.ResponseUtil",
      "com.unifacisa.tcc.domain.abstractions.Pessoa",
      "com.unifacisa.tcc.domain.Professor",
      "com.unifacisa.tcc.domain.Aluno",
      "org.springframework.util.ObjectUtils"
    );
  }
}
