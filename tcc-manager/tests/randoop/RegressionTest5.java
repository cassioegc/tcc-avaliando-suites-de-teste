import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList32 = userMapper22.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper11.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList34 = userMapper0.userDTOsToUsers(userDTOList31);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user35);
        java.lang.String str37 = user35.getImageUrl();
        boolean boolean39 = user35.equals((java.lang.Object) (byte) -1);
        java.lang.String str40 = user35.getLastName();
        java.lang.String str41 = user35.getFirstName();
        java.time.Instant instant42 = user35.getResetDate();
        java.lang.String str43 = user35.getLogin();
        java.lang.String str44 = user35.getPassword();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = userMapper0.userToUserDTO(user35);
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        java.lang.String str48 = user46.getLastModifiedBy();
        user46.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str51 = user46.toString();
        com.unifacisa.tcc.domain.User user52 = new com.unifacisa.tcc.domain.User();
        java.lang.String str53 = user52.getCreatedBy();
        java.lang.String str54 = user52.getLastModifiedBy();
        user52.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        java.lang.String str58 = user57.getCreatedBy();
        user57.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO(user57);
        java.time.Instant instant62 = userDTO61.getLastModifiedDate();
        user52.setCreatedDate(instant62);
        user46.setResetDate(instant62);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = userMapper0.userToUserDTO(user46);
        java.lang.String str66 = user46.toString();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(userDTO45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str51, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertNotNull(userDTO65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str66, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.time.Instant instant12 = null;
        java.time.Instant instant14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant12, "error.validation", instant14, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str23 = managedUserVM22.toString();
        boolean boolean24 = authority0.equals((java.lang.Object) managedUserVM22);
        java.lang.String str25 = managedUserVM22.toString();
        managedUserVM22.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str25, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(instant7);
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.String str7 = socialUserConnection4.getProviderId();
        java.lang.Long long8 = socialUserConnection4.getId();
        socialUserConnection4.setRank((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.getLevel();
        java.lang.String str7 = loggerVM0.getLevel();
        java.lang.String str8 = loggerVM0.getLevel();
        loggerVM0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "error.validation" + "'", str6, "error.validation");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.validation" + "'", str7, "error.validation");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.Boolean boolean1 = professor0.isDiponibilidade();
        professor0.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertNull(boolean1);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.lang.String str4 = user0.getEmail();
        user0.setPassword("Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user3.getAuthorities();
        user0.setAuthorities(authoritySet9);
        user0.setLangKey("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        java.time.Instant instant13 = user0.getLastModifiedDate();
        user0.setLangKey("UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet9);
        org.junit.Assert.assertNotNull(instant13);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        java.lang.String str6 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str6, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLogin();
        user0.setLastName("");
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        java.lang.String str17 = user0.getEmail();
        java.lang.String str18 = user0.getImageUrl();
        java.lang.String str19 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent20 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant21 = persistentAuditEvent20.getAuditEventDate();
        java.lang.Long long22 = persistentAuditEvent20.getId();
        java.lang.String str23 = persistentAuditEvent20.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent24 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        java.lang.String str26 = user25.getCreatedBy();
        java.lang.String str27 = user25.getLangKey();
        java.time.Instant instant28 = user25.getCreatedDate();
        persistentAuditEvent24.setAuditEventDate(instant28);
        persistentAuditEvent20.setAuditEventDate(instant28);
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO32 = new com.unifacisa.tcc.service.dto.UserDTO(user31);
        java.lang.String str33 = user31.getImageUrl();
        boolean boolean35 = user31.equals((java.lang.Object) (byte) -1);
        java.lang.String str36 = user31.getLastName();
        java.time.Instant instant37 = user31.getCreatedDate();
        persistentAuditEvent20.setAuditEventDate(instant37);
        user0.setResetDate(instant37);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant37);
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor17.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        java.lang.String str39 = professor24.toString();
        java.lang.Long long40 = professor24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        java.lang.String str56 = professor41.toString();
        com.unifacisa.tcc.domain.Professor professor58 = professor41.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = professor58.primeiroNome("");
        professor58.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor63 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str71 = aluno70.getEmail();
        aluno70.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray74 = new com.unifacisa.tcc.domain.Aluno[] { aluno64, aluno65, aluno69, aluno70 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet75 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet75, alunoArray74);
        professor63.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Professor professor79 = professor24.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Professor professor80 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno86 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno87 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str88 = aluno87.getEmail();
        aluno87.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray91 = new com.unifacisa.tcc.domain.Aluno[] { aluno81, aluno82, aluno86, aluno87 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet92 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet92, alunoArray91);
        professor80.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        professor79.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        com.unifacisa.tcc.domain.Professor professor96 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet92);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet97 = null;
        com.unifacisa.tcc.domain.Professor professor98 = professor96.alunos(alunoSet97);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str39, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str56, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(alunoArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(alunoArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(professor96);
        org.junit.Assert.assertNotNull(professor98);
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.util.Set<java.lang.String> strSet24 = managedUserVM20.getAuthorities();
        java.lang.String str25 = managedUserVM20.getLastModifiedBy();
        java.lang.String str26 = managedUserVM20.getEmail();
        java.lang.String str27 = managedUserVM20.getPassword();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.validation" + "'", str25, "error.validation");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "error.validation" + "'", str26, "error.validation");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.concurrencyFailure" + "'", str27, "error.concurrencyFailure");
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.lang.String str4 = user0.getEmail();
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setLangKey("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setDisplayName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str10 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("error.concurrencyFailure");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        java.lang.String str12 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str12, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor8 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNull(professor8);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", (java.lang.Long) 100L, "LoggerVM{name='Authority{name='null'}', level='Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "User{login='null', firstName='null', lastName='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 0L);
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        professor3.setEmail("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("", "LoggerVM{name='', level='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", "Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", (java.lang.Long) 0L, "LoginVM{username='LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}', rememberMe=false}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='10', habilitadoTcc='true'}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}", (java.lang.Long) 0L);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='error.concurrencyFailure', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.String str2 = loginVM0.toString();
        java.lang.String str3 = loginVM0.getUsername();
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        java.lang.String str5 = loginVM0.toString();
        java.lang.String str6 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str2, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str5, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.time.Instant instant12 = null;
        java.time.Instant instant14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant12, "error.validation", instant14, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str23 = managedUserVM22.toString();
        boolean boolean24 = authority0.equals((java.lang.Object) managedUserVM22);
        java.lang.String str25 = authority0.toString();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str27 = professor26.getPrimeiroNome();
        java.lang.Boolean boolean28 = professor26.isDiponibilidade();
        java.lang.Long long29 = professor26.getId();
        com.unifacisa.tcc.domain.Professor professor30 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray41 = new com.unifacisa.tcc.domain.Aluno[] { aluno31, aluno32, aluno36, aluno37 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet42 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet42, alunoArray41);
        professor30.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet42);
        java.lang.String str45 = professor30.toString();
        com.unifacisa.tcc.domain.Professor professor47 = professor30.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor47.primeiroNome("");
        professor47.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor52 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str55 = aluno54.getEmail();
        aluno54.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno53, aluno54, aluno58, aluno59 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        professor52.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        professor47.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Professor professor68 = professor26.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        boolean boolean69 = authority0.equals((java.lang.Object) alunoSet64);
        java.lang.String str70 = authority0.getName();
        java.lang.String str71 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Authority{name='null'}" + "'", str25, "Authority{name='null'}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(alunoArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str45, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM17 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM17.setKey("error.concurrencyFailure");
        java.lang.String str20 = keyAndPasswordVM17.getNewPassword();
        boolean boolean21 = aluno0.equals((java.lang.Object) str20);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        java.lang.Boolean boolean39 = aluno37.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor40 = professor22.addAluno(aluno37);
        aluno37.setNumeroContato((java.lang.Long) 0L);
        boolean boolean43 = aluno0.equals((java.lang.Object) aluno37);
        com.unifacisa.tcc.domain.Professor professor44 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(professor44);
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getCreatedBy();
        java.time.Instant instant21 = managedUserVM19.getCreatedDate();
        boolean boolean22 = professor0.equals((java.lang.Object) managedUserVM19);
        managedUserVM19.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        aluno15.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str22 = professor21.getPrimeiroNome();
        java.lang.Boolean boolean23 = professor21.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor21.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno15.professor(professor21);
        aluno15.setEmail("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = aluno15.segundoNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        pessoa30.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertNotNull(pessoa30);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getKey();
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("");
        java.lang.String str14 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str15 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str9, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.concurrencyFailure" + "'", str10, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "error.concurrencyFailure" + "'", str15, "error.concurrencyFailure");
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        java.lang.Boolean boolean5 = aluno3.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor6 = aluno3.getProfessor();
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray18 = new com.unifacisa.tcc.domain.Aluno[] { aluno8, aluno9, aluno13, aluno14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet19 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet19, alunoArray18);
        professor7.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet19);
        java.lang.String str22 = professor7.toString();
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno25, aluno29, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = aluno3.professor(professor38);
        com.unifacisa.tcc.domain.Professor professor40 = aluno39.getProfessor();
        boolean boolean41 = authority0.equals((java.lang.Object) aluno39);
        authority0.setName("Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNull(professor6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(alunoArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str22, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(aluno39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        java.lang.String str12 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}" + "'", str12, "SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setUsername("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        loginVM0.setPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        loginVM0.setUsername("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.toString();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        user11.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = userDTO15.getLastModifiedDate();
        user6.setCreatedDate(instant16);
        user0.setResetDate(instant16);
        user0.setEmail("");
        java.lang.String str21 = user0.getCreatedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str21, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant17 = persistentAuditEvent16.getAuditEventDate();
        persistentAuditEvent16.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent20 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = persistentAuditEvent20.getData();
        persistentAuditEvent20.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long24 = persistentAuditEvent20.getId();
        java.lang.Long long25 = persistentAuditEvent20.getId();
        java.time.Instant instant26 = persistentAuditEvent20.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        persistentAuditEvent20.setData(strMap27);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent29 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant30 = persistentAuditEvent29.getAuditEventDate();
        java.lang.Long long31 = persistentAuditEvent29.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = persistentAuditEvent32.getData();
        persistentAuditEvent29.setData(strMap33);
        persistentAuditEvent20.setData(strMap33);
        persistentAuditEvent16.setData(strMap33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 1L);
        boolean boolean40 = user39.getActivated();
        java.time.Instant instant41 = user39.getLastModifiedDate();
        persistentAuditEvent16.setAuditEventDate(instant41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray45 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList46 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList46, userArray45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper44.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList46);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList54 = userMapper44.userDTOsToUsers(userDTOList53);
        com.unifacisa.tcc.domain.User user56 = userMapper44.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO(user56);
        java.time.Instant instant58 = userDTO57.getLastModifiedDate();
        java.time.Instant instant69 = null;
        java.time.Instant instant71 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet77 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet77, strArray76);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM79 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant69, "error.validation", instant71, (java.util.Set<java.lang.String>) strSet77);
        java.lang.String str80 = managedUserVM79.getFirstName();
        java.util.Set<java.lang.String> strSet81 = managedUserVM79.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant41, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant58, strSet81);
        user0.setCreatedDate(instant41);
        user0.setImageUrl("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str86 = user0.getEmail();
        java.lang.String str87 = user0.getImageUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNull(instant30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str87, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user1 = new com.unifacisa.tcc.domain.User();
        java.lang.String str2 = user1.getCreatedBy();
        java.lang.String str3 = user1.getLangKey();
        java.time.Instant instant4 = user1.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant4);
        java.lang.String str6 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user9);
        java.lang.String str11 = user9.getImageUrl();
        java.lang.String str12 = user9.getLangKey();
        user9.setLastModifiedBy("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = new com.unifacisa.tcc.service.dto.UserDTO(user15);
        java.lang.String str17 = user15.getImageUrl();
        java.lang.String str18 = user15.getLangKey();
        java.lang.String str19 = user15.getLogin();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        user20.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant23 = user20.getLastModifiedDate();
        user15.setLastModifiedDate(instant23);
        user9.setLastModifiedDate(instant23);
        persistentAuditEvent0.setAuditEventDate(instant23);
        java.lang.Long long27 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNull(long27);
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.Long long7 = socialUserConnection4.getExpireTime();
        java.lang.String str8 = socialUserConnection4.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        user0.setImageUrl("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.time.Instant instant9 = user0.getResetDate();
        java.lang.String str10 = user0.getLangKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        java.lang.String str6 = user3.getLangKey();
        java.lang.String str7 = user3.getLogin();
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        user8.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant11 = user8.getLastModifiedDate();
        user3.setLastModifiedDate(instant11);
        java.lang.String str13 = user3.getPassword();
        user3.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet16 = user3.getAuthorities();
        user0.setAuthorities(authoritySet16);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(authoritySet16);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getProviderId();
        java.lang.String str12 = socialUserConnection0.getAccessToken();
        java.lang.String str13 = socialUserConnection0.getImageURL();
        java.lang.Long long14 = socialUserConnection0.getId();
        java.lang.String str15 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str6 = user3.getLastName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.time.Instant instant8 = user3.getCreatedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLastName();
        user0.setLangKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='LoggerVM{name='', level='error.validation'}', activated='false', langKey='LoginVM{username='null', rememberMe=false}', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.lang.String str7 = user0.getLangKey();
        user0.setImageUrl("LoggerVM{name='null', level='error.validation'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("LoginVM{username='', rememberMe=null}");
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getPassword();
        java.time.Instant instant11 = user0.getResetDate();
        user0.setResetKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(instant11);
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str6, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getRefreshToken();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        java.lang.String str13 = user11.getLastModifiedBy();
        java.time.Instant instant14 = user11.getCreatedDate();
        java.lang.String str15 = user11.getLangKey();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) user11);
        java.lang.Class<?> wildcardClass17 = socialUserConnection0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor0.matricula((java.lang.Long) 1L);
        professor0.setSegundoNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        professor0.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno41, aluno42, aluno46, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        java.lang.String str55 = professor40.toString();
        professor40.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor62 = aluno58.getProfessor();
        com.unifacisa.tcc.domain.Professor professor63 = professor40.addAluno(aluno58);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa65 = professor40.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor66 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray77 = new com.unifacisa.tcc.domain.Aluno[] { aluno67, aluno68, aluno72, aluno73 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet78 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet78, alunoArray77);
        professor66.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str82 = aluno81.getEmail();
        java.lang.Boolean boolean83 = aluno81.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor84 = professor66.addAluno(aluno81);
        aluno81.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor87 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str88 = professor87.getPrimeiroNome();
        java.lang.Boolean boolean89 = professor87.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa91 = professor87.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno92 = aluno81.professor(professor87);
        aluno92.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor95 = professor40.addAluno(aluno92);
        com.unifacisa.tcc.domain.Professor professor96 = professor0.removeAluno(aluno92);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str55, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(professor62);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(pessoa65);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(alunoArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(professor84);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNotNull(pessoa91);
        org.junit.Assert.assertNotNull(aluno92);
        org.junit.Assert.assertNotNull(professor95);
        org.junit.Assert.assertNotNull(professor96);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str5, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.toString();
        com.unifacisa.tcc.domain.Professor professor5 = aluno3.getProfessor();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        com.unifacisa.tcc.domain.Professor professor22 = professor6.diponibilidade((java.lang.Boolean) true);
        java.lang.Long long23 = professor6.getMatricula();
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str25 = professor24.getPrimeiroNome();
        java.lang.Boolean boolean26 = professor24.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno30, aluno31, aluno35, aluno36 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        professor29.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        java.lang.Boolean boolean46 = aluno44.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor47 = professor29.addAluno(aluno44);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection52 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean53 = aluno48.equals((java.lang.Object) socialUserConnection52);
        socialUserConnection52.setRefreshToken("error.validation");
        socialUserConnection52.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean58 = aluno44.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor59 = professor24.removeAluno(aluno44);
        com.unifacisa.tcc.domain.Professor professor60 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str61 = professor60.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor63 = professor60.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa65 = professor63.primeiroNome("error.concurrencyFailure");
        aluno44.setProfessor(professor63);
        com.unifacisa.tcc.domain.Professor professor67 = professor6.addAluno(aluno44);
        com.unifacisa.tcc.domain.Aluno aluno68 = aluno3.professor(professor6);
        aluno0.setProfessor(professor6);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(pessoa65);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(aluno68);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.Boolean boolean6 = loginVM0.isRememberMe();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.String str8 = loginVM0.getPassword();
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        java.lang.String str10 = loginVM0.getUsername();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        java.lang.String str13 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getActivationKey();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.lang.Long long11 = persistentAuditEvent9.getId();
        java.lang.String str12 = persistentAuditEvent9.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        java.lang.String str16 = user14.getLangKey();
        java.time.Instant instant17 = user14.getCreatedDate();
        persistentAuditEvent13.setAuditEventDate(instant17);
        persistentAuditEvent9.setAuditEventDate(instant17);
        java.time.Instant instant20 = persistentAuditEvent9.getAuditEventDate();
        user0.setCreatedDate(instant20);
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        java.lang.String str33 = user32.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent34 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant35 = persistentAuditEvent34.getAuditEventDate();
        java.lang.Long long36 = persistentAuditEvent34.getId();
        java.lang.Long long37 = persistentAuditEvent34.getId();
        com.unifacisa.tcc.domain.User user38 = new com.unifacisa.tcc.domain.User();
        java.lang.String str39 = user38.getCreatedBy();
        java.lang.String str40 = user38.getLangKey();
        java.time.Instant instant41 = user38.getCreatedDate();
        persistentAuditEvent34.setAuditEventDate(instant41);
        user32.setResetDate(instant41);
        java.time.Instant instant44 = user32.getResetDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user47 = userMapper45.userFromId((java.lang.Long) 1L);
        boolean boolean48 = user47.getActivated();
        java.time.Instant instant49 = user47.getLastModifiedDate();
        user32.setLastModifiedDate(instant49);
        com.unifacisa.tcc.domain.User user52 = new com.unifacisa.tcc.domain.User();
        java.lang.String str53 = user52.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent54 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant55 = persistentAuditEvent54.getAuditEventDate();
        java.lang.Long long56 = persistentAuditEvent54.getId();
        java.lang.Long long57 = persistentAuditEvent54.getId();
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        java.lang.String str59 = user58.getCreatedBy();
        java.lang.String str60 = user58.getLangKey();
        java.time.Instant instant61 = user58.getCreatedDate();
        persistentAuditEvent54.setAuditEventDate(instant61);
        user52.setResetDate(instant61);
        java.util.Set<java.lang.String> strSet64 = null;
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM65 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='Authority{name='null'}', rememberMe=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}", "", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", false, "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='', level='null'}", "Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", instant49, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant61, strSet64);
        user0.setResetDate(instant49);
        user0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(instant55);
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(instant61);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        user3.setFirstName("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        boolean boolean14 = user3.getActivated();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.getLogin();
        java.lang.Long long4 = managedUserVM0.getId();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        java.lang.String str7 = managedUserVM0.toString();
        java.lang.String str8 = managedUserVM0.getLastModifiedBy();
        java.lang.String str9 = managedUserVM0.getEmail();
        java.time.Instant instant10 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.String str2 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "error.validation", "");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        java.lang.String str6 = fieldErrorVM3.getObjectName();
        java.lang.String str7 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.validation" + "'", str7, "error.validation");
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa2 = aluno0.matricula((java.lang.Long) 0L);
        java.lang.Long long3 = aluno0.getId();
        org.junit.Assert.assertNotNull(pessoa2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("error.concurrencyFailure");
        java.lang.String str3 = loggerVM0.toString();
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoggerVM{name='error.concurrencyFailure', level='null'}" + "'", str3, "LoggerVM{name='error.concurrencyFailure', level='null'}");
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        java.lang.Boolean boolean51 = aluno49.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor52 = professor34.addAluno(aluno49);
        aluno49.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str56 = professor55.getPrimeiroNome();
        java.lang.Boolean boolean57 = professor55.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa59 = professor55.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno49.professor(professor55);
        com.unifacisa.tcc.domain.Professor professor61 = professor0.removeAluno(aluno49);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa63 = professor0.primeiroNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        professor0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(pessoa59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(pessoa63);
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user5);
        java.lang.String str7 = user5.getImageUrl();
        java.lang.String str8 = user5.getLangKey();
        user5.setLastModifiedBy("");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.lang.String str13 = user11.getImageUrl();
        java.lang.String str14 = user11.getLangKey();
        java.lang.String str15 = user11.getLogin();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant19 = user16.getLastModifiedDate();
        user11.setLastModifiedDate(instant19);
        user5.setLastModifiedDate(instant19);
        boolean boolean22 = socialUserConnection0.equals((java.lang.Object) user5);
        java.lang.String str23 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str23, "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList35 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper0.userDTOsToUsers(userDTOList35);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray38 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList39 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList39, userArray38);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList41 = userMapper37.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList39);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray46 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList47 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList47, userArray46);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList49 = userMapper45.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper42.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper37.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList47);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user54 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        java.lang.String str56 = user55.getCreatedBy();
        java.lang.String str57 = user55.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        user58.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant61 = user58.getLastModifiedDate();
        user55.setCreatedDate(instant61);
        java.lang.String str63 = user55.getEmail();
        java.time.Instant instant64 = user55.getCreatedDate();
        com.unifacisa.tcc.domain.User user65 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO66 = new com.unifacisa.tcc.service.dto.UserDTO(user65);
        java.lang.String str67 = user65.getImageUrl();
        boolean boolean69 = user65.equals((java.lang.Object) (byte) -1);
        java.lang.String str70 = user65.getLastName();
        user65.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant73 = user65.getCreatedDate();
        java.lang.String str74 = user65.getLastModifiedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet75 = user65.getAuthorities();
        user55.setAuthorities(authoritySet75);
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = userMapper0.userToUserDTO(user55);
        java.lang.String str78 = user55.getCreatedBy();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userDTOList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(userDTOList41);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNotNull(userArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(userDTOList49);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(user54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(instant61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(instant73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(authoritySet75);
        org.junit.Assert.assertNotNull(userDTO77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO40 = new com.unifacisa.tcc.service.dto.UserDTO(user39);
        java.lang.String str41 = user39.getImageUrl();
        java.lang.String str42 = user39.getEmail();
        boolean boolean43 = user39.getActivated();
        java.time.Instant instant44 = user39.getResetDate();
        boolean boolean45 = aluno0.equals((java.lang.Object) user39);
        com.unifacisa.tcc.domain.Professor professor46 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str54 = aluno53.getEmail();
        aluno53.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray57 = new com.unifacisa.tcc.domain.Aluno[] { aluno47, aluno48, aluno52, aluno53 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet58 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet58, alunoArray57);
        professor46.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet58);
        java.lang.String str61 = professor46.toString();
        com.unifacisa.tcc.domain.Professor professor63 = professor46.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa65 = professor63.primeiroNome("");
        professor63.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor63.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str79 = aluno78.getEmail();
        aluno78.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno72, aluno73, aluno77, aluno78 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        professor71.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        aluno70.setProfessor(professor71);
        java.lang.String str87 = aluno70.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa89 = aluno70.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor90 = professor63.removeAluno(aluno70);
        professor90.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa94 = professor90.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno95 = aluno0.professor(professor90);
        java.lang.String str96 = aluno0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(alunoArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str61, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(pessoa65);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa89);
        org.junit.Assert.assertNotNull(professor90);
        org.junit.Assert.assertNotNull(pessoa94);
        org.junit.Assert.assertNotNull(aluno95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        aluno0.setMatricula((java.lang.Long) 1L);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.String str8 = loginVM0.getUsername();
        java.lang.String str9 = loginVM0.getPassword();
        loginVM0.setUsername("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        loginVM0.setPassword("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setPassword("LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = socialUserConnection4.getAccessToken();
        socialUserConnection4.setUserId("SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.util.Set<java.lang.String> strSet22 = managedUserVM20.getAuthorities();
        java.lang.String str23 = managedUserVM20.getFirstName();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList15 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource16 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList17 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList18 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList19 = logsResource16.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str21 = loggerVM20.getName();
        loggerVM20.setLevel("error.validation");
        java.lang.String str24 = loggerVM20.getLevel();
        java.lang.String str25 = loggerVM20.toString();
        java.lang.String str26 = loggerVM20.toString();
        loggerVM20.setName("error.concurrencyFailure");
        java.lang.String str29 = loggerVM20.getName();
        logsResource16.changeLevel(loggerVM20);
        logsResource0.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM32 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str33 = loggerVM32.getName();
        loggerVM32.setLevel("error.validation");
        java.lang.String str36 = loggerVM32.getLevel();
        java.lang.String str37 = loggerVM32.toString();
        java.lang.String str38 = loggerVM32.toString();
        loggerVM32.setName("");
        java.lang.String str41 = loggerVM32.toString();
        logsResource0.changeLevel(loggerVM32);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList43 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList44 = logsResource0.getList();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(loggerVMList15);
        org.junit.Assert.assertNotNull(loggerVMList17);
        org.junit.Assert.assertNotNull(loggerVMList18);
        org.junit.Assert.assertNotNull(loggerVMList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.validation" + "'", str24, "error.validation");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str25, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str26, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "error.concurrencyFailure" + "'", str29, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.validation" + "'", str36, "error.validation");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str37, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str38, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LoggerVM{name='', level='error.validation'}" + "'", str41, "LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertNotNull(loggerVMList43);
        org.junit.Assert.assertNotNull(loggerVMList44);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getEmail();
        user0.setLastModifiedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent17 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long18 = persistentAuditEvent17.getId();
        persistentAuditEvent17.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long21 = persistentAuditEvent17.getId();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.getCreatedBy();
        user22.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant26 = user22.getLastModifiedDate();
        persistentAuditEvent17.setAuditEventDate(instant26);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        java.lang.String str31 = user29.toString();
        java.time.Instant instant32 = user29.getLastModifiedDate();
        java.time.Instant instant43 = null;
        java.time.Instant instant45 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant43, "error.validation", instant45, (java.util.Set<java.lang.String>) strSet51);
        java.lang.String str54 = managedUserVM53.getFirstName();
        java.lang.String str55 = managedUserVM53.getCreatedBy();
        java.util.Set<java.lang.String> strSet56 = managedUserVM53.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "LoggerVM{name='null', level='error.validation'}", "", "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", false, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "Authority{name=''}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", instant26, "error.concurrencyFailure", instant32, strSet56);
        user0.setCreatedDate(instant26);
        com.unifacisa.tcc.domain.User user59 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = new com.unifacisa.tcc.service.dto.UserDTO(user59);
        java.lang.String str61 = user59.toString();
        com.unifacisa.tcc.domain.User user62 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO(user62);
        java.lang.String str64 = user62.getImageUrl();
        boolean boolean66 = user62.equals((java.lang.Object) (byte) -1);
        java.lang.String str67 = user62.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet68 = user62.getAuthorities();
        user59.setAuthorities(authoritySet68);
        java.lang.String str70 = user59.toString();
        boolean boolean71 = user59.getActivated();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet72 = user59.getAuthorities();
        user0.setAuthorities(authoritySet72);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str61, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(authoritySet68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str70, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(authoritySet72);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "LoggerVM{name='null', level='error.validation'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        java.lang.String str5 = fieldErrorVM3.getField();
        java.lang.String str6 = fieldErrorVM3.getObjectName();
        java.lang.String str7 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str7, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user10 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user14 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant26, "error.validation", instant28, (java.util.Set<java.lang.String>) strSet34);
        java.lang.String str37 = managedUserVM36.getFirstName();
        java.lang.String str38 = managedUserVM36.getPassword();
        java.util.Set<java.lang.String> strSet39 = managedUserVM36.getAuthorities();
        java.util.Set<java.lang.String> strSet40 = managedUserVM36.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet41 = userMapper15.authoritiesFromStrings(strSet40);
        com.unifacisa.tcc.domain.User user43 = userMapper15.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user44);
        java.lang.String str46 = user44.toString();
        java.time.Instant instant47 = user44.getCreatedDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO49 = userMapper15.userToUserDTO(user44);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO(user44);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = userMapper0.userToUserDTO(user44);
        com.unifacisa.tcc.domain.User user53 = userMapper0.userFromId((java.lang.Long) 1L);
        user53.setEmail("SocialUserConnection{id=-1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}");
        user53.setActivationKey("Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(authoritySet41);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str46, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNotNull(userDTO49);
        org.junit.Assert.assertNotNull(userDTO51);
        org.junit.Assert.assertNotNull(user53);
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.getCreatedBy();
        user19.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant23 = user19.getLastModifiedDate();
        boolean boolean24 = professor0.equals((java.lang.Object) instant23);
        professor0.setSegundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.lang.String str1 = userDTO0.getImageUrl();
        java.time.Instant instant2 = userDTO0.getCreatedDate();
        java.lang.String str3 = userDTO0.getImageUrl();
        java.time.Instant instant4 = userDTO0.getLastModifiedDate();
        java.lang.String str5 = userDTO0.getFirstName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str6 = loggerVM0.toString();
        java.lang.String str7 = loggerVM0.getLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str6, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("");
        java.lang.String str9 = loggerVM0.toString();
        java.lang.String str10 = loggerVM0.toString();
        loggerVM0.setLevel("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str13 = loggerVM0.toString();
        java.lang.String str14 = loggerVM0.getLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='', level='error.validation'}" + "'", str9, "LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='', level='error.validation'}" + "'", str10, "LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoggerVM{name='', level='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str13, "LoggerVM{name='', level='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str14, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.lang.String str2 = managedUserVM0.getPassword();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        java.lang.Long long20 = professor17.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        java.lang.Boolean boolean38 = aluno36.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor39 = professor21.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = aluno36.getProfessor();
        java.lang.String str42 = aluno36.getEmail();
        com.unifacisa.tcc.domain.Professor professor43 = professor17.addAluno(aluno36);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = professor43.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(pessoa45);
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        socialUserConnection0.setRank((java.lang.Long) 0L);
        socialUserConnection0.setRank((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant4 = user0.getLastModifiedDate();
        user0.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setCreatedBy("error.concurrencyFailure");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user0.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        userDTO10.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNotNull(authoritySet9);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray22 = new com.unifacisa.tcc.domain.Aluno[] { aluno12, aluno13, aluno17, aluno18 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet23 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet23, alunoArray22);
        professor11.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet23);
        java.lang.String str26 = professor11.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor11.getAlunos();
        java.time.Instant instant37 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant50 = null;
        java.time.Instant instant52 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM60 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant50, "error.validation", instant52, (java.util.Set<java.lang.String>) strSet58);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant37, "", instant39, (java.util.Set<java.lang.String>) strSet58);
        java.lang.String str62 = userDTO61.getLastName();
        java.lang.String str63 = userDTO61.getEmail();
        userDTO61.setId((java.lang.Long) 0L);
        java.lang.String str66 = userDTO61.getImageUrl();
        userDTO61.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean69 = professor11.equals((java.lang.Object) userDTO61);
        boolean boolean70 = socialUserConnection0.equals((java.lang.Object) userDTO61);
        java.lang.String str71 = userDTO61.getLastName();
        java.lang.String str72 = userDTO61.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet73 = userDTO61.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(alunoArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str26, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "error.concurrencyFailure" + "'", str62, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "error.concurrencyFailure" + "'", str63, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "error.concurrencyFailure" + "'", str71, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(strSet73);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user3.getAuthorities();
        user0.setAuthorities(authoritySet9);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.Long long13 = persistentAuditEvent11.getId();
        java.lang.String str14 = persistentAuditEvent11.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.getCreatedBy();
        java.lang.String str18 = user16.getLangKey();
        java.time.Instant instant19 = user16.getCreatedDate();
        persistentAuditEvent15.setAuditEventDate(instant19);
        persistentAuditEvent11.setAuditEventDate(instant19);
        user0.setCreatedDate(instant19);
        com.unifacisa.tcc.domain.User user23 = new com.unifacisa.tcc.domain.User();
        java.lang.String str24 = user23.getCreatedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet25 = user23.getAuthorities();
        user0.setAuthorities(authoritySet25);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(authoritySet25);
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getImageUrl();
        java.lang.String str36 = userDTO33.getCreatedBy();
        java.lang.String str37 = userDTO33.getImageUrl();
        java.lang.String str38 = userDTO33.getLastModifiedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.concurrencyFailure" + "'", str36, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = null;
        user0.setLastModifiedDate(instant2);
        java.lang.String str4 = user0.getEmail();
        java.lang.String str5 = user0.getCreatedBy();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        java.lang.String str8 = user6.getImageUrl();
        user6.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.time.Instant instant20 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM43 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant33, "error.validation", instant35, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant20, "", instant22, (java.util.Set<java.lang.String>) strSet41);
        java.lang.String str45 = userDTO44.getLastModifiedBy();
        java.time.Instant instant46 = userDTO44.getLastModifiedDate();
        boolean boolean47 = user6.equals((java.lang.Object) userDTO44);
        user6.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        java.lang.String str51 = user50.getCreatedBy();
        java.lang.String str52 = user50.getLastModifiedBy();
        java.lang.String str53 = user50.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent54 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant55 = persistentAuditEvent54.getAuditEventDate();
        java.lang.String str56 = persistentAuditEvent54.getPrincipal();
        persistentAuditEvent54.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent59 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user60 = new com.unifacisa.tcc.domain.User();
        java.lang.String str61 = user60.getCreatedBy();
        java.lang.String str62 = user60.getLangKey();
        java.time.Instant instant63 = user60.getCreatedDate();
        persistentAuditEvent59.setAuditEventDate(instant63);
        persistentAuditEvent54.setAuditEventDate(instant63);
        user50.setLastModifiedDate(instant63);
        user6.setCreatedDate(instant63);
        user0.setResetDate(instant63);
        user0.setFirstName("User{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(instant55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(instant63);
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList8 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user9);
        java.lang.String str11 = user9.getImageUrl();
        boolean boolean13 = user9.equals((java.lang.Object) (byte) -1);
        java.lang.String str14 = user9.getLastName();
        user9.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str17 = user9.getLastName();
        user9.setLastModifiedBy("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO20 = new com.unifacisa.tcc.service.dto.UserDTO(user9);
        user9.setImageUrl("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO23 = userMapper0.userToUserDTO(user9);
        java.time.Instant instant24 = user9.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userDTOList8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO23);
        org.junit.Assert.assertNotNull(instant24);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setAuditEventType("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        java.util.Map<java.lang.String, java.lang.String> strMap3 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        keyAndPasswordVM0.setNewPassword("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:05.135Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:05.135Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet16 = professor0.getAlunos();
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        java.lang.String str51 = userDTO50.getLastName();
        java.lang.String str52 = userDTO50.getEmail();
        userDTO50.setId((java.lang.Long) 0L);
        java.lang.String str55 = userDTO50.getImageUrl();
        userDTO50.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean58 = professor0.equals((java.lang.Object) userDTO50);
        professor0.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Long long61 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor62 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str70 = aluno69.getEmail();
        aluno69.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray73 = new com.unifacisa.tcc.domain.Aluno[] { aluno63, aluno64, aluno68, aluno69 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet74 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet74, alunoArray73);
        professor62.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet74);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str78 = aluno77.getEmail();
        java.lang.Boolean boolean79 = aluno77.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor80 = professor62.addAluno(aluno77);
        aluno77.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor83 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str84 = professor83.getPrimeiroNome();
        java.lang.Boolean boolean85 = professor83.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa87 = professor83.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno88 = aluno77.professor(professor83);
        com.unifacisa.tcc.domain.Professor professor89 = professor0.addAluno(aluno77);
        java.lang.String str90 = aluno77.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet16);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "error.concurrencyFailure" + "'", str51, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "error.concurrencyFailure" + "'", str52, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(alunoArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(pessoa87);
        org.junit.Assert.assertNotNull(aluno88);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}" + "'", str90, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.String str7 = loginVM0.getPassword();
        loginVM0.setPassword("Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str10 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str10, "Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = professor35.addAluno(aluno36);
        professor41.setEmail("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = professor41.matricula((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(pessoa45);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getPassword();
        java.lang.String str5 = managedUserVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        java.lang.String str10 = socialUserConnection0.getImageURL();
        java.lang.String str11 = socialUserConnection0.toString();
        java.lang.Long long12 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str50 = aluno32.toString();
        com.unifacisa.tcc.domain.Professor professor51 = professor0.removeAluno(aluno32);
        com.unifacisa.tcc.domain.Professor professor53 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor55 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = professor0.segundoNome("");
        java.lang.Long long58 = professor0.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor0.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa61 = professor0.segundoNome("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long62 = professor0.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(pessoa57);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertNotNull(pessoa61);
        org.junit.Assert.assertNull(long62);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        java.lang.String str8 = user7.getCreatedBy();
        java.lang.String str9 = user7.getLangKey();
        com.unifacisa.tcc.domain.Professor professor10 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str18 = aluno17.getEmail();
        aluno17.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray21 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno12, aluno16, aluno17 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet22 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet22, alunoArray21);
        professor10.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet22);
        java.lang.String str25 = professor10.toString();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Professor professor41 = professor10.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        boolean boolean42 = user7.equals((java.lang.Object) professor10);
        java.lang.String str43 = user7.getLogin();
        user7.setId((java.lang.Long) 0L);
        java.time.Instant instant46 = user7.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant46);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str5, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(alunoArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str25, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(instant46);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        user0.setLangKey("Authority{name='null'}");
        java.lang.String str6 = user0.getEmail();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 1L);
        java.lang.String str10 = user9.getCreatedBy();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.lang.String str13 = user11.getImageUrl();
        java.lang.String str14 = user11.getLangKey();
        user11.setLastModifiedBy("");
        user11.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str19 = user11.getLastName();
        java.lang.String str20 = user11.getLastModifiedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent21 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant22 = persistentAuditEvent21.getAuditEventDate();
        java.lang.Long long23 = persistentAuditEvent21.getId();
        java.lang.Long long24 = persistentAuditEvent21.getId();
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        java.lang.String str26 = user25.getCreatedBy();
        java.lang.String str27 = user25.getLangKey();
        java.time.Instant instant28 = user25.getCreatedDate();
        persistentAuditEvent21.setAuditEventDate(instant28);
        java.time.Instant instant30 = persistentAuditEvent21.getAuditEventDate();
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO32 = new com.unifacisa.tcc.service.dto.UserDTO(user31);
        java.lang.String str33 = user31.getImageUrl();
        java.lang.String str34 = user31.getLangKey();
        user31.setLastModifiedBy("");
        user31.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant39 = user31.getCreatedDate();
        persistentAuditEvent21.setAuditEventDate(instant39);
        user11.setLastModifiedDate(instant39);
        user9.setLastModifiedDate(instant39);
        user0.setCreatedDate(instant39);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str19, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(instant39);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.getLogin();
        java.lang.String str4 = managedUserVM0.getLastName();
        java.lang.String str5 = managedUserVM0.getLastModifiedBy();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Professor professor37 = aluno36.getProfessor();
        java.lang.Boolean boolean38 = professor37.isDiponibilidade();
        professor37.setNumeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = professor37.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(pessoa42);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.String str2 = aluno0.toString();
        aluno0.setSegundoNome("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str2, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str4 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        java.time.Instant instant8 = user0.getResetDate();
        user0.setLangKey("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        user0.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='Authority{name='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getFirstName();
        java.lang.String str38 = userDTO33.getCreatedBy();
        java.lang.String str39 = userDTO33.getLangKey();
        java.lang.String str40 = userDTO33.getLogin();
        java.util.Set<java.lang.String> strSet41 = userDTO33.getAuthorities();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.validation" + "'", str39, "error.validation");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(strSet41);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray47 = new com.unifacisa.tcc.domain.Aluno[] { aluno37, aluno38, aluno42, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet48 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet48, alunoArray47);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        java.lang.Boolean boolean53 = aluno51.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor54 = professor36.addAluno(aluno51);
        com.unifacisa.tcc.domain.Professor professor55 = aluno51.getProfessor();
        com.unifacisa.tcc.domain.Professor professor56 = aluno51.getProfessor();
        java.lang.String str57 = aluno51.getEmail();
        com.unifacisa.tcc.domain.Professor professor58 = professor3.addAluno(aluno51);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = professor58.email("LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(alunoArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = user0.getImageUrl();
        java.lang.String str6 = user0.getLogin();
        user0.setLastModifiedBy("");
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str11 = user0.toString();
        user0.setId((java.lang.Long) 10L);
        boolean boolean15 = user0.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user0.setPassword("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str18 = user0.getLogin();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str11, "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        persistentAuditEvent0.setData(strMap4);
        java.lang.String str6 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user13 = userMapper0.userFromId((java.lang.Long) (-1L));
        user13.setLangKey("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user13.setLastName("LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNotNull(user13);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getLangKey();
        java.time.Instant instant11 = user9.getCreatedDate();
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM33 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant23, "error.validation", instant25, (java.util.Set<java.lang.String>) strSet31);
        java.lang.String str34 = managedUserVM33.getFirstName();
        java.lang.String str35 = managedUserVM33.getPassword();
        java.lang.String str36 = managedUserVM33.getLastModifiedBy();
        managedUserVM33.setId((java.lang.Long) (-1L));
        java.time.Instant instant39 = managedUserVM33.getLastModifiedDate();
        managedUserVM33.setLogin("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent42 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant43 = persistentAuditEvent42.getAuditEventDate();
        persistentAuditEvent42.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        java.lang.String str48 = user46.getLastModifiedBy();
        user46.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user46.setLangKey("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user55 = userMapper53.userFromId((java.lang.Long) 1L);
        boolean boolean56 = user55.getActivated();
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        java.lang.String str58 = user57.getCreatedBy();
        java.lang.String str59 = user57.getLangKey();
        java.time.Instant instant60 = user57.getCreatedDate();
        user55.setResetDate(instant60);
        boolean boolean62 = user46.equals((java.lang.Object) instant60);
        persistentAuditEvent42.setAuditEventDate(instant60);
        managedUserVM33.setLastModifiedDate(instant60);
        java.util.Set<java.lang.String> strSet65 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO66 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}', rememberMe=false}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant11, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant60, strSet65);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.validation" + "'", str36, "error.validation");
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertNull(instant43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(instant60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastModifiedBy();
        java.lang.String str4 = user0.getLogin();
        user0.setPassword("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoggerVM{name='error.concurrencyFailure', level='null'}", "LoggerVM{name='error.concurrencyFailure', level='null'}", "", (java.lang.Long) 100L, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", (java.lang.Long) 100L);
        socialUserConnection11.setImageURL("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        java.lang.String str31 = user29.toString();
        java.time.Instant instant32 = user29.getCreatedDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = userMapper0.userToUserDTO(user29);
        java.lang.Long long35 = userDTO34.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long37 = persistentAuditEvent36.getId();
        persistentAuditEvent36.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long40 = persistentAuditEvent36.getId();
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        java.lang.String str42 = user41.getCreatedBy();
        user41.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant45 = user41.getLastModifiedDate();
        persistentAuditEvent36.setAuditEventDate(instant45);
        userDTO34.setLastModifiedDate(instant45);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(userDTO34);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(instant45);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = aluno0.isHabilitadoTcc();
        java.lang.Boolean boolean6 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.segundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='10', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + true + "'", boolean5, true);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNotNull(pessoa8);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        java.time.Instant instant8 = user0.getResetDate();
        user0.setLangKey("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        user0.setPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        java.time.Instant instant13 = user0.getResetDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(instant13);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        java.lang.String str32 = aluno15.toString();
        aluno15.setPrimeiroNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        aluno15.setEmail("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor37 = null;
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno15.professor(professor37);
        java.lang.String str39 = aluno15.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str32, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str39, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.String str12 = socialUserConnection0.toString();
        java.lang.Long long13 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str12, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(long13);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        authority0.setName("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=100, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.matricula((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection6 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str7 = socialUserConnection6.getUserId();
        socialUserConnection6.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        boolean boolean10 = user0.equals((java.lang.Object) socialUserConnection6);
        user0.setActivationKey("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent4.getPrincipal();
        persistentAuditEvent4.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLangKey();
        java.time.Instant instant13 = user10.getCreatedDate();
        persistentAuditEvent9.setAuditEventDate(instant13);
        persistentAuditEvent4.setAuditEventDate(instant13);
        user0.setLastModifiedDate(instant13);
        user0.setResetKey("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setId((java.lang.Long) 10L);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("error.concurrencyFailure");
        java.lang.String str9 = loggerVM0.getLevel();
        java.lang.String str10 = loggerVM0.getName();
        loggerVM0.setName("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str13 = loggerVM0.getName();
        java.lang.String str14 = loggerVM0.getLevel();
        java.lang.String str15 = loggerVM0.getLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.concurrencyFailure" + "'", str10, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str13, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "error.validation" + "'", str14, "error.validation");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "error.validation" + "'", str15, "error.validation");
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "error.concurrencyFailure", "hi!");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getField();
        java.lang.String str6 = fieldErrorVM3.getObjectName();
        java.lang.String str7 = fieldErrorVM3.getObjectName();
        java.lang.String str8 = fieldErrorVM3.getObjectName();
        java.lang.String str9 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.concurrencyFailure" + "'", str4, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.concurrencyFailure" + "'", str9, "error.concurrencyFailure");
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        java.time.Instant instant39 = user0.getCreatedDate();
        user0.setPassword("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = aluno42.matricula((java.lang.Long) 0L);
        boolean boolean45 = user0.equals((java.lang.Object) aluno42);
        user0.setImageUrl("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        user0.setActivationKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str5 = user0.toString();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}");
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLogin();
        user0.setLastName("");
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        java.lang.String str17 = user0.getEmail();
        java.lang.String str18 = user0.getResetKey();
        java.lang.Long long19 = user0.getId();
        java.lang.Long long20 = user0.getId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertNull(long20);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant20 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant45 = null;
        java.time.Instant instant47 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant45, "error.validation", instant47, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant20, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant22, (java.util.Set<java.lang.String>) strSet53);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet58 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet53);
        boolean boolean59 = authority0.equals((java.lang.Object) userMapper6);
        java.lang.String str60 = authority0.toString();
        java.lang.String str61 = authority0.toString();
        authority0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(authoritySet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str60, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str61, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getImageUrl();
        java.lang.String str26 = managedUserVM20.getLastName();
        java.lang.String str27 = managedUserVM20.toString();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "error.concurrencyFailure" + "'", str26, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str27, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.lang.String str4 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent7 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long8 = persistentAuditEvent7.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str10 = persistentAuditEvent9.getPrincipal();
        java.lang.Long long11 = persistentAuditEvent9.getId();
        java.lang.String str12 = persistentAuditEvent9.getPrincipal();
        persistentAuditEvent9.setAuditEventType("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Map<java.lang.String, java.lang.String> strMap15 = persistentAuditEvent9.getData();
        persistentAuditEvent7.setData(strMap15);
        persistentAuditEvent0.setData(strMap15);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='null', rememberMe=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='10', email='null', numeroContato='100', habilitadoTcc='false'}", (java.lang.Long) (-1L), "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "UserDTO{login='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "", "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}", (java.lang.Long) 0L);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 1L);
        boolean boolean8 = user7.getActivated();
        java.time.Instant instant9 = user7.getLastModifiedDate();
        boolean boolean10 = socialUserConnection0.equals((java.lang.Object) instant9);
        java.lang.String str11 = socialUserConnection0.getUserId();
        socialUserConnection0.setRefreshToken("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        user37.setLangKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str47 = user37.getActivationKey();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet48 = user37.getAuthorities();
        java.time.Instant instant49 = user37.getResetDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(authoritySet48);
        org.junit.Assert.assertNull(instant49);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        java.lang.Long long16 = professor0.getMatricula();
        java.lang.String str17 = professor0.toString();
        java.lang.Boolean boolean18 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        java.lang.Boolean boolean36 = aluno34.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor37 = professor19.addAluno(aluno34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection42 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean43 = aluno38.equals((java.lang.Object) socialUserConnection42);
        socialUserConnection42.setRefreshToken("error.validation");
        socialUserConnection42.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean48 = aluno34.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str49 = aluno34.toString();
        com.unifacisa.tcc.domain.Aluno aluno51 = aluno34.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str52 = aluno34.toString();
        com.unifacisa.tcc.domain.Professor professor53 = professor0.addAluno(aluno34);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str17, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str49, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str52, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor53);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str6 = loginVM0.getUsername();
        java.lang.String str7 = loginVM0.getUsername();
        loginVM0.setUsername("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str6, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str10 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str11 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str12 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str10, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str11, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "error.concurrencyFailure" + "'", str12, "error.concurrencyFailure");
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        aluno7.setProfessor(professor8);
        com.unifacisa.tcc.domain.Professor professor27 = aluno7.getProfessor();
        aluno7.setPrimeiroNome("LoggerVM{name='null', level='error.validation'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa31 = aluno7.segundoNome("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper32 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user34 = userMapper32.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO(user34);
        boolean boolean36 = pessoa31.equals((java.lang.Object) userDTO35);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertNotNull(pessoa31);
        org.junit.Assert.assertNotNull(user34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setAccessToken("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        java.lang.String str13 = socialUserConnection0.getProfileURL();
        java.lang.String str14 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str14, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("", "hi!", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", (java.lang.Long) 0L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "error.validation", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=null}", "", (java.lang.Long) 0L);
        socialUserConnection11.setAccessToken("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str14 = socialUserConnection11.getRefreshToken();
        java.lang.String str15 = socialUserConnection11.getAccessToken();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str15, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user3.getAuthorities();
        user0.setAuthorities(authoritySet9);
        java.lang.String str11 = user0.toString();
        boolean boolean12 = user0.getActivated();
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO14 = new com.unifacisa.tcc.service.dto.UserDTO(user13);
        java.lang.String str15 = user13.getImageUrl();
        java.lang.String str16 = user13.getLangKey();
        java.lang.String str17 = user13.getLogin();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant21 = user18.getLastModifiedDate();
        user13.setLastModifiedDate(instant21);
        user0.setResetDate(instant21);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant21);
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        java.lang.String str8 = user6.getImageUrl();
        java.lang.String str9 = user6.getLangKey();
        user6.setLastModifiedBy("");
        user6.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        java.lang.String str16 = user14.getLastModifiedBy();
        user14.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str19 = user14.toString();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        java.lang.String str21 = user20.getCreatedBy();
        java.lang.String str22 = user20.getLastModifiedBy();
        user20.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        java.lang.String str26 = user25.getCreatedBy();
        user25.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO29 = new com.unifacisa.tcc.service.dto.UserDTO(user25);
        java.time.Instant instant30 = userDTO29.getLastModifiedDate();
        user20.setCreatedDate(instant30);
        user14.setResetDate(instant30);
        java.lang.String str33 = user14.getFirstName();
        java.lang.String str34 = user14.getLastName();
        java.time.Instant instant35 = user14.getLastModifiedDate();
        user6.setCreatedDate(instant35);
        persistentAuditEvent0.setAuditEventDate(instant35);
        java.lang.String str38 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str19, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str5 = user0.getLogin();
        java.lang.String str6 = user0.getCreatedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet7 = user0.getAuthorities();
        java.lang.String str8 = user0.getCreatedBy();
        user0.setEmail("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:05.135Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:05.135Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(authoritySet7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        aluno38.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection4.setRank((java.lang.Long) 10L);
        java.lang.Long long12 = socialUserConnection4.getId();
        java.lang.Long long13 = socialUserConnection4.getExpireTime();
        java.lang.String str14 = socialUserConnection4.getProviderId();
        java.lang.String str15 = socialUserConnection4.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}" + "'", str15, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getProviderId();
        java.lang.String str12 = socialUserConnection0.getAccessToken();
        java.lang.String str13 = socialUserConnection0.getSecret();
        java.lang.String str14 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setDisplayName("Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        java.lang.String str36 = professor35.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno39, aluno43, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        java.lang.Boolean boolean54 = aluno52.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor55 = professor37.addAluno(aluno52);
        com.unifacisa.tcc.domain.Professor professor56 = aluno52.getProfessor();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet57 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Professor professor58 = professor35.alunos(alunoSet57);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = null;
        com.unifacisa.tcc.domain.Professor professor60 = professor35.alunos(alunoSet59);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNotNull(alunoSet57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(professor60);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent2 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant3 = persistentAuditEvent2.getAuditEventDate();
        java.lang.Long long4 = persistentAuditEvent2.getId();
        java.lang.Long long5 = persistentAuditEvent2.getId();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.time.Instant instant9 = user6.getCreatedDate();
        persistentAuditEvent2.setAuditEventDate(instant9);
        user0.setResetDate(instant9);
        java.lang.String str12 = user0.getEmail();
        java.lang.String str13 = user0.getPassword();
        java.lang.Long long14 = user0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(long14);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user1 = new com.unifacisa.tcc.domain.User();
        java.lang.String str2 = user1.getCreatedBy();
        java.lang.String str3 = user1.getLangKey();
        java.time.Instant instant4 = user1.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant4);
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNotNull(instant6);
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProviderId("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str9 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setImageURL("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', level='error.validation'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        java.lang.Long long20 = professor17.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        java.lang.Boolean boolean38 = aluno36.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor39 = professor21.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = aluno36.getProfessor();
        java.lang.String str42 = aluno36.getEmail();
        com.unifacisa.tcc.domain.Professor professor43 = professor17.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray55 = new com.unifacisa.tcc.domain.Aluno[] { aluno45, aluno46, aluno50, aluno51 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet56 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet56, alunoArray55);
        professor44.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        java.lang.Boolean boolean61 = aluno59.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor62 = professor44.addAluno(aluno59);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection67 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean68 = aluno63.equals((java.lang.Object) socialUserConnection67);
        socialUserConnection67.setRefreshToken("error.validation");
        socialUserConnection67.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean73 = aluno59.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str74 = aluno59.toString();
        java.lang.Boolean boolean75 = aluno59.isHabilitadoTcc();
        aluno59.setHabilitadoTcc((java.lang.Boolean) true);
        aluno59.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa81 = aluno59.segundoNome("");
        java.lang.Long long82 = aluno59.getMatricula();
        com.unifacisa.tcc.domain.Professor professor83 = professor43.addAluno(aluno59);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa85 = professor83.matricula((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(alunoArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str74, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(pessoa81);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNotNull(professor83);
        org.junit.Assert.assertNotNull(pessoa85);
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        java.lang.String str6 = socialUserConnection0.getProviderId();
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        socialUserConnection0.setImageURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user7);
        java.lang.String str9 = user7.getImageUrl();
        boolean boolean11 = user7.equals((java.lang.Object) (byte) -1);
        java.lang.String str12 = user7.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = user7.getAuthorities();
        user0.setAuthorities(authoritySet13);
        user0.setCreatedBy("hi!");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user0.getAuthorities();
        user0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO20 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(authoritySet13);
        org.junit.Assert.assertNotNull(authoritySet17);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet5 = user0.getAuthorities();
        java.lang.String str6 = user0.getResetKey();
        user0.setLangKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str9 = user0.getCreatedBy();
        user0.setPassword("");
        java.lang.String str12 = user0.getCreatedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(authoritySet5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.getName();
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray18 = new com.unifacisa.tcc.domain.Aluno[] { aluno8, aluno9, aluno13, aluno14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet19 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet19, alunoArray18);
        professor7.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet19);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        java.lang.Boolean boolean24 = aluno22.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor25 = professor7.addAluno(aluno22);
        com.unifacisa.tcc.domain.Professor professor26 = aluno22.getProfessor();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor26.getAlunos();
        boolean boolean28 = authority0.equals((java.lang.Object) professor26);
        professor26.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}" + "'", str6, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(alunoArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getImageUrl();
        java.lang.String str26 = managedUserVM20.getLastName();
        java.lang.String str27 = managedUserVM20.getPassword();
        boolean boolean28 = managedUserVM20.isActivated();
        managedUserVM20.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "error.concurrencyFailure" + "'", str26, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.concurrencyFailure" + "'", str27, "error.concurrencyFailure");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getLangKey();
        user0.setActivationKey("");
        java.lang.String str4 = user0.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = socialUserConnection0.getUserId();
        java.lang.String str6 = socialUserConnection0.getProviderUserId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray56 = new com.unifacisa.tcc.domain.Aluno[] { aluno46, aluno47, aluno51, aluno52 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet57 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet57, alunoArray56);
        professor45.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        java.lang.String str60 = professor45.toString();
        professor45.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor67 = aluno63.getProfessor();
        com.unifacisa.tcc.domain.Professor professor68 = professor45.addAluno(aluno63);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno0.professor(professor45);
        com.unifacisa.tcc.domain.Professor professor70 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(alunoArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str60, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(professor67);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.String str6 = user0.getLastName();
        java.lang.String str7 = user0.getLastName();
        java.lang.String str8 = user0.getEmail();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str12 = user9.getLastModifiedBy();
        java.lang.String str13 = user9.getActivationKey();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent24 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant25 = persistentAuditEvent24.getAuditEventDate();
        persistentAuditEvent24.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent28 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap29 = persistentAuditEvent28.getData();
        persistentAuditEvent28.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long32 = persistentAuditEvent28.getId();
        java.lang.Long long33 = persistentAuditEvent28.getId();
        java.time.Instant instant34 = persistentAuditEvent28.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap35 = null;
        persistentAuditEvent28.setData(strMap35);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent37 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant38 = persistentAuditEvent37.getAuditEventDate();
        java.lang.Long long39 = persistentAuditEvent37.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent40 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap41 = persistentAuditEvent40.getData();
        persistentAuditEvent37.setData(strMap41);
        persistentAuditEvent28.setData(strMap41);
        persistentAuditEvent24.setData(strMap41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user47 = userMapper45.userFromId((java.lang.Long) 1L);
        boolean boolean48 = user47.getActivated();
        java.time.Instant instant49 = user47.getLastModifiedDate();
        persistentAuditEvent24.setAuditEventDate(instant49);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper52 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray53 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList54 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList54, userArray53);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList56 = userMapper52.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList54);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper57 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray58 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList59 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList59, userArray58);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList61 = userMapper57.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList59);
        java.util.List<com.unifacisa.tcc.domain.User> userList62 = userMapper52.userDTOsToUsers(userDTOList61);
        com.unifacisa.tcc.domain.User user64 = userMapper52.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO(user64);
        java.time.Instant instant66 = userDTO65.getLastModifiedDate();
        java.time.Instant instant77 = null;
        java.time.Instant instant79 = null;
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet85 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet85, strArray84);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM87 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant77, "error.validation", instant79, (java.util.Set<java.lang.String>) strSet85);
        java.lang.String str88 = managedUserVM87.getFirstName();
        java.util.Set<java.lang.String> strSet89 = managedUserVM87.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM90 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant49, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant66, strSet89);
        user9.setLastModifiedDate(instant66);
        user0.setResetDate(instant66);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNotNull(userArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(userDTOList56);
        org.junit.Assert.assertNotNull(userArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(userDTOList61);
        org.junit.Assert.assertNotNull(userList62);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNotNull(instant66);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertNotNull(strSet89);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.lang.String str5 = managedUserVM0.getLangKey();
        managedUserVM0.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = managedUserVM0.getLangKey();
        java.lang.String str9 = managedUserVM0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet5 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strSet5);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("", "hi!", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", (java.lang.Long) 0L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "error.validation", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=null}", "", (java.lang.Long) 0L);
        java.lang.String str12 = socialUserConnection11.getDisplayName();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str12, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getLangKey();
        java.lang.String str2 = user0.toString();
        java.time.Instant instant3 = user0.getResetDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(instant3);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str9 = socialUserConnection0.getRefreshToken();
        java.lang.Long long10 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        java.lang.String str31 = user29.toString();
        java.time.Instant instant32 = user29.getCreatedDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = userMapper0.userToUserDTO(user29);
        java.lang.String str35 = userDTO34.toString();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(userDTO34);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:37.166Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:37.166Z, authorities=[]}" + "'", str35, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:37.166Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:37.166Z, authorities=[]}");
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setProviderId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long15 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        java.lang.String str4 = authority0.getName();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant6 = persistentAuditEvent5.getAuditEventDate();
        persistentAuditEvent5.setId((java.lang.Long) 10L);
        persistentAuditEvent5.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        persistentAuditEvent5.setId((java.lang.Long) (-1L));
        boolean boolean13 = authority0.equals((java.lang.Object) persistentAuditEvent5);
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = user0.getLangKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.toString();
        authority0.setName("LoggerVM{name='', level='error.validation'}");
        java.lang.String str9 = authority0.getName();
        java.lang.String str10 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}" + "'", str6, "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='', level='error.validation'}" + "'", str9, "LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='', level='error.validation'}" + "'", str10, "LoggerVM{name='', level='error.validation'}");
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno38.primeiroNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        aluno38.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str80 = aluno38.getSegundoNome();
        aluno38.setNumeroContato((java.lang.Long) 10L);
        aluno38.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.Long long13 = persistentAuditEvent11.getId();
        java.lang.String str14 = persistentAuditEvent11.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = null;
        persistentAuditEvent11.setData(strMap15);
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        java.lang.String str42 = professor27.toString();
        com.unifacisa.tcc.domain.Professor professor44 = professor27.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet45 = professor27.getAlunos();
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        user46.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant50 = user46.getLastModifiedDate();
        boolean boolean51 = professor27.equals((java.lang.Object) instant50);
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        java.lang.String str54 = user53.getCreatedBy();
        java.lang.String str55 = user53.getLangKey();
        java.time.Instant instant56 = user53.getCreatedDate();
        java.time.Instant instant67 = null;
        java.time.Instant instant69 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet75 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet75, strArray74);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM77 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant67, "error.validation", instant69, (java.util.Set<java.lang.String>) strSet75);
        java.lang.String str78 = managedUserVM77.getFirstName();
        java.lang.String str79 = managedUserVM77.getCreatedBy();
        java.util.Set<java.lang.String> strSet80 = managedUserVM77.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM81 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant50, "LoginVM{username='null', rememberMe=null}", instant56, strSet80);
        persistentAuditEvent11.setAuditEventDate(instant56);
        boolean boolean83 = socialUserConnection0.equals((java.lang.Object) persistentAuditEvent11);
        java.lang.Long long84 = socialUserConnection0.getRank();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        socialUserConnection0.setImageURL("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str42, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(alunoSet45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(instant56);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(long84);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        java.lang.String str7 = socialUserConnection0.getAccessToken();
        java.lang.String str8 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setImageURL("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='null', rememberMe=false}", "LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", (java.lang.Long) 10L, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}", "LoginVM{username='error.concurrencyFailure', rememberMe=false}", "LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}", "LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', level='error.validation'}", "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", (java.lang.Long) 10L);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor31.numeroContato((java.lang.Long) (-1L));
        java.lang.Long long34 = pessoa33.getMatricula();
        pessoa33.setPrimeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        pessoa33.setNumeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNull(long34);
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = user0.getImageUrl();
        java.lang.String str6 = user0.getLogin();
        user0.setLastModifiedBy("");
        java.lang.String str9 = user0.getActivationKey();
        user0.setLastName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor18.setEmail("Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
        com.unifacisa.tcc.domain.Professor professor26 = professor18.diponibilidade((java.lang.Boolean) false);
        java.lang.Long long27 = professor26.getMatricula();
        com.unifacisa.tcc.domain.Professor professor28 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray39 = new com.unifacisa.tcc.domain.Aluno[] { aluno29, aluno30, aluno34, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet40 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet40, alunoArray39);
        professor28.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        java.lang.Boolean boolean45 = aluno43.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor46 = professor28.addAluno(aluno43);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection51 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean52 = aluno47.equals((java.lang.Object) socialUserConnection51);
        socialUserConnection51.setRefreshToken("error.validation");
        socialUserConnection51.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean57 = aluno43.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        aluno43.setEmail("error.validation");
        aluno43.setNumeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno63 = aluno43.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor64 = professor26.addAluno(aluno63);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa66 = professor64.primeiroNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(alunoArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(aluno63);
        org.junit.Assert.assertNotNull(professor64);
        org.junit.Assert.assertNotNull(pessoa66);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProviderUserId();
        java.lang.String str4 = socialUserConnection0.getProviderId();
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant27, "error.validation", instant29, (java.util.Set<java.lang.String>) strSet35);
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet35);
        java.lang.String str39 = userDTO38.getLastName();
        java.lang.String str40 = userDTO38.getEmail();
        userDTO38.setId((java.lang.Long) 0L);
        java.lang.String str43 = userDTO38.getImageUrl();
        userDTO38.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean46 = socialUserConnection0.equals((java.lang.Object) "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='error.concurrencyFailure', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "error.concurrencyFailure" + "'", str40, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user10 = userMapper0.userFromId((java.lang.Long) 100L);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet11 = user10.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet12 = user10.getAuthorities();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(authoritySet11);
        org.junit.Assert.assertNotNull(authoritySet12);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getNumeroContato();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        java.time.Instant instant39 = user0.getCreatedDate();
        user0.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='true', langKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant39);
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.String str3 = loginVM0.getPassword();
        java.lang.String str4 = loginVM0.getPassword();
        java.lang.String str5 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str4, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        user0.setLangKey("LoginVM{username='null', rememberMe=false}");
        user0.setId((java.lang.Long) 0L);
        java.lang.String str7 = user0.getPassword();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        aluno7.setProfessor(professor8);
        professor8.setSegundoNome("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        java.lang.String str9 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.time.Instant instant35 = userDTO33.getLastModifiedDate();
        java.lang.String str36 = userDTO33.getImageUrl();
        java.lang.String str37 = userDTO33.getLastName();
        java.lang.String str38 = userDTO33.getLastModifiedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.concurrencyFailure" + "'", str37, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        java.time.Instant instant3 = user0.getCreatedDate();
        java.time.Instant instant4 = user0.getCreatedDate();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.String str6 = user0.getImageUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}", "User{login='null', firstName='null', lastName='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        java.lang.String str45 = aluno0.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = aluno0.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = aluno0.email("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor50 = aluno0.getProfessor();
        java.lang.String str51 = professor50.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str45, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str37 = professor36.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor39 = professor36.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor39.primeiroNome("error.concurrencyFailure");
        aluno20.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        aluno50.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray54 = new com.unifacisa.tcc.domain.Aluno[] { aluno44, aluno45, aluno49, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet55 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet55, alunoArray54);
        professor43.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        java.lang.String str58 = professor43.toString();
        com.unifacisa.tcc.domain.Professor professor60 = professor43.diponibilidade((java.lang.Boolean) true);
        professor43.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno63 = aluno20.professor(professor43);
        professor43.setEmail("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(alunoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str58, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor60);
        org.junit.Assert.assertNotNull(aluno63);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = aluno20.numeroContato((java.lang.Long) 100L);
        java.lang.String str38 = aluno20.toString();
        com.unifacisa.tcc.domain.Professor professor39 = aluno20.getProfessor();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(pessoa37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='100', habilitadoTcc='null'}" + "'", str38, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='100', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor39);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList32 = userMapper22.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper11.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList34 = userMapper0.userDTOsToUsers(userDTOList31);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user35);
        java.lang.String str37 = user35.getImageUrl();
        boolean boolean39 = user35.equals((java.lang.Object) (byte) -1);
        java.lang.String str40 = user35.getLastName();
        java.lang.String str41 = user35.getFirstName();
        java.time.Instant instant42 = user35.getResetDate();
        java.lang.String str43 = user35.getLogin();
        java.lang.String str44 = user35.getPassword();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = userMapper0.userToUserDTO(user35);
        java.lang.String str46 = user35.getLastName();
        java.lang.String str47 = user35.getCreatedBy();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(userDTO45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        java.lang.String str4 = socialUserConnection0.getUserId();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str7 = socialUserConnection0.getUserId();
        java.lang.String str8 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str11 = socialUserConnection0.getSecret();
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList32 = userMapper22.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper11.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList34 = userMapper0.userDTOsToUsers(userDTOList31);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user35);
        java.lang.String str37 = user35.getImageUrl();
        boolean boolean39 = user35.equals((java.lang.Object) (byte) -1);
        java.lang.String str40 = user35.getLastName();
        java.lang.String str41 = user35.getFirstName();
        java.time.Instant instant42 = user35.getResetDate();
        java.lang.String str43 = user35.getLogin();
        java.lang.String str44 = user35.getPassword();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = userMapper0.userToUserDTO(user35);
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        java.lang.String str48 = user46.getLastModifiedBy();
        user46.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str51 = user46.toString();
        com.unifacisa.tcc.domain.User user52 = new com.unifacisa.tcc.domain.User();
        java.lang.String str53 = user52.getCreatedBy();
        java.lang.String str54 = user52.getLastModifiedBy();
        user52.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        java.lang.String str58 = user57.getCreatedBy();
        user57.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO(user57);
        java.time.Instant instant62 = userDTO61.getLastModifiedDate();
        user52.setCreatedDate(instant62);
        user46.setResetDate(instant62);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = userMapper0.userToUserDTO(user46);
        com.unifacisa.tcc.domain.User user67 = userMapper0.userFromId((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(userDTO45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str51, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertNotNull(userDTO65);
        org.junit.Assert.assertNotNull(user67);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str33 = aluno15.toString();
        aluno15.setId((java.lang.Long) 100L);
        aluno15.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str33, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent4.getPrincipal();
        persistentAuditEvent4.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLangKey();
        java.time.Instant instant13 = user10.getCreatedDate();
        persistentAuditEvent9.setAuditEventDate(instant13);
        persistentAuditEvent4.setAuditEventDate(instant13);
        user0.setLastModifiedDate(instant13);
        java.lang.String str17 = user0.getLangKey();
        java.lang.String str18 = user0.getEmail();
        user0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str10 = socialUserConnection4.getRefreshToken();
        socialUserConnection4.setUserId("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str13 = socialUserConnection4.getProviderId();
        socialUserConnection4.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='10', email='null', numeroContato='100', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.validation" + "'", str10, "error.validation");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getCreatedBy();
        java.time.Instant instant21 = managedUserVM19.getCreatedDate();
        boolean boolean22 = professor0.equals((java.lang.Object) managedUserVM19);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor0.primeiroNome("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str26 = professor25.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor28 = professor25.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor30 = professor28.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray42 = new com.unifacisa.tcc.domain.Aluno[] { aluno32, aluno33, aluno37, aluno38 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet43 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet43, alunoArray42);
        professor31.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet43);
        com.unifacisa.tcc.domain.Professor professor47 = professor31.diponibilidade((java.lang.Boolean) true);
        java.lang.Long long48 = professor31.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa50 = professor31.primeiroNome("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor51 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str52 = professor51.getPrimeiroNome();
        java.lang.String str53 = professor51.getSegundoNome();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet54 = professor51.getAlunos();
        com.unifacisa.tcc.domain.Professor professor55 = professor31.alunos(alunoSet54);
        professor30.setAlunos(alunoSet54);
        professor0.setAlunos(alunoSet54);
        java.lang.Long long58 = professor0.getId();
        java.lang.Boolean boolean59 = professor0.isDiponibilidade();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(alunoArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertNotNull(pessoa50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(alunoSet54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertEquals("'" + boolean59 + "' != '" + true + "'", boolean59, true);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection6 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str7 = socialUserConnection6.getUserId();
        socialUserConnection6.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        boolean boolean10 = user0.equals((java.lang.Object) socialUserConnection6);
        java.lang.Long long11 = socialUserConnection6.getExpireTime();
        socialUserConnection6.setProfileURL("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection6.setRank((java.lang.Long) (-1L));
        java.lang.Long long16 = socialUserConnection6.getId();
        java.lang.Long long17 = socialUserConnection6.getExpireTime();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        professor17.setPrimeiroNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.Boolean boolean24 = professor17.isDiponibilidade();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + true + "'", boolean24, true);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        java.time.Instant instant3 = user0.getCreatedDate();
        java.time.Instant instant4 = user0.getCreatedDate();
        java.lang.String str5 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str18 = user15.getLastName();
        java.time.Instant instant19 = user15.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        java.lang.String str22 = user21.getCreatedBy();
        java.lang.String str23 = user21.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user24 = new com.unifacisa.tcc.domain.User();
        user24.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant27 = user24.getLastModifiedDate();
        user21.setCreatedDate(instant27);
        java.time.Instant instant38 = null;
        java.time.Instant instant40 = null;
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM61 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant51, "error.validation", instant53, (java.util.Set<java.lang.String>) strSet59);
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant38, "", instant40, (java.util.Set<java.lang.String>) strSet59);
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant19, "", instant27, (java.util.Set<java.lang.String>) strSet59);
        user0.setResetDate(instant19);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str18, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        professor0.setEmail("Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}");
        java.lang.String str21 = professor0.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}" + "'", str21, "Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}");
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        professor1.setSegundoNome("LoginVM{username='null', rememberMe=null}");
        professor1.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = professor1.isDiponibilidade();
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str23 = professor22.getPrimeiroNome();
        java.lang.Boolean boolean24 = professor22.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa26 = professor22.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        java.lang.Boolean boolean44 = aluno42.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor45 = professor27.addAluno(aluno42);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection50 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean51 = aluno46.equals((java.lang.Object) socialUserConnection50);
        socialUserConnection50.setRefreshToken("error.validation");
        socialUserConnection50.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean56 = aluno42.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor57 = professor22.removeAluno(aluno42);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor62 = aluno58.getProfessor();
        com.unifacisa.tcc.domain.Professor professor63 = professor57.addAluno(aluno58);
        java.lang.String str64 = professor57.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor65 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str66 = professor65.getPrimeiroNome();
        java.lang.Boolean boolean67 = professor65.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = professor65.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet70 = professor65.getAlunos();
        professor57.setAlunos(alunoSet70);
        professor1.setAlunos(alunoSet70);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(pessoa26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(professor62);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNotNull(alunoSet70);
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str9, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str10, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        boolean boolean12 = userDTO11.isActivated();
        userDTO11.setLogin("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        userDTO11.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        loggerVM0.setLevel("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = loggerVM0.getLevel();
        java.lang.String str8 = loggerVM0.getLevel();
        java.lang.String str9 = loggerVM0.getLevel();
        loggerVM0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str7, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str8, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str9, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        com.unifacisa.tcc.domain.User user88 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO89 = new com.unifacisa.tcc.service.dto.UserDTO(user88);
        java.time.Instant instant90 = userDTO89.getLastModifiedDate();
        user0.setLastModifiedDate(instant90);
        java.lang.String str92 = user0.toString();
        java.lang.String str93 = user0.getLogin();
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str92, "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long6 = user0.getId();
        user0.setCreatedBy("error.validation");
        user0.setPassword("LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.lang.String str13 = user11.getImageUrl();
        java.lang.String str14 = user11.getLangKey();
        user11.setLastModifiedBy("");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.lang.String str19 = user17.getImageUrl();
        java.lang.String str20 = user17.getLangKey();
        java.lang.String str21 = user17.getLogin();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant25 = user22.getLastModifiedDate();
        user17.setLastModifiedDate(instant25);
        user11.setLastModifiedDate(instant25);
        user0.setCreatedDate(instant25);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(instant25);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str19 = professor18.getPrimeiroNome();
        java.lang.Boolean boolean20 = professor18.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno25, aluno29, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        java.lang.String str38 = professor23.toString();
        com.unifacisa.tcc.domain.Professor professor40 = professor23.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = professor40.primeiroNome("");
        professor40.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray56 = new com.unifacisa.tcc.domain.Aluno[] { aluno46, aluno47, aluno51, aluno52 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet57 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet57, alunoArray56);
        professor45.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        com.unifacisa.tcc.domain.Professor professor61 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        java.lang.Boolean boolean65 = aluno63.isHabilitadoTcc();
        aluno63.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = aluno63.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor70 = professor0.addAluno(aluno63);
        com.unifacisa.tcc.domain.Aluno aluno72 = aluno63.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean73 = aluno72.isHabilitadoTcc();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str38, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(pessoa42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(alunoArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(aluno72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str10 = socialUserConnection4.getSecret();
        java.lang.Long long11 = socialUserConnection4.getExpireTime();
        socialUserConnection4.setProviderUserId("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("LoggerVM{name='error.concurrencyFailure', level='error.validation'}", "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str5 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str6 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        user5.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = user5.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant9);
        java.lang.Long long11 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent14 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant15 = persistentAuditEvent14.getAuditEventDate();
        java.lang.Long long16 = persistentAuditEvent14.getId();
        java.lang.Long long17 = persistentAuditEvent14.getId();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        java.lang.String str19 = user18.getCreatedBy();
        java.lang.String str20 = user18.getLangKey();
        java.time.Instant instant21 = user18.getCreatedDate();
        persistentAuditEvent14.setAuditEventDate(instant21);
        user12.setResetDate(instant21);
        java.time.Instant instant24 = user12.getResetDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user27 = userMapper25.userFromId((java.lang.Long) 1L);
        boolean boolean28 = user27.getActivated();
        java.time.Instant instant29 = user27.getLastModifiedDate();
        user12.setLastModifiedDate(instant29);
        persistentAuditEvent0.setAuditEventDate(instant29);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(instant29);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = pessoa5.matricula((java.lang.Long) 0L);
        pessoa7.setMatricula((java.lang.Long) (-1L));
        pessoa7.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = pessoa7.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection18 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean19 = aluno14.equals((java.lang.Object) socialUserConnection18);
        socialUserConnection18.setRefreshToken("error.validation");
        socialUserConnection18.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long24 = socialUserConnection18.getRank();
        java.lang.String str25 = socialUserConnection18.getProfileURL();
        java.lang.String str26 = socialUserConnection18.getUserId();
        java.lang.String str27 = socialUserConnection18.getAccessToken();
        java.lang.String str28 = socialUserConnection18.getSecret();
        boolean boolean29 = pessoa7.equals((java.lang.Object) socialUserConnection18);
        pessoa7.setSegundoNome("LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}");
        pessoa7.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str28, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant14, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant16, (java.util.Set<java.lang.String>) strSet47);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet52 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray54 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList55 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList55, userArray54);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList57 = userMapper53.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList55);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper58 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray59 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList60 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList60, userArray59);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList62 = userMapper58.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList60);
        java.util.List<com.unifacisa.tcc.domain.User> userList63 = userMapper53.userDTOsToUsers(userDTOList62);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper64 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray65 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList66 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList66, userArray65);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList68 = userMapper64.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList66);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray70 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList71 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList71, userArray70);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList73 = userMapper69.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.domain.User> userList74 = userMapper64.userDTOsToUsers(userDTOList73);
        java.util.List<com.unifacisa.tcc.domain.User> userList75 = userMapper53.userDTOsToUsers(userDTOList73);
        java.util.List<com.unifacisa.tcc.domain.User> userList76 = userMapper0.userDTOsToUsers(userDTOList73);
        com.unifacisa.tcc.domain.User user77 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO78 = new com.unifacisa.tcc.service.dto.UserDTO(user77);
        java.lang.String str79 = user77.toString();
        user77.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO82 = userMapper0.userToUserDTO(user77);
        com.unifacisa.tcc.domain.User user83 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO(user83);
        java.lang.String str85 = user83.getImageUrl();
        java.lang.String str86 = user83.getLangKey();
        user83.setLastModifiedBy("");
        user83.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str91 = user83.getLastName();
        java.lang.String str92 = user83.getLastModifiedBy();
        com.unifacisa.tcc.service.dto.UserDTO userDTO93 = userMapper0.userToUserDTO(user83);
        java.lang.String str94 = userDTO93.getLastName();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(authoritySet52);
        org.junit.Assert.assertNotNull(userArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(userDTOList57);
        org.junit.Assert.assertNotNull(userArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(userDTOList62);
        org.junit.Assert.assertNotNull(userList63);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userDTOList68);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(userDTOList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str79, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userDTO82);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str91, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertNotNull(userDTO93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str94, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        professor23.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        java.lang.Long long24 = professor0.getId();
        java.lang.String str25 = professor0.getSegundoNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.time.Instant instant87 = user0.getResetDate();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str90 = user0.toString();
        com.unifacisa.tcc.service.dto.UserDTO userDTO91 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertNull(instant87);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str90, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.Long long7 = socialUserConnection4.getExpireTime();
        socialUserConnection4.setProviderId("Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        user37.setLangKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str47 = user37.getFirstName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO48 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        user0.setLangKey("Authority{name='null'}");
        java.lang.Long long6 = user0.getId();
        java.time.Instant instant7 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(instant7);
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getImageUrl();
        user0.setImageUrl("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str6 = user0.getCreatedBy();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        java.lang.String str3 = authority0.getName();
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.getName();
        java.lang.String str7 = authority0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}" + "'", str6, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}" + "'", str7, "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str4 = aluno0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.lang.String str8 = persistentAuditEvent0.getPrincipal();
        java.lang.String str9 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLastModifiedBy();
        user10.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str15 = user10.getEmail();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.getCreatedBy();
        java.lang.String str18 = user16.getLastModifiedBy();
        user16.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str21 = user16.toString();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.getCreatedBy();
        java.lang.String str24 = user22.getLastModifiedBy();
        user22.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        java.lang.String str28 = user27.getCreatedBy();
        user27.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO31 = new com.unifacisa.tcc.service.dto.UserDTO(user27);
        java.time.Instant instant32 = userDTO31.getLastModifiedDate();
        user22.setCreatedDate(instant32);
        user16.setResetDate(instant32);
        user10.setLastModifiedDate(instant32);
        persistentAuditEvent0.setAuditEventDate(instant32);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent37 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str38 = persistentAuditEvent37.getPrincipal();
        java.lang.Long long39 = persistentAuditEvent37.getId();
        java.lang.String str40 = persistentAuditEvent37.getPrincipal();
        persistentAuditEvent37.setAuditEventType("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Long long43 = persistentAuditEvent37.getId();
        java.util.Map<java.lang.String, java.lang.String> strMap44 = persistentAuditEvent37.getData();
        persistentAuditEvent0.setData(strMap44);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str9, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str21, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.toString();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM10 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM10.setKey("error.concurrencyFailure");
        java.lang.String str13 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        boolean boolean18 = user0.equals((java.lang.Object) keyAndPasswordVM10);
        java.lang.Long long19 = user0.getId();
        user0.setImageUrl("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(long19);
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa40 = aluno0.numeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Aluno aluno42 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str43 = aluno42.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = aluno42.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant55 = null;
        java.time.Instant instant57 = null;
        java.time.Instant instant68 = null;
        java.time.Instant instant70 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM78 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant68, "error.validation", instant70, (java.util.Set<java.lang.String>) strSet76);
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant55, "", instant57, (java.util.Set<java.lang.String>) strSet76);
        java.lang.String str80 = userDTO79.getLastName();
        java.lang.String str81 = userDTO79.getEmail();
        userDTO79.setId((java.lang.Long) 0L);
        java.lang.String str84 = userDTO79.getImageUrl();
        java.time.Instant instant85 = userDTO79.getCreatedDate();
        java.lang.String str86 = userDTO79.getLogin();
        java.lang.String str87 = userDTO79.toString();
        boolean boolean88 = aluno42.equals((java.lang.Object) userDTO79);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(pessoa40);
        org.junit.Assert.assertNotNull(aluno42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='10', habilitadoTcc='true'}" + "'", str43, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='10', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(pessoa45);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "error.concurrencyFailure" + "'", str80, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "error.concurrencyFailure" + "'", str81, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNull(instant85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str87, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = user0.getImageUrl();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        java.lang.String str8 = user7.getCreatedBy();
        java.lang.String str9 = user7.getLastModifiedBy();
        user7.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str12 = user7.toString();
        java.time.Instant instant13 = user7.getCreatedDate();
        user0.setResetDate(instant13);
        user0.setImageUrl("LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}");
        java.lang.String str17 = user0.getEmail();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str12, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getImageURL();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str14 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        java.lang.String str88 = user0.getImageUrl();
        java.lang.String str89 = user0.getLogin();
        user0.setLastName("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str92 = user0.getFirstName();
        java.lang.String str93 = user0.getResetKey();
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.lang.String str1 = userDTO0.getLogin();
        java.lang.String str2 = userDTO0.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet3 = userDTO0.getAuthorities();
        java.util.Set<java.lang.String> strSet4 = userDTO0.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertNull(strSet4);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getImageUrl();
        java.lang.String str6 = user0.getCreatedBy();
        java.lang.String str7 = user0.getCreatedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setLevel("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str9 = loggerVM0.getName();
        java.lang.String str10 = loggerVM0.toString();
        java.lang.String str11 = loggerVM0.getLevel();
        loggerVM0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        loggerVM0.setLevel("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str10, "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str11, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:37.166Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:37.166Z, authorities=[]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        java.lang.String str9 = user0.getLangKey();
        user0.setPassword("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent22 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant23 = persistentAuditEvent22.getAuditEventDate();
        persistentAuditEvent22.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent26 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = persistentAuditEvent26.getData();
        persistentAuditEvent26.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long30 = persistentAuditEvent26.getId();
        java.lang.Long long31 = persistentAuditEvent26.getId();
        java.time.Instant instant32 = persistentAuditEvent26.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        persistentAuditEvent26.setData(strMap33);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent35 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant36 = persistentAuditEvent35.getAuditEventDate();
        java.lang.Long long37 = persistentAuditEvent35.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = persistentAuditEvent38.getData();
        persistentAuditEvent35.setData(strMap39);
        persistentAuditEvent26.setData(strMap39);
        persistentAuditEvent22.setData(strMap39);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user45 = userMapper43.userFromId((java.lang.Long) 1L);
        boolean boolean46 = user45.getActivated();
        java.time.Instant instant47 = user45.getLastModifiedDate();
        persistentAuditEvent22.setAuditEventDate(instant47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray51 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList52 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList52, userArray51);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList54 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList52);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper55 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray56 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList57 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList57, userArray56);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList59 = userMapper55.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList57);
        java.util.List<com.unifacisa.tcc.domain.User> userList60 = userMapper50.userDTOsToUsers(userDTOList59);
        com.unifacisa.tcc.domain.User user62 = userMapper50.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO(user62);
        java.time.Instant instant64 = userDTO63.getLastModifiedDate();
        java.time.Instant instant75 = null;
        java.time.Instant instant77 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant75, "error.validation", instant77, (java.util.Set<java.lang.String>) strSet83);
        java.lang.String str86 = managedUserVM85.getFirstName();
        java.util.Set<java.lang.String> strSet87 = managedUserVM85.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM88 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant47, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant64, strSet87);
        user0.setCreatedDate(instant64);
        user0.setLastModifiedBy("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant92 = user0.getCreatedDate();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(userDTOList54);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(userDTOList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(user62);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(instant92);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray30 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList31 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList31, userArray30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList31);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray35 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList36 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList36, userArray35);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList36);
        java.util.List<com.unifacisa.tcc.domain.User> userList39 = userMapper29.userDTOsToUsers(userDTOList38);
        java.util.List<com.unifacisa.tcc.domain.User> userList40 = userMapper0.userDTOsToUsers(userDTOList38);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant52 = null;
        java.time.Instant instant54 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM62 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant52, "error.validation", instant54, (java.util.Set<java.lang.String>) strSet60);
        java.lang.String str63 = managedUserVM62.getFirstName();
        java.lang.String str64 = managedUserVM62.getPassword();
        java.util.Set<java.lang.String> strSet65 = managedUserVM62.getAuthorities();
        java.util.Set<java.lang.String> strSet66 = managedUserVM62.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet67 = userMapper41.authoritiesFromStrings(strSet66);
        com.unifacisa.tcc.domain.User user69 = userMapper41.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper70 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray71 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList72 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList72, userArray71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper70.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList72);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper75 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray76 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList77 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList77, userArray76);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList79 = userMapper75.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList77);
        java.util.List<com.unifacisa.tcc.domain.User> userList80 = userMapper70.userDTOsToUsers(userDTOList79);
        java.util.List<com.unifacisa.tcc.domain.User> userList81 = userMapper41.userDTOsToUsers(userDTOList79);
        java.util.List<com.unifacisa.tcc.domain.User> userList82 = userMapper0.userDTOsToUsers(userDTOList79);
        com.unifacisa.tcc.domain.User user84 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user86 = userMapper0.userFromId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userDTOList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "error.concurrencyFailure" + "'", str64, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(authoritySet67);
        org.junit.Assert.assertNotNull(user69);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(userDTOList79);
        org.junit.Assert.assertNotNull(userList80);
        org.junit.Assert.assertNotNull(userList81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(user84);
        org.junit.Assert.assertNotNull(user86);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        java.lang.String str7 = authority0.toString();
        authority0.setName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}" + "'", str7, "Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}");
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.lang.String str4 = user0.getEmail();
        user0.setResetKey("Aluno{id=0, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='100', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getProviderId();
        socialUserConnection0.setId((java.lang.Long) 100L);
        socialUserConnection0.setDisplayName("LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        java.lang.Long long24 = professor0.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa26 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
        professor0.setMatricula((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(pessoa26);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("LoggerVM{name='null', level='error.validation'}");
        managedUserVM0.setLogin("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str7 = managedUserVM0.getFirstName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.String str13 = socialUserConnection0.toString();
        java.lang.String str14 = socialUserConnection0.toString();
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str13, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str14, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        java.lang.String str31 = user29.toString();
        java.time.Instant instant32 = user29.getCreatedDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = userMapper0.userToUserDTO(user29);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray36 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList37 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList37, userArray36);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList39 = userMapper35.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList37);
        java.time.Instant instant49 = null;
        java.time.Instant instant51 = null;
        java.time.Instant instant62 = null;
        java.time.Instant instant64 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM72 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant62, "error.validation", instant64, (java.util.Set<java.lang.String>) strSet70);
        com.unifacisa.tcc.service.dto.UserDTO userDTO73 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant49, "", instant51, (java.util.Set<java.lang.String>) strSet70);
        java.lang.String str74 = userDTO73.getLogin();
        java.util.Set<java.lang.String> strSet75 = userDTO73.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet76 = userMapper35.authoritiesFromStrings(strSet75);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet77 = userMapper0.authoritiesFromStrings(strSet75);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(userDTO34);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(userDTOList39);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(authoritySet76);
        org.junit.Assert.assertNotNull(authoritySet77);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setAuditEventType("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user14 = userMapper12.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user16 = userMapper12.userFromId((java.lang.Long) 100L);
        user16.setEmail("LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}");
        java.time.Instant instant19 = user16.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant19);
        java.lang.Long long21 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        java.lang.String str33 = user32.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent34 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant35 = persistentAuditEvent34.getAuditEventDate();
        java.lang.Long long36 = persistentAuditEvent34.getId();
        java.lang.Long long37 = persistentAuditEvent34.getId();
        com.unifacisa.tcc.domain.User user38 = new com.unifacisa.tcc.domain.User();
        java.lang.String str39 = user38.getCreatedBy();
        java.lang.String str40 = user38.getLangKey();
        java.time.Instant instant41 = user38.getCreatedDate();
        persistentAuditEvent34.setAuditEventDate(instant41);
        user32.setResetDate(instant41);
        java.time.Instant instant44 = user32.getResetDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user47 = userMapper45.userFromId((java.lang.Long) 1L);
        boolean boolean48 = user47.getActivated();
        java.time.Instant instant49 = user47.getLastModifiedDate();
        user32.setLastModifiedDate(instant49);
        com.unifacisa.tcc.domain.User user52 = new com.unifacisa.tcc.domain.User();
        java.lang.String str53 = user52.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent54 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant55 = persistentAuditEvent54.getAuditEventDate();
        java.lang.Long long56 = persistentAuditEvent54.getId();
        java.lang.Long long57 = persistentAuditEvent54.getId();
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        java.lang.String str59 = user58.getCreatedBy();
        java.lang.String str60 = user58.getLangKey();
        java.time.Instant instant61 = user58.getCreatedDate();
        persistentAuditEvent54.setAuditEventDate(instant61);
        user52.setResetDate(instant61);
        java.util.Set<java.lang.String> strSet64 = null;
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM65 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='Authority{name='null'}', rememberMe=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}", "", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", false, "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='', level='null'}", "Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", instant49, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant61, strSet64);
        persistentAuditEvent0.setAuditEventDate(instant61);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNotNull(user16);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(instant55);
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(instant61);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        user37.setLangKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str47 = user37.getActivationKey();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet48 = user37.getAuthorities();
        java.lang.String str49 = user37.getLogin();
        java.lang.String str50 = user37.toString();
        java.lang.String str51 = user37.getResetKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(authoritySet48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='true', langKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', activationKey='null'}" + "'", str50, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='true', langKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', activationKey='null'}");
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        java.lang.String str33 = professor18.toString();
        com.unifacisa.tcc.domain.Professor professor35 = professor18.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet36 = professor18.getAlunos();
        professor17.setAlunos(alunoSet36);
        professor17.setSegundoNome("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor17.segundoNome("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str33, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(alunoSet36);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user3.getAuthorities();
        user0.setAuthorities(authoritySet9);
        user0.setLangKey("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        java.time.Instant instant13 = user0.getLastModifiedDate();
        user0.setLangKey("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet9);
        org.junit.Assert.assertNotNull(instant13);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str6 = user3.getLastName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.time.Instant instant8 = user3.getCreatedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLastName();
        user0.setLastModifiedBy("LoggerVM{name='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=-1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        user0.setLangKey("Authority{name='null'}");
        java.lang.String str6 = user0.getEmail();
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        boolean boolean9 = user0.getActivated();
        user0.setPassword("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.lang.Long long11 = persistentAuditEvent9.getId();
        java.lang.String str12 = persistentAuditEvent9.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        java.lang.String str16 = user14.getLangKey();
        java.time.Instant instant17 = user14.getCreatedDate();
        persistentAuditEvent13.setAuditEventDate(instant17);
        persistentAuditEvent9.setAuditEventDate(instant17);
        java.time.Instant instant20 = persistentAuditEvent9.getAuditEventDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent22 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant23 = persistentAuditEvent22.getAuditEventDate();
        java.lang.Long long24 = persistentAuditEvent22.getId();
        java.lang.String str25 = persistentAuditEvent22.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent26 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        java.lang.String str28 = user27.getCreatedBy();
        java.lang.String str29 = user27.getLangKey();
        java.time.Instant instant30 = user27.getCreatedDate();
        persistentAuditEvent26.setAuditEventDate(instant30);
        persistentAuditEvent22.setAuditEventDate(instant30);
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO(user33);
        java.lang.String str35 = user33.getImageUrl();
        boolean boolean37 = user33.equals((java.lang.Object) (byte) -1);
        java.lang.String str38 = user33.getLastName();
        java.time.Instant instant39 = user33.getCreatedDate();
        persistentAuditEvent22.setAuditEventDate(instant39);
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM61 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant51, "error.validation", instant53, (java.util.Set<java.lang.String>) strSet59);
        java.lang.String str62 = managedUserVM61.getFirstName();
        java.lang.String str63 = managedUserVM61.getPassword();
        java.util.Set<java.lang.String> strSet64 = managedUserVM61.getAuthorities();
        java.lang.String str65 = managedUserVM61.toString();
        java.util.Set<java.lang.String> strSet66 = managedUserVM61.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO67 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}", true, "User{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "UserDTO{login='User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}", instant20, "UserDTO{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:23.063Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:23.063Z, authorities=[]}", instant39, strSet66);
        java.lang.String str68 = userDTO67.getFirstName();
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "error.concurrencyFailure" + "'", str63, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str65, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str68, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        java.lang.String str88 = user0.getImageUrl();
        user0.setPassword("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setDisplayName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setUserId("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        java.lang.String str12 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setSecret("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        java.lang.String str22 = professor17.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str22, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getLangKey();
        java.time.Instant instant2 = user0.getCreatedDate();
        user0.setFirstName("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        user0.setEmail("UserDTO{login='null', firstName='null', lastName='null', email='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:23.063Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:23.063Z, authorities=[]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(instant2);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent4.getPrincipal();
        persistentAuditEvent4.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent4.getData();
        persistentAuditEvent0.setData(strMap9);
        java.lang.Long long11 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user1 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO2 = new com.unifacisa.tcc.service.dto.UserDTO(user1);
        java.time.Instant instant3 = user1.getResetDate();
        java.lang.String str4 = user1.getResetKey();
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str18 = user15.getLastName();
        java.time.Instant instant19 = user15.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str24 = user21.getLastName();
        java.time.Instant instant25 = user21.getLastModifiedDate();
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.time.Instant instant48 = null;
        java.time.Instant instant50 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM58 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant48, "error.validation", instant50, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant35, "", instant37, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM60 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant19, "", instant25, (java.util.Set<java.lang.String>) strSet56);
        user1.setResetDate(instant19);
        persistentAuditEvent0.setAuditEventDate(instant19);
        java.lang.Long long63 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("UserDTO{login='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str18, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str24, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNull(long63);
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        java.time.Instant instant2 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(instant2);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor50 = professor1.removeAluno(aluno49);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = aluno49.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='error.concurrencyFailure', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(pessoa52);
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        user0.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant27, "error.validation", instant29, (java.util.Set<java.lang.String>) strSet35);
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet35);
        java.lang.String str39 = userDTO38.getLastModifiedBy();
        java.time.Instant instant40 = userDTO38.getLastModifiedDate();
        boolean boolean41 = user0.equals((java.lang.Object) userDTO38);
        user0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        java.lang.String str45 = user44.getCreatedBy();
        java.lang.String str46 = user44.getLastModifiedBy();
        java.lang.String str47 = user44.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent48 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant49 = persistentAuditEvent48.getAuditEventDate();
        java.lang.String str50 = persistentAuditEvent48.getPrincipal();
        persistentAuditEvent48.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent53 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        java.lang.String str55 = user54.getCreatedBy();
        java.lang.String str56 = user54.getLangKey();
        java.time.Instant instant57 = user54.getCreatedDate();
        persistentAuditEvent53.setAuditEventDate(instant57);
        persistentAuditEvent48.setAuditEventDate(instant57);
        user44.setLastModifiedDate(instant57);
        user0.setCreatedDate(instant57);
        com.unifacisa.tcc.domain.User user62 = new com.unifacisa.tcc.domain.User();
        java.lang.String str63 = user62.getCreatedBy();
        java.lang.String str64 = user62.getLastModifiedBy();
        user62.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant67 = user62.getLastModifiedDate();
        user0.setLastModifiedDate(instant67);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(instant67);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent7 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long8 = persistentAuditEvent7.getId();
        persistentAuditEvent7.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long11 = persistentAuditEvent7.getId();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        user12.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant16 = user12.getLastModifiedDate();
        persistentAuditEvent7.setAuditEventDate(instant16);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = persistentAuditEvent7.getData();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray43 = new com.unifacisa.tcc.domain.Aluno[] { aluno33, aluno34, aluno38, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet44 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet44, alunoArray43);
        professor32.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        java.lang.String str47 = professor32.toString();
        com.unifacisa.tcc.domain.Professor professor49 = professor32.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet50 = professor32.getAlunos();
        com.unifacisa.tcc.domain.User user51 = new com.unifacisa.tcc.domain.User();
        java.lang.String str52 = user51.getCreatedBy();
        user51.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant55 = user51.getLastModifiedDate();
        boolean boolean56 = professor32.equals((java.lang.Object) instant55);
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        java.lang.String str59 = user58.getCreatedBy();
        java.lang.String str60 = user58.getLangKey();
        java.time.Instant instant61 = user58.getCreatedDate();
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        java.lang.String str83 = managedUserVM82.getFirstName();
        java.lang.String str84 = managedUserVM82.getCreatedBy();
        java.util.Set<java.lang.String> strSet85 = managedUserVM82.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM86 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant55, "LoginVM{username='null', rememberMe=null}", instant61, strSet85);
        user21.setResetDate(instant55);
        persistentAuditEvent7.setAuditEventDate(instant55);
        managedUserVM0.setLastModifiedDate(instant55);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(alunoArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(alunoSet50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(instant61);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "hi!" + "'", str83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertNotNull(strSet85);
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        user5.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = user5.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant9);
        java.lang.Long long11 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setAuditEventType("");
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setPassword("error.concurrencyFailure");
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str6, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.toString();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        user11.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = userDTO15.getLastModifiedDate();
        user6.setCreatedDate(instant16);
        user0.setResetDate(instant16);
        java.lang.String str19 = user0.getFirstName();
        java.lang.String str20 = user0.getPassword();
        user0.setFirstName("LoggerVM{name='error.concurrencyFailure', level='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        user2.setResetDate(instant7);
        user2.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getImageUrl();
        user0.setFirstName("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.time.Instant instant12 = null;
        java.time.Instant instant14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant12, "error.validation", instant14, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str23 = managedUserVM22.toString();
        boolean boolean24 = authority0.equals((java.lang.Object) managedUserVM22);
        java.lang.String str25 = authority0.toString();
        java.lang.String str26 = authority0.getName();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa32 = aluno27.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa34 = pessoa32.numeroContato((java.lang.Long) 0L);
        pessoa34.setEmail("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean37 = authority0.equals((java.lang.Object) pessoa34);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant39 = persistentAuditEvent38.getAuditEventDate();
        java.lang.Long long40 = persistentAuditEvent38.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent41 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = persistentAuditEvent41.getData();
        persistentAuditEvent38.setData(strMap42);
        persistentAuditEvent38.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str46 = persistentAuditEvent38.getAuditEventType();
        persistentAuditEvent38.setId((java.lang.Long) (-1L));
        persistentAuditEvent38.setPrincipal("");
        boolean boolean51 = authority0.equals((java.lang.Object) persistentAuditEvent38);
        persistentAuditEvent38.setAuditEventType("Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Authority{name='null'}" + "'", str25, "Authority{name='null'}");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(pessoa32);
        org.junit.Assert.assertNotNull(pessoa34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str46, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.toString();
        loginVM0.setPassword("LoggerVM{name='null', level='null'}");
        java.lang.String str6 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str6, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        java.lang.Long long20 = professor17.getNumeroContato();
        professor17.setNumeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str24 = professor23.getPrimeiroNome();
        java.lang.Boolean boolean25 = professor23.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa27 = professor23.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor28 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray39 = new com.unifacisa.tcc.domain.Aluno[] { aluno29, aluno30, aluno34, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet40 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet40, alunoArray39);
        professor28.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        java.lang.Boolean boolean45 = aluno43.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor46 = professor28.addAluno(aluno43);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection51 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean52 = aluno47.equals((java.lang.Object) socialUserConnection51);
        socialUserConnection51.setRefreshToken("error.validation");
        socialUserConnection51.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean57 = aluno43.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor58 = professor23.removeAluno(aluno43);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = aluno43.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor61 = professor17.addAluno(aluno43);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa63 = professor17.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(pessoa27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(alunoArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(pessoa63);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection6 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str7 = socialUserConnection6.getUserId();
        socialUserConnection6.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        boolean boolean10 = user0.equals((java.lang.Object) socialUserConnection6);
        java.lang.Long long11 = socialUserConnection6.getExpireTime();
        socialUserConnection6.setProfileURL("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection6.setRank((java.lang.Long) (-1L));
        java.lang.Long long16 = socialUserConnection6.getId();
        java.lang.String str17 = socialUserConnection6.getDisplayName();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor36 = aluno15.getProfessor();
        java.lang.Long long37 = professor36.getNumeroContato();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNull(long37);
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long10 = socialUserConnection4.getRank();
        socialUserConnection4.setSecret("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        java.lang.String str13 = socialUserConnection4.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        com.unifacisa.tcc.domain.Professor professor33 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        java.lang.Boolean boolean51 = aluno49.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor52 = professor34.addAluno(aluno49);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = professor52.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str58 = aluno57.getEmail();
        aluno57.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str63 = aluno62.getEmail();
        aluno62.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray66 = new com.unifacisa.tcc.domain.Aluno[] { aluno56, aluno57, aluno61, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet67 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet67, alunoArray66);
        professor55.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str71 = aluno70.getEmail();
        java.lang.Boolean boolean72 = aluno70.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor73 = professor55.addAluno(aluno70);
        com.unifacisa.tcc.domain.Professor professor74 = aluno70.getProfessor();
        com.unifacisa.tcc.domain.Professor professor75 = aluno70.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str77 = aluno76.getEmail();
        aluno76.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor80 = professor75.removeAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor81 = professor52.removeAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor82 = professor17.addAluno(aluno76);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet83 = professor17.getAlunos();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(alunoArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(professor82);
        org.junit.Assert.assertNotNull(alunoSet83);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        user0.setPassword("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.toString();
        com.unifacisa.tcc.domain.Professor professor14 = aluno12.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno12.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno18 = aluno16.habilitadoTcc((java.lang.Boolean) false);
        boolean boolean19 = user0.equals((java.lang.Object) aluno18);
        user0.setLangKey("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        java.time.Instant instant22 = user0.getCreatedDate();
        java.lang.String str23 = user0.getLangKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor14);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNotNull(aluno18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}" + "'", str23, "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str8 = user0.getLastName();
        user0.setLastModifiedBy("");
        user0.setActivationKey("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.util.Set<java.lang.String> strSet1 = userDTO0.getAuthorities();
        java.lang.String str2 = userDTO0.getFirstName();
        java.lang.String str3 = userDTO0.getLastModifiedBy();
        java.time.Instant instant4 = userDTO0.getLastModifiedDate();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        java.lang.String str9 = user8.getCreatedBy();
        user8.setCreatedBy("hi!");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("error.concurrencyFailure");
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long10 = persistentAuditEvent9.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.Long long13 = persistentAuditEvent11.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent14 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = persistentAuditEvent14.getData();
        persistentAuditEvent11.setData(strMap15);
        persistentAuditEvent9.setData(strMap15);
        persistentAuditEvent0.setData(strMap15);
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='error.concurrencyFailure', numeroContato='null', habilitadoTcc='null'}");
        persistentAuditEvent0.setPrincipal("hi!");
        java.util.Map<java.lang.String, java.lang.String> strMap23 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent4.getPrincipal();
        persistentAuditEvent4.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLangKey();
        java.time.Instant instant13 = user10.getCreatedDate();
        persistentAuditEvent9.setAuditEventDate(instant13);
        persistentAuditEvent4.setAuditEventDate(instant13);
        user0.setLastModifiedDate(instant13);
        user0.setResetKey("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent19 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant20 = persistentAuditEvent19.getAuditEventDate();
        java.lang.Long long21 = persistentAuditEvent19.getId();
        java.lang.String str22 = persistentAuditEvent19.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap23 = null;
        persistentAuditEvent19.setData(strMap23);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno37, aluno41, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        java.lang.String str50 = professor35.toString();
        com.unifacisa.tcc.domain.Professor professor52 = professor35.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet53 = professor35.getAlunos();
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        java.lang.String str55 = user54.getCreatedBy();
        user54.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant58 = user54.getLastModifiedDate();
        boolean boolean59 = professor35.equals((java.lang.Object) instant58);
        com.unifacisa.tcc.domain.User user61 = new com.unifacisa.tcc.domain.User();
        java.lang.String str62 = user61.getCreatedBy();
        java.lang.String str63 = user61.getLangKey();
        java.time.Instant instant64 = user61.getCreatedDate();
        java.time.Instant instant75 = null;
        java.time.Instant instant77 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant75, "error.validation", instant77, (java.util.Set<java.lang.String>) strSet83);
        java.lang.String str86 = managedUserVM85.getFirstName();
        java.lang.String str87 = managedUserVM85.getCreatedBy();
        java.util.Set<java.lang.String> strSet88 = managedUserVM85.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM89 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant58, "LoginVM{username='null', rememberMe=null}", instant64, strSet88);
        persistentAuditEvent19.setAuditEventDate(instant64);
        user0.setResetDate(instant64);
        user0.setActivationKey("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str50, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(alunoSet53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertNotNull(strSet88);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='Authority{name='null'}', rememberMe=null}", "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='null'}", "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='null', level='null'}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 0L);
        socialUserConnection11.setId((java.lang.Long) 100L);
        socialUserConnection11.setProviderUserId("Professor{id=-1, primeiroNome='LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}', segundoNome='null', matricula='null', email='LoggerVM{name='null', level='error.validation'}', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getId();
        socialUserConnection0.setId((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        java.lang.String str9 = socialUserConnection0.getDisplayName();
        java.lang.String str10 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        java.lang.String str10 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderId("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str13 = socialUserConnection0.getSecret();
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.time.Instant instant48 = null;
        java.time.Instant instant50 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM58 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant48, "error.validation", instant50, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant35, "", instant37, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant23, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant25, (java.util.Set<java.lang.String>) strSet56);
        java.lang.String str61 = userDTO60.getCreatedBy();
        boolean boolean62 = socialUserConnection0.equals((java.lang.Object) str61);
        java.lang.String str63 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str61, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.String str7 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str10 = loginVM0.toString();
        loginVM0.setUsername("UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str10, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.time.Instant instant4 = user0.getLastModifiedDate();
        java.lang.Long long5 = user0.getId();
        java.time.Instant instant6 = user0.getCreatedDate();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(instant6);
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.time.Instant instant4 = user0.getLastModifiedDate();
        java.lang.String str5 = user0.getPassword();
        java.lang.String str6 = user0.getLogin();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.time.Instant instant4 = user0.getLastModifiedDate();
        java.lang.Long long5 = user0.getId();
        java.lang.String str6 = user0.getLastName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        java.lang.String str5 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean5 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + true + "'", boolean5, true);
        org.junit.Assert.assertNotNull(aluno7);
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        java.time.Instant instant4 = user2.getLastModifiedDate();
        user2.setLangKey("");
        java.lang.String str7 = user2.getLangKey();
        java.lang.String str8 = user2.getResetKey();
        java.lang.String str9 = user2.getImageUrl();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long10 = persistentAuditEvent9.getId();
        persistentAuditEvent9.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long13 = persistentAuditEvent9.getId();
        persistentAuditEvent9.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        persistentAuditEvent9.setPrincipal("LoginVM{username='null', rememberMe=false}");
        java.lang.String str18 = persistentAuditEvent9.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent19 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        java.lang.String str21 = user20.getCreatedBy();
        java.lang.String str22 = user20.getLangKey();
        java.time.Instant instant23 = user20.getCreatedDate();
        persistentAuditEvent19.setAuditEventDate(instant23);
        persistentAuditEvent9.setAuditEventDate(instant23);
        persistentAuditEvent0.setAuditEventDate(instant23);
        java.lang.String str27 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str8, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str18, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str27, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray2 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList3 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList3, userArray2);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList5 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList3);
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.time.Instant instant40 = null;
        java.time.Instant instant42 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM50 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant40, "error.validation", instant42, (java.util.Set<java.lang.String>) strSet48);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant27, "", instant29, (java.util.Set<java.lang.String>) strSet48);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant15, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant17, (java.util.Set<java.lang.String>) strSet48);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet53 = userMapper1.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet48);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray55 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList56 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList56, userArray55);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList58 = userMapper54.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList56);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper59 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray60 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList61 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList61, userArray60);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList63 = userMapper59.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList61);
        java.util.List<com.unifacisa.tcc.domain.User> userList64 = userMapper54.userDTOsToUsers(userDTOList63);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper65 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray66 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList67 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList67, userArray66);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList69 = userMapper65.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList67);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper70 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray71 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList72 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList72, userArray71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper70.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList72);
        java.util.List<com.unifacisa.tcc.domain.User> userList75 = userMapper65.userDTOsToUsers(userDTOList74);
        java.util.List<com.unifacisa.tcc.domain.User> userList76 = userMapper54.userDTOsToUsers(userDTOList74);
        java.util.List<com.unifacisa.tcc.domain.User> userList77 = userMapper1.userDTOsToUsers(userDTOList74);
        java.util.List<com.unifacisa.tcc.domain.User> userList78 = userMapper0.userDTOsToUsers(userDTOList74);
        com.unifacisa.tcc.domain.User user80 = userMapper0.userFromId((java.lang.Long) 0L);
        boolean boolean81 = user80.getActivated();
        java.lang.String str82 = user80.getEmail();
        user80.setLastModifiedBy("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userDTOList5);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(authoritySet53);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTOList58);
        org.junit.Assert.assertNotNull(userArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(userDTOList63);
        org.junit.Assert.assertNotNull(userList64);
        org.junit.Assert.assertNotNull(userArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(userDTOList69);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(userList76);
        org.junit.Assert.assertNotNull(userList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(user80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.Professor professor79 = aluno75.getProfessor();
        java.lang.Boolean boolean80 = professor79.isDiponibilidade();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertEquals("'" + boolean80 + "' != '" + true + "'", boolean80, true);
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        java.lang.Boolean boolean37 = aluno35.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor38 = professor20.addAluno(aluno35);
        com.unifacisa.tcc.domain.Professor professor39 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Professor professor40 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor40.removeAluno(aluno41);
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.removeAluno(aluno41);
        professor17.setMatricula((java.lang.Long) (-1L));
        professor17.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent53 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = persistentAuditEvent53.getData();
        persistentAuditEvent53.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long57 = persistentAuditEvent53.getId();
        persistentAuditEvent53.setPrincipal("error.concurrencyFailure");
        persistentAuditEvent53.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent62 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long63 = persistentAuditEvent62.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent64 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant65 = persistentAuditEvent64.getAuditEventDate();
        java.lang.Long long66 = persistentAuditEvent64.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent67 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap68 = persistentAuditEvent67.getData();
        persistentAuditEvent64.setData(strMap68);
        persistentAuditEvent62.setData(strMap68);
        persistentAuditEvent53.setData(strMap68);
        persistentAuditEvent53.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='error.concurrencyFailure', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean74 = professor17.equals((java.lang.Object) persistentAuditEvent53);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(instant65);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant6 = user0.getCreatedDate();
        java.lang.String str7 = user0.getResetKey();
        user0.setActivated(false);
        user0.setId((java.lang.Long) 10L);
        java.lang.String str12 = user0.getLastName();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str12, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.time.Instant instant12 = null;
        java.time.Instant instant14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant12, "error.validation", instant14, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str23 = managedUserVM22.toString();
        boolean boolean24 = authority0.equals((java.lang.Object) managedUserVM22);
        java.lang.String str25 = authority0.getName();
        java.lang.String str26 = authority0.toString();
        java.lang.String str27 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Authority{name='null'}" + "'", str26, "Authority{name='null'}");
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO3 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        user2.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant6 = user2.getResetDate();
        user2.setPassword("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = user2.getCreatedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant9);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}");
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setAuditEventType("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        java.util.Map<java.lang.String, java.lang.String> strMap3 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long5 = persistentAuditEvent4.getId();
        persistentAuditEvent4.setId((java.lang.Long) (-1L));
        java.lang.String str8 = persistentAuditEvent4.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.lang.Long long11 = persistentAuditEvent9.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent12 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap13 = persistentAuditEvent12.getData();
        persistentAuditEvent9.setData(strMap13);
        persistentAuditEvent9.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str17 = persistentAuditEvent9.getAuditEventType();
        java.lang.Long long18 = persistentAuditEvent9.getId();
        java.lang.String str19 = persistentAuditEvent9.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent20 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant21 = persistentAuditEvent20.getAuditEventDate();
        java.lang.Long long22 = persistentAuditEvent20.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent23 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = persistentAuditEvent23.getData();
        persistentAuditEvent20.setData(strMap24);
        java.util.Map<java.lang.String, java.lang.String> strMap26 = persistentAuditEvent20.getData();
        persistentAuditEvent9.setData(strMap26);
        persistentAuditEvent4.setData(strMap26);
        persistentAuditEvent0.setData(strMap26);
        java.lang.String str30 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str17, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str19, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=false}" + "'", str30, "LoginVM{username='error.concurrencyFailure', rememberMe=false}");
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = user0.getImageUrl();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        java.lang.String str8 = user7.getCreatedBy();
        java.lang.String str9 = user7.getLastModifiedBy();
        user7.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str12 = user7.toString();
        java.time.Instant instant13 = user7.getCreatedDate();
        user0.setResetDate(instant13);
        user0.setPassword("");
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setImageUrl("Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str12, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant13);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLogin();
        java.lang.String str35 = userDTO33.getImageUrl();
        java.lang.String str36 = userDTO33.getLastName();
        userDTO33.setId((java.lang.Long) 100L);
        java.lang.String str39 = userDTO33.getLastName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.concurrencyFailure" + "'", str36, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str5 = userDTO4.getImageUrl();
        java.lang.String str6 = userDTO4.getEmail();
        java.lang.String str7 = userDTO4.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        java.lang.String str20 = professor5.toString();
        com.unifacisa.tcc.domain.Professor professor22 = professor5.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor22.primeiroNome("");
        professor22.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor43 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = professor0.primeiroNome("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.Professor professor46 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str54 = aluno53.getEmail();
        aluno53.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray57 = new com.unifacisa.tcc.domain.Aluno[] { aluno47, aluno48, aluno52, aluno53 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet58 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet58, alunoArray57);
        professor46.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet58);
        java.lang.String str61 = professor46.toString();
        com.unifacisa.tcc.domain.Professor professor63 = professor46.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa65 = professor63.primeiroNome("");
        professor63.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor68 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str71 = aluno70.getEmail();
        aluno70.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str76 = aluno75.getEmail();
        aluno75.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray79 = new com.unifacisa.tcc.domain.Aluno[] { aluno69, aluno70, aluno74, aluno75 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet80 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet80, alunoArray79);
        professor68.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet80);
        professor63.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet80);
        com.unifacisa.tcc.domain.Professor professor84 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet80);
        professor0.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str20, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(pessoa45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(alunoArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str61, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(pessoa65);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(alunoArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(professor84);
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = socialUserConnection0.getUserId();
        java.lang.String str6 = socialUserConnection0.getUserId();
        socialUserConnection0.setRefreshToken("LoggerVM{name='', level='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getExpireTime();
        java.lang.String str6 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("error.concurrencyFailure");
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long10 = persistentAuditEvent9.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.lang.Long long13 = persistentAuditEvent11.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent14 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = persistentAuditEvent14.getData();
        persistentAuditEvent11.setData(strMap15);
        persistentAuditEvent9.setData(strMap15);
        persistentAuditEvent0.setData(strMap15);
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='error.concurrencyFailure', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant21 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(instant21);
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.String str6 = user0.getLastName();
        java.lang.String str7 = user0.getCreatedBy();
        java.time.Instant instant8 = user0.getResetDate();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getLangKey();
        java.time.Instant instant11 = user9.getCreatedDate();
        user0.setResetDate(instant11);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(instant11);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        professor18.setMatricula((java.lang.Long) 1L);
        java.lang.String str23 = professor18.getEmail();
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        professor24.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        java.lang.Boolean boolean58 = aluno56.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor59 = professor41.addAluno(aluno56);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection64 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean65 = aluno60.equals((java.lang.Object) socialUserConnection64);
        socialUserConnection64.setRefreshToken("error.validation");
        socialUserConnection64.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean70 = aluno56.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str71 = aluno56.toString();
        com.unifacisa.tcc.domain.Aluno aluno73 = aluno56.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str74 = aluno56.toString();
        com.unifacisa.tcc.domain.Professor professor75 = professor24.removeAluno(aluno56);
        com.unifacisa.tcc.domain.Professor professor77 = professor24.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor79 = professor24.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa81 = professor24.segundoNome("");
        java.lang.Long long82 = professor24.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet83 = professor24.getAlunos();
        professor18.setAlunos(alunoSet83);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str71, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str74, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(pessoa81);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNotNull(alunoSet83);
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user4 = userMapper0.userFromId((java.lang.Long) 100L);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant27, "error.validation", instant29, (java.util.Set<java.lang.String>) strSet35);
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet35);
        java.lang.String str39 = userDTO38.getLastModifiedBy();
        java.lang.String str40 = userDTO38.toString();
        java.lang.String str41 = userDTO38.toString();
        java.lang.String str42 = userDTO38.getEmail();
        java.util.Set<java.lang.String> strSet43 = userDTO38.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet44 = userMapper0.authoritiesFromStrings(strSet43);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant56 = null;
        java.time.Instant instant58 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM66 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant56, "error.validation", instant58, (java.util.Set<java.lang.String>) strSet64);
        java.lang.String str67 = managedUserVM66.getFirstName();
        java.lang.String str68 = managedUserVM66.getPassword();
        java.util.Set<java.lang.String> strSet69 = managedUserVM66.getAuthorities();
        java.util.Set<java.lang.String> strSet70 = managedUserVM66.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet71 = userMapper45.authoritiesFromStrings(strSet70);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper72 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray73 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList74 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList74, userArray73);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList76 = userMapper72.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList74);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper77 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray78 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList79 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList79, userArray78);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList81 = userMapper77.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList79);
        java.util.List<com.unifacisa.tcc.domain.User> userList82 = userMapper72.userDTOsToUsers(userDTOList81);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper83 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray84 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList85 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList85, userArray84);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList87 = userMapper83.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList85);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper88 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray89 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList90 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList90, userArray89);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList92 = userMapper88.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList93 = userMapper83.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper72.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.domain.User> userList95 = userMapper45.userDTOsToUsers(userDTOList92);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList96 = userMapper0.usersToUserDTOs(userList95);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user4);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str40, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str41, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "error.concurrencyFailure" + "'", str42, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(authoritySet44);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "error.concurrencyFailure" + "'", str68, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(authoritySet71);
        org.junit.Assert.assertNotNull(userArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(userDTOList76);
        org.junit.Assert.assertNotNull(userArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(userDTOList81);
        org.junit.Assert.assertNotNull(userList82);
        org.junit.Assert.assertNotNull(userArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(userDTOList87);
        org.junit.Assert.assertNotNull(userArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(userDTOList92);
        org.junit.Assert.assertNotNull(userList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(userList95);
        org.junit.Assert.assertNotNull(userDTOList96);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        boolean boolean4 = user0.getActivated();
        user0.setResetKey("LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str7 = user0.getImageUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList15 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource16 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList17 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList18 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList19 = logsResource16.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str21 = loggerVM20.getName();
        loggerVM20.setLevel("error.validation");
        java.lang.String str24 = loggerVM20.getLevel();
        java.lang.String str25 = loggerVM20.toString();
        java.lang.String str26 = loggerVM20.toString();
        loggerVM20.setName("error.concurrencyFailure");
        java.lang.String str29 = loggerVM20.getName();
        logsResource16.changeLevel(loggerVM20);
        logsResource0.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM32 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str33 = loggerVM32.getName();
        loggerVM32.setLevel("error.validation");
        java.lang.String str36 = loggerVM32.getLevel();
        java.lang.String str37 = loggerVM32.toString();
        java.lang.String str38 = loggerVM32.toString();
        loggerVM32.setName("");
        java.lang.String str41 = loggerVM32.toString();
        logsResource0.changeLevel(loggerVM32);
        java.lang.String str43 = loggerVM32.getName();
        java.lang.String str44 = loggerVM32.getName();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(loggerVMList15);
        org.junit.Assert.assertNotNull(loggerVMList17);
        org.junit.Assert.assertNotNull(loggerVMList18);
        org.junit.Assert.assertNotNull(loggerVMList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.validation" + "'", str24, "error.validation");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str25, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str26, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "error.concurrencyFailure" + "'", str29, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.validation" + "'", str36, "error.validation");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str37, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str38, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "LoggerVM{name='', level='error.validation'}" + "'", str41, "LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        java.lang.String str9 = socialUserConnection0.toString();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setAccessToken("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=100, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection87 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str88 = socialUserConnection87.getUserId();
        java.lang.Long long89 = socialUserConnection87.getRank();
        java.lang.String str90 = socialUserConnection87.getSecret();
        java.lang.String str91 = socialUserConnection87.toString();
        java.lang.Long long92 = socialUserConnection87.getExpireTime();
        boolean boolean93 = user0.equals((java.lang.Object) socialUserConnection87);
        socialUserConnection87.setUserId("");
        java.lang.Long long96 = socialUserConnection87.getRank();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(long89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str91, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(long96);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.segundoNome("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = aluno0.matricula((java.lang.Long) 0L);
        java.lang.String str10 = aluno0.getEmail();
        aluno0.setPrimeiroNome("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(aluno14);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor23 = professor21.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor23.segundoNome("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa27 = pessoa25.matricula((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNotNull(pessoa27);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        java.lang.Boolean boolean38 = aluno36.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor39 = professor21.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor46 = professor41.removeAluno(aluno42);
        com.unifacisa.tcc.domain.Professor professor47 = professor18.removeAluno(aluno42);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor47.numeroContato((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        java.lang.String str6 = socialUserConnection0.getProviderId();
        java.lang.String str7 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.util.Set<java.lang.String> strSet22 = managedUserVM20.getAuthorities();
        managedUserVM20.setLogin("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        boolean boolean25 = managedUserVM20.isActivated();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        com.unifacisa.tcc.domain.User user88 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO89 = new com.unifacisa.tcc.service.dto.UserDTO(user88);
        java.time.Instant instant90 = userDTO89.getLastModifiedDate();
        user0.setLastModifiedDate(instant90);
        java.time.Instant instant92 = user0.getLastModifiedDate();
        java.time.Instant instant93 = user0.getCreatedDate();
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant90);
        org.junit.Assert.assertNotNull(instant92);
        org.junit.Assert.assertNotNull(instant93);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.time.Instant instant7 = managedUserVM0.getCreatedDate();
        java.lang.String str8 = managedUserVM0.getLangKey();
        managedUserVM0.setId((java.lang.Long) 10L);
        java.lang.String str11 = managedUserVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        java.lang.String str35 = userDTO33.getLogin();
        java.lang.String str36 = userDTO33.getLangKey();
        java.lang.String str37 = userDTO33.getLangKey();
        java.lang.String str38 = userDTO33.toString();
        java.lang.String str39 = userDTO33.getImageUrl();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.validation" + "'", str36, "error.validation");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.validation" + "'", str37, "error.validation");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str38, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.lang.String str7 = user0.getLangKey();
        java.time.Instant instant8 = user0.getResetDate();
        java.lang.String str9 = user0.toString();
        java.time.Instant instant10 = user0.getCreatedDate();
        java.lang.String str11 = user0.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.validation", "hi!", (java.lang.Long) 100L, "hi!", "error.concurrencyFailure", "error.concurrencyFailure", "error.validation", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "", (java.lang.Long) 100L);
        java.lang.String str12 = socialUserConnection11.getImageURL();
        socialUserConnection11.setRefreshToken("Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "error.concurrencyFailure" + "'", str12, "error.concurrencyFailure");
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray30 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList31 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList31, userArray30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList31);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray35 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList36 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList36, userArray35);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList36);
        java.util.List<com.unifacisa.tcc.domain.User> userList39 = userMapper29.userDTOsToUsers(userDTOList38);
        java.util.List<com.unifacisa.tcc.domain.User> userList40 = userMapper0.userDTOsToUsers(userDTOList38);
        com.unifacisa.tcc.domain.User user42 = userMapper0.userFromId((java.lang.Long) 0L);
        user42.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        user42.setFirstName("LoggerVM{name='null', level='Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userDTOList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(user42);
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant5 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(instant5);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str8 = user0.getLastName();
        user0.setLastModifiedBy("");
        java.time.Instant instant11 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant11);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getRefreshToken();
        java.lang.Long long11 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        java.lang.Long long38 = professor34.getNumeroContato();
        professor34.setEmail("");
        java.lang.String str41 = professor34.toString();
        java.lang.Boolean boolean42 = professor34.isDiponibilidade();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str41, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + boolean42 + "' != '" + true + "'", boolean42, true);
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setLastName("LoginVM{username='null', rememberMe=null}");
        user0.setImageUrl("hi!");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet12 = user0.getAuthorities();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(authoritySet12);
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.toString();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        user11.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = userDTO15.getLastModifiedDate();
        user6.setCreatedDate(instant16);
        user0.setResetDate(instant16);
        java.lang.String str19 = user0.getFirstName();
        java.lang.String str20 = user0.getPassword();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str22 = loggerVM21.getName();
        loggerVM21.setLevel("error.validation");
        java.lang.String str25 = loggerVM21.getLevel();
        java.lang.String str26 = loggerVM21.toString();
        java.lang.String str27 = loggerVM21.getLevel();
        loggerVM21.setLevel("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean30 = user0.equals((java.lang.Object) "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.validation" + "'", str25, "error.validation");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str26, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.validation" + "'", str27, "error.validation");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        java.lang.String str5 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str5, "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        java.lang.String str9 = user0.getLangKey();
        user0.setPassword("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        java.lang.String str12 = user0.getLogin();
        user0.setLastModifiedBy("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant14, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant16, (java.util.Set<java.lang.String>) strSet47);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet52 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.domain.User user54 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user56 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO(user57);
        java.lang.String str59 = user57.toString();
        user57.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = userMapper0.userToUserDTO(user57);
        java.lang.String str63 = user57.getPassword();
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO(user64);
        java.lang.String str66 = user64.toString();
        com.unifacisa.tcc.domain.User user67 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO(user67);
        java.lang.String str69 = user67.getImageUrl();
        boolean boolean71 = user67.equals((java.lang.Object) (byte) -1);
        java.lang.String str72 = user67.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet73 = user67.getAuthorities();
        user64.setAuthorities(authoritySet73);
        user64.setResetKey("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant77 = user64.getResetDate();
        com.unifacisa.tcc.domain.User user78 = new com.unifacisa.tcc.domain.User();
        java.lang.String str79 = user78.getCreatedBy();
        java.lang.String str80 = user78.getLangKey();
        java.lang.String str81 = user78.getCreatedBy();
        com.unifacisa.tcc.domain.User user82 = new com.unifacisa.tcc.domain.User();
        java.lang.String str83 = user82.getCreatedBy();
        java.lang.String str84 = user82.getLangKey();
        java.time.Instant instant85 = user82.getCreatedDate();
        user78.setLastModifiedDate(instant85);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet87 = user78.getAuthorities();
        user64.setAuthorities(authoritySet87);
        user57.setAuthorities(authoritySet87);
        user57.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(authoritySet52);
        org.junit.Assert.assertNotNull(user54);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str59, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userDTO62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str66, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(authoritySet73);
        org.junit.Assert.assertNull(instant77);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(instant85);
        org.junit.Assert.assertNotNull(authoritySet87);
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.Professor professor79 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa81 = professor79.primeiroNome("Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(pessoa81);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.lang.String str5 = managedUserVM0.getLangKey();
        managedUserVM0.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user8);
        java.lang.String str10 = user8.getImageUrl();
        boolean boolean12 = user8.equals((java.lang.Object) (byte) -1);
        java.lang.String str13 = user8.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet14 = user8.getAuthorities();
        com.unifacisa.tcc.domain.User user24 = new com.unifacisa.tcc.domain.User();
        user24.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str27 = user24.getLastName();
        java.time.Instant instant28 = user24.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        java.lang.String str31 = user30.getCreatedBy();
        java.lang.String str32 = user30.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        user33.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant36 = user33.getLastModifiedDate();
        user30.setCreatedDate(instant36);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant60 = null;
        java.time.Instant instant62 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant60, "error.validation", instant62, (java.util.Set<java.lang.String>) strSet68);
        com.unifacisa.tcc.service.dto.UserDTO userDTO71 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant47, "", instant49, (java.util.Set<java.lang.String>) strSet68);
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant28, "", instant36, (java.util.Set<java.lang.String>) strSet68);
        user8.setCreatedDate(instant28);
        managedUserVM0.setLastModifiedDate(instant28);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(authoritySet14);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str27, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.String str8 = loginVM0.getUsername();
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long44 = userDTO43.getId();
        java.lang.String str45 = userDTO43.getCreatedBy();
        boolean boolean46 = userDTO43.isActivated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno75.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor81 = aluno75.getProfessor();
        java.lang.String str82 = professor81.getSegundoNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.getEmail();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user10);
        java.lang.String str12 = user10.getImageUrl();
        boolean boolean14 = user10.equals((java.lang.Object) (byte) -1);
        java.lang.String str15 = user10.getLastName();
        user10.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant18 = user10.getCreatedDate();
        java.lang.String str19 = user10.getLastModifiedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet20 = user10.getAuthorities();
        user0.setAuthorities(authoritySet20);
        user0.setActivated(true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(authoritySet20);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str11 = persistentAuditEvent10.getPrincipal();
        java.lang.Long long12 = persistentAuditEvent10.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long14 = persistentAuditEvent13.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant16 = persistentAuditEvent15.getAuditEventDate();
        java.lang.Long long17 = persistentAuditEvent15.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent18 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = persistentAuditEvent18.getData();
        persistentAuditEvent15.setData(strMap19);
        persistentAuditEvent13.setData(strMap19);
        persistentAuditEvent10.setData(strMap19);
        persistentAuditEvent0.setData(strMap19);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.lang.String str26 = persistentAuditEvent0.getAuditEventType();
        java.lang.String str27 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}" + "'", str26, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = user0.getAuthorities();
        java.lang.String str5 = user0.getPassword();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        java.time.Instant instant8 = null;
        user6.setLastModifiedDate(instant8);
        java.lang.String str10 = user6.getEmail();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str14 = user11.getLastName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = user11.getCreatedDate();
        user6.setLastModifiedDate(instant16);
        user0.setResetDate(instant16);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(authoritySet4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str14, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant16);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("error.validation");
        loggerVM5.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str11 = loggerVM5.getLevel();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str11, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant20 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant45 = null;
        java.time.Instant instant47 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant45, "error.validation", instant47, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant20, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant22, (java.util.Set<java.lang.String>) strSet53);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet58 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet53);
        boolean boolean59 = authority0.equals((java.lang.Object) userMapper6);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM60 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM60.setKey("error.concurrencyFailure");
        java.lang.String str63 = keyAndPasswordVM60.getNewPassword();
        keyAndPasswordVM60.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM60.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str68 = keyAndPasswordVM60.getNewPassword();
        java.lang.String str69 = keyAndPasswordVM60.getKey();
        java.lang.String str70 = keyAndPasswordVM60.getKey();
        boolean boolean71 = authority0.equals((java.lang.Object) str70);
        java.lang.String str72 = authority0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(authoritySet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str68, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "error.concurrencyFailure" + "'", str69, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "error.concurrencyFailure" + "'", str70, "error.concurrencyFailure");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str72, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProfileURL();
        java.lang.String str2 = socialUserConnection0.getProfileURL();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 0L, "LoginVM{username='null', rememberMe=null}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "", "LoggerVM{name='null', level='null'}", (java.lang.Long) 0L);
        socialUserConnection11.setId((java.lang.Long) 1L);
        socialUserConnection11.setRefreshToken("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection11.setId((java.lang.Long) 10L);
        java.lang.String str18 = socialUserConnection11.getImageURL();
        socialUserConnection11.setSecret("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        java.lang.Class<?> wildcardClass21 = socialUserConnection11.getClass();
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant34, "error.validation", instant36, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO46 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant9, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant11, (java.util.Set<java.lang.String>) strSet42);
        java.lang.String str47 = userDTO46.getLogin();
        java.lang.String str48 = userDTO46.getImageUrl();
        java.lang.String str49 = userDTO46.getEmail();
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str48, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection4.setProviderId("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getEmail();
        java.lang.String str6 = user0.getLangKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant8 = userDTO7.getCreatedDate();
        java.lang.Long long9 = userDTO7.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        java.lang.Long long20 = professor17.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        java.lang.Boolean boolean38 = aluno36.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor39 = professor21.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = aluno36.getProfessor();
        java.lang.String str42 = aluno36.getEmail();
        com.unifacisa.tcc.domain.Professor professor43 = professor17.addAluno(aluno36);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray56 = new com.unifacisa.tcc.domain.Aluno[] { aluno46, aluno47, aluno51, aluno52 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet57 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet57, alunoArray56);
        professor45.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        aluno44.setProfessor(professor45);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM61 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM61.setKey("error.concurrencyFailure");
        java.lang.String str64 = keyAndPasswordVM61.getNewPassword();
        boolean boolean65 = aluno44.equals((java.lang.Object) str64);
        com.unifacisa.tcc.domain.Professor professor66 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray77 = new com.unifacisa.tcc.domain.Aluno[] { aluno67, aluno68, aluno72, aluno73 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet78 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet78, alunoArray77);
        professor66.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str82 = aluno81.getEmail();
        java.lang.Boolean boolean83 = aluno81.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor84 = professor66.addAluno(aluno81);
        aluno81.setNumeroContato((java.lang.Long) 0L);
        boolean boolean87 = aluno44.equals((java.lang.Object) aluno81);
        java.lang.String str88 = aluno81.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor89 = professor43.removeAluno(aluno81);
        aluno81.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(alunoArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(alunoArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(professor84);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(professor89);
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str39 = aluno0.getEmail();
        java.lang.Boolean boolean40 = aluno0.isHabilitadoTcc();
        aluno0.setPrimeiroNome("UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long43 = aluno0.getId();
        aluno0.setNumeroContato((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
        org.junit.Assert.assertNull(long43);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        java.lang.String str13 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray22 = new com.unifacisa.tcc.domain.Aluno[] { aluno12, aluno13, aluno17, aluno18 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet23 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet23, alunoArray22);
        professor11.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet23);
        java.lang.String str26 = professor11.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor11.getAlunos();
        java.time.Instant instant37 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant50 = null;
        java.time.Instant instant52 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM60 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant50, "error.validation", instant52, (java.util.Set<java.lang.String>) strSet58);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant37, "", instant39, (java.util.Set<java.lang.String>) strSet58);
        java.lang.String str62 = userDTO61.getLastName();
        java.lang.String str63 = userDTO61.getEmail();
        userDTO61.setId((java.lang.Long) 0L);
        java.lang.String str66 = userDTO61.getImageUrl();
        userDTO61.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean69 = professor11.equals((java.lang.Object) userDTO61);
        boolean boolean70 = socialUserConnection0.equals((java.lang.Object) userDTO61);
        java.lang.String str71 = userDTO61.getLastName();
        java.lang.String str72 = userDTO61.getLastModifiedBy();
        java.lang.String str73 = userDTO61.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(alunoArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str26, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "error.concurrencyFailure" + "'", str62, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "error.concurrencyFailure" + "'", str63, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "error.concurrencyFailure" + "'", str71, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "hi!" + "'", str73, "hi!");
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO40 = new com.unifacisa.tcc.service.dto.UserDTO(user39);
        java.lang.String str41 = user39.getImageUrl();
        java.lang.String str42 = user39.getEmail();
        boolean boolean43 = user39.getActivated();
        java.time.Instant instant44 = user39.getResetDate();
        boolean boolean45 = aluno0.equals((java.lang.Object) user39);
        com.unifacisa.tcc.domain.Professor professor46 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str54 = aluno53.getEmail();
        aluno53.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray57 = new com.unifacisa.tcc.domain.Aluno[] { aluno47, aluno48, aluno52, aluno53 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet58 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet58, alunoArray57);
        professor46.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet58);
        java.lang.String str61 = professor46.toString();
        com.unifacisa.tcc.domain.Professor professor63 = professor46.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa65 = professor63.primeiroNome("");
        professor63.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor63.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str79 = aluno78.getEmail();
        aluno78.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno72, aluno73, aluno77, aluno78 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        professor71.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        aluno70.setProfessor(professor71);
        java.lang.String str87 = aluno70.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa89 = aluno70.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor90 = professor63.removeAluno(aluno70);
        professor90.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa94 = professor90.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno95 = aluno0.professor(professor90);
        java.lang.String str96 = professor90.getSegundoNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(alunoArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str61, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(pessoa65);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa89);
        org.junit.Assert.assertNotNull(professor90);
        org.junit.Assert.assertNotNull(pessoa94);
        org.junit.Assert.assertNotNull(aluno95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='true'}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", (java.lang.Long) (-1L), "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoggerVM{name='null', level='null'}", (java.lang.Long) 100L);
        socialUserConnection11.setSecret("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection11.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLastModifiedBy();
        java.time.Instant instant11 = user0.getCreatedDate();
        user0.setActivated(false);
        java.lang.String str14 = user0.getFirstName();
        user0.setImageUrl("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long5 = user0.getId();
        user0.setImageUrl("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList6 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList7 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM8 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str9 = loggerVM8.getName();
        loggerVM8.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str12 = loggerVM8.toString();
        loggerVM8.setName("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        logsResource0.changeLevel(loggerVM8);
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNotNull(loggerVMList6);
        org.junit.Assert.assertNotNull(loggerVMList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}" + "'", str12, "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str5, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.validation", "hi!", (java.lang.Long) 100L, "hi!", "error.concurrencyFailure", "error.concurrencyFailure", "error.validation", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "", (java.lang.Long) 100L);
        java.lang.Long long12 = socialUserConnection11.getId();
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Class<?> wildcardClass5 = authority0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str44 = userDTO43.getLastModifiedBy();
        userDTO43.setId((java.lang.Long) 10L);
        userDTO43.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getCreatedBy();
        java.time.Instant instant21 = managedUserVM19.getCreatedDate();
        boolean boolean22 = professor0.equals((java.lang.Object) managedUserVM19);
        boolean boolean23 = managedUserVM19.isActivated();
        java.time.Instant instant24 = managedUserVM19.getCreatedDate();
        java.lang.String str25 = managedUserVM19.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(instant24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str25, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa18 = aluno0.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor19 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        java.lang.String str35 = professor20.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor20.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor38 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray49 = new com.unifacisa.tcc.domain.Aluno[] { aluno39, aluno40, aluno44, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet50 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet50, alunoArray49);
        professor38.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        com.unifacisa.tcc.domain.Professor professor53 = professor37.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        aluno0.setProfessor(professor53);
        aluno0.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor57 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(pessoa18);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(alunoArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor57);
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user4 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user5);
        java.lang.String str7 = user5.getImageUrl();
        java.lang.String str8 = user5.getLangKey();
        java.lang.String str9 = user5.getLogin();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet10 = user5.getAuthorities();
        java.lang.String str11 = user5.toString();
        boolean boolean12 = user4.equals((java.lang.Object) user5);
        user4.setId((java.lang.Long) 100L);
        java.time.Instant instant15 = user4.getCreatedDate();
        user4.setLangKey("Professor{id=null, primeiroNome='null', segundoNome='', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(authoritySet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(instant15);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getCreatedBy();
        java.time.Instant instant21 = managedUserVM19.getCreatedDate();
        boolean boolean22 = professor0.equals((java.lang.Object) managedUserVM19);
        boolean boolean23 = managedUserVM19.isActivated();
        java.lang.String str24 = managedUserVM19.getImageUrl();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = aluno0.segundoNome("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        pessoa46.setSegundoNome("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        java.lang.String str49 = pessoa46.getSegundoNome();
        pessoa46.setNumeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str49, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        boolean boolean12 = userDTO11.isActivated();
        java.lang.String str13 = userDTO11.getLangKey();
        java.lang.String str14 = userDTO11.getEmail();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        java.lang.String str15 = user12.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper0.userToUserDTO(user12);
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.time.Instant instant19 = user17.getResetDate();
        java.lang.String str20 = user17.getResetKey();
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str34 = user31.getLastName();
        java.time.Instant instant35 = user31.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str40 = user37.getLastName();
        java.time.Instant instant41 = user37.getLastModifiedDate();
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.service.dto.UserDTO userDTO75 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant51, "", instant53, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant35, "", instant41, (java.util.Set<java.lang.String>) strSet72);
        user17.setResetDate(instant35);
        user17.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str80 = user17.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user17);
        com.unifacisa.tcc.domain.User user82 = new com.unifacisa.tcc.domain.User();
        java.lang.String str83 = user82.getCreatedBy();
        java.lang.String str84 = user82.getLangKey();
        java.lang.String str85 = user82.getCreatedBy();
        com.unifacisa.tcc.domain.User user86 = new com.unifacisa.tcc.domain.User();
        java.lang.String str87 = user86.getCreatedBy();
        java.lang.String str88 = user86.getLangKey();
        java.time.Instant instant89 = user86.getCreatedDate();
        user82.setLastModifiedDate(instant89);
        user17.setCreatedDate(instant89);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str34, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(instant89);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        java.lang.String str8 = user0.getLogin();
        java.lang.Long long9 = user0.getId();
        java.time.Instant instant10 = user0.getLastModifiedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(instant10);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getPassword();
        java.time.Instant instant11 = user0.getResetDate();
        java.lang.String str12 = user0.getImageUrl();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.String str6 = user0.getLastName();
        java.lang.String str7 = user0.getCreatedBy();
        java.time.Instant instant8 = user0.getResetDate();
        user0.setCreatedBy("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        user0.setImageUrl("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user0.setFirstName("LoginVM{username='LoggerVM{name='null', level='error.validation'}', rememberMe=null}");
        java.time.Instant instant9 = user0.getResetDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet40 = professor39.getAlunos();
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM41 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str42 = loginVM41.getPassword();
        loginVM41.setPassword("Authority{name='null'}");
        loginVM41.setUsername("Authority{name='null'}");
        java.lang.String str47 = loginVM41.toString();
        loginVM41.setRememberMe((java.lang.Boolean) false);
        loginVM41.setPassword("");
        loginVM41.setUsername("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        boolean boolean54 = professor39.equals((java.lang.Object) "SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(alunoSet40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str47, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("Authority{name='null'}");
        java.lang.Long long10 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setAccessToken("LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setSecret("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        java.lang.String str10 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}', refreshToken='null', expireTime=null}" + "'", str10, "SocialUserConnection{id=1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        user0.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant27, "error.validation", instant29, (java.util.Set<java.lang.String>) strSet35);
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet35);
        java.lang.String str39 = userDTO38.getLastModifiedBy();
        java.time.Instant instant40 = userDTO38.getLastModifiedDate();
        boolean boolean41 = user0.equals((java.lang.Object) userDTO38);
        user0.setId((java.lang.Long) 1L);
        user0.setImageUrl("ManagedUserVM{} UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.Boolean boolean3 = loginVM0.isRememberMe();
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        loginVM0.setUsername("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
        loginVM0.setPassword("LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}");
        java.lang.String str10 = loginVM0.getPassword();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str4, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}" + "'", str10, "LoginVM{username='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}', rememberMe=false}");
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        java.lang.String str1 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str2 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("error.validation");
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("hi!");
        keyAndPasswordVM0.setKey("LoggerVM{name='null', level='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}");
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.validation" + "'", str5, "error.validation");
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProfileURL();
        java.lang.String str2 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 10L);
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str7 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("LoginVM{username='LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet16 = professor0.getAlunos();
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        java.lang.String str51 = userDTO50.getLastName();
        java.lang.String str52 = userDTO50.getEmail();
        userDTO50.setId((java.lang.Long) 0L);
        java.lang.String str55 = userDTO50.getImageUrl();
        userDTO50.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean58 = professor0.equals((java.lang.Object) userDTO50);
        userDTO50.setId((java.lang.Long) 100L);
        java.lang.String str61 = userDTO50.getLogin();
        boolean boolean62 = userDTO50.isActivated();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet16);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "error.concurrencyFailure" + "'", str51, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "error.concurrencyFailure" + "'", str52, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str61, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str16 = loggerVM15.getName();
        loggerVM15.setLevel("error.validation");
        java.lang.String str19 = loggerVM15.getLevel();
        java.lang.String str20 = loggerVM15.toString();
        java.lang.String str21 = loggerVM15.toString();
        loggerVM15.setName("error.concurrencyFailure");
        java.lang.String str24 = loggerVM15.getLevel();
        java.lang.String str25 = loggerVM15.getName();
        loggerVM15.setLevel("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM15);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM29 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str30 = loggerVM29.getLevel();
        java.lang.String str31 = loggerVM29.toString();
        java.lang.String str32 = loggerVM29.getLevel();
        loggerVM29.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='true', langKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', activationKey='null'}");
        logsResource0.changeLevel(loggerVM29);
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.validation" + "'", str19, "error.validation");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str20, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str21, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.validation" + "'", str24, "error.validation");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.concurrencyFailure" + "'", str25, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str31, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        java.lang.Boolean boolean38 = aluno36.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor39 = professor21.addAluno(aluno36);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor46 = professor41.removeAluno(aluno42);
        com.unifacisa.tcc.domain.Professor professor47 = professor18.removeAluno(aluno42);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        java.lang.Boolean boolean50 = aluno48.isHabilitadoTcc();
        aluno48.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = aluno48.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        aluno48.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor57 = professor47.addAluno(aluno48);
        aluno48.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long60 = aluno48.getId();
        java.lang.Long long61 = aluno48.getNumeroContato();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        socialUserConnection0.setAccessToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str11 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor78 = aluno77.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno77.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno77.habilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean83 = aluno77.isHabilitadoTcc();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + true + "'", boolean83, true);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Professor professor19 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Professor professor20 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor25 = professor20.removeAluno(aluno21);
        aluno21.setHabilitadoTcc((java.lang.Boolean) true);
        aluno21.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno31 = aluno21.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(aluno31);
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        socialUserConnection0.setImageURL("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str8 = socialUserConnection0.getAccessToken();
        java.lang.Long long9 = socialUserConnection0.getRank();
        socialUserConnection0.setImageURL("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM17 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM17.setKey("error.concurrencyFailure");
        java.lang.String str20 = keyAndPasswordVM17.getNewPassword();
        boolean boolean21 = aluno0.equals((java.lang.Object) str20);
        java.lang.Boolean boolean22 = aluno0.isHabilitadoTcc();
        java.lang.Boolean boolean23 = aluno0.isHabilitadoTcc();
        aluno0.setPrimeiroNome("");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getId();
        socialUserConnection0.setId((java.lang.Long) 10L);
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.Long long10 = socialUserConnection0.getRank();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        java.lang.Boolean boolean25 = aluno23.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor26 = aluno23.getProfessor();
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        java.lang.String str42 = professor27.toString();
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        aluno50.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray54 = new com.unifacisa.tcc.domain.Aluno[] { aluno44, aluno45, aluno49, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet55 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet55, alunoArray54);
        professor43.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        com.unifacisa.tcc.domain.Professor professor58 = professor27.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        com.unifacisa.tcc.domain.Aluno aluno59 = aluno23.professor(professor58);
        com.unifacisa.tcc.domain.Aluno aluno61 = aluno23.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor62 = professor18.removeAluno(aluno61);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa64 = aluno61.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa66 = aluno61.segundoNome("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        pessoa66.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(professor26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str42, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(alunoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(aluno59);
        org.junit.Assert.assertNotNull(aluno61);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNotNull(pessoa64);
        org.junit.Assert.assertNotNull(pessoa66);
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        java.lang.String str9 = loginVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str9, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setAccessToken("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setId((java.lang.Long) 10L);
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.String str3 = loginVM0.getPassword();
        java.lang.String str4 = loginVM0.getPassword();
        java.lang.String str5 = loginVM0.toString();
        loginVM0.setUsername("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str8 = loginVM0.getUsername();
        java.lang.String str9 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str5, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str8, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.toString();
        java.lang.String str7 = authority0.toString();
        authority0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}" + "'", str6, "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}" + "'", str7, "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor2 = aluno0.getProfessor();
        java.lang.String str3 = aluno0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str1, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet5 = user0.getAuthorities();
        java.lang.String str6 = user0.getResetKey();
        user0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(authoritySet5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.time.Instant instant22 = managedUserVM20.getLastModifiedDate();
        java.time.Instant instant23 = managedUserVM20.getLastModifiedDate();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNull(instant23);
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.lang.Long long6 = persistentAuditEvent0.getId();
        java.lang.String str7 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str4 = loggerVM0.toString();
        java.lang.String str5 = loggerVM0.getName();
        java.lang.String str6 = loggerVM0.getLevel();
        java.lang.String str7 = loggerVM0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}" + "'", str4, "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str6, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str5 = loginVM0.getUsername();
        java.lang.String str6 = loginVM0.getUsername();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str5, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str6, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLogin();
        user0.setLastName("");
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        java.lang.String str17 = user0.getEmail();
        java.lang.String str18 = user0.getImageUrl();
        java.lang.String str19 = user0.getLastModifiedBy();
        java.lang.String str20 = user0.getLastModifiedBy();
        user0.setResetKey("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str20, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastModifiedBy();
        user0.setImageUrl("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str6 = user0.getActivationKey();
        java.lang.String str7 = user0.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        java.lang.String str8 = socialUserConnection0.toString();
        socialUserConnection0.setUserId("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.lang.String str11 = socialUserConnection0.getImageURL();
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='null'}");
        socialUserConnection0.setAccessToken("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno35, aluno36, aluno40, aluno41 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor34.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        java.lang.Boolean boolean51 = aluno49.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor52 = professor34.addAluno(aluno49);
        aluno49.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str56 = professor55.getPrimeiroNome();
        java.lang.Boolean boolean57 = professor55.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa59 = professor55.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno49.professor(professor55);
        com.unifacisa.tcc.domain.Professor professor61 = professor0.removeAluno(aluno49);
        java.lang.String str62 = professor0.getSegundoNome();
        professor0.setPrimeiroNome("Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(pessoa59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        keyAndPasswordVM0.setNewPassword("error.concurrencyFailure");
        keyAndPasswordVM0.setKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str8 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.concurrencyFailure" + "'", str7, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str8, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str11, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor0.email("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Boolean boolean7 = professor0.isDiponibilidade();
        java.lang.String str8 = professor0.toString();
        java.lang.String str9 = professor0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}" + "'", str9, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        java.lang.String str48 = professor33.toString();
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Professor professor64 = professor33.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        aluno15.setProfessor(professor64);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet66 = professor64.getAlunos();
        java.lang.String str67 = professor64.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str48, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(professor64);
        org.junit.Assert.assertNotNull(alunoSet66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str67, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getUserId();
        java.lang.String str11 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str14 = socialUserConnection0.getDisplayName();
        java.lang.String str15 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setProviderId("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = user0.getLangKey();
        java.lang.String str6 = user0.getActivationKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        java.lang.String str9 = socialUserConnection0.toString();
        java.lang.String str10 = socialUserConnection0.toString();
        socialUserConnection0.setImageURL("LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        java.lang.String str6 = authority0.getName();
        java.lang.String str7 = authority0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str7, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor23 = professor21.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor23.segundoNome("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        professor23.setEmail("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(pessoa25);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str10 = socialUserConnection4.getRefreshToken();
        socialUserConnection4.setUserId("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str13 = socialUserConnection4.getProviderId();
        java.lang.String str14 = socialUserConnection4.getProviderUserId();
        socialUserConnection4.setAccessToken("Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection4.setSecret("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        socialUserConnection4.setSecret("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.validation" + "'", str10, "error.validation");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getProviderUserId();
        java.lang.String str11 = socialUserConnection0.toString();
        java.lang.Long long12 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("error.validation");
        java.lang.String str9 = loggerVM5.getLevel();
        java.lang.String str10 = loggerVM5.toString();
        loggerVM5.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        loggerVM5.setName("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        logsResource0.changeLevel(loggerVM5);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM16 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str17 = loggerVM16.getName();
        loggerVM16.setLevel("error.validation");
        java.lang.String str20 = loggerVM16.getLevel();
        java.lang.String str21 = loggerVM16.toString();
        java.lang.String str22 = loggerVM16.toString();
        loggerVM16.setName("");
        logsResource0.changeLevel(loggerVM16);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList26 = logsResource0.getList();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "error.validation" + "'", str20, "error.validation");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str21, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str22, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNotNull(loggerVMList26);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.Long long10 = socialUserConnection0.getRank();
        java.lang.String str11 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("LoginVM{username='', rememberMe=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent2 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant3 = persistentAuditEvent2.getAuditEventDate();
        java.lang.Long long4 = persistentAuditEvent2.getId();
        java.lang.Long long5 = persistentAuditEvent2.getId();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.time.Instant instant9 = user6.getCreatedDate();
        persistentAuditEvent2.setAuditEventDate(instant9);
        user0.setResetDate(instant9);
        java.time.Instant instant12 = user0.getResetDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 1L);
        boolean boolean16 = user15.getActivated();
        java.time.Instant instant17 = user15.getLastModifiedDate();
        user0.setLastModifiedDate(instant17);
        java.lang.String str19 = user0.getLogin();
        java.lang.Long long20 = user0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(long20);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        user0.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getFirstName();
        user0.setFirstName("UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str8 = user0.getResetKey();
        user0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.toString();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM10 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM10.setKey("error.concurrencyFailure");
        java.lang.String str13 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        boolean boolean18 = user0.equals((java.lang.Object) keyAndPasswordVM10);
        java.lang.String str19 = keyAndPasswordVM10.getKey();
        java.lang.String str20 = keyAndPasswordVM10.getKey();
        java.lang.String str21 = keyAndPasswordVM10.getKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.concurrencyFailure" + "'", str19, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "error.concurrencyFailure" + "'", str20, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "error.concurrencyFailure" + "'", str21, "error.concurrencyFailure");
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getCreatedBy();
        java.lang.String str7 = managedUserVM0.getImageUrl();
        java.lang.String str8 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        java.time.Instant instant4 = user2.getLastModifiedDate();
        java.time.Instant instant5 = null;
        user2.setResetDate(instant5);
        user2.setImageUrl("LoggerVM{name='null', level='error.validation'}");
        java.time.Instant instant9 = user2.getCreatedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNotNull(instant9);
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.lang.String str2 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setSecret("Authority{name='null'}");
        java.lang.String str18 = socialUserConnection0.getDisplayName();
        java.lang.Long long19 = socialUserConnection0.getRank();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str10, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str18, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long19);
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str11 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str14 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str14, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        persistentAuditEvent0.setPrincipal("LoginVM{username='null', rememberMe=false}");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent0.getData();
        java.lang.String str10 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long11 = persistentAuditEvent0.getId();
        java.time.Instant instant12 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant14 = persistentAuditEvent13.getAuditEventDate();
        java.lang.Long long15 = persistentAuditEvent13.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = persistentAuditEvent16.getData();
        persistentAuditEvent13.setData(strMap17);
        java.util.Map<java.lang.String, java.lang.String> strMap19 = persistentAuditEvent13.getData();
        persistentAuditEvent0.setData(strMap19);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str10, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getPassword();
        java.lang.String str5 = managedUserVM0.getLastModifiedBy();
        boolean boolean6 = managedUserVM0.isActivated();
        java.lang.String str7 = managedUserVM0.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.lang.String str2 = managedUserVM0.getLangKey();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.toString();
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        user13.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str16 = user13.getLastName();
        java.time.Instant instant17 = user13.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.getCreatedBy();
        java.lang.String str21 = user19.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant25 = user22.getLastModifiedDate();
        user19.setCreatedDate(instant25);
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant51 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant49, "error.validation", instant51, (java.util.Set<java.lang.String>) strSet57);
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant36, "", instant38, (java.util.Set<java.lang.String>) strSet57);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant17, "", instant25, (java.util.Set<java.lang.String>) strSet57);
        managedUserVM0.setLastModifiedDate(instant17);
        java.lang.String str63 = managedUserVM0.getLastName();
        java.lang.String str64 = managedUserVM0.getLastModifiedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str16, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.String str12 = socialUserConnection0.toString();
        java.lang.String str13 = socialUserConnection0.getRefreshToken();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection14 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str15 = socialUserConnection14.getUserId();
        java.lang.Long long16 = socialUserConnection14.getRank();
        socialUserConnection14.setExpireTime((java.lang.Long) 0L);
        socialUserConnection14.setId((java.lang.Long) (-1L));
        socialUserConnection14.setExpireTime((java.lang.Long) 0L);
        socialUserConnection14.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str25 = socialUserConnection14.getProfileURL();
        boolean boolean26 = socialUserConnection0.equals((java.lang.Object) str25);
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str10, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str12, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.getLogin();
        java.lang.Long long4 = managedUserVM0.getId();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        java.lang.String str7 = managedUserVM0.getLangKey();
        java.lang.String str8 = managedUserVM0.getFirstName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        keyAndPasswordVM0.setKey("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        loggerVM0.setLevel("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = loggerVM0.getLevel();
        loggerVM0.setName("LoggerVM{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str7, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.time.Instant instant12 = null;
        java.time.Instant instant14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant12, "error.validation", instant14, (java.util.Set<java.lang.String>) strSet20);
        java.lang.String str23 = managedUserVM22.toString();
        boolean boolean24 = authority0.equals((java.lang.Object) managedUserVM22);
        java.lang.String str25 = authority0.getName();
        com.unifacisa.tcc.domain.Authority authority26 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str27 = authority26.toString();
        java.time.Instant instant38 = null;
        java.time.Instant instant40 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM48 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant38, "error.validation", instant40, (java.util.Set<java.lang.String>) strSet46);
        java.lang.String str49 = managedUserVM48.toString();
        boolean boolean50 = authority26.equals((java.lang.Object) managedUserVM48);
        boolean boolean51 = authority0.equals((java.lang.Object) managedUserVM48);
        java.lang.String str52 = managedUserVM48.toString();
        java.lang.String str53 = managedUserVM48.getPassword();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str23, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Authority{name='null'}" + "'", str27, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str49, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str52, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "error.concurrencyFailure" + "'", str53, "error.concurrencyFailure");
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str9, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str10, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        user0.setLangKey("Authority{name='null'}");
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant12 = user9.getLastModifiedDate();
        user6.setCreatedDate(instant12);
        user0.setLastModifiedDate(instant12);
        user0.setLastModifiedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long17 = user0.getId();
        java.lang.String str18 = user0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}" + "'", str18, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}");
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.lang.String str1 = userDTO0.getLogin();
        java.lang.String str2 = userDTO0.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet3 = userDTO0.getAuthorities();
        boolean boolean4 = userDTO0.isActivated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user13 = userMapper0.userFromId((java.lang.Long) 100L);
        user13.setActivated(true);
        user13.setEmail("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str18 = user13.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.String str7 = socialUserConnection4.getProviderId();
        java.lang.Long long8 = socialUserConnection4.getRank();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = user0.getLangKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        java.util.List<com.unifacisa.tcc.domain.User> userList16 = userMapper6.userDTOsToUsers(userDTOList15);
        com.unifacisa.tcc.domain.User user18 = userMapper6.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO19 = new com.unifacisa.tcc.service.dto.UserDTO(user18);
        java.time.Instant instant20 = userDTO19.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = new com.unifacisa.tcc.service.dto.UserDTO(user21);
        java.time.Instant instant23 = userDTO22.getLastModifiedDate();
        userDTO19.setLastModifiedDate(instant23);
        user0.setCreatedDate(instant23);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userList16);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNotNull(instant23);
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.String str13 = socialUserConnection0.toString();
        java.lang.String str14 = socialUserConnection0.getUserId();
        java.lang.String str15 = socialUserConnection0.toString();
        java.lang.String str16 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setProviderUserId("error.validation");
        socialUserConnection0.setAccessToken("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str13, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str15, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str16, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        java.lang.String str9 = user0.getLangKey();
        user0.setPassword("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent22 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant23 = persistentAuditEvent22.getAuditEventDate();
        persistentAuditEvent22.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent26 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = persistentAuditEvent26.getData();
        persistentAuditEvent26.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long30 = persistentAuditEvent26.getId();
        java.lang.Long long31 = persistentAuditEvent26.getId();
        java.time.Instant instant32 = persistentAuditEvent26.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        persistentAuditEvent26.setData(strMap33);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent35 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant36 = persistentAuditEvent35.getAuditEventDate();
        java.lang.Long long37 = persistentAuditEvent35.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = persistentAuditEvent38.getData();
        persistentAuditEvent35.setData(strMap39);
        persistentAuditEvent26.setData(strMap39);
        persistentAuditEvent22.setData(strMap39);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user45 = userMapper43.userFromId((java.lang.Long) 1L);
        boolean boolean46 = user45.getActivated();
        java.time.Instant instant47 = user45.getLastModifiedDate();
        persistentAuditEvent22.setAuditEventDate(instant47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray51 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList52 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList52, userArray51);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList54 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList52);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper55 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray56 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList57 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList57, userArray56);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList59 = userMapper55.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList57);
        java.util.List<com.unifacisa.tcc.domain.User> userList60 = userMapper50.userDTOsToUsers(userDTOList59);
        com.unifacisa.tcc.domain.User user62 = userMapper50.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO(user62);
        java.time.Instant instant64 = userDTO63.getLastModifiedDate();
        java.time.Instant instant75 = null;
        java.time.Instant instant77 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant75, "error.validation", instant77, (java.util.Set<java.lang.String>) strSet83);
        java.lang.String str86 = managedUserVM85.getFirstName();
        java.util.Set<java.lang.String> strSet87 = managedUserVM85.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM88 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant47, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant64, strSet87);
        user0.setCreatedDate(instant64);
        user0.setLastModifiedBy("LoggerVM{name='error.concurrencyFailure', level='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(userDTOList54);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(userDTOList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(user62);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNotNull(strSet87);
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        persistentAuditEvent0.setPrincipal("LoginVM{username='null', rememberMe=false}");
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant15 = user12.getLastModifiedDate();
        java.time.Instant instant16 = user12.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant16);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str9, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(instant16);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = socialUserConnection4.getAccessToken();
        socialUserConnection4.setRank((java.lang.Long) 1L);
        java.lang.String str13 = socialUserConnection4.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user10 = userMapper0.userFromId((java.lang.Long) 100L);
        user10.setLastName("UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.time.Instant instant13 = user10.getResetDate();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        java.lang.Boolean boolean38 = professor37.isDiponibilidade();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str40 = professor39.getPrimeiroNome();
        java.lang.Boolean boolean41 = professor39.isDiponibilidade();
        java.lang.Long long42 = professor39.getId();
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        aluno50.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray54 = new com.unifacisa.tcc.domain.Aluno[] { aluno44, aluno45, aluno49, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet55 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet55, alunoArray54);
        professor43.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        java.lang.String str58 = professor43.toString();
        com.unifacisa.tcc.domain.Professor professor60 = professor43.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa62 = professor60.primeiroNome("");
        professor60.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor65 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str68 = aluno67.getEmail();
        aluno67.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str73 = aluno72.getEmail();
        aluno72.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray76 = new com.unifacisa.tcc.domain.Aluno[] { aluno66, aluno67, aluno71, aluno72 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet77 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet77, alunoArray76);
        professor65.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        professor60.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        com.unifacisa.tcc.domain.Professor professor81 = professor39.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        com.unifacisa.tcc.domain.Professor professor82 = professor37.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertEquals("'" + boolean38 + "' != '" + true + "'", boolean38, true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(alunoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str58, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor60);
        org.junit.Assert.assertNotNull(pessoa62);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(alunoArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(professor82);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant8 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        java.lang.String str5 = socialUserConnection0.getRefreshToken();
        java.lang.String str6 = socialUserConnection0.getSecret();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        java.lang.Boolean boolean23 = aluno21.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor24 = professor6.addAluno(aluno21);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection29 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean30 = aluno25.equals((java.lang.Object) socialUserConnection29);
        socialUserConnection29.setRefreshToken("error.validation");
        socialUserConnection29.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean35 = aluno21.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str36 = aluno21.toString();
        java.lang.Boolean boolean37 = aluno21.isHabilitadoTcc();
        java.lang.String str38 = aluno21.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor3.removeAluno(aluno21);
        java.lang.Boolean boolean40 = professor3.isDiponibilidade();
        professor3.setDiponibilidade((java.lang.Boolean) true);
        professor3.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str36, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str38, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.segundoNome("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = aluno0.matricula((java.lang.Long) 0L);
        java.lang.String str10 = aluno0.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str13 = aluno0.getSegundoNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno0.matricula((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str13, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(pessoa15);
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str5 = user0.getLogin();
        java.lang.String str6 = user0.getCreatedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet7 = user0.getAuthorities();
        java.lang.String str8 = user0.getCreatedBy();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection9 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str10 = socialUserConnection9.getUserId();
        java.lang.Long long11 = socialUserConnection9.getRank();
        java.lang.String str12 = socialUserConnection9.getSecret();
        java.lang.Long long13 = socialUserConnection9.getRank();
        java.lang.String str14 = socialUserConnection9.getProviderId();
        socialUserConnection9.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long17 = socialUserConnection9.getExpireTime();
        java.lang.String str18 = socialUserConnection9.toString();
        socialUserConnection9.setImageURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        boolean boolean21 = user0.equals((java.lang.Object) socialUserConnection9);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(authoritySet7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str18, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRank((java.lang.Long) (-1L));
        socialUserConnection4.setExpireTime((java.lang.Long) 100L);
        java.lang.String str10 = socialUserConnection4.getDisplayName();
        java.lang.String str11 = socialUserConnection4.toString();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM12 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant13 = null;
        managedUserVM12.setLastModifiedDate(instant13);
        java.lang.String str15 = managedUserVM12.getLogin();
        java.lang.Long long16 = managedUserVM12.getId();
        java.lang.String str17 = managedUserVM12.toString();
        java.lang.String str18 = managedUserVM12.getImageUrl();
        java.lang.String str19 = managedUserVM12.toString();
        boolean boolean20 = socialUserConnection4.equals((java.lang.Object) managedUserVM12);
        java.lang.String str21 = socialUserConnection4.getDisplayName();
        socialUserConnection4.setRank((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str17, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str19, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        aluno7.setProfessor(professor8);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = aluno7.numeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(pessoa28);
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = pessoa5.numeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = pessoa5.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = pessoa9.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = pessoa9.numeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(pessoa13);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        professor0.setSegundoNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor20 = professor0.diponibilidade((java.lang.Boolean) false);
        java.lang.Long long21 = professor0.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(long21);
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "LoggerVM{name='null', level='null'}", "LoginVM{username='null', rememberMe=null}", (java.lang.Long) 100L, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Authority{name='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "LoggerVM{name='null', level='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 1L);
        java.lang.String str12 = socialUserConnection11.getProviderId();
        socialUserConnection11.setImageURL("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        java.lang.Long long15 = socialUserConnection11.getId();
        socialUserConnection11.setRefreshToken("ManagedUserVM{} UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str12, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getLangKey();
        boolean boolean38 = userDTO33.isActivated();
        java.util.Set<java.lang.String> strSet39 = userDTO33.getAuthorities();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.validation" + "'", str37, "error.validation");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str33 = aluno15.toString();
        aluno15.setId((java.lang.Long) 100L);
        java.lang.Boolean boolean36 = aluno15.isHabilitadoTcc();
        java.lang.String str37 = aluno15.getEmail();
        java.lang.String str38 = aluno15.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str33, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=100, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str38, "Aluno{id=100, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user14);
        java.lang.String str16 = user14.getImageUrl();
        boolean boolean18 = user14.equals((java.lang.Object) (byte) -1);
        java.lang.String str19 = user14.getLastName();
        user14.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant22 = user14.getCreatedDate();
        user11.setCreatedDate(instant22);
        user0.setResetDate(instant22);
        java.lang.String str25 = user0.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str25, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        pessoa23.setPrimeiroNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant51 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant49, "error.validation", instant51, (java.util.Set<java.lang.String>) strSet57);
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant36, "", instant38, (java.util.Set<java.lang.String>) strSet57);
        java.lang.String str61 = userDTO60.getLogin();
        java.lang.String str62 = userDTO60.getImageUrl();
        java.lang.String str63 = userDTO60.getLastName();
        java.lang.String str64 = userDTO60.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet65 = userDTO60.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet66 = userMapper0.authoritiesFromStrings(strSet65);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "error.concurrencyFailure" + "'", str63, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(authoritySet66);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray30 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList31 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList31, userArray30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList31);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray35 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList36 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList36, userArray35);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList36);
        java.util.List<com.unifacisa.tcc.domain.User> userList39 = userMapper29.userDTOsToUsers(userDTOList38);
        java.util.List<com.unifacisa.tcc.domain.User> userList40 = userMapper0.userDTOsToUsers(userDTOList38);
        com.unifacisa.tcc.domain.User user42 = userMapper0.userFromId((java.lang.Long) 0L);
        user42.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        user42.setPassword("Professor{id=null, primeiroNome='LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}', segundoNome='null', matricula='null', email='LoggerVM{name='null', level='error.validation'}', numeroContato='null', diponibilidade='true'}");
        java.lang.String str47 = user42.getActivationKey();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userDTOList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray47 = new com.unifacisa.tcc.domain.Aluno[] { aluno37, aluno38, aluno42, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet48 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet48, alunoArray47);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        java.lang.Boolean boolean53 = aluno51.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor54 = professor36.addAluno(aluno51);
        com.unifacisa.tcc.domain.Professor professor55 = aluno51.getProfessor();
        com.unifacisa.tcc.domain.Professor professor56 = aluno51.getProfessor();
        java.lang.String str57 = aluno51.getEmail();
        com.unifacisa.tcc.domain.Professor professor58 = professor3.addAluno(aluno51);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor3.getAlunos();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(alunoArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(alunoSet59);
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        java.lang.String str31 = professor16.toString();
        java.lang.Long long32 = professor16.getMatricula();
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        java.lang.String str48 = professor33.toString();
        com.unifacisa.tcc.domain.Professor professor50 = professor33.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = professor50.primeiroNome("");
        professor50.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str58 = aluno57.getEmail();
        aluno57.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str63 = aluno62.getEmail();
        aluno62.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray66 = new com.unifacisa.tcc.domain.Aluno[] { aluno56, aluno57, aluno61, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet67 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet67, alunoArray66);
        professor55.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        professor50.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        com.unifacisa.tcc.domain.Professor professor71 = professor16.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        java.lang.String str73 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str77 = aluno76.getEmail();
        aluno76.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection80 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean81 = aluno76.equals((java.lang.Object) socialUserConnection80);
        aluno76.setEmail("UserDTO{login='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.Professor professor84 = professor0.addAluno(aluno76);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str48, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(alunoArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str73, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(professor84);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='Authority{name='null'}', rememberMe=null}", "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='null'}", "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='null', level='null'}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 0L);
        java.lang.String str12 = socialUserConnection11.getProviderUserId();
        java.lang.String str13 = socialUserConnection11.getProviderUserId();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str12, "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str13, "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastModifiedBy();
        java.lang.String str4 = user0.getActivationKey();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant16 = persistentAuditEvent15.getAuditEventDate();
        persistentAuditEvent15.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent19 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = persistentAuditEvent19.getData();
        persistentAuditEvent19.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long23 = persistentAuditEvent19.getId();
        java.lang.Long long24 = persistentAuditEvent19.getId();
        java.time.Instant instant25 = persistentAuditEvent19.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        persistentAuditEvent19.setData(strMap26);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent28 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant29 = persistentAuditEvent28.getAuditEventDate();
        java.lang.Long long30 = persistentAuditEvent28.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent31 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap32 = persistentAuditEvent31.getData();
        persistentAuditEvent28.setData(strMap32);
        persistentAuditEvent19.setData(strMap32);
        persistentAuditEvent15.setData(strMap32);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper36 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user38 = userMapper36.userFromId((java.lang.Long) 1L);
        boolean boolean39 = user38.getActivated();
        java.time.Instant instant40 = user38.getLastModifiedDate();
        persistentAuditEvent15.setAuditEventDate(instant40);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray44 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList45 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList45, userArray44);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList47 = userMapper43.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper48 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray49 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList50 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList50, userArray49);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList52 = userMapper48.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList50);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper43.userDTOsToUsers(userDTOList52);
        com.unifacisa.tcc.domain.User user55 = userMapper43.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO(user55);
        java.time.Instant instant57 = userDTO56.getLastModifiedDate();
        java.time.Instant instant68 = null;
        java.time.Instant instant70 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM78 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant68, "error.validation", instant70, (java.util.Set<java.lang.String>) strSet76);
        java.lang.String str79 = managedUserVM78.getFirstName();
        java.util.Set<java.lang.String> strSet80 = managedUserVM78.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM81 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant40, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant57, strSet80);
        user0.setLastModifiedDate(instant57);
        java.lang.String str83 = user0.getLogin();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(user38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userDTOList47);
        org.junit.Assert.assertNotNull(userArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(userDTOList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = professor34.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno41, aluno42, aluno46, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        java.lang.String str55 = professor40.toString();
        com.unifacisa.tcc.domain.Professor professor57 = professor40.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor58 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray69 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno60, aluno64, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet70 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet70, alunoArray69);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet70);
        com.unifacisa.tcc.domain.Professor professor73 = professor57.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet70);
        java.lang.String str74 = professor73.getSegundoNome();
        boolean boolean75 = professor34.equals((java.lang.Object) professor73);
        professor73.setSegundoNome("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        java.lang.String str78 = professor73.getSegundoNome();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str55, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(alunoArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str78, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        professor0.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa27 = professor0.primeiroNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(pessoa27);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str8 = user0.getLastName();
        java.lang.String str9 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant11 = persistentAuditEvent10.getAuditEventDate();
        java.lang.Long long12 = persistentAuditEvent10.getId();
        java.lang.Long long13 = persistentAuditEvent10.getId();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        java.lang.String str16 = user14.getLangKey();
        java.time.Instant instant17 = user14.getCreatedDate();
        persistentAuditEvent10.setAuditEventDate(instant17);
        java.time.Instant instant19 = persistentAuditEvent10.getAuditEventDate();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO21 = new com.unifacisa.tcc.service.dto.UserDTO(user20);
        java.lang.String str22 = user20.getImageUrl();
        java.lang.String str23 = user20.getLangKey();
        user20.setLastModifiedBy("");
        user20.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant28 = user20.getCreatedDate();
        persistentAuditEvent10.setAuditEventDate(instant28);
        user0.setLastModifiedDate(instant28);
        java.lang.String str31 = user0.getLogin();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        user5.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = user5.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant9);
        java.util.Map<java.lang.String, java.lang.String> strMap11 = persistentAuditEvent0.getData();
        java.lang.String str12 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str12, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getPassword();
        managedUserVM20.setLogin("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.concurrencyFailure" + "'", str25, "error.concurrencyFailure");
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection87 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str88 = socialUserConnection87.getUserId();
        java.lang.Long long89 = socialUserConnection87.getRank();
        java.lang.String str90 = socialUserConnection87.getSecret();
        java.lang.String str91 = socialUserConnection87.toString();
        java.lang.Long long92 = socialUserConnection87.getExpireTime();
        boolean boolean93 = user0.equals((java.lang.Object) socialUserConnection87);
        socialUserConnection87.setProviderId("Authority{name='null'}");
        java.lang.Long long96 = socialUserConnection87.getRank();
        java.lang.String str97 = socialUserConnection87.toString();
        java.lang.String str98 = socialUserConnection87.getDisplayName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(long89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str91, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(long96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Authority{name='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str97, "SocialUserConnection{id=null, userId=null, providerId='Authority{name='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getEmail();
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.lang.String str19 = user17.toString();
        java.time.Instant instant20 = user17.getCreatedDate();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO23 = new com.unifacisa.tcc.service.dto.UserDTO(user22);
        java.lang.String str24 = user22.getImageUrl();
        boolean boolean26 = user22.equals((java.lang.Object) (byte) -1);
        java.lang.String str27 = user22.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet28 = user22.getAuthorities();
        java.lang.String str29 = user22.getLastName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user22);
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        java.lang.String str32 = user31.getCreatedBy();
        java.lang.String str33 = user31.getLastModifiedBy();
        user31.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str36 = user31.getEmail();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLastModifiedBy();
        user37.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str42 = user37.toString();
        com.unifacisa.tcc.domain.User user43 = new com.unifacisa.tcc.domain.User();
        java.lang.String str44 = user43.getCreatedBy();
        java.lang.String str45 = user43.getLastModifiedBy();
        user43.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        java.lang.String str49 = user48.getCreatedBy();
        user48.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO(user48);
        java.time.Instant instant53 = userDTO52.getLastModifiedDate();
        user43.setCreatedDate(instant53);
        user37.setResetDate(instant53);
        user31.setLastModifiedDate(instant53);
        userDTO30.setLastModifiedDate(instant53);
        java.time.Instant instant58 = userDTO30.getCreatedDate();
        java.time.Instant instant68 = null;
        java.time.Instant instant70 = null;
        java.time.Instant instant81 = null;
        java.time.Instant instant83 = null;
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet89 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet89, strArray88);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM91 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant81, "error.validation", instant83, (java.util.Set<java.lang.String>) strSet89);
        com.unifacisa.tcc.service.dto.UserDTO userDTO92 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant68, "", instant70, (java.util.Set<java.lang.String>) strSet89);
        java.lang.String str93 = userDTO92.getLastModifiedBy();
        java.time.Instant instant94 = userDTO92.getLastModifiedDate();
        java.util.Set<java.lang.String> strSet95 = userDTO92.getAuthorities();
        java.util.Set<java.lang.String> strSet96 = userDTO92.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM97 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "LoggerVM{name='', level='null'}", false, "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}", instant20, "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant58, strSet96);
        user0.setLastModifiedDate(instant20);
        java.lang.String str99 = user0.getLastModifiedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str19, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(authoritySet28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str42, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
        org.junit.Assert.assertNull(instant94);
        org.junit.Assert.assertNotNull(strSet95);
        org.junit.Assert.assertNotNull(strSet96);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user4);
        java.lang.String str6 = user4.getImageUrl();
        java.lang.String str7 = user4.getEmail();
        boolean boolean8 = user4.getActivated();
        com.unifacisa.tcc.domain.Authority authority9 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str10 = authority9.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        java.lang.String str39 = professor24.toString();
        com.unifacisa.tcc.domain.Professor professor41 = professor24.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet42 = professor24.getAlunos();
        com.unifacisa.tcc.domain.User user43 = new com.unifacisa.tcc.domain.User();
        java.lang.String str44 = user43.getCreatedBy();
        user43.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant47 = user43.getLastModifiedDate();
        boolean boolean48 = professor24.equals((java.lang.Object) instant47);
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        java.lang.String str51 = user50.getCreatedBy();
        java.lang.String str52 = user50.getLangKey();
        java.time.Instant instant53 = user50.getCreatedDate();
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        java.lang.String str75 = managedUserVM74.getFirstName();
        java.lang.String str76 = managedUserVM74.getCreatedBy();
        java.util.Set<java.lang.String> strSet77 = managedUserVM74.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM78 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant47, "LoginVM{username='null', rememberMe=null}", instant53, strSet77);
        user13.setResetDate(instant47);
        boolean boolean80 = authority9.equals((java.lang.Object) instant47);
        user4.setCreatedDate(instant47);
        user0.setCreatedDate(instant47);
        user0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Authority{name='null'}" + "'", str10, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str39, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(alunoSet42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str50 = aluno32.toString();
        com.unifacisa.tcc.domain.Professor professor51 = professor0.removeAluno(aluno32);
        java.lang.String str52 = professor0.getSegundoNome();
        java.lang.String str53 = professor0.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getLastName();
        java.lang.String str36 = userDTO33.getLastName();
        java.lang.String str37 = userDTO33.getLastModifiedBy();
        java.time.Instant instant38 = userDTO33.getCreatedDate();
        java.lang.String str39 = userDTO33.toString();
        boolean boolean40 = userDTO33.isActivated();
        java.lang.String str41 = userDTO33.toString();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.concurrencyFailure" + "'", str36, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str39, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str41, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor0.matricula((java.lang.Long) 1L);
        professor0.setSegundoNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        java.lang.String str42 = aluno38.toString();
        com.unifacisa.tcc.domain.Professor professor43 = professor0.addAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str45 = professor44.getPrimeiroNome();
        java.lang.Boolean boolean46 = professor44.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = professor44.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        java.lang.Boolean boolean66 = aluno64.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor67 = professor49.addAluno(aluno64);
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection72 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean73 = aluno68.equals((java.lang.Object) socialUserConnection72);
        socialUserConnection72.setRefreshToken("error.validation");
        socialUserConnection72.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean78 = aluno64.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor79 = professor44.removeAluno(aluno64);
        com.unifacisa.tcc.domain.Professor professor80 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str81 = professor80.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor83 = professor80.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa85 = professor83.primeiroNome("error.concurrencyFailure");
        aluno64.setProfessor(professor83);
        com.unifacisa.tcc.domain.Professor professor87 = professor0.addAluno(aluno64);
        professor87.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}" + "'", str42, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(pessoa48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(professor83);
        org.junit.Assert.assertNotNull(pessoa85);
        org.junit.Assert.assertNotNull(professor87);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.Long long13 = socialUserConnection0.getRank();
        java.lang.String str14 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str14, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        java.lang.String str10 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderId("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str13 = socialUserConnection0.getSecret();
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.time.Instant instant48 = null;
        java.time.Instant instant50 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM58 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant48, "error.validation", instant50, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant35, "", instant37, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant23, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant25, (java.util.Set<java.lang.String>) strSet56);
        java.lang.String str61 = userDTO60.getCreatedBy();
        boolean boolean62 = socialUserConnection0.equals((java.lang.Object) str61);
        socialUserConnection0.setDisplayName("UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str61, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.String str13 = socialUserConnection0.toString();
        java.lang.String str14 = socialUserConnection0.getUserId();
        java.lang.String str15 = socialUserConnection0.getRefreshToken();
        java.lang.Long long16 = socialUserConnection0.getRank();
        socialUserConnection0.setProviderId("");
        socialUserConnection0.setUserId("LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}" + "'", str13, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(long16);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        java.lang.String str5 = socialUserConnection0.getRefreshToken();
        java.lang.String str6 = socialUserConnection0.getRefreshToken();
        java.lang.String str7 = socialUserConnection0.toString();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        java.lang.String str6 = authority0.toString();
        java.lang.String str7 = authority0.getName();
        java.lang.String str8 = authority0.getName();
        authority0.setName("");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant14 = user11.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet15 = null;
        user11.setAuthorities(authoritySet15);
        user11.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str19 = user11.getResetKey();
        java.lang.String str20 = user11.getEmail();
        java.lang.String str21 = user11.getCreatedBy();
        java.lang.String str22 = user11.getImageUrl();
        boolean boolean23 = authority0.equals((java.lang.Object) str22);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str6, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.Long long1 = professor0.getId();
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProfileURL();
        java.lang.String str2 = socialUserConnection0.getProfileURL();
        java.lang.Long long3 = socialUserConnection0.getExpireTime();
        java.lang.Long long4 = socialUserConnection0.getId();
        java.lang.Long long5 = socialUserConnection0.getId();
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=-1}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        java.lang.String str5 = socialUserConnection0.getRefreshToken();
        java.lang.String str6 = socialUserConnection0.getRefreshToken();
        java.lang.String str7 = socialUserConnection0.toString();
        java.lang.String str8 = socialUserConnection0.getDisplayName();
        java.lang.String str9 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getImageURL();
        java.lang.String str12 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderId("LoggerVM{name='null', level='error.validation'}");
        socialUserConnection0.setProviderId("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str9 = socialUserConnection0.toString();
        java.lang.String str10 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='LoggerVM{name='null', level='error.validation'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=null, providerId='LoggerVM{name='null', level='error.validation'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str5 = authority0.getName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant20 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant45 = null;
        java.time.Instant instant47 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant45, "error.validation", instant47, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant20, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant22, (java.util.Set<java.lang.String>) strSet53);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet58 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet53);
        boolean boolean59 = authority0.equals((java.lang.Object) userMapper6);
        java.lang.String str60 = authority0.toString();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection61 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str62 = socialUserConnection61.getUserId();
        java.lang.Long long63 = socialUserConnection61.getRank();
        java.lang.String str64 = socialUserConnection61.getSecret();
        java.lang.Long long65 = socialUserConnection61.getRank();
        java.lang.String str66 = socialUserConnection61.getProfileURL();
        boolean boolean67 = authority0.equals((java.lang.Object) str66);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent68 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant69 = persistentAuditEvent68.getAuditEventDate();
        java.lang.Long long70 = persistentAuditEvent68.getId();
        java.lang.Long long71 = persistentAuditEvent68.getId();
        com.unifacisa.tcc.domain.User user72 = new com.unifacisa.tcc.domain.User();
        java.lang.String str73 = user72.getCreatedBy();
        java.lang.String str74 = user72.getLangKey();
        java.time.Instant instant75 = user72.getCreatedDate();
        persistentAuditEvent68.setAuditEventDate(instant75);
        java.util.Map<java.lang.String, java.lang.String> strMap77 = persistentAuditEvent68.getData();
        persistentAuditEvent68.setPrincipal("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        persistentAuditEvent68.setId((java.lang.Long) 0L);
        boolean boolean82 = authority0.equals((java.lang.Object) persistentAuditEvent68);
        java.lang.String str83 = persistentAuditEvent68.getAuditEventType();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(authoritySet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str60, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(long65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(instant69);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(instant75);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        boolean boolean12 = userDTO11.isActivated();
        java.lang.String str13 = userDTO11.getLastModifiedBy();
        java.lang.String str14 = userDTO11.toString();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:41.647Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:41.647Z, authorities=[]}" + "'", str14, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-24T23:46:41.647Z, lastModifiedBy='null', lastModifiedDate=2021-03-24T23:46:41.647Z, authorities=[]}");
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str16 = loggerVM15.getName();
        loggerVM15.setLevel("error.validation");
        java.lang.String str19 = loggerVM15.getLevel();
        java.lang.String str20 = loggerVM15.toString();
        java.lang.String str21 = loggerVM15.toString();
        loggerVM15.setName("error.concurrencyFailure");
        java.lang.String str24 = loggerVM15.getLevel();
        java.lang.String str25 = loggerVM15.getName();
        loggerVM15.setLevel("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM15);
        java.lang.String str29 = loggerVM15.getName();
        loggerVM15.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.validation" + "'", str19, "error.validation");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str20, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str21, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.validation" + "'", str24, "error.validation");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.concurrencyFailure" + "'", str25, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "error.concurrencyFailure" + "'", str29, "error.concurrencyFailure");
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        java.lang.String str6 = socialUserConnection0.getRefreshToken();
        java.lang.String str7 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.toString();
        user0.setLastModifiedBy("");
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getEmail();
        user0.setImageUrl("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str6 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setImageURL("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user10);
        java.lang.String str12 = user10.getImageUrl();
        boolean boolean14 = user10.equals((java.lang.Object) (byte) -1);
        java.lang.String str15 = user10.getLastName();
        java.lang.String str16 = user10.getFirstName();
        java.time.Instant instant17 = user10.getResetDate();
        java.lang.String str18 = user10.getLogin();
        user10.setPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant21 = user10.getCreatedDate();
        boolean boolean22 = socialUserConnection0.equals((java.lang.Object) user10);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        aluno7.setProfessor(professor8);
        aluno7.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        aluno7.setSegundoNome("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray42 = new com.unifacisa.tcc.domain.Aluno[] { aluno32, aluno33, aluno37, aluno38 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet43 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet43, alunoArray42);
        professor31.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet43);
        java.lang.String str46 = professor31.toString();
        professor31.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        aluno49.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor53 = aluno49.getProfessor();
        com.unifacisa.tcc.domain.Professor professor54 = professor31.addAluno(aluno49);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = professor31.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor57 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno59, aluno63, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        professor57.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str73 = aluno72.getEmail();
        java.lang.Boolean boolean74 = aluno72.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor75 = professor57.addAluno(aluno72);
        aluno72.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str79 = professor78.getPrimeiroNome();
        java.lang.Boolean boolean80 = professor78.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa82 = professor78.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno83 = aluno72.professor(professor78);
        aluno83.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor86 = professor31.addAluno(aluno83);
        aluno7.setProfessor(professor86);
        java.lang.Boolean boolean88 = aluno7.isHabilitadoTcc();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(alunoArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str46, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(professor53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(pessoa56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNotNull(pessoa82);
        org.junit.Assert.assertNotNull(aluno83);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.getLogin();
        java.lang.Long long4 = managedUserVM0.getId();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        java.lang.String str7 = managedUserVM0.getLangKey();
        boolean boolean8 = managedUserVM0.isActivated();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.getLastModifiedBy();
        java.lang.String str4 = managedUserVM0.getCreatedBy();
        java.lang.String str5 = managedUserVM0.getLastName();
        java.lang.String str6 = managedUserVM0.getLangKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("hi!", "LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 0L, "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 0L);
        java.lang.String str12 = socialUserConnection11.getSecret();
        java.lang.String str13 = socialUserConnection11.getUserId();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}" + "'", str12, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.String str7 = loginVM0.getPassword();
        loginVM0.setUsername("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Authority{name='LoggerVM{name='', level='null'}'}", "LoggerVM{name='error.concurrencyFailure', level='null'}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", (java.lang.Long) 1L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "LoggerVM{name='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', level='error.validation'}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 100L);
        java.lang.String str12 = socialUserConnection11.getUserId();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Authority{name='LoggerVM{name='', level='null'}'}" + "'", str12, "Authority{name='LoggerVM{name='', level='null'}'}");
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getNumeroContato();
        java.lang.Long long2 = aluno0.getId();
        java.lang.Long long3 = aluno0.getId();
        aluno0.setMatricula((java.lang.Long) 0L);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor0.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        java.lang.Boolean boolean43 = aluno41.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor44 = professor26.addAluno(aluno41);
        aluno41.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor47 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str48 = professor47.getPrimeiroNome();
        java.lang.Boolean boolean49 = professor47.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa51 = professor47.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno41.professor(professor47);
        aluno52.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor55 = professor0.addAluno(aluno52);
        com.unifacisa.tcc.domain.Professor professor57 = professor55.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno58 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.unifacisa.tcc.domain.Professor professor59 = professor57.removeAluno(aluno58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(pessoa51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor57);
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str44 = userDTO43.getLastModifiedBy();
        java.time.Instant instant45 = userDTO43.getCreatedDate();
        java.lang.String str46 = userDTO43.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setPassword("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str46 = user0.getFirstName();
        com.unifacisa.tcc.domain.User user47 = new com.unifacisa.tcc.domain.User();
        java.lang.String str48 = user47.getCreatedBy();
        java.lang.String str49 = user47.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        user50.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant53 = user50.getLastModifiedDate();
        user47.setCreatedDate(instant53);
        java.lang.String str55 = user47.getEmail();
        java.time.Instant instant56 = user47.getCreatedDate();
        user0.setCreatedDate(instant56);
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str60 = user0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(instant56);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = aluno0.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pessoa46);
    }
}
