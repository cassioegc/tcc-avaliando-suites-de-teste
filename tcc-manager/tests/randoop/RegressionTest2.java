import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "LoggerVM{name='null', level='null'}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", (java.lang.Long) 1L);
        socialUserConnection11.setExpireTime((java.lang.Long) 10L);
        java.lang.String str14 = socialUserConnection11.getImageURL();
        socialUserConnection11.setRefreshToken("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str14, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("error.validation");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant27, "hi!", instant29, (java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant15, "", instant17, (java.util.Set<java.lang.String>) strSet33);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet37 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.domain.User user38 = new com.unifacisa.tcc.domain.User();
        user38.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user38.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user45 = userMapper43.userFromId((java.lang.Long) 100L);
        user45.setLangKey("");
        java.time.Instant instant48 = user45.getResetDate();
        java.time.Instant instant49 = user45.getCreatedDate();
        user38.setResetDate(instant49);
        java.time.Instant instant51 = null;
        user38.setCreatedDate(instant51);
        java.lang.String str53 = user38.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        java.lang.String str55 = user54.toString();
        boolean boolean56 = user38.equals((java.lang.Object) user54);
        user38.setEmail("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user38);
        java.lang.String str60 = userDTO59.getLastName();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(authoritySet37);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertNull(instant48);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str55, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str60, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str39 = managedUserVM38.toString();
        java.time.Instant instant40 = managedUserVM38.getLastModifiedDate();
        java.time.Instant instant41 = null;
        managedUserVM38.setLastModifiedDate(instant41);
        boolean boolean43 = managedUserVM38.isActivated();
        java.lang.String str44 = managedUserVM38.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity45 = userResource3.createUser(managedUserVM38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str39, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str44, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str3 = professor2.toString();
        com.unifacisa.tcc.domain.Professor professor5 = professor2.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet6 = professor2.getAlunos();
        java.lang.Long long7 = professor2.getNumeroContato();
        professor2.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.String str13 = aluno10.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor14 = professor2.addAluno(aluno10);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity15 = alunoResource1.updateAluno(aluno10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor5);
        org.junit.Assert.assertNotNull(alunoSet6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(professor14);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        java.lang.String str13 = socialUserConnection0.getProviderUserId();
        java.lang.String str14 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setProfileURL("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant10, "error.concurrencyFailure", instant12, (java.util.Set<java.lang.String>) strSet18);
        managedUserVM20.setLogin("");
        java.lang.String str23 = managedUserVM20.getLangKey();
        java.lang.String str24 = managedUserVM20.getLastName();
        managedUserVM20.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.concurrencyFailure" + "'", str24, "error.concurrencyFailure");
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        loginVM0.setUsername("");
        java.lang.String str10 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity39 = userResource3.getUser("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        user2.setCreatedDate(instant26);
        java.lang.String str29 = user2.toString();
        java.time.Instant instant30 = user2.getCreatedDate();
        java.lang.String str31 = user2.getResetKey();
        java.lang.String str32 = user2.getEmail();
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        user42.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user42.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant47 = user42.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user51 = userMapper49.userFromId((java.lang.Long) 100L);
        user51.setLangKey("");
        java.time.Instant instant54 = user51.getResetDate();
        java.time.Instant instant55 = user51.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        aluno56.setPrimeiroNome("");
        java.lang.String str59 = aluno56.getPrimeiroNome();
        java.lang.Long long60 = aluno56.getMatricula();
        boolean boolean61 = user51.equals((java.lang.Object) aluno56);
        user51.setFirstName("");
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        user64.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user64.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user71 = userMapper69.userFromId((java.lang.Long) 100L);
        user71.setLangKey("");
        java.time.Instant instant74 = user71.getResetDate();
        java.time.Instant instant75 = user71.getCreatedDate();
        user64.setResetDate(instant75);
        user51.setCreatedDate(instant75);
        java.util.Set<java.lang.String> strSet78 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant47, "", instant75, strSet78);
        user2.setLastModifiedDate(instant47);
        user2.setResetKey("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str29, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(user51);
        org.junit.Assert.assertNull(instant54);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(user71);
        org.junit.Assert.assertNull(instant74);
        org.junit.Assert.assertNotNull(instant75);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean65 = aluno62.isHabilitadoTcc();
        java.lang.Long long66 = aluno62.getNumeroContato();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + false + "'", boolean65, false);
        org.junit.Assert.assertNull(long66);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor10 = null;
        aluno9.setProfessor(professor10);
        aluno9.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno9.primeiroNome("hi!");
        java.lang.Long long16 = aluno9.getId();
        java.lang.String str17 = aluno9.getSegundoNome();
        aluno9.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        com.unifacisa.tcc.domain.Professor professor20 = professor2.removeAluno(aluno9);
        professor20.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(professor20);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.getRefreshToken();
        java.lang.String str13 = socialUserConnection0.getProviderId();
        java.lang.Long long14 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long14);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getPassword();
        java.lang.String str16 = user0.getImageUrl();
        java.lang.String str17 = user0.getCreatedBy();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str17, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        java.util.Set<java.lang.String> strSet8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet9 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        user2.setImageUrl("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = user2.getImageUrl();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str5, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        java.lang.Long long3 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Professor professor15 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno4.professor(professor15);
        aluno0.setProfessor(professor15);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(aluno16);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str14 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderUserId("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str14, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        java.lang.String str13 = socialUserConnection0.getProviderUserId();
        java.lang.String str14 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        java.lang.Long long17 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(long17);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.Boolean boolean4 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setResetKey("hi!");
        java.lang.String str10 = user7.getResetKey();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor13 = professor11.diponibilidade((java.lang.Boolean) true);
        professor13.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str16 = professor13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        professor19.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.Long long25 = aluno22.getMatricula();
        aluno22.setHabilitadoTcc((java.lang.Boolean) false);
        aluno22.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.Long long34 = aluno30.getMatricula();
        aluno30.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        aluno37.setPrimeiroNome("");
        java.lang.Long long40 = aluno37.getMatricula();
        java.lang.Long long41 = aluno37.getMatricula();
        aluno37.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno30, aluno37, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        com.unifacisa.tcc.domain.Professor professor48 = professor19.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor13.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor57 = professor55.diponibilidade((java.lang.Boolean) true);
        professor57.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        aluno60.setHabilitadoTcc((java.lang.Boolean) false);
        aluno60.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        aluno68.setPrimeiroNome("");
        java.lang.Long long71 = aluno68.getMatricula();
        java.lang.Long long72 = aluno68.getMatricula();
        aluno68.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        aluno75.setPrimeiroNome("");
        java.lang.Long long78 = aluno75.getMatricula();
        java.lang.Long long79 = aluno75.getMatricula();
        aluno75.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray83 = new com.unifacisa.tcc.domain.Aluno[] { aluno60, aluno68, aluno75, aluno82 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet84 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet84, alunoArray83);
        com.unifacisa.tcc.domain.Professor professor86 = professor57.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet84);
        com.unifacisa.tcc.domain.Aluno aluno87 = aluno50.professor(professor86);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa89 = aluno87.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno91 = aluno87.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor92 = professor49.removeAluno(aluno87);
        com.unifacisa.tcc.domain.Professor professor94 = professor92.diponibilidade((java.lang.Boolean) true);
        boolean boolean95 = user7.equals((java.lang.Object) professor92);
        com.unifacisa.tcc.domain.Aluno aluno96 = aluno0.professor(professor92);
        java.lang.String str97 = aluno0.toString();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNull(long79);
        org.junit.Assert.assertNotNull(alunoArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(aluno87);
        org.junit.Assert.assertNotNull(pessoa89);
        org.junit.Assert.assertNotNull(aluno91);
        org.junit.Assert.assertNotNull(professor92);
        org.junit.Assert.assertNotNull(professor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(aluno96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str97, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor18 = null;
        aluno17.setProfessor(professor18);
        aluno17.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor24 = null;
        aluno23.setProfessor(professor24);
        java.lang.Long long26 = aluno23.getMatricula();
        java.lang.String str27 = aluno23.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor32 = null;
        aluno31.setProfessor(professor32);
        aluno31.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean38 = aluno36.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        java.lang.Long long42 = aluno39.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        aluno43.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno22, aluno23, aluno28, aluno31, aluno36, aluno39, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor50 = professor15.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        aluno0.setProfessor(professor15);
        com.unifacisa.tcc.domain.Aluno aluno52 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.unifacisa.tcc.domain.Professor professor53 = professor15.addAluno(aluno52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor50);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getImageUrl();
        com.unifacisa.tcc.domain.User user2 = new com.unifacisa.tcc.domain.User();
        user2.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user2.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        user2.setResetDate(instant13);
        managedUserVM0.setLastModifiedDate(instant13);
        java.lang.String str16 = managedUserVM0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        java.lang.String str9 = user0.getCreatedBy();
        java.lang.String str10 = user0.getFirstName();
        user0.setPassword("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        user0.setLastModifiedBy("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str9, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        loggerVM1.setName("Authority{name='error.concurrencyFailure'}");
        loggerVM1.setName("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        loggerVM1.setName("");
        loggerVM1.setLevel("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.springframework.data.domain.Page page0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.PaginationUtil.generatePaginationHttpHeaders(page0, "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.validation", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("hi!", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setImageURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setId((java.lang.Long) 100L);
        socialUserConnection0.setRefreshToken("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository2.createConnectionRepository("LoggerVM{name='null', level='null'}");
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        com.unifacisa.tcc.service.dto.UserDTO userDTO42 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant34, "hi!", instant36, (java.util.Set<java.lang.String>) strSet40);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM43 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant22, "", instant24, (java.util.Set<java.lang.String>) strSet40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet44 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("", (java.util.Set<java.lang.String>) strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.concurrencyFailure", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long3 = aluno2.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno2.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno2.numeroContato((java.lang.Long) 1L);
        aluno2.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity10 = alunoResource1.updateAluno(aluno2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNotNull(pessoa7);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user4 = userMapper0.userFromId((java.lang.Long) (-1L));
        user4.setActivated(false);
        user4.setLastModifiedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user4);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setSegundoNome("hi!");
        boolean boolean6 = authority0.equals((java.lang.Object) "hi!");
        java.lang.String str7 = authority0.toString();
        java.lang.String str8 = authority0.getName();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection9 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection9.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection9.getProviderId();
        socialUserConnection9.setImageURL("error.validation");
        socialUserConnection9.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM20 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str21 = fieldErrorVM20.getObjectName();
        boolean boolean22 = socialUserConnection9.equals((java.lang.Object) fieldErrorVM20);
        socialUserConnection9.setDisplayName("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        boolean boolean25 = authority0.equals((java.lang.Object) "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        professor28.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str31 = professor28.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor34 = professor32.diponibilidade((java.lang.Boolean) true);
        professor34.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        aluno37.setPrimeiroNome("");
        java.lang.Long long40 = aluno37.getMatricula();
        aluno37.setHabilitadoTcc((java.lang.Boolean) false);
        aluno37.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        aluno45.setPrimeiroNome("");
        java.lang.Long long48 = aluno45.getMatricula();
        java.lang.Long long49 = aluno45.getMatricula();
        aluno45.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        aluno52.setPrimeiroNome("");
        java.lang.Long long55 = aluno52.getMatricula();
        java.lang.Long long56 = aluno52.getMatricula();
        aluno52.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno37, aluno45, aluno52, aluno59 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        com.unifacisa.tcc.domain.Professor professor63 = professor34.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Professor professor64 = professor28.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        aluno65.setPrimeiroNome("");
        java.lang.Long long68 = aluno65.getMatricula();
        java.lang.Long long69 = aluno65.getMatricula();
        aluno65.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa73 = aluno65.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno65.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor77 = null;
        aluno76.setProfessor(professor77);
        aluno76.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa82 = aluno76.primeiroNome("hi!");
        java.lang.Long long83 = aluno76.getId();
        com.unifacisa.tcc.domain.Aluno aluno85 = aluno76.habilitadoTcc((java.lang.Boolean) false);
        aluno76.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor88 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str89 = professor88.toString();
        com.unifacisa.tcc.domain.Professor professor91 = professor88.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet92 = professor88.getAlunos();
        java.lang.Long long93 = professor88.getNumeroContato();
        professor88.setMatricula((java.lang.Long) (-1L));
        aluno76.setProfessor(professor88);
        com.unifacisa.tcc.domain.Aluno aluno97 = aluno75.professor(professor88);
        com.unifacisa.tcc.domain.Professor professor98 = professor28.addAluno(aluno75);
        boolean boolean99 = authority0.equals((java.lang.Object) professor28);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(professor64);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertNotNull(pessoa73);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa82);
        org.junit.Assert.assertNull(long83);
        org.junit.Assert.assertNotNull(aluno85);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str89, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor91);
        org.junit.Assert.assertNotNull(alunoSet92);
        org.junit.Assert.assertNull(long93);
        org.junit.Assert.assertNotNull(aluno97);
        org.junit.Assert.assertNotNull(professor98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        loggingAspect4.springBeanPointcut();
        org.aspectj.lang.ProceedingJoinPoint proceedingJoinPoint6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj7 = loggingAspect4.logAround(proceedingJoinPoint6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity39 = userResource3.createUser(managedUserVM38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderId("hi!");
        java.lang.String str13 = socialUserConnection0.getUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.Long long1 = professor0.getNumeroContato();
        org.junit.Assert.assertNull(long1);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant39 = managedUserVM38.getCreatedDate();
        java.lang.String str40 = managedUserVM38.getCreatedBy();
        java.lang.String str41 = managedUserVM38.getEmail();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity42 = userResource3.updateUser(managedUserVM38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getFirstName();
        java.lang.String str20 = userDTO17.getEmail();
        java.lang.String str21 = userDTO17.getLogin();
        userDTO17.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        boolean boolean16 = user3.getActivated();
        user3.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant19 = user3.getCreatedDate();
        user2.setCreatedDate(instant19);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM21.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM21.setName("LoggerVM{name='null', level='null'}");
        boolean boolean26 = user2.equals((java.lang.Object) loggerVM21);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.String str37 = aluno34.getPrimeiroNome();
        java.lang.Long long38 = aluno34.getMatricula();
        boolean boolean39 = user29.equals((java.lang.Object) aluno34);
        user29.setFirstName("");
        user29.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet44 = user29.getAuthorities();
        user2.setAuthorities(authoritySet44);
        java.lang.String str46 = user2.getEmail();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(authoritySet44);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant8 = user0.getResetDate();
        user0.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        java.time.Instant instant11 = user0.getResetDate();
        user0.setLastName("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor16 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa18 = professor14.email("");
        com.unifacisa.tcc.domain.Professor professor20 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor23 = professor21.diponibilidade((java.lang.Boolean) true);
        professor23.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        aluno26.setHabilitadoTcc((java.lang.Boolean) false);
        aluno26.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.Long long37 = aluno34.getMatricula();
        java.lang.Long long38 = aluno34.getMatricula();
        aluno34.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        aluno41.setPrimeiroNome("");
        java.lang.Long long44 = aluno41.getMatricula();
        java.lang.Long long45 = aluno41.getMatricula();
        aluno41.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray49 = new com.unifacisa.tcc.domain.Aluno[] { aluno26, aluno34, aluno41, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet50 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet50, alunoArray49);
        com.unifacisa.tcc.domain.Professor professor52 = professor23.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        com.unifacisa.tcc.domain.Professor professor53 = professor20.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        boolean boolean54 = user0.equals((java.lang.Object) professor53);
        user0.setCreatedBy("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNotNull(pessoa18);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNotNull(alunoArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getId();
        aluno0.setSegundoNome("hi!");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getPassword();
        user2.setPassword("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        boolean boolean2 = managedUserVM0.isActivated();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        java.time.Instant instant16 = null;
        user3.setCreatedDate(instant16);
        java.lang.String str18 = user3.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.toString();
        boolean boolean21 = user3.equals((java.lang.Object) user19);
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user31.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant36 = user31.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user40 = userMapper38.userFromId((java.lang.Long) 100L);
        user40.setLangKey("");
        java.time.Instant instant43 = user40.getResetDate();
        java.time.Instant instant44 = user40.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        aluno45.setPrimeiroNome("");
        java.lang.String str48 = aluno45.getPrimeiroNome();
        java.lang.Long long49 = aluno45.getMatricula();
        boolean boolean50 = user40.equals((java.lang.Object) aluno45);
        user40.setFirstName("");
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        user53.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user53.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper58 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user60 = userMapper58.userFromId((java.lang.Long) 100L);
        user60.setLangKey("");
        java.time.Instant instant63 = user60.getResetDate();
        java.time.Instant instant64 = user60.getCreatedDate();
        user53.setResetDate(instant64);
        user40.setCreatedDate(instant64);
        java.util.Set<java.lang.String> strSet67 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant36, "", instant64, strSet67);
        user19.setResetDate(instant64);
        managedUserVM0.setLastModifiedDate(instant64);
        java.util.Set<java.lang.String> strSet71 = managedUserVM0.getAuthorities();
        java.lang.Long long72 = managedUserVM0.getId();
        java.lang.String str73 = managedUserVM0.getLangKey();
        java.lang.String str74 = managedUserVM0.getImageUrl();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str20, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNull(instant43);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(user60);
        org.junit.Assert.assertNull(instant63);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNull(strSet71);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        user2.setCreatedBy("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO25 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str26 = userDTO25.getImageUrl();
        java.lang.String str27 = userDTO25.getImageUrl();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user9.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user16 = userMapper14.userFromId((java.lang.Long) 100L);
        user16.setLangKey("");
        java.time.Instant instant19 = user16.getResetDate();
        java.time.Instant instant20 = user16.getCreatedDate();
        user9.setResetDate(instant20);
        boolean boolean22 = user9.getActivated();
        user9.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant25 = user9.getCreatedDate();
        user8.setCreatedDate(instant25);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM27 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM27.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM27.setName("LoggerVM{name='null', level='null'}");
        boolean boolean32 = user8.equals((java.lang.Object) loggerVM27);
        java.lang.String str33 = loggerVM27.toString();
        loggerVM27.setLevel("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        logsResource0.changeLevel(loggerVM27);
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user16);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}" + "'", str33, "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setAccessToken("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.lang.String str6 = user2.getCreatedBy();
        user2.setActivationKey("LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant3 = user0.getResetDate();
        java.lang.Long long4 = user0.getId();
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        user6.setCreatedDate(instant13);
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = userMapper3.userToUserDTO(user6);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper0.userDTOsToUsers(userDTOList21);
        com.unifacisa.tcc.domain.User user24 = userMapper0.userFromId((java.lang.Long) 0L);
        user24.setFirstName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNotNull(userDTO15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(user24);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        java.lang.String str17 = socialUserConnection0.getRefreshToken();
        java.lang.Long long18 = socialUserConnection0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(long18);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.toString();
        java.lang.String str3 = authority0.getName();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor9 = null;
        aluno8.setProfessor(professor9);
        aluno8.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        aluno22.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        java.lang.Long long33 = aluno30.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno8, aluno13, aluno14, aluno19, aluno22, aluno27, aluno30, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor7.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Professor professor41 = professor6.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        java.lang.Long long42 = professor41.getMatricula();
        com.unifacisa.tcc.domain.Professor professor44 = professor41.diponibilidade((java.lang.Boolean) false);
        boolean boolean45 = authority0.equals((java.lang.Object) professor41);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray14 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList15 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList15, userArray14);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList17 = userMapper13.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper13.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user26 = userMapper24.userFromId((java.lang.Long) 100L);
        user26.setLangKey("");
        java.time.Instant instant29 = user26.getResetDate();
        java.lang.String str30 = user26.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO31 = userMapper13.userToUserDTO(user26);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper32 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user34 = userMapper32.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray36 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList37 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList37, userArray36);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList39 = userMapper35.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList37);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray41 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList42 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList42, userArray41);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList44 = userMapper40.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList42);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList45 = userMapper35.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList42);
        java.util.List<com.unifacisa.tcc.domain.User> userList46 = userMapper32.userDTOsToUsers(userDTOList45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList47 = userMapper13.usersToUserDTOs(userList46);
        boolean boolean48 = user2.equals((java.lang.Object) userList46);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userDTOList17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(user26);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(userDTO31);
        org.junit.Assert.assertNotNull(user34);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(userDTOList39);
        org.junit.Assert.assertNotNull(userArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(userDTOList44);
        org.junit.Assert.assertNotNull(userDTOList45);
        org.junit.Assert.assertNotNull(userList46);
        org.junit.Assert.assertNotNull(userDTOList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = professor2.getSegundoNome();
        java.lang.Long long8 = professor2.getNumeroContato();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getPassword();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user19.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user26 = userMapper24.userFromId((java.lang.Long) 100L);
        user26.setLangKey("");
        java.time.Instant instant29 = user26.getResetDate();
        java.time.Instant instant30 = user26.getCreatedDate();
        user19.setResetDate(instant30);
        boolean boolean32 = user19.getActivated();
        user19.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant35 = user19.getCreatedDate();
        user18.setCreatedDate(instant35);
        user0.setResetDate(instant35);
        java.lang.String str38 = user0.toString();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNotNull(user26);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str38, "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        java.lang.String str10 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str10, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = loginVM0.toString();
        java.lang.String str7 = loginVM0.getPassword();
        loginVM0.setPassword("");
        java.lang.String str10 = loginVM0.toString();
        java.lang.String str11 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str6, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str10, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str11, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant8 = user3.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = userMapper0.userToUserDTO(user3);
        java.util.Set<java.lang.String> strSet10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet11 = userMapper0.authoritiesFromStrings(strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNotNull(userDTO9);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        java.lang.Long long3 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Professor professor15 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno4.professor(professor15);
        aluno0.setProfessor(professor15);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor20 = professor18.diponibilidade((java.lang.Boolean) true);
        professor20.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        aluno23.setHabilitadoTcc((java.lang.Boolean) false);
        aluno23.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        aluno31.setPrimeiroNome("");
        java.lang.Long long34 = aluno31.getMatricula();
        java.lang.Long long35 = aluno31.getMatricula();
        aluno31.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        java.lang.Long long42 = aluno38.getMatricula();
        aluno38.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno31, aluno38, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor20.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor50 = professor15.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        professor50.setMatricula((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor50);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.time.Instant instant20 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        com.unifacisa.tcc.service.dto.UserDTO userDTO40 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant32, "hi!", instant34, (java.util.Set<java.lang.String>) strSet38);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM41 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant20, "", instant22, (java.util.Set<java.lang.String>) strSet38);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet42 = userMapper5.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet38);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray44 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList45 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList45, userArray44);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList47 = userMapper43.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        java.util.List<com.unifacisa.tcc.domain.User> userList49 = userMapper0.userDTOsToUsers(userDTOList48);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray51 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList52 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList52, userArray51);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList54 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList52);
        java.time.Instant instant65 = null;
        java.time.Instant instant67 = null;
        java.time.Instant instant77 = null;
        java.time.Instant instant79 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.service.dto.UserDTO userDTO85 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant77, "hi!", instant79, (java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM86 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant65, "", instant67, (java.util.Set<java.lang.String>) strSet83);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet87 = userMapper50.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper88 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray89 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList90 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList90, userArray89);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList92 = userMapper88.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList90);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList93 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList90);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper0.userDTOsToUsers(userDTOList93);
        com.unifacisa.tcc.domain.User user96 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user98 = userMapper0.userFromId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(authoritySet42);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userDTOList47);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userList49);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(userDTOList54);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(authoritySet87);
        org.junit.Assert.assertNotNull(userArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(userDTOList92);
        org.junit.Assert.assertNotNull(userDTOList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(user96);
        org.junit.Assert.assertNotNull(user98);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getLangKey();
        boolean boolean9 = user2.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper10 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user12 = userMapper10.userFromId((java.lang.Long) 100L);
        user12.setResetKey("hi!");
        user12.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        aluno24.setPrimeiroNome("");
        java.lang.String str27 = aluno24.getPrimeiroNome();
        java.lang.Long long28 = aluno24.getMatricula();
        boolean boolean29 = user19.equals((java.lang.Object) aluno24);
        user19.setFirstName("");
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        user32.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user32.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 100L);
        user39.setLangKey("");
        java.time.Instant instant42 = user39.getResetDate();
        java.time.Instant instant43 = user39.getCreatedDate();
        user32.setResetDate(instant43);
        user19.setCreatedDate(instant43);
        user12.setResetDate(instant43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO47 = new com.unifacisa.tcc.service.dto.UserDTO(user12);
        java.time.Instant instant48 = userDTO47.getCreatedDate();
        user2.setCreatedDate(instant48);
        user2.setCreatedBy("");
        java.time.Instant instant52 = user2.getCreatedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNotNull(instant52);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        boolean boolean4 = authority0.equals((java.lang.Object) 0L);
        java.lang.String str5 = authority0.getName();
        java.lang.String str6 = authority0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity5 = userResource3.deleteUser("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        java.lang.String str12 = loggerVM6.getLevel();
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = professor5.segundoNome("");
        professor5.setMatricula((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(pessoa14);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent6.setData(strMap7);
        java.time.Instant instant9 = null;
        persistentAuditEvent6.setAuditEventDate(instant9);
        persistentAuditEvent6.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = persistentAuditEvent6.getData();
        java.lang.Long long14 = persistentAuditEvent6.getId();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 10L);
        java.lang.String str18 = user17.getPassword();
        java.lang.String str19 = user17.getLastName();
        java.lang.String str20 = user17.getEmail();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 100L);
        user23.setResetKey("hi!");
        user23.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper28 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user30 = userMapper28.userFromId((java.lang.Long) 100L);
        user30.setLangKey("");
        java.time.Instant instant33 = user30.getResetDate();
        java.time.Instant instant34 = user30.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        aluno35.setPrimeiroNome("");
        java.lang.String str38 = aluno35.getPrimeiroNome();
        java.lang.Long long39 = aluno35.getMatricula();
        boolean boolean40 = user30.equals((java.lang.Object) aluno35);
        user30.setFirstName("");
        com.unifacisa.tcc.domain.User user43 = new com.unifacisa.tcc.domain.User();
        user43.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user43.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper48 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user50 = userMapper48.userFromId((java.lang.Long) 100L);
        user50.setLangKey("");
        java.time.Instant instant53 = user50.getResetDate();
        java.time.Instant instant54 = user50.getCreatedDate();
        user43.setResetDate(instant54);
        user30.setCreatedDate(instant54);
        user23.setResetDate(instant54);
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO(user23);
        java.time.Instant instant59 = userDTO58.getCreatedDate();
        user17.setLastModifiedDate(instant59);
        persistentAuditEvent6.setAuditEventDate(instant59);
        persistentAuditEvent0.setAuditEventDate(instant59);
        java.util.Map<java.lang.String, java.lang.String> strMap63 = persistentAuditEvent0.getData();
        java.lang.Long long64 = persistentAuditEvent0.getId();
        java.time.Instant instant65 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertNotNull(user30);
        org.junit.Assert.assertNull(instant33);
        org.junit.Assert.assertNotNull(instant34);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(user50);
        org.junit.Assert.assertNull(instant53);
        org.junit.Assert.assertNotNull(instant54);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(long64);
        org.junit.Assert.assertNotNull(instant65);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.util.Set<java.lang.String> strSet1 = userDTO0.getAuthorities();
        java.lang.String str2 = userDTO0.getEmail();
        java.lang.String str3 = userDTO0.getLogin();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper4 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user6 = userMapper4.userFromId((java.lang.Long) 100L);
        user6.setLangKey("");
        java.time.Instant instant9 = user6.getResetDate();
        java.time.Instant instant10 = user6.getCreatedDate();
        user3.setCreatedDate(instant10);
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = userMapper0.userToUserDTO(user3);
        java.lang.String str13 = userDTO12.getCreatedBy();
        java.lang.String str14 = userDTO12.getLangKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNotNull(userDTO12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet39 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.segundoNome("hi!");
        java.lang.String str42 = professor37.getPrimeiroNome();
        com.unifacisa.tcc.domain.Aluno aluno43 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.unifacisa.tcc.domain.Professor professor44 = professor37.addAluno(aluno43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoSet39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        com.unifacisa.tcc.domain.Professor professor7 = aluno0.getProfessor();
        // The following exception was thrown during execution in test generation
        try {
            com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor7.segundoNome("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(professor7);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getPassword();
        loginVM0.setUsername("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        java.lang.String str6 = aluno2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean9 = aluno7.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor10 = aluno7.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        java.lang.Long long18 = aluno15.getMatricula();
        java.lang.String str19 = aluno15.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor23 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno7, aluno11, aluno14, aluno15, aluno20, aluno24, aluno27, aluno30, aluno35, aluno39, aluno40, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        professor49.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(professor23);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        userDTO17.setLogin("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        boolean boolean21 = userDTO17.isActivated();
        java.time.Instant instant22 = userDTO17.getLastModifiedDate();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(instant22);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setAuditEventType("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        java.util.Map<java.lang.String, java.lang.String> strMap13 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.toString();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.time.Instant instant11 = null;
        persistentAuditEvent9.setAuditEventDate(instant11);
        java.time.Instant instant13 = persistentAuditEvent9.getAuditEventDate();
        persistentAuditEvent9.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant17 = persistentAuditEvent16.getAuditEventDate();
        java.time.Instant instant18 = null;
        persistentAuditEvent16.setAuditEventDate(instant18);
        persistentAuditEvent16.setId((java.lang.Long) 1L);
        persistentAuditEvent16.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent24 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = null;
        persistentAuditEvent24.setData(strMap25);
        persistentAuditEvent24.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent29 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant30 = null;
        persistentAuditEvent29.setAuditEventDate(instant30);
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        user32.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user32.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 100L);
        user39.setLangKey("");
        java.time.Instant instant42 = user39.getResetDate();
        java.time.Instant instant43 = user39.getCreatedDate();
        user32.setResetDate(instant43);
        persistentAuditEvent29.setAuditEventDate(instant43);
        persistentAuditEvent24.setAuditEventDate(instant43);
        persistentAuditEvent16.setAuditEventDate(instant43);
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        user48.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM51 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet52 = managedUserVM51.getAuthorities();
        boolean boolean53 = user48.equals((java.lang.Object) strSet52);
        java.time.Instant instant54 = user48.getLastModifiedDate();
        persistentAuditEvent16.setAuditEventDate(instant54);
        persistentAuditEvent9.setAuditEventDate(instant54);
        user2.setResetDate(instant54);
        user2.setActivated(false);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertNull(strSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(instant54);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        java.lang.String str5 = managedUserVM0.getLastName();
        java.lang.String str6 = managedUserVM0.getLangKey();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getImageUrl();
        user0.setId((java.lang.Long) 1L);
        user0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        java.lang.String str6 = aluno2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean9 = aluno7.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor10 = aluno7.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        java.lang.Long long18 = aluno15.getMatricula();
        java.lang.String str19 = aluno15.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor23 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno7, aluno11, aluno14, aluno15, aluno20, aluno24, aluno27, aluno30, aluno35, aluno39, aluno40, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor51 = professor0.diponibilidade((java.lang.Boolean) false);
        java.lang.Boolean boolean52 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor54 = professor0.removeAluno(aluno53);
        java.lang.String str55 = professor0.getEmail();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(professor23);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("error.validation");
        java.lang.String str14 = socialUserConnection0.getUserId();
        socialUserConnection0.setRank((java.lang.Long) 10L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str10 = userDTO9.getLogin();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.getRefreshToken();
        java.lang.String str13 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        user2.setPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        java.lang.String str12 = loggerVM6.getName();
        java.lang.Class<?> wildcardClass13 = loggerVM6.getClass();
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str12, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        java.lang.String str6 = aluno2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean9 = aluno7.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor10 = aluno7.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        java.lang.Long long18 = aluno15.getMatricula();
        java.lang.String str19 = aluno15.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor23 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno7, aluno11, aluno14, aluno15, aluno20, aluno24, aluno27, aluno30, aluno35, aluno39, aluno40, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor51 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa53 = professor0.matricula((java.lang.Long) 0L);
        java.lang.Long long54 = pessoa53.getId();
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper56 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user58 = userMapper56.userFromId((java.lang.Long) 100L);
        user58.setLangKey("");
        java.time.Instant instant61 = user58.getResetDate();
        java.time.Instant instant62 = user58.getCreatedDate();
        user55.setCreatedDate(instant62);
        boolean boolean64 = user55.getActivated();
        boolean boolean65 = pessoa53.equals((java.lang.Object) user55);
        java.lang.String str66 = user55.getEmail();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(professor23);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(pessoa53);
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertNotNull(user58);
        org.junit.Assert.assertNull(instant61);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("LoginVM{username='null', rememberMe=false}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.toString();
        java.time.Instant instant19 = userDTO17.getCreatedDate();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str18, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(instant19);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "LoggerVM{name='null', level='null'}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", (java.lang.Long) 1L);
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM12 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str13 = loginVM12.getPassword();
        loginVM12.setRememberMe((java.lang.Boolean) false);
        java.lang.String str16 = loginVM12.toString();
        java.lang.Boolean boolean17 = loginVM12.isRememberMe();
        loginVM12.setUsername("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        loginVM12.setPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean22 = socialUserConnection11.equals((java.lang.Object) loginVM12);
        socialUserConnection11.setDisplayName("error.concurrencyFailure");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str16, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + boolean17 + "' != '" + false + "'", boolean17, false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("LoginVM{username='null', rememberMe=false}");
        java.lang.String str6 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.time.Instant instant3 = managedUserVM0.getLastModifiedDate();
        java.lang.String str4 = managedUserVM0.getEmail();
        java.lang.String str5 = managedUserVM0.getLastName();
        java.lang.String str6 = managedUserVM0.getEmail();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant9 = user0.getResetDate();
        java.lang.Long long10 = user0.getId();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str12 = userDTO11.getLastModifiedBy();
        java.lang.String str13 = userDTO11.getFirstName();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str13, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        managedUserVM0.setId((java.lang.Long) 100L);
        java.lang.String str6 = managedUserVM0.getImageUrl();
        java.lang.String str7 = managedUserVM0.getPassword();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        aluno2.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno2.primeiroNome("hi!");
        java.lang.Long long9 = aluno2.getId();
        com.unifacisa.tcc.domain.Aluno aluno11 = aluno2.habilitadoTcc((java.lang.Boolean) false);
        aluno2.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str15 = professor14.toString();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        java.lang.Long long19 = aluno16.getMatricula();
        java.lang.String str20 = aluno16.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean23 = aluno21.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor24 = aluno21.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean27 = aluno25.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor30 = null;
        aluno29.setProfessor(professor30);
        java.lang.Long long32 = aluno29.getMatricula();
        java.lang.String str33 = aluno29.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean36 = aluno34.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor37 = aluno34.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        aluno41.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        aluno44.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor50 = null;
        aluno49.setProfessor(professor50);
        java.lang.Long long52 = aluno49.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean56 = aluno54.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = null;
        aluno57.setProfessor(professor58);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno25, aluno28, aluno29, aluno34, aluno38, aluno41, aluno44, aluno49, aluno53, aluno54, aluno57 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        com.unifacisa.tcc.domain.Professor professor63 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno2.professor(professor14);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity65 = alunoResource1.updateAluno(aluno2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(aluno11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(professor24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(professor37);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(aluno64);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        java.lang.String str6 = aluno2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean9 = aluno7.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor10 = aluno7.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        java.lang.Long long18 = aluno15.getMatricula();
        java.lang.String str19 = aluno15.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor23 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno7, aluno11, aluno14, aluno15, aluno20, aluno24, aluno27, aluno30, aluno35, aluno39, aluno40, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor51 = professor0.diponibilidade((java.lang.Boolean) false);
        java.lang.Boolean boolean52 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor54 = professor0.removeAluno(aluno53);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = aluno53.email("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(professor23);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(pessoa56);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str3 = authority0.getName();
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository4 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator5 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository6 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository4, connectionFactoryLocator5);
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository6.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository6.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository12 = customSocialUsersConnectionRepository6.createConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository14 = customSocialUsersConnectionRepository6.createConnectionRepository("LoggerVM{name='null', level='null'}");
        boolean boolean15 = authority0.equals((java.lang.Object) "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str3, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertNotNull(connectionRepository12);
        org.junit.Assert.assertNotNull(connectionRepository14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setSegundoNome("hi!");
        boolean boolean6 = authority0.equals((java.lang.Object) "hi!");
        java.lang.String str7 = authority0.toString();
        java.lang.String str8 = authority0.getName();
        java.lang.String str9 = authority0.toString();
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM10 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str11 = loginVM10.getPassword();
        loginVM10.setRememberMe((java.lang.Boolean) false);
        java.lang.String str14 = loginVM10.toString();
        java.lang.String str15 = loginVM10.getPassword();
        java.lang.Boolean boolean16 = loginVM10.isRememberMe();
        loginVM10.setRememberMe((java.lang.Boolean) false);
        loginVM10.setUsername("");
        java.lang.String str21 = loginVM10.getPassword();
        boolean boolean22 = authority0.equals((java.lang.Object) loginVM10);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Authority{name='null'}" + "'", str9, "Authority{name='null'}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str14, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        aluno39.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor46 = professor44.diponibilidade((java.lang.Boolean) true);
        professor46.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        aluno49.setHabilitadoTcc((java.lang.Boolean) false);
        aluno49.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        aluno57.setPrimeiroNome("");
        java.lang.Long long60 = aluno57.getMatricula();
        java.lang.Long long61 = aluno57.getMatricula();
        aluno57.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        java.lang.Long long68 = aluno64.getMatricula();
        aluno64.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno57, aluno64, aluno71 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        com.unifacisa.tcc.domain.Professor professor75 = professor46.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno39.professor(professor75);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno76.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno76.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor81 = professor38.removeAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor83 = professor81.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM84 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str85 = managedUserVM84.toString();
        java.time.Instant instant86 = managedUserVM84.getLastModifiedDate();
        java.time.Instant instant87 = null;
        managedUserVM84.setLastModifiedDate(instant87);
        java.lang.String str89 = managedUserVM84.getLogin();
        java.lang.String str90 = managedUserVM84.toString();
        boolean boolean91 = professor83.equals((java.lang.Object) managedUserVM84);
        java.lang.Boolean boolean92 = professor83.isDiponibilidade();
        professor83.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(professor83);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str85, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant86);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str90, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + boolean92 + "' != '" + true + "'", boolean92, true);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setPassword("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        loginVM0.setPassword("Authority{name='null'}");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("Authority{name='error.concurrencyFailure'}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.Long long45 = user0.getId();
        user0.setActivated(true);
        java.time.Instant instant48 = user0.getCreatedDate();
        java.lang.String str49 = user0.getFirstName();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.String str17 = aluno14.getPrimeiroNome();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user9.equals((java.lang.Object) aluno14);
        user9.setFirstName("");
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        user22.setResetDate(instant33);
        user9.setCreatedDate(instant33);
        user2.setResetDate(instant33);
        user2.setPassword("hi!");
        user2.setActivated(false);
        user2.setLangKey("");
        java.lang.String str43 = user2.getLastName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        java.lang.Long long9 = aluno5.getNumeroContato();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        aluno10.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor17 = professor15.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        aluno19.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor26 = null;
        aluno25.setProfessor(professor26);
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.String str29 = aluno25.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean32 = aluno30.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean40 = aluno38.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        aluno41.setPrimeiroNome("");
        java.lang.Long long44 = aluno41.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        aluno45.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno25, aluno30, aluno33, aluno38, aluno41, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        com.unifacisa.tcc.domain.Professor professor52 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        aluno10.setProfessor(professor52);
        aluno5.setProfessor(professor52);
        java.lang.Boolean boolean55 = professor52.isDiponibilidade();
        professor52.setPrimeiroNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + true + "'", boolean55, true);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user19.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant24 = user19.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        aluno33.setPrimeiroNome("");
        java.lang.String str36 = aluno33.getPrimeiroNome();
        java.lang.Long long37 = aluno33.getMatricula();
        boolean boolean38 = user28.equals((java.lang.Object) aluno33);
        user28.setFirstName("");
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        user41.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user41.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        user41.setResetDate(instant52);
        user28.setCreatedDate(instant52);
        java.util.Set<java.lang.String> strSet55 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "", instant52, strSet55);
        user0.setLastModifiedDate(instant24);
        user0.setPassword("");
        java.time.Instant instant60 = user0.getResetDate();
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertNull(instant60);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        java.lang.String str11 = professor10.getSegundoNome();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet12 = professor10.getAlunos();
        java.lang.String str13 = professor10.getEmail();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource6 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList7 = logsResource6.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM8 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM8.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str11 = loggerVM8.getLevel();
        logsResource6.changeLevel(loggerVM8);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str14 = loggerVM13.getName();
        java.lang.String str15 = loggerVM13.getLevel();
        loggerVM13.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str18 = loggerVM13.toString();
        logsResource6.changeLevel(loggerVM13);
        com.unifacisa.tcc.web.rest.LogsResource logsResource20 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM21.setName("LoginVM{username='null', rememberMe=false}");
        logsResource20.changeLevel(loggerVM21);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList25 = logsResource20.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM26 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM26.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM26.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource20.changeLevel(loggerVM26);
        com.unifacisa.tcc.web.rest.LogsResource logsResource32 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM33 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM33.setName("LoginVM{username='null', rememberMe=false}");
        logsResource32.changeLevel(loggerVM33);
        loggerVM33.setName("Authority{name='error.concurrencyFailure'}");
        logsResource20.changeLevel(loggerVM33);
        java.lang.String str40 = loggerVM33.toString();
        logsResource6.changeLevel(loggerVM33);
        loggerVM33.setLevel("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        logsResource0.changeLevel(loggerVM33);
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNotNull(loggerVMList7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}" + "'", str18, "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNotNull(loggerVMList25);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str40, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getLangKey();
        boolean boolean9 = user2.getActivated();
        java.lang.String str10 = user2.getFirstName();
        java.lang.String str11 = user2.getLastModifiedBy();
        java.lang.String str12 = user2.getPassword();
        user2.setLastName("");
        java.lang.String str15 = user2.getPassword();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        java.lang.String str10 = user0.getPassword();
        user0.setLastName("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str13 = user0.getLastModifiedBy();
        java.lang.String str14 = user0.getLastName();
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}" + "'", str14, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user2.getAuthorities();
        java.time.Instant instant18 = user2.getResetDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(authoritySet17);
        org.junit.Assert.assertNull(instant18);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setResetKey("hi!");
        java.lang.String str18 = user15.getResetKey();
        user15.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 100L);
        user23.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        user23.setResetDate(instant32);
        user15.setResetDate(instant32);
        user2.setCreatedDate(instant32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.util.Set<java.lang.String> strSet37 = userDTO36.getAuthorities();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno11.setProfessor(professor12);
        aluno11.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = aluno11.primeiroNome("hi!");
        java.lang.Long long18 = aluno11.getId();
        com.unifacisa.tcc.domain.Aluno aluno20 = aluno11.habilitadoTcc((java.lang.Boolean) false);
        aluno11.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str24 = professor23.toString();
        com.unifacisa.tcc.domain.Professor professor26 = professor23.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor23.getAlunos();
        java.lang.Long long28 = professor23.getNumeroContato();
        professor23.setMatricula((java.lang.Long) (-1L));
        aluno11.setProfessor(professor23);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno10.professor(professor23);
        java.lang.String str33 = professor23.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str35 = professor34.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor34.getAlunos();
        com.unifacisa.tcc.domain.Professor professor39 = professor23.alunos(alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor45.email("");
        com.unifacisa.tcc.domain.Professor professor51 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno40.professor(professor51);
        com.unifacisa.tcc.domain.Professor professor53 = professor23.removeAluno(aluno40);
        com.unifacisa.tcc.domain.Professor professor54 = aluno40.getProfessor();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNotNull(aluno20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNull(professor54);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setResetKey("hi!");
        java.lang.String str12 = user9.getResetKey();
        boolean boolean14 = user9.equals((java.lang.Object) 10.0f);
        java.lang.String str15 = user9.getCreatedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        user16.setCreatedDate(instant23);
        boolean boolean25 = user16.getActivated();
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant40 = user35.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.String str52 = aluno49.getPrimeiroNome();
        java.lang.Long long53 = aluno49.getMatricula();
        boolean boolean54 = user44.equals((java.lang.Object) aluno49);
        user44.setFirstName("");
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        user57.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user57.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user64 = userMapper62.userFromId((java.lang.Long) 100L);
        user64.setLangKey("");
        java.time.Instant instant67 = user64.getResetDate();
        java.time.Instant instant68 = user64.getCreatedDate();
        user57.setResetDate(instant68);
        user44.setCreatedDate(instant68);
        java.util.Set<java.lang.String> strSet71 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant40, "", instant68, strSet71);
        user16.setLastModifiedDate(instant40);
        user9.setResetDate(instant40);
        user2.setLastModifiedDate(instant40);
        java.lang.String str76 = user2.getLogin();
        user2.setLastModifiedBy("");
        user2.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNull(instant67);
        org.junit.Assert.assertNotNull(instant68);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM2.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM2);
        loggerVM2.setLevel("LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNotNull(loggerVMList1);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM3 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str4 = loginVM3.getPassword();
        loginVM3.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = loginVM3.isRememberMe();
        boolean boolean8 = authority0.equals((java.lang.Object) boolean7);
        authority0.setName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str9 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM5.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = loggerVM5.toString();
        logsResource0.changeLevel(loggerVM5);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList10 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM11 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM11.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM11);
        java.lang.String str15 = loggerVM11.getName();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str8, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertNotNull(loggerVMList10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str15, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity39 = userResource3.getUser("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loggerVM0.setName("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        java.lang.String str5 = loggerVM0.getLevel();
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        user2.setActivated(true);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.applicationPackagePointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.springframework.data.domain.Page page0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.PaginationUtil.generatePaginationHttpHeaders(page0, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.springframework.core.env.Environment environment0 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect1 = new com.unifacisa.tcc.aop.logging.LoggingAspect(environment0);
        loggingAspect1.applicationPackagePointcut();
        loggingAspect1.applicationPackagePointcut();
        loggingAspect1.applicationPackagePointcut();
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("hi!");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository2.createConnectionRepository("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        java.util.Set<java.lang.String> strSet12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet13 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        user2.setCreatedBy("Authority{name='error.concurrencyFailure'}");
        java.lang.String str9 = user2.getPassword();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        user2.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user2.setFirstName("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str26 = user2.getLangKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        keyAndPasswordVM0.setKey("hi!");
        java.lang.String str9 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderUserId("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        java.lang.String str7 = user2.getEmail();
        java.time.Instant instant8 = user2.getLastModifiedDate();
        java.lang.String str9 = user2.getLastModifiedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str6 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        socialUserConnection0.setRank((java.lang.Long) 100L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", "Authority{name='error.concurrencyFailure'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.time.Instant instant11 = null;
        persistentAuditEvent0.setAuditEventDate(instant11);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList14 = userMapper0.userDTOsToUsers(userDTOList13);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection15 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection15.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str18 = socialUserConnection15.getProviderId();
        socialUserConnection15.setImageURL("error.validation");
        socialUserConnection15.setRank((java.lang.Long) (-1L));
        java.lang.String str23 = socialUserConnection15.getImageURL();
        socialUserConnection15.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray30 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList31 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList31, userArray30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList31);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray35 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList36 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList36, userArray35);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList36);
        java.time.Instant instant49 = null;
        java.time.Instant instant51 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet67 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet67, strArray66);
        com.unifacisa.tcc.service.dto.UserDTO userDTO69 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant61, "hi!", instant63, (java.util.Set<java.lang.String>) strSet67);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant49, "", instant51, (java.util.Set<java.lang.String>) strSet67);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet71 = userMapper34.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet67);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper72 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray73 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList74 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList74, userArray73);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList76 = userMapper72.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList74);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList77 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList74);
        java.util.List<com.unifacisa.tcc.domain.User> userList78 = userMapper29.userDTOsToUsers(userDTOList77);
        java.util.List<com.unifacisa.tcc.domain.User> userList79 = userMapper26.userDTOsToUsers(userDTOList77);
        boolean boolean80 = socialUserConnection15.equals((java.lang.Object) userDTOList77);
        java.util.List<com.unifacisa.tcc.domain.User> userList81 = userMapper0.userDTOsToUsers(userDTOList77);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userDTOList38);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(authoritySet71);
        org.junit.Assert.assertNotNull(userArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(userDTOList76);
        org.junit.Assert.assertNotNull(userDTOList77);
        org.junit.Assert.assertNotNull(userList78);
        org.junit.Assert.assertNotNull(userList79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(userList81);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity39 = userResource3.deleteUser("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        java.lang.String str4 = managedUserVM0.toString();
        java.time.Instant instant5 = null;
        managedUserVM0.setLastModifiedDate(instant5);
        java.lang.String str7 = managedUserVM0.getLangKey();
        java.lang.String str8 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str7 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setImageURL("");
        java.lang.String str10 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        java.lang.Long long63 = aluno62.getId();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection64 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection64.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str67 = socialUserConnection64.getProviderId();
        socialUserConnection64.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection64.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection64.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection64.setUserId("error.concurrencyFailure");
        java.lang.Long long76 = socialUserConnection64.getRank();
        socialUserConnection64.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        boolean boolean79 = aluno62.equals((java.lang.Object) socialUserConnection64);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str67, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.email("");
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor16 = professor8.addAluno(aluno13);
        java.lang.Long long17 = aluno13.getNumeroContato();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor25 = professor23.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        aluno27.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        java.lang.Long long36 = aluno33.getMatricula();
        java.lang.String str37 = aluno33.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean40 = aluno38.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        aluno41.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean48 = aluno46.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray56 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno32, aluno33, aluno38, aluno41, aluno46, aluno49, aluno53 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet57 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet57, alunoArray56);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        com.unifacisa.tcc.domain.Professor professor60 = professor25.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        aluno18.setProfessor(professor60);
        aluno13.setProfessor(professor60);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("error.validation");
        java.lang.String str66 = aluno63.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor67 = professor60.removeAluno(aluno63);
        com.unifacisa.tcc.domain.Professor professor69 = professor67.diponibilidade((java.lang.Boolean) true);
        aluno0.setProfessor(professor69);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet71 = professor69.getAlunos();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNotNull(alunoArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(professor60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "error.validation" + "'", str66, "error.validation");
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(alunoSet71);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str7 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.getSecret();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderId("hi!");
        socialUserConnection0.setSecret("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getLogin();
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        java.lang.String str6 = aluno2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean9 = aluno7.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor10 = aluno7.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        java.lang.Long long18 = aluno15.getMatricula();
        java.lang.String str19 = aluno15.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor23 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno7, aluno11, aluno14, aluno15, aluno20, aluno24, aluno27, aluno30, aluno35, aluno39, aluno40, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor52 = professor50.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor53 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor55 = null;
        aluno54.setProfessor(professor55);
        aluno54.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        java.lang.Long long63 = aluno60.getMatricula();
        java.lang.String str64 = aluno60.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean67 = aluno65.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor69 = null;
        aluno68.setProfessor(professor69);
        aluno68.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean75 = aluno73.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        aluno76.setPrimeiroNome("");
        java.lang.Long long79 = aluno76.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno80 = new com.unifacisa.tcc.domain.Aluno();
        aluno80.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray83 = new com.unifacisa.tcc.domain.Aluno[] { aluno54, aluno59, aluno60, aluno65, aluno68, aluno73, aluno76, aluno80 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet84 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet84, alunoArray83);
        professor53.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet84);
        com.unifacisa.tcc.domain.Professor professor87 = professor52.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet84);
        com.unifacisa.tcc.domain.Professor professor89 = professor87.diponibilidade((java.lang.Boolean) true);
        professor87.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet92 = professor87.getAlunos();
        professor49.setAlunos(alunoSet92);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(professor23);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(long79);
        org.junit.Assert.assertNotNull(alunoArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertNotNull(alunoSet92);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str4 = user0.getPassword();
        java.lang.String str5 = user0.getFirstName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str4, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant16 = null;
        java.time.Instant instant18 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant28, "hi!", instant30, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant16, "", instant18, (java.util.Set<java.lang.String>) strSet34);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet38 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", (java.util.Set<java.lang.String>) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        aluno6.setPrimeiroNome("");
        java.lang.Long long9 = aluno6.getMatricula();
        java.lang.Long long10 = aluno6.getMatricula();
        aluno6.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        aluno13.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor20 = professor18.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        aluno22.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor29 = null;
        aluno28.setProfessor(professor29);
        java.lang.Long long31 = aluno28.getMatricula();
        java.lang.String str32 = aluno28.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean35 = aluno33.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        aluno36.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean43 = aluno41.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        java.lang.Long long47 = aluno44.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno27, aluno28, aluno33, aluno36, aluno41, aluno44, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        com.unifacisa.tcc.domain.Professor professor55 = professor20.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        aluno13.setProfessor(professor55);
        aluno6.setProfessor(professor55);
        com.unifacisa.tcc.domain.Aluno aluno58 = aluno2.professor(professor55);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity59 = alunoResource1.createAluno(aluno2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(aluno58);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long5 = professor2.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = professor2.email("error.validation");
        professor2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor2.primeiroNome("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        java.lang.String str12 = professor2.getEmail();
        com.unifacisa.tcc.domain.Professor professor14 = professor2.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        aluno15.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor18 = professor2.addAluno(aluno15);
        com.unifacisa.tcc.domain.Professor professor20 = professor18.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet21 = null;
        professor18.setAlunos(alunoSet21);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "error.validation" + "'", str12, "error.validation");
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(professor20);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        java.lang.String str10 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa3 = aluno0.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.primeiroNome("Authority{name='error.concurrencyFailure'}");
        java.lang.Long long8 = aluno0.getId();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(pessoa3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.email("");
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor16 = professor8.addAluno(aluno13);
        java.lang.Long long17 = aluno13.getNumeroContato();
        boolean boolean18 = user2.equals((java.lang.Object) long17);
        java.lang.String str19 = user2.getEmail();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 0L);
        aluno0.setEmail("");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getId();
        aluno9.setNumeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.String str23 = aluno20.getPrimeiroNome();
        java.lang.Long long24 = aluno20.getMatricula();
        boolean boolean25 = user15.equals((java.lang.Object) aluno20);
        java.lang.String str26 = user15.getPassword();
        boolean boolean27 = aluno9.equals((java.lang.Object) str26);
        java.lang.String str28 = aluno9.toString();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor33 = professor31.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor31.email("");
        com.unifacisa.tcc.domain.Professor professor37 = professor31.diponibilidade((java.lang.Boolean) true);
        professor37.setId((java.lang.Long) (-1L));
        aluno9.setProfessor(professor37);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = aluno9.matricula((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str28, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(pessoa42);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "hi!", "");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getField();
        java.lang.String str6 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor17 = professor9.addAluno(aluno14);
        professor9.setEmail("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor21 = null;
        aluno20.setProfessor(professor21);
        aluno20.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor27 = professor25.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa29 = professor25.email("");
        com.unifacisa.tcc.domain.Professor professor31 = professor25.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno20.professor(professor31);
        com.unifacisa.tcc.domain.Aluno aluno34 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno35.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str41 = professor40.toString();
        professor40.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long44 = professor40.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = professor40.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno47 = aluno35.professor(professor40);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor49 = null;
        aluno48.setProfessor(professor49);
        aluno48.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = aluno48.primeiroNome("hi!");
        java.lang.Long long55 = aluno48.getId();
        com.unifacisa.tcc.domain.Aluno aluno57 = aluno48.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long58 = aluno57.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean61 = aluno59.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor62 = aluno59.getProfessor();
        java.lang.String str63 = aluno59.toString();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor65 = null;
        aluno64.setProfessor(professor65);
        java.lang.Long long67 = aluno64.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = aluno64.numeroContato((java.lang.Long) 1L);
        java.lang.Boolean boolean70 = aluno64.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor73 = professor71.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa75 = professor71.email("");
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        aluno76.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor79 = professor71.addAluno(aluno76);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa81 = aluno76.email("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno32, aluno35, aluno57, aluno59, aluno64, aluno76 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        com.unifacisa.tcc.domain.Professor professor85 = professor9.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        aluno0.setProfessor(professor85);
        aluno0.setEmail("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.Long long89 = aluno0.getId();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertNotNull(pessoa29);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNotNull(aluno34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str41, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNotNull(aluno47);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNotNull(aluno57);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(professor62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str63, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(pessoa75);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(pessoa81);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertNull(long89);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str39 = managedUserVM38.toString();
        java.time.Instant instant40 = managedUserVM38.getLastModifiedDate();
        java.time.Instant instant41 = null;
        managedUserVM38.setLastModifiedDate(instant41);
        boolean boolean43 = managedUserVM38.isActivated();
        java.lang.String str44 = managedUserVM38.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity45 = userResource3.updateUser(managedUserVM38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str39, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str44, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getProviderUserId();
        java.lang.Long long5 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        java.lang.Long long5 = aluno2.getMatricula();
        java.lang.Long long6 = aluno2.getMatricula();
        aluno2.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor10 = null;
        aluno9.setProfessor(professor10);
        aluno9.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor16 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        java.lang.Long long27 = aluno24.getMatricula();
        java.lang.String str28 = aluno24.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        aluno32.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        aluno40.setPrimeiroNome("");
        java.lang.Long long43 = aluno40.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray47 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno23, aluno24, aluno29, aluno32, aluno37, aluno40, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet48 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet48, alunoArray47);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        com.unifacisa.tcc.domain.Professor professor51 = professor16.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        aluno9.setProfessor(professor51);
        aluno2.setProfessor(professor51);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity56 = alunoResource1.updateAluno(aluno2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNotNull(alunoArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(professor51);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setAccessToken("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        java.lang.Long long42 = aluno39.getMatricula();
        java.lang.Long long43 = aluno39.getMatricula();
        aluno39.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = aluno39.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno39.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = aluno50.primeiroNome("hi!");
        java.lang.Long long57 = aluno50.getId();
        com.unifacisa.tcc.domain.Aluno aluno59 = aluno50.habilitadoTcc((java.lang.Boolean) false);
        aluno50.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor62 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str63 = professor62.toString();
        com.unifacisa.tcc.domain.Professor professor65 = professor62.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet66 = professor62.getAlunos();
        java.lang.Long long67 = professor62.getNumeroContato();
        professor62.setMatricula((java.lang.Long) (-1L));
        aluno50.setProfessor(professor62);
        com.unifacisa.tcc.domain.Aluno aluno71 = aluno49.professor(professor62);
        com.unifacisa.tcc.domain.Professor professor72 = professor38.removeAluno(aluno49);
        java.lang.String str73 = professor38.getSegundoNome();
        java.lang.Long long74 = professor38.getMatricula();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNotNull(pessoa47);
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertNotNull(pessoa56);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNotNull(aluno59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str63, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertNotNull(alunoSet66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(aluno71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(long74);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str6 = loginVM0.getUsername();
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("Authority{name='null'}");
        socialUserConnection0.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        java.lang.String str10 = socialUserConnection0.toString();
        socialUserConnection0.setDisplayName("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str13 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Authority{name='null'}" + "'", str13, "Authority{name='null'}");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.String str7 = professor6.toString();
        com.unifacisa.tcc.domain.Professor professor9 = professor6.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(professor11);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=null}");
        java.lang.String str7 = professor2.getEmail();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Long long15 = aluno0.getMatricula();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}", "User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.Long long11 = socialUserConnection0.getId();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setSecret("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str14 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str14, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("error.validation");
        java.lang.String str3 = aluno0.toString();
        java.lang.Long long4 = aluno0.getMatricula();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        professor4.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity9 = professorResource1.createProfessor(professor4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity11 = professorResource1.deleteProfessor((java.lang.Long) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(professorResponseEntity9);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        user2.setLastName("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet7 = user2.getAuthorities();
        user2.setEmail("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(authoritySet7);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        aluno12.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno12.matricula((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(pessoa16);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setImageURL("Authority{name='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.toString();
        java.lang.String str10 = user2.getCreatedBy();
        java.lang.String str11 = user2.getResetKey();
        user2.setCreatedBy("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user16 = userMapper14.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        user17.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet21 = managedUserVM20.getAuthorities();
        boolean boolean22 = user17.equals((java.lang.Object) strSet21);
        java.time.Instant instant23 = user17.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO24 = userMapper14.userToUserDTO(user17);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet25 = user17.getAuthorities();
        user2.setAuthorities(authoritySet25);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(user16);
        org.junit.Assert.assertNull(strSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNotNull(userDTO24);
        org.junit.Assert.assertNotNull(authoritySet25);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str9 = socialUserConnection0.getImageURL();
        java.lang.String str10 = socialUserConnection0.getImageURL();
        java.lang.String str11 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProviderUserId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}");
        java.lang.String str14 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str11, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str14, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.time.Instant instant11 = null;
        persistentAuditEvent9.setAuditEventDate(instant11);
        java.time.Instant instant13 = persistentAuditEvent9.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        persistentAuditEvent9.setData(strMap14);
        java.lang.String str16 = persistentAuditEvent9.getPrincipal();
        boolean boolean17 = user2.equals((java.lang.Object) persistentAuditEvent9);
        java.util.Map<java.lang.String, java.lang.String> strMap18 = persistentAuditEvent9.getData();
        persistentAuditEvent9.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.getLogin();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getLangKey();
        java.lang.Long long7 = managedUserVM0.getId();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str4 = managedUserVM3.toString();
        boolean boolean5 = managedUserVM3.isActivated();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        user6.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user6.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        user6.setResetDate(instant17);
        java.time.Instant instant19 = null;
        user6.setCreatedDate(instant19);
        java.lang.String str21 = user6.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.toString();
        boolean boolean24 = user6.equals((java.lang.Object) user22);
        com.unifacisa.tcc.domain.User user34 = new com.unifacisa.tcc.domain.User();
        user34.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user34.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant39 = user34.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user43 = userMapper41.userFromId((java.lang.Long) 100L);
        user43.setLangKey("");
        java.time.Instant instant46 = user43.getResetDate();
        java.time.Instant instant47 = user43.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.String str51 = aluno48.getPrimeiroNome();
        java.lang.Long long52 = aluno48.getMatricula();
        boolean boolean53 = user43.equals((java.lang.Object) aluno48);
        user43.setFirstName("");
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        user56.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user56.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user63 = userMapper61.userFromId((java.lang.Long) 100L);
        user63.setLangKey("");
        java.time.Instant instant66 = user63.getResetDate();
        java.time.Instant instant67 = user63.getCreatedDate();
        user56.setResetDate(instant67);
        user43.setCreatedDate(instant67);
        java.util.Set<java.lang.String> strSet70 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO71 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant39, "", instant67, strSet70);
        user22.setResetDate(instant67);
        managedUserVM3.setLastModifiedDate(instant67);
        user0.setCreatedDate(instant67);
        user0.setActivationKey("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str23, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNull(instant66);
        org.junit.Assert.assertNotNull(instant67);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str39 = managedUserVM38.toString();
        java.lang.String str40 = managedUserVM38.getLogin();
        java.lang.String str41 = managedUserVM38.getFirstName();
        java.lang.Long long42 = managedUserVM38.getId();
        java.lang.String str43 = managedUserVM38.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str39, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str43, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant27, "hi!", instant29, (java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant15, "", instant17, (java.util.Set<java.lang.String>) strSet33);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet37 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user40 = userMapper38.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user43 = userMapper41.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user47 = userMapper45.userFromId((java.lang.Long) 100L);
        user47.setLangKey("");
        java.time.Instant instant50 = user47.getResetDate();
        java.time.Instant instant51 = user47.getCreatedDate();
        user44.setCreatedDate(instant51);
        com.unifacisa.tcc.service.dto.UserDTO userDTO53 = userMapper41.userToUserDTO(user44);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray55 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList56 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList56, userArray55);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList58 = userMapper54.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList56);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList59 = userMapper41.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList60 = userMapper38.userDTOsToUsers(userDTOList59);
        java.util.List<com.unifacisa.tcc.domain.User> userList61 = userMapper0.userDTOsToUsers(userDTOList59);
        com.unifacisa.tcc.domain.User user62 = new com.unifacisa.tcc.domain.User();
        java.lang.String str63 = user62.toString();
        user62.setLastModifiedBy("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO66 = userMapper0.userToUserDTO(user62);
        com.unifacisa.tcc.domain.User user68 = userMapper0.userFromId((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(authoritySet37);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertNull(instant50);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertNotNull(userDTO53);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTOList58);
        org.junit.Assert.assertNotNull(userDTOList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str63, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userDTO66);
        org.junit.Assert.assertNotNull(user68);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        java.lang.String str2 = loggerVM0.getLevel();
        loggerVM0.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str5 = loggerVM0.getLevel();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setRefreshToken("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setRefreshToken("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}", "");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Authority{name='error.concurrencyFailure'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa3 = aluno0.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 1L);
        aluno0.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Boolean boolean8 = aluno0.isHabilitadoTcc();
        java.lang.String str9 = aluno0.toString();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(pessoa3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}" + "'", str9, "Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}");
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setSegundoNome("hi!");
        boolean boolean6 = authority0.equals((java.lang.Object) "hi!");
        authority0.setName("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str9 = authority0.getName();
        authority0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:34.902Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.902Z, authorities=[]}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str9, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.validation", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("Professor{id=0, primeiroNome='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='error.validation', numeroContato='null', diponibilidade='true'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno11.setProfessor(professor12);
        aluno11.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = aluno11.primeiroNome("hi!");
        java.lang.Long long18 = aluno11.getId();
        com.unifacisa.tcc.domain.Aluno aluno20 = aluno11.habilitadoTcc((java.lang.Boolean) false);
        aluno11.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str24 = professor23.toString();
        com.unifacisa.tcc.domain.Professor professor26 = professor23.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor23.getAlunos();
        java.lang.Long long28 = professor23.getNumeroContato();
        professor23.setMatricula((java.lang.Long) (-1L));
        aluno11.setProfessor(professor23);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno10.professor(professor23);
        java.lang.String str33 = professor23.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str35 = professor34.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor34.getAlunos();
        com.unifacisa.tcc.domain.Professor professor39 = professor23.alunos(alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor45.email("");
        com.unifacisa.tcc.domain.Professor professor51 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno40.professor(professor51);
        com.unifacisa.tcc.domain.Professor professor53 = professor23.removeAluno(aluno40);
        com.unifacisa.tcc.domain.Professor professor55 = professor23.diponibilidade((java.lang.Boolean) false);
        professor23.setMatricula((java.lang.Long) 100L);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNotNull(aluno20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor55);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.Long long39 = managedUserVM38.getId();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity40 = userResource3.createUser(managedUserVM38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(long39);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity38 = professorResource1.getProfessor((java.lang.Long) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity16 = professorResource1.getProfessor((java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno66 = aluno64.habilitadoTcc((java.lang.Boolean) false);
        aluno64.setNumeroContato((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertNotNull(aluno66);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        java.lang.String str7 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.springframework.data.domain.Page page0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.PaginationUtil.generatePaginationHttpHeaders(page0, "Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor13 = professor11.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = professor11.email("");
        com.unifacisa.tcc.domain.Professor professor17 = professor11.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor20 = professor18.diponibilidade((java.lang.Boolean) true);
        professor20.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        aluno23.setHabilitadoTcc((java.lang.Boolean) false);
        aluno23.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        aluno31.setPrimeiroNome("");
        java.lang.Long long34 = aluno31.getMatricula();
        java.lang.Long long35 = aluno31.getMatricula();
        aluno31.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        java.lang.Long long42 = aluno38.getMatricula();
        aluno38.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno31, aluno38, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        com.unifacisa.tcc.domain.Professor professor49 = professor20.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor50 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        java.lang.String str51 = professor17.toString();
        aluno10.setProfessor(professor17);
        java.lang.String str53 = professor17.toString();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str51, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str53, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        org.springframework.core.env.Environment environment5 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect6 = loggingAspectConfiguration0.loggingAspect(environment5);
        loggingAspect6.applicationPackagePointcut();
        org.aspectj.lang.JoinPoint joinPoint8 = null;
        java.lang.Throwable throwable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect6.logAfterThrowing(joinPoint8, throwable9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
        org.junit.Assert.assertNotNull(loggingAspect6);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long5 = professor2.getId();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet6 = professor2.getAlunos();
        java.lang.Long long7 = professor2.getMatricula();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(alunoSet6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getFirstName();
        java.lang.String str20 = userDTO17.getEmail();
        java.lang.String str21 = userDTO17.getLastName();
        java.lang.String str22 = userDTO17.toString();
        java.lang.String str23 = userDTO17.toString();
        java.lang.String str24 = userDTO17.getLastModifiedBy();
        java.lang.String str25 = userDTO17.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet26 = userDTO17.getAuthorities();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str22, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str23, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getId();
        com.unifacisa.tcc.domain.Professor professor40 = professor37.diponibilidade((java.lang.Boolean) false);
        java.lang.Long long41 = professor40.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor40.email("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(pessoa43);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.String str4 = aluno0.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = pessoa6.segundoNome("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:34.902Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.902Z, authorities=[]}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(pessoa8);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user19.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant24 = user19.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        aluno33.setPrimeiroNome("");
        java.lang.String str36 = aluno33.getPrimeiroNome();
        java.lang.Long long37 = aluno33.getMatricula();
        boolean boolean38 = user28.equals((java.lang.Object) aluno33);
        user28.setFirstName("");
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        user41.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user41.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        user41.setResetDate(instant52);
        user28.setCreatedDate(instant52);
        java.util.Set<java.lang.String> strSet55 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "", instant52, strSet55);
        user0.setLastModifiedDate(instant24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper58 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user60 = userMapper58.userFromId((java.lang.Long) 100L);
        user60.setResetKey("hi!");
        java.lang.String str63 = user60.getResetKey();
        user60.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper66 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user68 = userMapper66.userFromId((java.lang.Long) 100L);
        user68.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setLangKey("");
        java.time.Instant instant76 = user73.getResetDate();
        java.time.Instant instant77 = user73.getCreatedDate();
        user68.setResetDate(instant77);
        user60.setResetDate(instant77);
        user0.setCreatedDate(instant77);
        java.lang.String str81 = user0.getEmail();
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertNotNull(user60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "hi!" + "'", str63, "hi!");
        org.junit.Assert.assertNotNull(user68);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(instant76);
        org.junit.Assert.assertNotNull(instant77);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray2 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList3 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList3, userArray2);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList5 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList3);
        java.time.Instant instant16 = null;
        java.time.Instant instant18 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant28, "hi!", instant30, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant16, "", instant18, (java.util.Set<java.lang.String>) strSet34);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = userMapper1.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        user39.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user39.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user46 = userMapper44.userFromId((java.lang.Long) 100L);
        user46.setLangKey("");
        java.time.Instant instant49 = user46.getResetDate();
        java.time.Instant instant50 = user46.getCreatedDate();
        user39.setResetDate(instant50);
        java.time.Instant instant52 = null;
        user39.setCreatedDate(instant52);
        java.lang.String str54 = user39.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        java.lang.String str56 = user55.toString();
        boolean boolean57 = user39.equals((java.lang.Object) user55);
        user39.setEmail("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = userMapper1.userToUserDTO(user39);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = userMapper0.userToUserDTO(user39);
        java.util.List<com.unifacisa.tcc.domain.User> userList62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList63 = userMapper0.usersToUserDTOs(userList62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userDTOList5);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNotNull(user46);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str56, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTO60);
        org.junit.Assert.assertNotNull(userDTO61);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}", "Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}", "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity5 = userResource3.getUser("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        java.lang.String str15 = user2.getImageUrl();
        user2.setFirstName("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 100L);
        user21.setLangKey("");
        java.time.Instant instant24 = user21.getResetDate();
        java.time.Instant instant25 = user21.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent27 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        persistentAuditEvent27.setData(strMap28);
        persistentAuditEvent27.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant33 = null;
        persistentAuditEvent32.setAuditEventDate(instant33);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        user35.setResetDate(instant46);
        persistentAuditEvent32.setAuditEventDate(instant46);
        persistentAuditEvent27.setAuditEventDate(instant46);
        java.time.Instant instant60 = null;
        java.time.Instant instant62 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant60, "error.concurrencyFailure", instant62, (java.util.Set<java.lang.String>) strSet68);
        com.unifacisa.tcc.service.dto.UserDTO userDTO71 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "hi!", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant25, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant46, (java.util.Set<java.lang.String>) strSet68);
        user2.setCreatedDate(instant46);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNull(instant24);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("error.validation");
        aluno0.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor7.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long12 = professor7.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = professor7.segundoNome("LoggerVM{name='null', level='null'}");
        aluno0.setProfessor(professor7);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = professor7.matricula((java.lang.Long) (-1L));
        pessoa17.setPrimeiroNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNotNull(pessoa17);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getLangKey();
        boolean boolean3 = user0.getActivated();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getPassword();
        loginVM0.setUsername("LoginVM{username='null', rememberMe=false}");
        loginVM0.setUsername("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=0, primeiroNome='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='error.validation', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        aluno15.setPrimeiroNome("");
        java.lang.String str18 = aluno15.getPrimeiroNome();
        java.lang.Long long19 = aluno15.getMatricula();
        boolean boolean20 = user10.equals((java.lang.Object) aluno15);
        user10.setFirstName("");
        user10.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str25 = user10.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO26 = new com.unifacisa.tcc.service.dto.UserDTO(user10);
        java.util.Set<java.lang.String> strSet27 = userDTO26.getAuthorities();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet28 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> strMap4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap5 = customSocialConnectionRepository3.findConnectionsToUsers(strMap4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unable to execute find: no providerUsers provided");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        user10.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.String str25 = aluno22.getPrimeiroNome();
        java.lang.Long long26 = aluno22.getMatricula();
        boolean boolean27 = user17.equals((java.lang.Object) aluno22);
        user17.setFirstName("");
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        user30.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user30.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user37 = userMapper35.userFromId((java.lang.Long) 100L);
        user37.setLangKey("");
        java.time.Instant instant40 = user37.getResetDate();
        java.time.Instant instant41 = user37.getCreatedDate();
        user30.setResetDate(instant41);
        user17.setCreatedDate(instant41);
        user10.setResetDate(instant41);
        persistentAuditEvent0.setAuditEventDate(instant41);
        java.time.Instant instant46 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap47 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(user37);
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent0.getAuditEventType();
        java.lang.Long long7 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        java.lang.Long long42 = aluno39.getMatricula();
        java.lang.Long long43 = aluno39.getMatricula();
        aluno39.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = aluno39.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno39.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = aluno50.primeiroNome("hi!");
        java.lang.Long long57 = aluno50.getId();
        com.unifacisa.tcc.domain.Aluno aluno59 = aluno50.habilitadoTcc((java.lang.Boolean) false);
        aluno50.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor62 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str63 = professor62.toString();
        com.unifacisa.tcc.domain.Professor professor65 = professor62.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet66 = professor62.getAlunos();
        java.lang.Long long67 = professor62.getNumeroContato();
        professor62.setMatricula((java.lang.Long) (-1L));
        aluno50.setProfessor(professor62);
        com.unifacisa.tcc.domain.Aluno aluno71 = aluno49.professor(professor62);
        com.unifacisa.tcc.domain.Professor professor72 = professor2.addAluno(aluno49);
        java.lang.Boolean boolean73 = professor2.isDiponibilidade();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNotNull(pessoa47);
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertNotNull(pessoa56);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNotNull(aluno59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str63, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertNotNull(alunoSet66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(aluno71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + false + "'", boolean73, false);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.email("");
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor16 = professor8.addAluno(aluno13);
        java.lang.Long long17 = aluno13.getNumeroContato();
        boolean boolean18 = user2.equals((java.lang.Object) long17);
        user2.setLastModifiedBy("Professor{id=0, primeiroNome='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='error.validation', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity38 = professorResource1.deleteProfessor((java.lang.Long) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setNewPassword("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str5, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str8, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = aluno0.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.toString();
        professor5.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long9 = professor5.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor5.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(aluno12);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}", "Authority{name='error.concurrencyFailure'}", (java.lang.Long) 0L, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 10L);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.String str7 = professor6.toString();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        aluno8.setPrimeiroNome("");
        java.lang.Long long11 = aluno8.getMatricula();
        java.lang.Long long12 = aluno8.getMatricula();
        aluno8.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor22 = professor20.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.String str34 = aluno30.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean45 = aluno43.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        aluno46.setPrimeiroNome("");
        java.lang.Long long49 = aluno46.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray53 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno29, aluno30, aluno35, aluno38, aluno43, aluno46, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet54 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet54, alunoArray53);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        com.unifacisa.tcc.domain.Professor professor57 = professor22.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        aluno15.setProfessor(professor57);
        aluno8.setProfessor(professor57);
        aluno8.setHabilitadoTcc((java.lang.Boolean) false);
        aluno8.setId((java.lang.Long) 1L);
        java.lang.String str64 = aluno8.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor65 = professor6.addAluno(aluno8);
        professor65.setSegundoNome("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        professor65.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNotNull(alunoArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(professor65);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        java.lang.String str10 = user0.getPassword();
        java.lang.Long long11 = user0.getId();
        java.lang.String str12 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = null;
        user0.setAuthorities(authoritySet13);
        java.lang.String str15 = user0.getLogin();
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM11 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str12 = fieldErrorVM11.getObjectName();
        boolean boolean13 = socialUserConnection0.equals((java.lang.Object) fieldErrorVM11);
        socialUserConnection0.setRefreshToken("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        java.time.Instant instant70 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant82 = null;
        java.time.Instant instant84 = null;
        java.lang.String[] strArray87 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet88 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet88, strArray87);
        com.unifacisa.tcc.service.dto.UserDTO userDTO90 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant82, "hi!", instant84, (java.util.Set<java.lang.String>) strSet88);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM91 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant70, "", instant72, (java.util.Set<java.lang.String>) strSet88);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet92 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet88);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(authoritySet92);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity5 = userResource3.getUser("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = professor2.getSegundoNome();
        java.lang.Long long8 = professor2.getId();
        com.unifacisa.tcc.domain.Professor professor10 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor2.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str14 = socialUserConnection0.getSecret();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor10 = aluno0.getProfessor();
        java.lang.Boolean boolean11 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor12 = aluno0.getProfessor();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(professor12);
        org.junit.Assert.assertNotNull(aluno16);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        aluno12.setPrimeiroNome("");
        java.lang.String str15 = aluno12.getPrimeiroNome();
        java.lang.Long long16 = aluno12.getMatricula();
        boolean boolean17 = user7.equals((java.lang.Object) aluno12);
        user7.setFirstName("");
        user7.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet22 = user7.getAuthorities();
        user0.setAuthorities(authoritySet22);
        java.time.Instant instant24 = user0.getResetDate();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(authoritySet22);
        org.junit.Assert.assertNull(instant24);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        user16.setCreatedBy("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        user6.setCreatedDate(instant13);
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = userMapper3.userToUserDTO(user6);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper0.userDTOsToUsers(userDTOList21);
        com.unifacisa.tcc.domain.User user24 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO25 = null;
        com.unifacisa.tcc.domain.User user26 = userMapper0.userDTOToUser(userDTO25);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNotNull(userDTO15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(user26);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user0.toString();
        java.lang.String str10 = user0.getLastModifiedBy();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setResetKey("hi!");
        java.lang.String str12 = user9.getResetKey();
        boolean boolean14 = user9.equals((java.lang.Object) 10.0f);
        java.lang.String str15 = user9.getCreatedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        user16.setCreatedDate(instant23);
        boolean boolean25 = user16.getActivated();
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant40 = user35.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.String str52 = aluno49.getPrimeiroNome();
        java.lang.Long long53 = aluno49.getMatricula();
        boolean boolean54 = user44.equals((java.lang.Object) aluno49);
        user44.setFirstName("");
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        user57.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user57.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user64 = userMapper62.userFromId((java.lang.Long) 100L);
        user64.setLangKey("");
        java.time.Instant instant67 = user64.getResetDate();
        java.time.Instant instant68 = user64.getCreatedDate();
        user57.setResetDate(instant68);
        user44.setCreatedDate(instant68);
        java.util.Set<java.lang.String> strSet71 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant40, "", instant68, strSet71);
        user16.setLastModifiedDate(instant40);
        user9.setResetDate(instant40);
        user2.setLastModifiedDate(instant40);
        java.lang.String str76 = user2.getLogin();
        java.lang.String str77 = user2.getActivationKey();
        user2.setImageUrl("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNull(instant67);
        org.junit.Assert.assertNotNull(instant68);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor39.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor39.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor47 = null;
        aluno46.setProfessor(professor47);
        aluno46.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = aluno46.primeiroNome("hi!");
        java.lang.Long long53 = aluno46.getId();
        java.lang.String str54 = aluno46.getSegundoNome();
        aluno46.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        com.unifacisa.tcc.domain.Professor professor57 = professor39.removeAluno(aluno46);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity58 = professorResource1.createProfessor(professor57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertNotNull(professor57);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM11 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str12 = fieldErrorVM11.getObjectName();
        boolean boolean13 = socialUserConnection0.equals((java.lang.Object) fieldErrorVM11);
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        boolean boolean4 = authority0.equals((java.lang.Object) 0L);
        java.lang.String str5 = authority0.getName();
        java.lang.String str6 = authority0.toString();
        java.lang.String str7 = authority0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='null'}" + "'", str6, "Authority{name='null'}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str6 = keyAndPasswordVM0.getKey();
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str6, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setResetKey("error.concurrencyFailure");
        java.lang.String str4 = user0.getResetKey();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.concurrencyFailure" + "'", str4, "error.concurrencyFailure");
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        java.lang.Long long3 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Professor professor15 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno4.professor(professor15);
        aluno0.setProfessor(professor15);
        java.lang.String str18 = professor15.getSegundoNome();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor36 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        java.lang.Long long47 = aluno44.getMatricula();
        java.lang.String str48 = aluno44.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean51 = aluno49.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        aluno52.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno43, aluno44, aluno49, aluno52, aluno57, aluno60, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor71 = professor36.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor72 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa74 = professor2.email("error.validation");
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long76 = aluno75.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno75.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno75.numeroContato((java.lang.Long) 1L);
        aluno75.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Boolean boolean83 = aluno75.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa85 = aluno75.email("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor86 = professor2.addAluno(aluno75);
        java.lang.Boolean boolean87 = professor2.isDiponibilidade();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertNotNull(pessoa74);
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(pessoa85);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertEquals("'" + boolean87 + "' != '" + false + "'", boolean87, false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getId();
        aluno9.setNumeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.String str23 = aluno20.getPrimeiroNome();
        java.lang.Long long24 = aluno20.getMatricula();
        boolean boolean25 = user15.equals((java.lang.Object) aluno20);
        java.lang.String str26 = user15.getPassword();
        boolean boolean27 = aluno9.equals((java.lang.Object) str26);
        java.lang.String str28 = aluno9.toString();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor33 = professor31.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor31.email("");
        com.unifacisa.tcc.domain.Professor professor37 = professor31.diponibilidade((java.lang.Boolean) true);
        professor37.setId((java.lang.Long) (-1L));
        aluno9.setProfessor(professor37);
        professor37.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str28, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(professor37);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        socialUserConnection0.setId((java.lang.Long) 10L);
        socialUserConnection0.setRank((java.lang.Long) 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant9 = user0.getResetDate();
        user0.setCreatedBy("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.email("");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor37.email("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet44 = professor37.getAlunos();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity45 = professorResource1.createProfessor(professor37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(alunoSet44);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        persistentAuditEvent0.setAuditEventType("error.validation");
        persistentAuditEvent0.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        user7.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user7.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user14 = userMapper12.userFromId((java.lang.Long) 100L);
        user14.setLangKey("");
        java.time.Instant instant17 = user14.getResetDate();
        java.time.Instant instant18 = user14.getCreatedDate();
        user7.setResetDate(instant18);
        boolean boolean20 = user7.getActivated();
        user7.setLastModifiedBy("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user25 = userMapper23.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO26 = new com.unifacisa.tcc.service.dto.UserDTO(user25);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setResetKey("hi!");
        java.lang.String str32 = user29.getResetKey();
        user29.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user37 = userMapper35.userFromId((java.lang.Long) 100L);
        user37.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        user37.setResetDate(instant46);
        user29.setResetDate(instant46);
        com.unifacisa.tcc.service.dto.UserDTO userDTO49 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent50 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap51 = null;
        persistentAuditEvent50.setData(strMap51);
        persistentAuditEvent50.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent55 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant56 = null;
        persistentAuditEvent55.setAuditEventDate(instant56);
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        user58.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user58.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper63 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user65 = userMapper63.userFromId((java.lang.Long) 100L);
        user65.setLangKey("");
        java.time.Instant instant68 = user65.getResetDate();
        java.time.Instant instant69 = user65.getCreatedDate();
        user58.setResetDate(instant69);
        persistentAuditEvent55.setAuditEventDate(instant69);
        persistentAuditEvent50.setAuditEventDate(instant69);
        user29.setCreatedDate(instant69);
        userDTO26.setLastModifiedDate(instant69);
        user7.setCreatedDate(instant69);
        persistentAuditEvent0.setAuditEventDate(instant69);
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(user25);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(user37);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNotNull(user65);
        org.junit.Assert.assertNull(instant68);
        org.junit.Assert.assertNotNull(instant69);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        user2.setCreatedBy("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO25 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str26 = userDTO25.getLogin();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        java.lang.String str11 = socialUserConnection0.getProviderId();
        java.lang.String str12 = socialUserConnection0.getUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str11, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setSegundoNome("hi!");
        boolean boolean6 = authority0.equals((java.lang.Object) "hi!");
        java.lang.String str7 = authority0.toString();
        java.lang.String str8 = authority0.getName();
        java.lang.String str9 = authority0.toString();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Authority{name='null'}" + "'", str9, "Authority{name='null'}");
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap5 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant8 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("error.concurrencyFailure");
        authority0.setName("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = authority0.getName();
        java.lang.String str8 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str8, "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        java.lang.String str9 = user2.getPassword();
        java.lang.String str10 = user2.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getLevel();
        java.lang.String str2 = loggerVM0.toString();
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str2, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor31.segundoNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long34 = pessoa33.getId();
        java.lang.Long long35 = pessoa33.getMatricula();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long35);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str7 = professor4.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        professor10.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        aluno13.setHabilitadoTcc((java.lang.Boolean) false);
        aluno13.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        aluno21.setPrimeiroNome("");
        java.lang.Long long24 = aluno21.getMatricula();
        java.lang.Long long25 = aluno21.getMatricula();
        aluno21.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        aluno28.setPrimeiroNome("");
        java.lang.Long long31 = aluno28.getMatricula();
        java.lang.Long long32 = aluno28.getMatricula();
        aluno28.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray36 = new com.unifacisa.tcc.domain.Aluno[] { aluno13, aluno21, aluno28, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet37 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet37, alunoArray36);
        com.unifacisa.tcc.domain.Professor professor39 = professor10.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet37);
        com.unifacisa.tcc.domain.Professor professor40 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet37);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        aluno41.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor46 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor48 = professor46.diponibilidade((java.lang.Boolean) true);
        professor48.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        aluno51.setPrimeiroNome("");
        java.lang.Long long54 = aluno51.getMatricula();
        aluno51.setHabilitadoTcc((java.lang.Boolean) false);
        aluno51.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        java.lang.Long long62 = aluno59.getMatricula();
        java.lang.Long long63 = aluno59.getMatricula();
        aluno59.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        aluno66.setPrimeiroNome("");
        java.lang.Long long69 = aluno66.getMatricula();
        java.lang.Long long70 = aluno66.getMatricula();
        aluno66.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray74 = new com.unifacisa.tcc.domain.Aluno[] { aluno51, aluno59, aluno66, aluno73 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet75 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet75, alunoArray74);
        com.unifacisa.tcc.domain.Professor professor77 = professor48.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Aluno aluno78 = aluno41.professor(professor77);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno78.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno78.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor83 = professor40.removeAluno(aluno78);
        java.lang.Boolean boolean84 = aluno78.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa86 = aluno78.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor87 = aluno78.getProfessor();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity88 = alunoResource1.createAluno(aluno78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNotNull(alunoArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNotNull(alunoArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNotNull(aluno78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNotNull(professor83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(pessoa86);
        org.junit.Assert.assertNull(professor87);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user62 = new com.unifacisa.tcc.domain.User();
        user62.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user62.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO67 = new com.unifacisa.tcc.service.dto.UserDTO(user62);
        user62.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO70 = userMapper0.userToUserDTO(user62);
        user62.setActivated(true);
        java.lang.String str73 = user62.getImageUrl();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(userDTO70);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.String str8 = loginVM0.getUsername();
        loginVM0.setPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        java.lang.String str11 = loginVM0.getPassword();
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList14 = userMapper0.userDTOsToUsers(userDTOList13);
        java.lang.String[] strArray59 = new java.lang.String[] { "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Authority{name='error.concurrencyFailure'}", "Authority{name='null'}", "Authority{name='Authority{name='error.concurrencyFailure'}'}", "Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "hi!", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", "LoginVM{username='null', rememberMe=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "error.concurrencyFailure", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Authority{name='error.concurrencyFailure'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", "Authority{name='null'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet62 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet60);
        com.unifacisa.tcc.domain.User user64 = userMapper0.userFromId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(userList14);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(authoritySet62);
        org.junit.Assert.assertNotNull(user64);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = null;
        user2.setLastModifiedDate(instant5);
        java.lang.String str7 = user2.getPassword();
        java.lang.String str8 = user2.getFirstName();
        java.lang.String str9 = user2.getEmail();
        user2.setFirstName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        managedUserVM0.setLogin("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = managedUserVM0.getLastName();
        java.lang.String str6 = managedUserVM0.getLastName();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        professor15.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor15.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long20 = professor15.getId();
        professor15.setNumeroContato((java.lang.Long) 100L);
        java.lang.String str23 = professor15.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno0.professor(professor15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa26 = professor15.primeiroNome("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.String str37 = aluno34.getPrimeiroNome();
        java.lang.Long long38 = aluno34.getMatricula();
        boolean boolean39 = user29.equals((java.lang.Object) aluno34);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = aluno40.primeiroNome("hi!");
        java.lang.Long long47 = aluno40.getId();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno40.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor50 = aluno40.getProfessor();
        java.lang.Boolean boolean51 = aluno40.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor52 = aluno40.getProfessor();
        boolean boolean53 = aluno34.equals((java.lang.Object) aluno40);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa55 = aluno40.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor56 = professor15.addAluno(aluno40);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNotNull(pessoa26);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertNull(professor50);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + false + "'", boolean51, false);
        org.junit.Assert.assertNull(professor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(pessoa55);
        org.junit.Assert.assertNotNull(professor56);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("Professor{id=0, primeiroNome='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='error.validation', numeroContato='null', diponibilidade='true'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setNewPassword("LoginVM{username='null', rememberMe=null}");
        keyAndPasswordVM0.setKey("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        keyAndPasswordVM0.setNewPassword("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        keyAndPasswordVM0.setNewPassword("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        org.aspectj.lang.JoinPoint joinPoint5 = null;
        java.lang.Throwable throwable6 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect4.logAfterThrowing(joinPoint5, throwable6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        java.lang.String str10 = user0.getPassword();
        java.lang.String str11 = user0.getLogin();
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str46 = managedUserVM45.toString();
        java.lang.String str47 = managedUserVM45.getLogin();
        java.time.Instant instant48 = managedUserVM45.getLastModifiedDate();
        java.lang.String str49 = managedUserVM45.getLangKey();
        java.lang.String str50 = managedUserVM45.getImageUrl();
        java.lang.String str51 = managedUserVM45.getLogin();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity52 = userResource3.updateUser(managedUserVM45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str46, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(instant48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("");
        com.unifacisa.tcc.domain.Professor professor8 = professor2.diponibilidade((java.lang.Boolean) true);
        professor8.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.createProfessor(professor8);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource1.getProfessor((java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professorResponseEntity11);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setLastModifiedBy("LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getId();
        aluno9.setNumeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.String str23 = aluno20.getPrimeiroNome();
        java.lang.Long long24 = aluno20.getMatricula();
        boolean boolean25 = user15.equals((java.lang.Object) aluno20);
        java.lang.String str26 = user15.getPassword();
        boolean boolean27 = aluno9.equals((java.lang.Object) str26);
        java.lang.String str28 = aluno9.toString();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor33 = professor31.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor31.email("");
        com.unifacisa.tcc.domain.Professor professor37 = professor31.diponibilidade((java.lang.Boolean) true);
        professor37.setId((java.lang.Long) (-1L));
        aluno9.setProfessor(professor37);
        aluno9.setEmail("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str44 = professor43.toString();
        com.unifacisa.tcc.domain.Professor professor46 = professor43.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet47 = professor43.getAlunos();
        professor43.setId((java.lang.Long) 1L);
        aluno9.setProfessor(professor43);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str28, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str44, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNotNull(alunoSet47);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.time.Instant instant3 = managedUserVM0.getLastModifiedDate();
        java.lang.String str4 = managedUserVM0.getPassword();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Authority{name='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "Authority{name='null'}", (java.lang.Long) 1L, "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=false}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", (java.lang.Long) 1L);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        user2.setCreatedDate(instant26);
        java.lang.String str29 = user2.toString();
        java.time.Instant instant30 = user2.getCreatedDate();
        java.lang.String str31 = user2.getResetKey();
        java.lang.String str32 = user2.getEmail();
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        user42.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user42.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant47 = user42.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user51 = userMapper49.userFromId((java.lang.Long) 100L);
        user51.setLangKey("");
        java.time.Instant instant54 = user51.getResetDate();
        java.time.Instant instant55 = user51.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        aluno56.setPrimeiroNome("");
        java.lang.String str59 = aluno56.getPrimeiroNome();
        java.lang.Long long60 = aluno56.getMatricula();
        boolean boolean61 = user51.equals((java.lang.Object) aluno56);
        user51.setFirstName("");
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        user64.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user64.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user71 = userMapper69.userFromId((java.lang.Long) 100L);
        user71.setLangKey("");
        java.time.Instant instant74 = user71.getResetDate();
        java.time.Instant instant75 = user71.getCreatedDate();
        user64.setResetDate(instant75);
        user51.setCreatedDate(instant75);
        java.util.Set<java.lang.String> strSet78 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant47, "", instant75, strSet78);
        user2.setLastModifiedDate(instant47);
        com.unifacisa.tcc.domain.User user81 = new com.unifacisa.tcc.domain.User();
        user81.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user81.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper86 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user88 = userMapper86.userFromId((java.lang.Long) 100L);
        user88.setLangKey("");
        java.time.Instant instant91 = user88.getResetDate();
        java.time.Instant instant92 = user88.getCreatedDate();
        user81.setResetDate(instant92);
        user2.setLastModifiedDate(instant92);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str29, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(user51);
        org.junit.Assert.assertNull(instant54);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(user71);
        org.junit.Assert.assertNull(instant74);
        org.junit.Assert.assertNotNull(instant75);
        org.junit.Assert.assertNotNull(user88);
        org.junit.Assert.assertNull(instant91);
        org.junit.Assert.assertNotNull(instant92);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("error.concurrencyFailure", "LoggerVM{name='null', level='null'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", (java.lang.Long) 10L, "", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "LoggerVM{name='null', level='null'}", "hi!", "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=null}", (java.lang.Long) 100L);
        java.lang.Long long12 = socialUserConnection11.getId();
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.String str17 = aluno14.getPrimeiroNome();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user9.equals((java.lang.Object) aluno14);
        user9.setFirstName("");
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        user22.setResetDate(instant33);
        user9.setCreatedDate(instant33);
        user2.setResetDate(instant33);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent37 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant38 = null;
        persistentAuditEvent37.setAuditEventDate(instant38);
        com.unifacisa.tcc.domain.User user40 = new com.unifacisa.tcc.domain.User();
        user40.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user40.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user47 = userMapper45.userFromId((java.lang.Long) 100L);
        user47.setLangKey("");
        java.time.Instant instant50 = user47.getResetDate();
        java.time.Instant instant51 = user47.getCreatedDate();
        user40.setResetDate(instant51);
        persistentAuditEvent37.setAuditEventDate(instant51);
        user2.setCreatedDate(instant51);
        java.lang.String str55 = user2.getLangKey();
        java.lang.String str56 = user2.getActivationKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertNull(instant50);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "Authority{name='Authority{name='error.concurrencyFailure'}'}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setImageURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str5 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity38 = professorResource1.deleteProfessor((java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long11 = socialUserConnection0.getRank();
        java.lang.String str12 = socialUserConnection0.getUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        java.lang.String str13 = user2.getPassword();
        java.lang.String str14 = user2.getImageUrl();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet15 = user2.getAuthorities();
        user2.setCreatedBy("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        user27.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user27.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant32 = user27.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user36 = userMapper34.userFromId((java.lang.Long) 100L);
        user36.setLangKey("");
        java.time.Instant instant39 = user36.getResetDate();
        java.time.Instant instant40 = user36.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        aluno41.setPrimeiroNome("");
        java.lang.String str44 = aluno41.getPrimeiroNome();
        java.lang.Long long45 = aluno41.getMatricula();
        boolean boolean46 = user36.equals((java.lang.Object) aluno41);
        user36.setFirstName("");
        com.unifacisa.tcc.domain.User user49 = new com.unifacisa.tcc.domain.User();
        user49.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user49.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user56 = userMapper54.userFromId((java.lang.Long) 100L);
        user56.setLangKey("");
        java.time.Instant instant59 = user56.getResetDate();
        java.time.Instant instant60 = user56.getCreatedDate();
        user49.setResetDate(instant60);
        user36.setCreatedDate(instant60);
        java.util.Set<java.lang.String> strSet63 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO64 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant32, "", instant60, strSet63);
        user2.setLastModifiedDate(instant60);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(authoritySet15);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNull(instant59);
        org.junit.Assert.assertNotNull(instant60);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet39 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.email("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor37.numeroContato((java.lang.Long) (-1L));
        pessoa43.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoSet39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(pessoa43);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity46 = userResource3.getUser("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str17 = user2.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.time.Instant instant19 = null;
        userDTO18.setLastModifiedDate(instant19);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user32 = userMapper30.userFromId((java.lang.Long) 100L);
        user32.setLangKey("");
        java.time.Instant instant35 = user32.getResetDate();
        java.time.Instant instant36 = user32.getCreatedDate();
        user32.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant39 = user32.getCreatedDate();
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        user41.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user41.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant46 = user41.getLastModifiedDate();
        java.lang.String[] strArray62 = new java.lang.String[] { "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "LoggerVM{name='null', level='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet63 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet63, strArray62);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", false, "hi!", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", instant39, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant46, (java.util.Set<java.lang.String>) strSet63);
        userDTO18.setLastModifiedDate(instant39);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM11 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str12 = fieldErrorVM11.getObjectName();
        boolean boolean13 = socialUserConnection0.equals((java.lang.Object) fieldErrorVM11);
        socialUserConnection0.setRefreshToken("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str18 = socialUserConnection0.getProviderId();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setAccessToken("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str18, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        aluno7.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        aluno16.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.String str26 = aluno22.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno22, aluno27, aluno30, aluno35, aluno38, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno7.setProfessor(professor49);
        aluno0.setProfessor(professor49);
        com.unifacisa.tcc.domain.Professor professor53 = professor49.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor53);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        org.springframework.data.domain.Pageable pageable45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.util.List<com.unifacisa.tcc.service.dto.UserDTO>> userDTOListResponseEntity46 = userResource3.getAllUsers(pageable45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.Long long13 = aluno10.getMatricula();
        aluno10.setHabilitadoTcc((java.lang.Boolean) false);
        aluno10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno18, aluno25, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        com.unifacisa.tcc.domain.Professor professor36 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno37 = aluno0.professor(professor36);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno37.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno41 = aluno37.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = aluno41.matricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = aluno41.email("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Long long46 = pessoa45.getNumeroContato();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(aluno37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(aluno41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(pessoa45);
        org.junit.Assert.assertNull(long46);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        user16.setEmail("LoggerVM{name='null', level='null'}");
        java.lang.String str21 = user16.getEmail();
        java.lang.String str22 = user16.getLogin();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str21, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant10, "error.concurrencyFailure", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.toString();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.lang.String str23 = managedUserVM20.getFirstName();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}" + "'", str21, "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str22, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = persistentAuditEvent0.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent0.getData();
        java.time.Instant instant10 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(instant10);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.email("");
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor16 = professor8.addAluno(aluno13);
        java.lang.Long long17 = aluno13.getNumeroContato();
        boolean boolean18 = user2.equals((java.lang.Object) long17);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet19 = user2.getAuthorities();
        user2.setFirstName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        user24.setLangKey("");
        java.time.Instant instant27 = user24.getResetDate();
        java.time.Instant instant28 = user24.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        aluno29.setPrimeiroNome("");
        java.lang.String str32 = aluno29.getPrimeiroNome();
        java.lang.Long long33 = aluno29.getMatricula();
        boolean boolean34 = user24.equals((java.lang.Object) aluno29);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant40 = user35.getLastModifiedDate();
        user24.setCreatedDate(instant40);
        user24.setLastModifiedBy("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        user24.setEmail("");
        boolean boolean46 = user2.equals((java.lang.Object) user24);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(authoritySet19);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(instant27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        user2.setCreatedDate(instant26);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor32 = aluno29.getProfessor();
        com.unifacisa.tcc.domain.Professor professor33 = aluno29.getProfessor();
        boolean boolean34 = user2.equals((java.lang.Object) aluno29);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.time.Instant instant36 = user2.getResetDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(professor32);
        org.junit.Assert.assertNull(professor33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(instant36);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        aluno2.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno2.primeiroNome("hi!");
        java.lang.Long long9 = aluno2.getId();
        java.lang.String str10 = aluno2.getSegundoNome();
        aluno2.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity13 = alunoResource1.createAluno(aluno2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        aluno2.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno2.primeiroNome("hi!");
        java.lang.Long long9 = aluno2.getId();
        com.unifacisa.tcc.domain.Aluno aluno11 = aluno2.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long12 = aluno11.getId();
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        professor15.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = aluno18.primeiroNome("hi!");
        java.lang.Long long25 = aluno18.getId();
        com.unifacisa.tcc.domain.Aluno aluno27 = aluno18.habilitadoTcc((java.lang.Boolean) false);
        aluno18.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor30 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str31 = professor30.toString();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean43 = aluno41.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor46 = null;
        aluno45.setProfessor(professor46);
        java.lang.Long long48 = aluno45.getMatricula();
        java.lang.String str49 = aluno45.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean52 = aluno50.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor53 = aluno50.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor55 = null;
        aluno54.setProfessor(professor55);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        aluno57.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        aluno60.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor66 = null;
        aluno65.setProfessor(professor66);
        java.lang.Long long68 = aluno65.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean72 = aluno70.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor74 = null;
        aluno73.setProfessor(professor74);
        com.unifacisa.tcc.domain.Aluno[] alunoArray76 = new com.unifacisa.tcc.domain.Aluno[] { aluno32, aluno37, aluno41, aluno44, aluno45, aluno50, aluno54, aluno57, aluno60, aluno65, aluno69, aluno70, aluno73 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet77 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet77, alunoArray76);
        com.unifacisa.tcc.domain.Professor professor79 = professor30.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno18.professor(professor30);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno80.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor83 = aluno82.getProfessor();
        com.unifacisa.tcc.domain.Professor professor84 = professor15.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Aluno aluno85 = aluno11.professor(professor15);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity86 = alunoResource1.updateAluno(aluno85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(aluno11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(aluno27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(professor53);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(alunoArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNotNull(professor83);
        org.junit.Assert.assertNotNull(professor84);
        org.junit.Assert.assertNotNull(aluno85);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa3 = aluno0.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 1L);
        aluno0.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str8 = aluno0.getEmail();
        com.unifacisa.tcc.domain.Professor professor9 = aluno0.getProfessor();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(pessoa3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(professor9);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.String str45 = user0.getFirstName();
        user0.setFirstName("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        user0.setActivated(true);
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper52 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user54 = userMapper52.userFromId((java.lang.Long) 100L);
        user54.setLangKey("");
        java.time.Instant instant57 = user54.getResetDate();
        java.time.Instant instant58 = user54.getCreatedDate();
        user54.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str61 = user54.toString();
        java.lang.String str62 = user54.getCreatedBy();
        java.lang.String str63 = user54.getResetKey();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent64 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant65 = null;
        persistentAuditEvent64.setAuditEventDate(instant65);
        com.unifacisa.tcc.domain.User user67 = new com.unifacisa.tcc.domain.User();
        user67.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user67.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper72 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user74 = userMapper72.userFromId((java.lang.Long) 100L);
        user74.setLangKey("");
        java.time.Instant instant77 = user74.getResetDate();
        java.time.Instant instant78 = user74.getCreatedDate();
        user67.setResetDate(instant78);
        persistentAuditEvent64.setAuditEventDate(instant78);
        user54.setLastModifiedDate(instant78);
        user0.setLastModifiedDate(instant78);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(user54);
        org.junit.Assert.assertNull(instant57);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str61, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str62, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(user74);
        org.junit.Assert.assertNull(instant77);
        org.junit.Assert.assertNotNull(instant78);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = loggerVM0.getLevel();
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.toString();
        managedUserVM0.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        java.lang.String str8 = managedUserVM0.getImageUrl();
        java.lang.String str9 = managedUserVM0.getLogin();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet39 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.email("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor37.numeroContato((java.lang.Long) (-1L));
        pessoa43.setMatricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = pessoa43.segundoNome("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:34.902Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.902Z, authorities=[]}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoSet39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(pessoa47);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        loginVM0.setUsername("");
        loginVM0.setUsername("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor36 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        java.lang.Long long47 = aluno44.getMatricula();
        java.lang.String str48 = aluno44.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean51 = aluno49.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        aluno52.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno43, aluno44, aluno49, aluno52, aluno57, aluno60, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor71 = professor36.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor72 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa74 = professor2.email("error.validation");
        java.lang.String str75 = pessoa74.getEmail();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertNotNull(pessoa74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "error.validation" + "'", str75, "error.validation");
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.Long long6 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProviderId("Authority{name='null'}");
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setResetKey("hi!");
        java.lang.String str16 = user13.getResetKey();
        boolean boolean18 = user13.equals((java.lang.Object) 10.0f);
        java.lang.String str19 = user13.toString();
        boolean boolean20 = socialUserConnection0.equals((java.lang.Object) str19);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str19, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.String str9 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        socialUserConnection0.setProfileURL("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant6 = null;
        persistentAuditEvent5.setAuditEventDate(instant6);
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        user8.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user8.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user8.setResetDate(instant19);
        persistentAuditEvent5.setAuditEventDate(instant19);
        persistentAuditEvent0.setAuditEventDate(instant19);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent23 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant24 = null;
        persistentAuditEvent23.setAuditEventDate(instant24);
        java.lang.Long long26 = persistentAuditEvent23.getId();
        persistentAuditEvent23.setPrincipal("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        persistentAuditEvent23.setPrincipal("");
        java.util.Map<java.lang.String, java.lang.String> strMap31 = persistentAuditEvent23.getData();
        persistentAuditEvent0.setData(strMap31);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity46 = userResource3.deleteUser("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("");
        java.lang.String str4 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = socialUserConnection0.getImageURL();
        java.lang.String str7 = socialUserConnection0.getAccessToken();
        java.lang.String str8 = socialUserConnection0.getSecret();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("");
        com.unifacisa.tcc.domain.Professor professor8 = professor2.diponibilidade((java.lang.Boolean) true);
        professor8.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.createProfessor(professor8);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        aluno16.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.String str26 = aluno22.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno22, aluno27, aluno30, aluno35, aluno38, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        java.lang.Long long50 = professor49.getId();
        java.lang.Long long51 = professor49.getId();
        professor49.setSegundoNome("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean54 = professor49.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = professor49.numeroContato((java.lang.Long) 100L);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity57 = professorResource1.updateProfessor(professor49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professorResponseEntity11);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertEquals("'" + boolean54 + "' != '" + true + "'", boolean54, true);
        org.junit.Assert.assertNotNull(pessoa56);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.String str4 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.Long long13 = aluno10.getMatricula();
        aluno10.setHabilitadoTcc((java.lang.Boolean) false);
        aluno10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno18, aluno25, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        com.unifacisa.tcc.domain.Professor professor36 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str42 = professor39.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor45 = professor43.diponibilidade((java.lang.Boolean) true);
        professor45.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.Long long51 = aluno48.getMatricula();
        aluno48.setHabilitadoTcc((java.lang.Boolean) false);
        aluno48.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        aluno56.setPrimeiroNome("");
        java.lang.Long long59 = aluno56.getMatricula();
        java.lang.Long long60 = aluno56.getMatricula();
        aluno56.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.Long long66 = aluno63.getMatricula();
        java.lang.Long long67 = aluno63.getMatricula();
        aluno63.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray71 = new com.unifacisa.tcc.domain.Aluno[] { aluno48, aluno56, aluno63, aluno70 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet72 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet72, alunoArray71);
        com.unifacisa.tcc.domain.Professor professor74 = professor45.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor75 = professor39.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor76 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno0.professor(professor7);
        com.unifacisa.tcc.domain.Professor professor78 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str79 = professor78.toString();
        com.unifacisa.tcc.domain.Professor professor81 = professor78.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet82 = professor78.getAlunos();
        professor78.setPrimeiroNome("");
        professor78.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa88 = professor78.email("hi!");
        com.unifacisa.tcc.domain.Aluno aluno89 = aluno77.professor(professor78);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet90 = professor78.getAlunos();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertNull(long59);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(alunoArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str79, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(alunoSet82);
        org.junit.Assert.assertNotNull(pessoa88);
        org.junit.Assert.assertNotNull(aluno89);
        org.junit.Assert.assertNotNull(alunoSet90);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setLastModifiedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        user0.setEmail("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "LoggerVM{name='null', level='null'}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", (java.lang.Long) 1L);
        socialUserConnection11.setExpireTime((java.lang.Long) 10L);
        socialUserConnection11.setSecret("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long7 = professor4.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor4.email("error.validation");
        professor4.setId((java.lang.Long) 0L);
        professor4.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Long long14 = professor4.getNumeroContato();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity15 = professorResource1.createProfessor(professor4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.unifacisa.tcc.domain.Professor> professorList16 = professorResource1.getAllProfessors();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNotNull(professorResponseEntity15);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setPrincipal("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str5 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str15 = managedUserVM14.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity16 = userResource3.createUser(managedUserVM14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str15, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        java.lang.String str14 = user9.getEmail();
        java.time.Instant instant15 = user9.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant15);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(instant15);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = loggerVM0.toString();
        java.lang.String str4 = loggerVM0.getLevel();
        loggerVM0.setLevel("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str3, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str8 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        java.lang.String str4 = user2.getActivationKey();
        java.lang.String str5 = user2.getCreatedBy();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        user6.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM9 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet10 = managedUserVM9.getAuthorities();
        boolean boolean11 = user6.equals((java.lang.Object) strSet10);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray13 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList14 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList14, userArray13);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList16 = userMapper12.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList14);
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        com.unifacisa.tcc.service.dto.UserDTO userDTO47 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant39, "hi!", instant41, (java.util.Set<java.lang.String>) strSet45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM48 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant27, "", instant29, (java.util.Set<java.lang.String>) strSet45);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet49 = userMapper12.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet45);
        user6.setAuthorities(authoritySet49);
        boolean boolean51 = user6.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper52 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user54 = userMapper52.userFromId((java.lang.Long) 100L);
        user54.setLangKey("");
        java.time.Instant instant57 = user54.getResetDate();
        java.time.Instant instant58 = user54.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        java.lang.String str62 = aluno59.getPrimeiroNome();
        java.lang.Long long63 = aluno59.getMatricula();
        boolean boolean64 = user54.equals((java.lang.Object) aluno59);
        user54.setFirstName("");
        user54.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet69 = user54.getAuthorities();
        user6.setAuthorities(authoritySet69);
        user2.setAuthorities(authoritySet69);
        java.lang.String str72 = user2.getLastModifiedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(userDTOList16);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(authoritySet49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(user54);
        org.junit.Assert.assertNull(instant57);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(authoritySet69);
        org.junit.Assert.assertNull(str72);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setProviderId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.String str7 = professor6.toString();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        aluno8.setPrimeiroNome("");
        java.lang.Long long11 = aluno8.getMatricula();
        java.lang.Long long12 = aluno8.getMatricula();
        aluno8.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor22 = professor20.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.String str34 = aluno30.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean45 = aluno43.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        aluno46.setPrimeiroNome("");
        java.lang.Long long49 = aluno46.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray53 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno29, aluno30, aluno35, aluno38, aluno43, aluno46, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet54 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet54, alunoArray53);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        com.unifacisa.tcc.domain.Professor professor57 = professor22.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        aluno15.setProfessor(professor57);
        aluno8.setProfessor(professor57);
        aluno8.setHabilitadoTcc((java.lang.Boolean) false);
        aluno8.setId((java.lang.Long) 1L);
        java.lang.String str64 = aluno8.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor65 = professor6.addAluno(aluno8);
        aluno8.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str68 = aluno8.getEmail();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNotNull(alunoArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertNull(str68);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant46 = userDTO45.getCreatedDate();
        java.lang.String str47 = userDTO45.toString();
        java.lang.String str48 = userDTO45.getLastModifiedBy();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNotNull(instant46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:41.180Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:41.180Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str47, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:41.180Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:41.180Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}", "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        org.springframework.data.domain.Pageable pageable14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.util.List<com.unifacisa.tcc.service.dto.UserDTO>> userDTOListResponseEntity15 = userResource3.getAllUsers(pageable14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("LoginVM{username='null', rememberMe=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor10 = null;
        aluno9.setProfessor(professor10);
        aluno9.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno9.primeiroNome("hi!");
        java.lang.Long long16 = aluno9.getId();
        java.lang.String str17 = aluno9.getSegundoNome();
        aluno9.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        com.unifacisa.tcc.domain.Professor professor20 = professor2.removeAluno(aluno9);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor2.matricula((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(pessoa22);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str5 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str6 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str6, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getLastModifiedDate();
        org.junit.Assert.assertNull(instant1);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.lang.String str32 = managedUserVM31.getEmail();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        professor4.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity9 = professorResource1.createProfessor(professor4);
        com.unifacisa.tcc.domain.Professor professor10 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor12 = professor10.diponibilidade((java.lang.Boolean) true);
        professor12.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        aluno15.setPrimeiroNome("");
        java.lang.Long long18 = aluno15.getMatricula();
        aluno15.setHabilitadoTcc((java.lang.Boolean) false);
        aluno15.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        java.lang.Long long27 = aluno23.getMatricula();
        aluno23.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.Long long34 = aluno30.getMatricula();
        aluno30.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno23, aluno30, aluno37 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        com.unifacisa.tcc.domain.Professor professor41 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor42 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor44 = professor42.diponibilidade((java.lang.Boolean) true);
        professor44.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str47 = professor44.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) true);
        professor50.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.Long long56 = aluno53.getMatricula();
        aluno53.setHabilitadoTcc((java.lang.Boolean) false);
        aluno53.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        aluno61.setPrimeiroNome("");
        java.lang.Long long64 = aluno61.getMatricula();
        java.lang.Long long65 = aluno61.getMatricula();
        aluno61.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        aluno68.setPrimeiroNome("");
        java.lang.Long long71 = aluno68.getMatricula();
        java.lang.Long long72 = aluno68.getMatricula();
        aluno68.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray76 = new com.unifacisa.tcc.domain.Aluno[] { aluno53, aluno61, aluno68, aluno75 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet77 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet77, alunoArray76);
        com.unifacisa.tcc.domain.Professor professor79 = professor50.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        com.unifacisa.tcc.domain.Professor professor80 = professor44.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        com.unifacisa.tcc.domain.Professor professor81 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet77);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity82 = professorResource1.createProfessor(professor81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(professorResponseEntity9);
        org.junit.Assert.assertNotNull(professor12);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertNull(long64);
        org.junit.Assert.assertNull(long65);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNotNull(alunoArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNotNull(professor81);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLogin();
        user0.setLastModifiedBy("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        user0.setActivated(false);
        user0.setResetKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.lang.String str10 = user0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = loginVM0.toString();
        java.lang.String str7 = loginVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str6, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str7, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent7 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant8 = null;
        persistentAuditEvent7.setAuditEventDate(instant8);
        persistentAuditEvent7.setAuditEventType("error.validation");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent12 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent12.setId((java.lang.Long) 1L);
        java.lang.String str15 = persistentAuditEvent12.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = persistentAuditEvent12.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent17 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent17.setId((java.lang.Long) 1L);
        java.lang.String str20 = persistentAuditEvent17.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = persistentAuditEvent17.getData();
        persistentAuditEvent12.setData(strMap21);
        persistentAuditEvent7.setData(strMap21);
        persistentAuditEvent0.setData(strMap21);
        java.lang.String str25 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=0, primeiroNome='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='error.validation', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user63 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user65 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user66 = new com.unifacisa.tcc.domain.User();
        user66.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user66.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setLangKey("");
        java.time.Instant instant76 = user73.getResetDate();
        java.time.Instant instant77 = user73.getCreatedDate();
        user66.setResetDate(instant77);
        java.time.Instant instant79 = null;
        user66.setCreatedDate(instant79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user66);
        java.lang.String str82 = user66.getEmail();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNotNull(user65);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(instant76);
        org.junit.Assert.assertNotNull(instant77);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.concurrencyFailure", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user11.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        user11.setResetDate(instant22);
        java.time.Instant instant24 = null;
        user11.setCreatedDate(instant24);
        java.lang.String str26 = user11.getPassword();
        boolean boolean27 = user11.getActivated();
        boolean boolean28 = aluno5.equals((java.lang.Object) user11);
        java.lang.String str29 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='null', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository12 = customSocialUsersConnectionRepository2.createConnectionRepository("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository14 = customSocialUsersConnectionRepository2.createConnectionRepository("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user27 = userMapper25.userFromId((java.lang.Long) 100L);
        user27.setLangKey("");
        java.time.Instant instant30 = user27.getResetDate();
        java.time.Instant instant31 = user27.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent33 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap34 = null;
        persistentAuditEvent33.setData(strMap34);
        persistentAuditEvent33.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant39 = null;
        persistentAuditEvent38.setAuditEventDate(instant39);
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        user41.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user41.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        user41.setResetDate(instant52);
        persistentAuditEvent38.setAuditEventDate(instant52);
        persistentAuditEvent33.setAuditEventDate(instant52);
        java.time.Instant instant66 = null;
        java.time.Instant instant68 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet74 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet74, strArray73);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant66, "error.concurrencyFailure", instant68, (java.util.Set<java.lang.String>) strSet74);
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "hi!", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant52, (java.util.Set<java.lang.String>) strSet74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet78 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", (java.util.Set<java.lang.String>) strSet74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertNotNull(connectionRepository12);
        org.junit.Assert.assertNotNull(connectionRepository14);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertNull(instant30);
        org.junit.Assert.assertNotNull(instant31);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setLevel("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        loggerVM0.setName("");
        java.lang.String str5 = loggerVM0.getLevel();
        java.lang.String str6 = loggerVM0.getName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor41 = professor39.diponibilidade((java.lang.Boolean) true);
        professor41.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str44 = professor41.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        professor47.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        java.lang.Long long53 = aluno50.getMatricula();
        aluno50.setHabilitadoTcc((java.lang.Boolean) false);
        aluno50.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        java.lang.Long long62 = aluno58.getMatricula();
        aluno58.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        aluno65.setPrimeiroNome("");
        java.lang.Long long68 = aluno65.getMatricula();
        java.lang.Long long69 = aluno65.getMatricula();
        aluno65.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray73 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno58, aluno65, aluno72 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet74 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet74, alunoArray73);
        com.unifacisa.tcc.domain.Professor professor76 = professor47.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet74);
        com.unifacisa.tcc.domain.Professor professor77 = professor41.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet74);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet74);
        professor37.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertNotNull(alunoArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNotNull(professor77);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        professor38.setPrimeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        professor38.setNumeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = loginVM0.toString();
        java.lang.String str7 = loginVM0.getPassword();
        loginVM0.setPassword("");
        java.lang.String str10 = loginVM0.toString();
        java.lang.String str11 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str6, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str10, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        boolean boolean13 = user0.getActivated();
        user0.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str16 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent17 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant18 = persistentAuditEvent17.getAuditEventDate();
        java.time.Instant instant19 = null;
        persistentAuditEvent17.setAuditEventDate(instant19);
        persistentAuditEvent17.setId((java.lang.Long) 1L);
        persistentAuditEvent17.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent25 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap26 = null;
        persistentAuditEvent25.setData(strMap26);
        persistentAuditEvent25.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent30 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant31 = null;
        persistentAuditEvent30.setAuditEventDate(instant31);
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        user33.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user33.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user40 = userMapper38.userFromId((java.lang.Long) 100L);
        user40.setLangKey("");
        java.time.Instant instant43 = user40.getResetDate();
        java.time.Instant instant44 = user40.getCreatedDate();
        user33.setResetDate(instant44);
        persistentAuditEvent30.setAuditEventDate(instant44);
        persistentAuditEvent25.setAuditEventDate(instant44);
        persistentAuditEvent17.setAuditEventDate(instant44);
        com.unifacisa.tcc.domain.User user49 = new com.unifacisa.tcc.domain.User();
        user49.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM52 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet53 = managedUserVM52.getAuthorities();
        boolean boolean54 = user49.equals((java.lang.Object) strSet53);
        java.time.Instant instant55 = user49.getLastModifiedDate();
        persistentAuditEvent17.setAuditEventDate(instant55);
        user0.setCreatedDate(instant55);
        java.lang.String str58 = user0.getPassword();
        java.lang.String str59 = user0.getLogin();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet60 = user0.getAuthorities();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNull(instant43);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNull(strSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(instant55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(authoritySet60);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        java.lang.String str4 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.String str17 = aluno13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor18 = professor5.removeAluno(aluno13);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        aluno19.setMatricula((java.lang.Long) 1L);
        aluno19.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor26 = professor5.addAluno(aluno19);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(professor26);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("LoggerVM{name='null', level='null'}", "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        java.lang.Long long5 = socialUserConnection0.getRank();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user63 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user65 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user66 = new com.unifacisa.tcc.domain.User();
        user66.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user66.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setLangKey("");
        java.time.Instant instant76 = user73.getResetDate();
        java.time.Instant instant77 = user73.getCreatedDate();
        user66.setResetDate(instant77);
        java.time.Instant instant79 = null;
        user66.setCreatedDate(instant79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user66);
        java.lang.String str82 = user66.toString();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNotNull(user65);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(instant76);
        org.junit.Assert.assertNotNull(instant77);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str82, "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor36 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        java.lang.Long long47 = aluno44.getMatricula();
        java.lang.String str48 = aluno44.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean51 = aluno49.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        aluno52.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno43, aluno44, aluno49, aluno52, aluno57, aluno60, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor71 = professor36.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor72 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor73 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str74 = professor73.toString();
        com.unifacisa.tcc.domain.Professor professor76 = professor73.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet77 = professor73.getAlunos();
        professor2.setAlunos(alunoSet77);
        com.unifacisa.tcc.domain.Aluno aluno79 = new com.unifacisa.tcc.domain.Aluno();
        aluno79.setPrimeiroNome("");
        java.lang.Long long82 = aluno79.getMatricula();
        java.lang.Long long83 = aluno79.getMatricula();
        aluno79.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean86 = aluno79.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor87 = professor2.removeAluno(aluno79);
        java.lang.String str88 = professor87.toString();
        java.lang.String str89 = professor87.getSegundoNome();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str74, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNotNull(alunoSet77);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNull(long83);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}" + "'", str88, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        user61.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str64 = user61.getImageUrl();
        java.lang.String str65 = user61.getCreatedBy();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.String str16 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str16, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = keyAndPasswordVM0.getKey();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str4, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        java.lang.Long long8 = aluno5.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa10 = aluno5.numeroContato((java.lang.Long) 1L);
        java.lang.Boolean boolean11 = aluno5.isHabilitadoTcc();
        java.lang.String str12 = aluno5.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor13 = professor0.removeAluno(aluno5);
        java.lang.String str14 = professor13.getPrimeiroNome();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNotNull(pessoa10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        java.lang.Long long2 = aluno0.getNumeroContato();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor9 = null;
        aluno8.setProfessor(professor9);
        aluno8.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = aluno8.matricula((java.lang.Long) 10L);
        java.lang.String str15 = aluno8.getEmail();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) str15);
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = aluno0.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.toString();
        professor5.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long9 = professor5.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor5.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Professor professor13 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno0.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor18 = professor16.diponibilidade((java.lang.Boolean) true);
        professor18.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str21 = professor18.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.Long long26 = aluno22.getMatricula();
        aluno22.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = aluno22.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno22.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno33.primeiroNome("hi!");
        java.lang.Long long40 = aluno33.getId();
        com.unifacisa.tcc.domain.Aluno aluno42 = aluno33.habilitadoTcc((java.lang.Boolean) false);
        aluno33.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str46 = professor45.toString();
        com.unifacisa.tcc.domain.Professor professor48 = professor45.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet49 = professor45.getAlunos();
        java.lang.Long long50 = professor45.getNumeroContato();
        professor45.setMatricula((java.lang.Long) (-1L));
        aluno33.setProfessor(professor45);
        com.unifacisa.tcc.domain.Aluno aluno54 = aluno32.professor(professor45);
        com.unifacisa.tcc.domain.Professor professor55 = professor18.removeAluno(aluno32);
        com.unifacisa.tcc.domain.Professor professor57 = professor18.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno58 = aluno0.professor(professor57);
        java.lang.Boolean boolean59 = aluno0.isHabilitadoTcc();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNotNull(aluno42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str46, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(alunoSet49);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertNotNull(aluno54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNotNull(aluno58);
        org.junit.Assert.assertNull(boolean59);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO3 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str4 = user2.getEmail();
        java.time.Instant instant5 = user2.getLastModifiedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent6.setData(strMap7);
        persistentAuditEvent6.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        user20.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user20.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant25 = user20.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.String str37 = aluno34.getPrimeiroNome();
        java.lang.Long long38 = aluno34.getMatricula();
        boolean boolean39 = user29.equals((java.lang.Object) aluno34);
        user29.setFirstName("");
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        user42.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user42.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user49 = userMapper47.userFromId((java.lang.Long) 100L);
        user49.setLangKey("");
        java.time.Instant instant52 = user49.getResetDate();
        java.time.Instant instant53 = user49.getCreatedDate();
        user42.setResetDate(instant53);
        user29.setCreatedDate(instant53);
        java.util.Set<java.lang.String> strSet56 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant25, "", instant53, strSet56);
        persistentAuditEvent6.setAuditEventDate(instant53);
        user2.setLastModifiedDate(instant53);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(user49);
        org.junit.Assert.assertNull(instant52);
        org.junit.Assert.assertNotNull(instant53);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        java.lang.String str10 = user0.getPassword();
        java.lang.Long long11 = user0.getId();
        java.lang.String str12 = user0.getLastName();
        user0.setFirstName("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setLastName("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user20 = userMapper18.userFromId((java.lang.Long) 100L);
        user20.setLangKey("");
        java.time.Instant instant23 = user20.getResetDate();
        java.time.Instant instant24 = user20.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent26 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        persistentAuditEvent26.setData(strMap27);
        persistentAuditEvent26.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent31 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant32 = null;
        persistentAuditEvent31.setAuditEventDate(instant32);
        com.unifacisa.tcc.domain.User user34 = new com.unifacisa.tcc.domain.User();
        user34.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user34.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper39 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user41 = userMapper39.userFromId((java.lang.Long) 100L);
        user41.setLangKey("");
        java.time.Instant instant44 = user41.getResetDate();
        java.time.Instant instant45 = user41.getCreatedDate();
        user34.setResetDate(instant45);
        persistentAuditEvent31.setAuditEventDate(instant45);
        persistentAuditEvent26.setAuditEventDate(instant45);
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet67 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet67, strArray66);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM69 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant59, "error.concurrencyFailure", instant61, (java.util.Set<java.lang.String>) strSet67);
        com.unifacisa.tcc.service.dto.UserDTO userDTO70 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "hi!", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant24, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant45, (java.util.Set<java.lang.String>) strSet67);
        user0.setResetDate(instant45);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(user20);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(user41);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long4 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        aluno5.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno5.primeiroNome("hi!");
        java.lang.Long long12 = aluno5.getId();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        aluno5.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.toString();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        java.lang.Long long55 = aluno52.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno28, aluno31, aluno32, aluno37, aluno41, aluno44, aluno47, aluno52, aluno56, aluno57, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        com.unifacisa.tcc.domain.Professor professor66 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno67 = aluno5.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno67.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = professor0.removeAluno(aluno67);
        java.lang.Boolean boolean71 = professor70.isDiponibilidade();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor73 = null;
        aluno72.setProfessor(professor73);
        aluno72.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno72.primeiroNome("hi!");
        java.lang.Long long79 = aluno72.getId();
        com.unifacisa.tcc.domain.Aluno aluno81 = aluno72.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor82 = aluno72.getProfessor();
        java.lang.Boolean boolean83 = aluno72.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor84 = aluno72.getProfessor();
        com.unifacisa.tcc.domain.Professor professor85 = professor70.removeAluno(aluno72);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(aluno67);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + false + "'", boolean71, false);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNull(long79);
        org.junit.Assert.assertNotNull(aluno81);
        org.junit.Assert.assertNull(professor82);
        org.junit.Assert.assertEquals("'" + boolean83 + "' != '" + false + "'", boolean83, false);
        org.junit.Assert.assertNull(professor84);
        org.junit.Assert.assertNotNull(professor85);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str5 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant46 = managedUserVM45.getCreatedDate();
        java.lang.String str47 = managedUserVM45.getCreatedBy();
        java.lang.String str48 = managedUserVM45.getLastModifiedBy();
        java.lang.String str49 = managedUserVM45.getEmail();
        java.lang.String str50 = managedUserVM45.getCreatedBy();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity51 = userResource3.createUser(managedUserVM45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 100L);
        user5.setLangKey("");
        java.time.Instant instant8 = user5.getResetDate();
        java.time.Instant instant9 = user5.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.String str13 = aluno10.getPrimeiroNome();
        java.lang.Long long14 = aluno10.getMatricula();
        boolean boolean15 = user5.equals((java.lang.Object) aluno10);
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user16.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant21 = user16.getLastModifiedDate();
        user5.setCreatedDate(instant21);
        boolean boolean23 = authority0.equals((java.lang.Object) user5);
        java.lang.Object obj24 = null;
        boolean boolean25 = authority0.equals(obj24);
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.util.Set<java.lang.String> strSet33 = managedUserVM31.getAuthorities();
        java.lang.String str34 = managedUserVM31.getEmail();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.lang.String str11 = persistentAuditEvent0.getAuditEventType();
        java.lang.String str12 = persistentAuditEvent0.getAuditEventType();
        java.lang.String str13 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        org.springframework.core.env.Environment environment5 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect6 = loggingAspectConfiguration0.loggingAspect(environment5);
        loggingAspect6.applicationPackagePointcut();
        loggingAspect6.applicationPackagePointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
        org.junit.Assert.assertNotNull(loggingAspect6);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity5 = userResource3.deleteUser("");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 100L);
        user21.setLangKey("");
        java.time.Instant instant24 = user21.getResetDate();
        java.time.Instant instant25 = user21.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent27 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        persistentAuditEvent27.setData(strMap28);
        persistentAuditEvent27.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant33 = null;
        persistentAuditEvent32.setAuditEventDate(instant33);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        user35.setResetDate(instant46);
        persistentAuditEvent32.setAuditEventDate(instant46);
        persistentAuditEvent27.setAuditEventDate(instant46);
        java.time.Instant instant60 = null;
        java.time.Instant instant62 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant60, "error.concurrencyFailure", instant62, (java.util.Set<java.lang.String>) strSet68);
        com.unifacisa.tcc.service.dto.UserDTO userDTO71 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "hi!", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant25, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant46, (java.util.Set<java.lang.String>) strSet68);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet72 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", (java.util.Set<java.lang.String>) strSet68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNull(instant24);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        org.springframework.core.env.Environment environment5 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect6 = loggingAspectConfiguration0.loggingAspect(environment5);
        loggingAspect6.springBeanPointcut();
        org.aspectj.lang.JoinPoint joinPoint8 = null;
        java.lang.Throwable throwable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect6.logAfterThrowing(joinPoint8, throwable9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
        org.junit.Assert.assertNotNull(loggingAspect6);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.concurrencyFailure", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        java.lang.String str38 = managedUserVM35.getImageUrl();
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        user2.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Authority authority9 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str10 = authority9.getName();
        java.lang.String str11 = authority9.getName();
        authority9.setName("");
        com.unifacisa.tcc.domain.Authority authority14 = new com.unifacisa.tcc.domain.Authority();
        authority14.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority14.setName("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Authority[] authorityArray19 = new com.unifacisa.tcc.domain.Authority[] { authority9, authority14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority> authoritySet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Authority>) authoritySet20, authorityArray19);
        user2.setAuthorities((java.util.Set<com.unifacisa.tcc.domain.Authority>) authoritySet20);
        java.time.Instant instant23 = user2.getResetDate();
        java.lang.String str24 = user2.getLogin();
        user2.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant27 = null;
        user2.setCreatedDate(instant27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO29 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str30 = user2.getEmail();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(authorityArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("LoggerVM{name='null', level='null'}");
        socialUserConnection0.setRefreshToken("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("");
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        java.lang.Long long10 = aluno7.getMatricula();
        java.lang.String str11 = aluno7.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean14 = aluno12.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno6, aluno7, aluno12, aluno15, aluno20, aluno23, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.String str34 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa36 = professor0.email("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(pessoa36);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        user3.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user3.setActivationKey("LoggerVM{name='null', level='null'}");
        java.time.Instant instant13 = user3.getLastModifiedDate();
        java.lang.String str14 = user3.getEmail();
        boolean boolean15 = user0.equals((java.lang.Object) str14);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent0.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("");
        com.unifacisa.tcc.domain.Professor professor8 = professor2.diponibilidade((java.lang.Boolean) true);
        professor8.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.createProfessor(professor8);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        professor14.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor14.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str19 = professor14.getSegundoNome();
        java.lang.Long long20 = professor14.getId();
        com.unifacisa.tcc.domain.Professor professor22 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor24 = professor22.diponibilidade((java.lang.Boolean) false);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity25 = professorResource1.updateProfessor(professor24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professorResponseEntity11);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(professor24);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        loggingAspect18.applicationPackagePointcut();
        org.aspectj.lang.JoinPoint joinPoint20 = null;
        java.lang.Throwable throwable21 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect18.logAfterThrowing(joinPoint20, throwable21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setRank((java.lang.Long) 1L);
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str9 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getSecret();
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = socialUserConnection0.getProviderId();
        java.lang.String str9 = socialUserConnection0.getSecret();
        socialUserConnection0.setUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.toString();
        java.lang.String str13 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str12, "SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = socialUserConnection0.getImageURL();
        socialUserConnection0.setRefreshToken("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str13 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean5 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM12 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet13 = managedUserVM12.getAuthorities();
        boolean boolean14 = user9.equals((java.lang.Object) strSet13);
        java.time.Instant instant15 = user9.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper6.userToUserDTO(user9);
        boolean boolean17 = user0.equals((java.lang.Object) user9);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setNewPassword("LoginVM{username='null', rememberMe=null}");
        keyAndPasswordVM0.setNewPassword("Authority{name='error.concurrencyFailure'}");
        java.lang.String str7 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = professor2.getEmail();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.segundoNome("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa9);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = socialUserConnection0.getProviderId();
        java.lang.String str9 = socialUserConnection0.getSecret();
        java.lang.Long long10 = socialUserConnection0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.time.Instant instant3 = user2.getResetDate();
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository4 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator5 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository6 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository4, connectionFactoryLocator5);
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository6.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository6.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        boolean boolean11 = user2.equals((java.lang.Object) customSocialUsersConnectionRepository6);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent12 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant13 = persistentAuditEvent12.getAuditEventDate();
        java.time.Instant instant14 = null;
        persistentAuditEvent12.setAuditEventDate(instant14);
        java.time.Instant instant16 = persistentAuditEvent12.getAuditEventDate();
        persistentAuditEvent12.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent19 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant20 = persistentAuditEvent19.getAuditEventDate();
        java.time.Instant instant21 = null;
        persistentAuditEvent19.setAuditEventDate(instant21);
        persistentAuditEvent19.setId((java.lang.Long) 1L);
        persistentAuditEvent19.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent27 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        persistentAuditEvent27.setData(strMap28);
        persistentAuditEvent27.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant33 = null;
        persistentAuditEvent32.setAuditEventDate(instant33);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        user35.setResetDate(instant46);
        persistentAuditEvent32.setAuditEventDate(instant46);
        persistentAuditEvent27.setAuditEventDate(instant46);
        persistentAuditEvent19.setAuditEventDate(instant46);
        com.unifacisa.tcc.domain.User user51 = new com.unifacisa.tcc.domain.User();
        user51.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM54 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet55 = managedUserVM54.getAuthorities();
        boolean boolean56 = user51.equals((java.lang.Object) strSet55);
        java.time.Instant instant57 = user51.getLastModifiedDate();
        persistentAuditEvent19.setAuditEventDate(instant57);
        persistentAuditEvent12.setAuditEventDate(instant57);
        user2.setResetDate(instant57);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNull(strSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(instant57);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getImageUrl();
        java.time.Instant instant3 = managedUserVM0.getCreatedDate();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.lang.String str5 = managedUserVM0.getLastName();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        java.lang.Boolean boolean12 = aluno7.isHabilitadoTcc();
        java.lang.String str13 = aluno7.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long15 = aluno14.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = aluno14.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa26 = aluno18.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno28 = aluno18.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long33 = aluno32.getId();
        aluno32.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.String str36 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno14, aluno18, aluno29, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        com.unifacisa.tcc.domain.Professor professor40 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        professor2.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = professor2.matricula((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(pessoa26);
        org.junit.Assert.assertNotNull(aluno28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str36, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(pessoa44);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> strMap4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap5 = customSocialConnectionRepository3.findConnectionsToUsers(strMap4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Unable to execute find: no providerUsers provided");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant35, "hi!", instant37, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant23, "", instant25, (java.util.Set<java.lang.String>) strSet41);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet45 = userMapper8.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper3.userDTOsToUsers(userDTOList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user55 = userMapper0.userFromId((java.lang.Long) 100L);
        user55.setId((java.lang.Long) 0L);
        java.lang.String str58 = user55.getCreatedBy();
        user55.setLastModifiedBy("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(authoritySet45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:34.902Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.902Z, authorities=[]}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        java.lang.String str13 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.email("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        java.lang.Long long6 = pessoa5.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = pessoa5.numeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNotNull(pessoa8);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        professor0.setId((java.lang.Long) 1L);
        professor0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet39 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.email("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        com.unifacisa.tcc.domain.Professor professor42 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor44 = professor42.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = professor42.email("");
        com.unifacisa.tcc.domain.Professor professor48 = professor42.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor51 = professor49.diponibilidade((java.lang.Boolean) true);
        professor51.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        aluno54.setPrimeiroNome("");
        java.lang.Long long57 = aluno54.getMatricula();
        aluno54.setHabilitadoTcc((java.lang.Boolean) false);
        aluno54.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        aluno62.setPrimeiroNome("");
        java.lang.Long long65 = aluno62.getMatricula();
        java.lang.Long long66 = aluno62.getMatricula();
        aluno62.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        aluno69.setPrimeiroNome("");
        java.lang.Long long72 = aluno69.getMatricula();
        java.lang.Long long73 = aluno69.getMatricula();
        aluno69.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray77 = new com.unifacisa.tcc.domain.Aluno[] { aluno54, aluno62, aluno69, aluno76 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet78 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet78, alunoArray77);
        com.unifacisa.tcc.domain.Professor professor80 = professor51.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Professor professor81 = professor48.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Professor professor82 = professor37.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoSet39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNull(long65);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNotNull(alunoArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(professor82);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        java.lang.Long long5 = aluno2.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno2.numeroContato((java.lang.Long) 1L);
        java.lang.Boolean boolean8 = aluno2.isHabilitadoTcc();
        java.lang.Long long9 = aluno2.getMatricula();
        java.lang.Long long10 = aluno2.getId();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity11 = alunoResource1.updateAluno(aluno2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        java.time.Instant instant13 = null;
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user26 = userMapper24.userFromId((java.lang.Long) 100L);
        user26.setLangKey("");
        java.time.Instant instant29 = user26.getResetDate();
        java.time.Instant instant30 = user26.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        persistentAuditEvent32.setData(strMap33);
        persistentAuditEvent32.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent37 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant38 = null;
        persistentAuditEvent37.setAuditEventDate(instant38);
        com.unifacisa.tcc.domain.User user40 = new com.unifacisa.tcc.domain.User();
        user40.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user40.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user47 = userMapper45.userFromId((java.lang.Long) 100L);
        user47.setLangKey("");
        java.time.Instant instant50 = user47.getResetDate();
        java.time.Instant instant51 = user47.getCreatedDate();
        user40.setResetDate(instant51);
        persistentAuditEvent37.setAuditEventDate(instant51);
        persistentAuditEvent32.setAuditEventDate(instant51);
        java.time.Instant instant65 = null;
        java.time.Instant instant67 = null;
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet73 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet73, strArray72);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM75 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant65, "error.concurrencyFailure", instant67, (java.util.Set<java.lang.String>) strSet73);
        com.unifacisa.tcc.service.dto.UserDTO userDTO76 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "hi!", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant30, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant51, (java.util.Set<java.lang.String>) strSet73);
        java.time.Instant instant87 = null;
        java.time.Instant instant89 = null;
        java.lang.String[] strArray94 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet95 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet95, strArray94);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM97 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant87, "error.concurrencyFailure", instant89, (java.util.Set<java.lang.String>) strSet95);
        com.unifacisa.tcc.service.dto.UserDTO userDTO98 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoggerVM{name='null', level='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "error.validation", "error.validation", false, "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant13, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", instant30, (java.util.Set<java.lang.String>) strSet95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Set<java.lang.String> strSet99 = customSocialUsersConnectionRepository2.findUserIdsConnectedTo("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", (java.util.Set<java.lang.String>) strSet95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(user26);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertNull(instant50);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        java.lang.String str5 = socialUserConnection0.getImageURL();
        java.lang.String str6 = socialUserConnection0.getProfileURL();
        java.lang.String str7 = socialUserConnection0.getDisplayName();
        java.lang.Long long8 = socialUserConnection0.getRank();
        java.lang.String str9 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str11 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.validation" + "'", str11, "error.validation");
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.email("");
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor16 = professor8.addAluno(aluno13);
        java.lang.Long long17 = aluno13.getNumeroContato();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor25 = professor23.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        aluno27.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        java.lang.Long long36 = aluno33.getMatricula();
        java.lang.String str37 = aluno33.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean40 = aluno38.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        aluno41.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean48 = aluno46.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray56 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno32, aluno33, aluno38, aluno41, aluno46, aluno49, aluno53 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet57 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet57, alunoArray56);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        com.unifacisa.tcc.domain.Professor professor60 = professor25.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        aluno18.setProfessor(professor60);
        aluno13.setProfessor(professor60);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("error.validation");
        java.lang.String str66 = aluno63.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor67 = professor60.removeAluno(aluno63);
        com.unifacisa.tcc.domain.Professor professor69 = professor67.diponibilidade((java.lang.Boolean) true);
        aluno0.setProfessor(professor69);
        java.lang.String str71 = professor69.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet72 = professor69.getAlunos();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNotNull(alunoArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(professor60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "error.validation" + "'", str66, "error.validation");
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(alunoSet72);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long42 = professor39.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = professor39.email("error.validation");
        professor39.setId((java.lang.Long) 0L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity47 = professorResource1.createProfessor(professor39);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity49 = professorResource1.getProfessor((java.lang.Long) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertNotNull(professorResponseEntity47);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.Long long13 = aluno10.getMatricula();
        aluno10.setHabilitadoTcc((java.lang.Boolean) false);
        aluno10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno18, aluno25, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        com.unifacisa.tcc.domain.Professor professor36 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno37 = aluno0.professor(professor36);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno37.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno41 = aluno37.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = aluno41.matricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa45 = aluno41.email("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = pessoa45.primeiroNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(aluno37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(aluno41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(pessoa45);
        org.junit.Assert.assertNotNull(pessoa47);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getLastModifiedBy();
        java.lang.String str20 = userDTO17.getCreatedBy();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 100L);
        user5.setLangKey("");
        java.time.Instant instant8 = user5.getResetDate();
        java.time.Instant instant9 = user5.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.String str13 = aluno10.getPrimeiroNome();
        java.lang.Long long14 = aluno10.getMatricula();
        boolean boolean15 = user5.equals((java.lang.Object) aluno10);
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user16.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant21 = user16.getLastModifiedDate();
        user5.setCreatedDate(instant21);
        boolean boolean23 = authority0.equals((java.lang.Object) user5);
        java.lang.String str24 = user5.getLastModifiedBy();
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        java.lang.Long long10 = aluno7.getMatricula();
        java.lang.String str11 = aluno7.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean14 = aluno12.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno6, aluno7, aluno12, aluno15, aluno20, aluno23, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.Long long34 = professor0.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa36 = professor0.numeroContato((java.lang.Long) 0L);
        java.lang.String str37 = pessoa36.getPrimeiroNome();
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(pessoa36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        loginVM0.setUsername("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setPrincipal("error.concurrencyFailure");
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str5 = managedUserVM4.toString();
        java.time.Instant instant6 = managedUserVM4.getLastModifiedDate();
        java.time.Instant instant7 = null;
        managedUserVM4.setLastModifiedDate(instant7);
        java.lang.String str9 = managedUserVM4.toString();
        java.lang.String str10 = managedUserVM4.getLogin();
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        managedUserVM4.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        java.lang.String str14 = managedUserVM4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity15 = userResource3.createUser(managedUserVM4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str9, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str14, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.String str45 = user0.getFirstName();
        java.lang.String str46 = user0.getLastName();
        java.lang.String str47 = user0.getEmail();
        java.time.Instant instant48 = user0.getLastModifiedDate();
        java.lang.Long long49 = user0.getId();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNull(long49);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.springframework.data.domain.Page page0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.PaginationUtil.generatePaginationHttpHeaders(page0, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        user2.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Authority authority9 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str10 = authority9.getName();
        java.lang.String str11 = authority9.getName();
        authority9.setName("");
        com.unifacisa.tcc.domain.Authority authority14 = new com.unifacisa.tcc.domain.Authority();
        authority14.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority14.setName("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Authority[] authorityArray19 = new com.unifacisa.tcc.domain.Authority[] { authority9, authority14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority> authoritySet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Authority>) authoritySet20, authorityArray19);
        user2.setAuthorities((java.util.Set<com.unifacisa.tcc.domain.Authority>) authoritySet20);
        java.time.Instant instant23 = user2.getResetDate();
        java.lang.String str24 = user2.getLogin();
        user2.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str27 = user2.getImageUrl();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(authorityArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user63 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper64 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray65 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList66 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList66, userArray65);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList68 = userMapper64.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList66);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray70 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList71 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList71, userArray70);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList73 = userMapper69.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper64.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.domain.User> userList75 = userMapper0.userDTOsToUsers(userDTOList74);
        com.unifacisa.tcc.domain.User user77 = userMapper0.userFromId((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userDTOList68);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(userDTOList73);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(user77);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        managedUserVM0.setId((java.lang.Long) 10L);
        managedUserVM0.setLogin("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity15 = userResource3.getUser("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity3 = professorResource1.deleteProfessor((java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long7 = professor2.getId();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str9 = professor8.toString();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor18 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor24 = null;
        aluno23.setProfessor(professor24);
        java.lang.Long long26 = aluno23.getMatricula();
        java.lang.String str27 = aluno23.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor31 = aluno28.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        aluno35.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        java.lang.Long long46 = aluno43.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean50 = aluno48.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor52 = null;
        aluno51.setProfessor(professor52);
        com.unifacisa.tcc.domain.Aluno[] alunoArray54 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno15, aluno19, aluno22, aluno23, aluno28, aluno32, aluno35, aluno38, aluno43, aluno47, aluno48, aluno51 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet55 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet55, alunoArray54);
        com.unifacisa.tcc.domain.Professor professor57 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        com.unifacisa.tcc.domain.Professor professor59 = professor8.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor60 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor62 = professor60.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor63 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor65 = null;
        aluno64.setProfessor(professor65);
        aluno64.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno69 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor71 = null;
        aluno70.setProfessor(professor71);
        java.lang.Long long73 = aluno70.getMatricula();
        java.lang.String str74 = aluno70.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean77 = aluno75.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor79 = null;
        aluno78.setProfessor(professor79);
        aluno78.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno83 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean85 = aluno83.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno86 = new com.unifacisa.tcc.domain.Aluno();
        aluno86.setPrimeiroNome("");
        java.lang.Long long89 = aluno86.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno90 = new com.unifacisa.tcc.domain.Aluno();
        aluno90.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray93 = new com.unifacisa.tcc.domain.Aluno[] { aluno64, aluno69, aluno70, aluno75, aluno78, aluno83, aluno86, aluno90 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet94 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean95 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet94, alunoArray93);
        professor63.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet94);
        com.unifacisa.tcc.domain.Professor professor97 = professor62.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet94);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet94);
        professor2.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet94);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str9, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(professor18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(professor31);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(alunoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNull(long89);
        org.junit.Assert.assertNotNull(alunoArray93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertNotNull(professor97);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        user2.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user2.setLangKey("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        user2.setActivationKey("User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        java.lang.String str7 = socialUserConnection0.getProviderUserId();
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        java.lang.Long long9 = socialUserConnection0.getId();
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setSegundoNome("hi!");
        boolean boolean6 = authority0.equals((java.lang.Object) "hi!");
        java.lang.String str7 = authority0.toString();
        java.lang.String str8 = authority0.getName();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection9 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection9.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection9.getProviderId();
        socialUserConnection9.setImageURL("error.validation");
        socialUserConnection9.setRank((java.lang.Long) (-1L));
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM20 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("hi!", "", "");
        java.lang.String str21 = fieldErrorVM20.getObjectName();
        boolean boolean22 = socialUserConnection9.equals((java.lang.Object) fieldErrorVM20);
        socialUserConnection9.setDisplayName("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        boolean boolean25 = authority0.equals((java.lang.Object) "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet23 = managedUserVM22.getAuthorities();
        boolean boolean24 = user19.equals((java.lang.Object) strSet23);
        java.time.Instant instant25 = user19.getLastModifiedDate();
        user16.setLastModifiedDate(instant25);
        com.unifacisa.tcc.service.dto.UserDTO userDTO27 = new com.unifacisa.tcc.service.dto.UserDTO(user16);
        user16.setImageUrl("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.lang.String str30 = user16.getActivationKey();
        java.lang.String str31 = user16.getLastName();
        java.lang.String str32 = user16.getImageUrl();
        java.lang.String str33 = user16.toString();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}" + "'", str32, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}', activated='false', langKey='null', activationKey='null'}" + "'", str33, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.Long long11 = socialUserConnection0.getId();
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        java.lang.String str13 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList45 = userResource3.getAuthorities();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        loggingAspect4.springBeanPointcut();
        org.aspectj.lang.JoinPoint joinPoint6 = null;
        java.lang.Throwable throwable7 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect4.logAfterThrowing(joinPoint6, throwable7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        com.unifacisa.tcc.domain.Professor professor7 = aluno0.getProfessor();
        java.lang.Boolean boolean8 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean11 = aluno0.isHabilitadoTcc();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(professor7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList7 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource8 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM9 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM9.setName("LoginVM{username='null', rememberMe=false}");
        logsResource8.changeLevel(loggerVM9);
        loggerVM9.setName("Authority{name='error.concurrencyFailure'}");
        loggerVM9.setName("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        loggerVM9.setName("");
        logsResource0.changeLevel(loggerVM9);
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(loggerVMList7);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setLastModifiedBy("hi!");
        boolean boolean6 = user0.getActivated();
        user0.setActivated(false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.springframework.core.env.Environment environment0 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect1 = new com.unifacisa.tcc.aop.logging.LoggingAspect(environment0);
        loggingAspect1.springBeanPointcut();
        org.aspectj.lang.JoinPoint joinPoint3 = null;
        java.lang.Throwable throwable4 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect1.logAfterThrowing(joinPoint3, throwable4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant46 = userDTO45.getCreatedDate();
        java.lang.String str47 = userDTO45.getLogin();
        java.lang.Long long48 = userDTO45.getId();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(long48);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.Long long13 = aluno10.getMatricula();
        aluno10.setHabilitadoTcc((java.lang.Boolean) false);
        aluno10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno18, aluno25, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        com.unifacisa.tcc.domain.Professor professor36 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno37 = aluno0.professor(professor36);
        aluno37.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(aluno37);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getMatricula();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor13 = professor11.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = professor11.email("");
        com.unifacisa.tcc.domain.Professor professor17 = professor11.diponibilidade((java.lang.Boolean) true);
        professor17.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno20 = aluno9.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long22 = aluno21.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = aluno21.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor25 = professor17.addAluno(aluno21);
        professor17.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(aluno20);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNotNull(professor25);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        aluno7.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        aluno16.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor23 = null;
        aluno22.setProfessor(professor23);
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.String str26 = aluno22.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean29 = aluno27.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        aluno30.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        aluno38.setPrimeiroNome("");
        java.lang.Long long41 = aluno38.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno22, aluno27, aluno30, aluno35, aluno38, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        professor15.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        aluno7.setProfessor(professor49);
        aluno0.setProfessor(professor49);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = aluno0.numeroContato((java.lang.Long) 1L);
        java.lang.String str58 = pessoa57.getPrimeiroNome();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(pessoa57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.toString();
        java.lang.String str10 = user2.toString();
        user2.setFirstName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        user2.setEmail("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        java.lang.String str11 = socialUserConnection0.getProviderId();
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str11, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setId((java.lang.Long) 10L);
        java.lang.String str6 = user0.getLangKey();
        user0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(long8);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        com.unifacisa.tcc.domain.Professor professor13 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor16 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa18 = professor14.email("");
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor22 = professor14.addAluno(aluno19);
        com.unifacisa.tcc.domain.Professor professor24 = professor22.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.web.rest.LogsResource logsResource25 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM26 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM26.setName("LoginVM{username='null', rememberMe=false}");
        logsResource25.changeLevel(loggerVM26);
        boolean boolean30 = professor24.equals((java.lang.Object) logsResource25);
        professor24.setSegundoNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno33 = aluno0.professor(professor24);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = aluno33.primeiroNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNotNull(pessoa18);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(aluno33);
        org.junit.Assert.assertNotNull(pessoa35);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long7 = professor4.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor4.email("error.validation");
        professor4.setId((java.lang.Long) 0L);
        professor4.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Long long14 = professor4.getNumeroContato();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity15 = professorResource1.createProfessor(professor4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity17 = professorResource1.getProfessor((java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNotNull(professorResponseEntity15);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("LoggerVM{name='null', level='null'}");
        socialUserConnection0.setRefreshToken("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str14 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor3 = null;
        aluno2.setProfessor(professor3);
        aluno2.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno2.primeiroNome("hi!");
        java.lang.Long long9 = aluno2.getId();
        com.unifacisa.tcc.domain.Aluno aluno11 = aluno2.habilitadoTcc((java.lang.Boolean) false);
        aluno2.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str15 = professor14.toString();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor17 = null;
        aluno16.setProfessor(professor17);
        java.lang.Long long19 = aluno16.getMatricula();
        java.lang.String str20 = aluno16.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean23 = aluno21.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor24 = aluno21.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean27 = aluno25.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor30 = null;
        aluno29.setProfessor(professor30);
        java.lang.Long long32 = aluno29.getMatricula();
        java.lang.String str33 = aluno29.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean36 = aluno34.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor37 = aluno34.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        aluno41.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        aluno44.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor50 = null;
        aluno49.setProfessor(professor50);
        java.lang.Long long52 = aluno49.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean56 = aluno54.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = null;
        aluno57.setProfessor(professor58);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno16, aluno21, aluno25, aluno28, aluno29, aluno34, aluno38, aluno41, aluno44, aluno49, aluno53, aluno54, aluno57 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        com.unifacisa.tcc.domain.Professor professor63 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno2.professor(professor14);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity65 = alunoResource1.createAluno(aluno64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(aluno11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(professor24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(professor37);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(aluno64);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet5 = user0.getAuthorities();
        user0.setActivationKey("Authority{name='error.concurrencyFailure'}");
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str10 = user0.getEmail();
        org.junit.Assert.assertNotNull(authoritySet5);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.concurrencyFailure", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.util.Set<java.lang.String> strSet2 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(strSet2);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderUserId("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor37.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet42 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = professor37.segundoNome("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
        professor37.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(alunoSet42);
        org.junit.Assert.assertNotNull(pessoa44);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str3 = authority0.getName();
        authority0.setName("Authority{name='error.concurrencyFailure'}");
        java.lang.String str6 = authority0.getName();
        authority0.setName("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str3, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str6, "Authority{name='error.concurrencyFailure'}");
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setEmail("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        aluno0.setPrimeiroNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor16 = professor14.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        java.lang.Long long27 = aluno24.getMatricula();
        java.lang.String str28 = aluno24.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        aluno32.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        aluno40.setPrimeiroNome("");
        java.lang.Long long43 = aluno40.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray47 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno23, aluno24, aluno29, aluno32, aluno37, aluno40, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet48 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet48, alunoArray47);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        com.unifacisa.tcc.domain.Professor professor51 = professor16.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        com.unifacisa.tcc.domain.Professor professor53 = professor51.diponibilidade((java.lang.Boolean) true);
        professor51.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet56 = professor51.getAlunos();
        aluno0.setProfessor(professor51);
        com.unifacisa.tcc.domain.Professor professor58 = null;
        com.unifacisa.tcc.domain.Aluno aluno59 = aluno0.professor(professor58);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNotNull(alunoArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(alunoSet56);
        org.junit.Assert.assertNotNull(aluno59);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant46 = userDTO45.getCreatedDate();
        java.lang.String str47 = userDTO45.getImageUrl();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("error.concurrencyFailure", "LoggerVM{name='null', level='null'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", (java.lang.Long) 10L, "", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "LoggerVM{name='null', level='null'}", "hi!", "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=null}", (java.lang.Long) 100L);
        socialUserConnection11.setExpireTime((java.lang.Long) 10L);
        java.lang.String str14 = socialUserConnection11.toString();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=null, userId=error.concurrencyFailure, providerId='LoggerVM{name='null', level='null'}', providerUserId='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', rank=10, displayName='', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', imageURL='LoggerVM{name='null', level='null'}', accessToken='hi!', secret='LoginVM{username='null', rememberMe=false}', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=10}" + "'", str14, "SocialUserConnection{id=null, userId=error.concurrencyFailure, providerId='LoggerVM{name='null', level='null'}', providerUserId='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', rank=10, displayName='', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', imageURL='LoggerVM{name='null', level='null'}', accessToken='hi!', secret='LoginVM{username='null', rememberMe=false}', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=10}");
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.String str3 = aluno0.getPrimeiroNome();
        java.lang.Long long4 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno6 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno6.setNumeroContato((java.lang.Long) 10L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(aluno6);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant27, "hi!", instant29, (java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant15, "", instant17, (java.util.Set<java.lang.String>) strSet33);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet37 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray39 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList40 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList40, userArray39);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList42 = userMapper38.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList43 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        com.unifacisa.tcc.domain.User user45 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray55 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList56 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList56, userArray55);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList58 = userMapper54.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList56);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList59 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList60 = userMapper46.userDTOsToUsers(userDTOList59);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList61 = userMapper0.usersToUserDTOs(userList60);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper63 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray64 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList65 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList65, userArray64);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList67 = userMapper63.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList65);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper68 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray69 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList70 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList70, userArray69);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList72 = userMapper68.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList70);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList73 = userMapper63.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList70);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper62.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList70);
        java.util.List<com.unifacisa.tcc.domain.User> userList75 = userMapper0.userDTOsToUsers(userDTOList74);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(authoritySet37);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userDTOList42);
        org.junit.Assert.assertNotNull(userDTOList43);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTOList58);
        org.junit.Assert.assertNotNull(userDTOList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userDTOList61);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(userDTOList67);
        org.junit.Assert.assertNotNull(userArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(userDTOList72);
        org.junit.Assert.assertNotNull(userDTOList73);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userList75);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str11 = socialUserConnection0.getUserId();
        socialUserConnection0.setSecret("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setProfileURL("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor37.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet42 = professor37.getAlunos();
        java.lang.Long long43 = professor37.getNumeroContato();
        professor37.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(alunoSet42);
        org.junit.Assert.assertNull(long43);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.toString();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        user10.setCreatedDate(instant17);
        user2.setResetDate(instant17);
        java.lang.String str20 = user2.getFirstName();
        boolean boolean21 = user2.getActivated();
        user2.setImageUrl("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant9 = user0.getResetDate();
        java.lang.Long long10 = user0.getId();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.String str21 = aluno18.getPrimeiroNome();
        java.lang.Long long22 = aluno18.getMatricula();
        boolean boolean23 = user13.equals((java.lang.Object) aluno18);
        user13.setFirstName("");
        java.lang.String str26 = user13.getImageUrl();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet27 = user13.getAuthorities();
        user0.setAuthorities(authoritySet27);
        user0.setFirstName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(authoritySet27);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setAccessToken("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        java.lang.String str10 = socialUserConnection0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}");
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = null;
        managedUserVM0.setLastModifiedDate(instant3);
        managedUserVM0.setLogin("error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        aluno39.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor46 = professor44.diponibilidade((java.lang.Boolean) true);
        professor46.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        aluno49.setHabilitadoTcc((java.lang.Boolean) false);
        aluno49.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        aluno57.setPrimeiroNome("");
        java.lang.Long long60 = aluno57.getMatricula();
        java.lang.Long long61 = aluno57.getMatricula();
        aluno57.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        java.lang.Long long68 = aluno64.getMatricula();
        aluno64.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno57, aluno64, aluno71 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        com.unifacisa.tcc.domain.Professor professor75 = professor46.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno39.professor(professor75);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno76.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno76.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor81 = professor38.removeAluno(aluno76);
        professor38.setPrimeiroNome("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa85 = professor38.numeroContato((java.lang.Long) 0L);
        professor38.setEmail("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(pessoa85);
    }
}
