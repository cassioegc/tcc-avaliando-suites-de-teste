import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("LoginVM{username='null', rememberMe=null}");
        keyAndPasswordVM0.setKey("LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        java.lang.String str10 = keyAndPasswordVM0.getKey();
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}" + "'", str10, "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}" + "'", str11, "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getEmail();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str11 = user6.toString();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        user12.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        java.lang.String str18 = user17.getCreatedBy();
        user17.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO21 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.time.Instant instant22 = userDTO21.getLastModifiedDate();
        user12.setCreatedDate(instant22);
        user6.setResetDate(instant22);
        user0.setLastModifiedDate(instant22);
        java.time.Instant instant26 = user0.getLastModifiedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNotNull(instant26);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str40 = user37.getLastName();
        java.lang.String str41 = user37.getEmail();
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        java.lang.String str43 = user42.getCreatedBy();
        java.lang.String str44 = user42.getLastModifiedBy();
        user42.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str47 = user42.toString();
        java.time.Instant instant48 = user42.getCreatedDate();
        java.lang.String str49 = user42.getActivationKey();
        java.time.Instant instant50 = user42.getLastModifiedDate();
        user37.setCreatedDate(instant50);
        user0.setResetDate(instant50);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str47, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(instant50);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        aluno7.setProfessor(professor8);
        aluno7.setMatricula((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = professor34.segundoNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long40 = professor34.getId();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNull(long40);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList32 = userMapper22.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper11.userDTOsToUsers(userDTOList31);
        java.util.List<com.unifacisa.tcc.domain.User> userList34 = userMapper0.userDTOsToUsers(userDTOList31);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user35);
        java.lang.String str37 = user35.getImageUrl();
        boolean boolean39 = user35.equals((java.lang.Object) (byte) -1);
        java.lang.String str40 = user35.getLastName();
        java.lang.String str41 = user35.getFirstName();
        java.time.Instant instant42 = user35.getResetDate();
        java.lang.String str43 = user35.getLogin();
        java.lang.String str44 = user35.getPassword();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = userMapper0.userToUserDTO(user35);
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        user46.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant50 = user46.getLastModifiedDate();
        user46.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        user46.setCreatedBy("error.concurrencyFailure");
        user46.setId((java.lang.Long) 10L);
        java.lang.String str57 = user46.getFirstName();
        java.time.Instant instant58 = user46.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user46);
        java.lang.String str60 = user46.toString();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userList34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(userDTO45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}" + "'", str57, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str60, "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant6 = user0.getCreatedDate();
        java.time.Instant instant7 = user0.getCreatedDate();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList15 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM16 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str17 = loggerVM16.getName();
        loggerVM16.setLevel("error.validation");
        loggerVM16.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(loggerVMList15);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.Boolean boolean3 = loginVM0.isRememberMe();
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getPassword();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str4, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str6 = persistentAuditEvent0.getPrincipal();
        java.lang.String str7 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor6 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str8 = professor7.getPrimeiroNome();
        java.lang.Boolean boolean9 = professor7.isDiponibilidade();
        java.lang.Long long10 = professor7.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor7.primeiroNome("LoginVM{username='null', rememberMe=false}");
        aluno0.setProfessor(professor7);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor30 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray41 = new com.unifacisa.tcc.domain.Aluno[] { aluno31, aluno32, aluno36, aluno37 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet42 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet42, alunoArray41);
        professor30.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet42);
        com.unifacisa.tcc.domain.Professor professor45 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet42);
        com.unifacisa.tcc.domain.Professor professor47 = professor14.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor14.matricula((java.lang.Long) 1L);
        professor14.setSegundoNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        java.lang.String str56 = aluno52.toString();
        com.unifacisa.tcc.domain.Professor professor57 = professor14.addAluno(aluno52);
        aluno0.setProfessor(professor14);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(professor6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(alunoArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}" + "'", str56, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor57);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor78 = aluno77.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno77.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno77.habilitadoTcc((java.lang.Boolean) true);
        aluno77.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean85 = aluno77.isHabilitadoTcc();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertEquals("'" + boolean85 + "' != '" + true + "'", boolean85, true);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = professor34.segundoNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = pessoa39.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str6 = loginVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}" + "'", str6, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        java.lang.String str8 = socialUserConnection4.getRefreshToken();
        java.lang.Long long9 = socialUserConnection4.getId();
        java.lang.String str10 = socialUserConnection4.getSecret();
        java.lang.String str11 = socialUserConnection4.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.lang.String str3 = managedUserVM0.toString();
        java.util.Set<java.lang.String> strSet4 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet4);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor17.getAlunos();
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        user39.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant43 = user39.getLastModifiedDate();
        user39.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        user39.setCreatedBy("error.concurrencyFailure");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet48 = user39.getAuthorities();
        boolean boolean49 = professor17.equals((java.lang.Object) authoritySet48);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertNotNull(authoritySet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getActivationKey();
        java.lang.String str10 = user0.getLangKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.validation", "hi!", (java.lang.Long) 100L, "hi!", "error.concurrencyFailure", "error.concurrencyFailure", "error.validation", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "", (java.lang.Long) 100L);
        socialUserConnection11.setDisplayName("");
        socialUserConnection11.setImageURL("Authority{name=''}");
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.toString();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        user11.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = userDTO15.getLastModifiedDate();
        user6.setCreatedDate(instant16);
        user0.setResetDate(instant16);
        com.unifacisa.tcc.service.dto.UserDTO userDTO19 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant16);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        java.lang.String str6 = socialUserConnection0.getProfileURL();
        java.lang.String str7 = socialUserConnection0.getRefreshToken();
        java.lang.String str8 = socialUserConnection0.getAccessToken();
        java.lang.Long long9 = socialUserConnection0.getExpireTime();
        java.lang.String str10 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa40 = aluno0.numeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Aluno aluno42 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str45 = aluno0.getPrimeiroNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(pessoa40);
        org.junit.Assert.assertNotNull(aluno42);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long12 = persistentAuditEvent11.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str14 = persistentAuditEvent13.getPrincipal();
        java.lang.Long long15 = persistentAuditEvent13.getId();
        java.lang.String str16 = persistentAuditEvent13.getPrincipal();
        persistentAuditEvent13.setAuditEventType("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Map<java.lang.String, java.lang.String> strMap19 = persistentAuditEvent13.getData();
        persistentAuditEvent11.setData(strMap19);
        persistentAuditEvent0.setData(strMap19);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor0.matricula((java.lang.Long) 1L);
        java.lang.String str36 = professor0.getPrimeiroNome();
        professor0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno79 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str80 = aluno79.toString();
        com.unifacisa.tcc.domain.Professor professor81 = aluno79.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno83 = aluno79.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno85 = aluno83.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str86 = aluno83.toString();
        com.unifacisa.tcc.domain.Professor professor87 = professor78.addAluno(aluno83);
        java.lang.Long long88 = professor78.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str80, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor81);
        org.junit.Assert.assertNotNull(aluno83);
        org.junit.Assert.assertNotNull(aluno85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str86, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNull(long88);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.util.Set<java.lang.String> strSet1 = userDTO0.getAuthorities();
        java.lang.String str2 = userDTO0.getFirstName();
        java.lang.String str3 = userDTO0.getFirstName();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.String str2 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setImageURL("LoginVM{username='LoggerVM{name='null', level='error.validation'}', rememberMe=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        boolean boolean4 = user0.getActivated();
        com.unifacisa.tcc.domain.Authority authority5 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str6 = authority5.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        java.lang.String str35 = professor20.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor20.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor20.getAlunos();
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        user39.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant43 = user39.getLastModifiedDate();
        boolean boolean44 = professor20.equals((java.lang.Object) instant43);
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        java.lang.String str48 = user46.getLangKey();
        java.time.Instant instant49 = user46.getCreatedDate();
        java.time.Instant instant60 = null;
        java.time.Instant instant62 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant60, "error.validation", instant62, (java.util.Set<java.lang.String>) strSet68);
        java.lang.String str71 = managedUserVM70.getFirstName();
        java.lang.String str72 = managedUserVM70.getCreatedBy();
        java.util.Set<java.lang.String> strSet73 = managedUserVM70.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant43, "LoginVM{username='null', rememberMe=null}", instant49, strSet73);
        user9.setResetDate(instant43);
        boolean boolean76 = authority5.equals((java.lang.Object) instant43);
        user0.setCreatedDate(instant43);
        com.unifacisa.tcc.domain.User user78 = new com.unifacisa.tcc.domain.User();
        java.lang.String str79 = user78.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent80 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant81 = persistentAuditEvent80.getAuditEventDate();
        java.lang.Long long82 = persistentAuditEvent80.getId();
        java.lang.Long long83 = persistentAuditEvent80.getId();
        com.unifacisa.tcc.domain.User user84 = new com.unifacisa.tcc.domain.User();
        java.lang.String str85 = user84.getCreatedBy();
        java.lang.String str86 = user84.getLangKey();
        java.time.Instant instant87 = user84.getCreatedDate();
        persistentAuditEvent80.setAuditEventDate(instant87);
        user78.setResetDate(instant87);
        user0.setLastModifiedDate(instant87);
        java.lang.Long long91 = user0.getId();
        java.time.Instant instant92 = user0.getResetDate();
        user0.setLastModifiedBy("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='null'}" + "'", str6, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(instant81);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNull(long83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(instant87);
        org.junit.Assert.assertNull(long91);
        org.junit.Assert.assertNull(instant92);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.toString();
        user0.setCreatedBy("");
        user0.setLastName("LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getPassword();
        java.lang.String str5 = managedUserVM0.getLastModifiedBy();
        java.lang.String str6 = managedUserVM0.getEmail();
        java.lang.String str7 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        boolean boolean3 = managedUserVM0.isActivated();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.getEmail();
        java.lang.String str9 = user0.getEmail();
        user0.setLastName("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        java.lang.String str12 = user0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        java.lang.String str8 = user0.getLogin();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        java.lang.String str11 = user0.getLastModifiedBy();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.Long long14 = user0.getId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(long14);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        java.time.Instant instant39 = user0.getCreatedDate();
        user0.setPassword("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = aluno42.matricula((java.lang.Long) 0L);
        boolean boolean45 = user0.equals((java.lang.Object) aluno42);
        aluno42.setMatricula((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        keyAndPasswordVM0.setNewPassword("error.concurrencyFailure");
        keyAndPasswordVM0.setKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str9, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loginVM0.setPassword("LoggerVM{name='', level='error.validation'}");
        java.lang.String str7 = loginVM0.toString();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=null}" + "'", str7, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=null}");
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getLevel();
        java.lang.String str2 = loggerVM0.toString();
        java.lang.String str3 = loggerVM0.getLevel();
        java.lang.String str4 = loggerVM0.getLevel();
        loggerVM0.setName("Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}");
        loggerVM0.setLevel("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str2, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray24 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno15, aluno19, aluno20 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet25 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet25, alunoArray24);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        java.lang.String str28 = professor13.toString();
        com.unifacisa.tcc.domain.Professor professor30 = professor13.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet31 = professor13.getAlunos();
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        java.lang.String str33 = user32.getCreatedBy();
        user32.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant36 = user32.getLastModifiedDate();
        boolean boolean37 = professor13.equals((java.lang.Object) instant36);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        java.lang.String str41 = user39.getLangKey();
        java.time.Instant instant42 = user39.getCreatedDate();
        java.time.Instant instant53 = null;
        java.time.Instant instant55 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant53, "error.validation", instant55, (java.util.Set<java.lang.String>) strSet61);
        java.lang.String str64 = managedUserVM63.getFirstName();
        java.lang.String str65 = managedUserVM63.getCreatedBy();
        java.util.Set<java.lang.String> strSet66 = managedUserVM63.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM67 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant36, "LoginVM{username='null', rememberMe=null}", instant42, strSet66);
        user2.setResetDate(instant36);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent69 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant70 = persistentAuditEvent69.getAuditEventDate();
        java.lang.Long long71 = persistentAuditEvent69.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent72 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = persistentAuditEvent72.getData();
        persistentAuditEvent69.setData(strMap73);
        persistentAuditEvent69.setAuditEventType("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str77 = persistentAuditEvent69.getAuditEventType();
        com.unifacisa.tcc.domain.User user78 = new com.unifacisa.tcc.domain.User();
        java.lang.String str79 = user78.getCreatedBy();
        java.lang.String str80 = user78.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user81 = new com.unifacisa.tcc.domain.User();
        user81.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant84 = user81.getLastModifiedDate();
        user78.setCreatedDate(instant84);
        java.lang.String str86 = user78.getEmail();
        java.time.Instant instant87 = user78.getCreatedDate();
        persistentAuditEvent69.setAuditEventDate(instant87);
        user2.setCreatedDate(instant87);
        user2.setActivationKey("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(alunoArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str28, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(alunoSet31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(instant42);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNull(instant70);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str77, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(instant84);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(instant87);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant7);
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user10);
        java.lang.String str12 = user10.getImageUrl();
        java.lang.String str13 = user10.getLangKey();
        user10.setLastModifiedBy("");
        user10.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant18 = user10.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant18);
        persistentAuditEvent0.setAuditEventType("");
        java.lang.Class<?> wildcardClass22 = persistentAuditEvent0.getClass();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.util.Map<java.lang.String, java.lang.String> strMap8 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getActivationKey();
        user0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str13 = user0.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str13, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor31.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = pessoa33.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        pessoa35.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = pessoa35.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(pessoa39);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = aluno0.segundoNome("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = aluno0.matricula((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNotNull(pessoa48);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProviderId();
        java.lang.String str2 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProfileURL("LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("error.validation");
        java.lang.String str9 = loggerVM5.getLevel();
        loggerVM5.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        logsResource0.changeLevel(loggerVM5);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str14 = loggerVM13.getName();
        loggerVM13.setLevel("error.validation");
        java.lang.String str17 = loggerVM13.getName();
        java.lang.String str18 = loggerVM13.getLevel();
        java.lang.String str19 = loggerVM13.getName();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "error.validation" + "'", str18, "error.validation");
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user9);
        java.time.Instant instant11 = user9.getResetDate();
        java.lang.String str12 = user9.getImageUrl();
        user9.setImageUrl("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user9.setPassword("LoginVM{username='null', rememberMe=null}");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.lang.String str19 = user17.getImageUrl();
        java.lang.String str20 = user17.getEmail();
        boolean boolean21 = user17.getActivated();
        com.unifacisa.tcc.domain.Authority authority22 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str23 = authority22.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user26 = userMapper24.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno39, aluno43, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        java.lang.String str52 = professor37.toString();
        com.unifacisa.tcc.domain.Professor professor54 = professor37.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet55 = professor37.getAlunos();
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        java.lang.String str57 = user56.getCreatedBy();
        user56.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant60 = user56.getLastModifiedDate();
        boolean boolean61 = professor37.equals((java.lang.Object) instant60);
        com.unifacisa.tcc.domain.User user63 = new com.unifacisa.tcc.domain.User();
        java.lang.String str64 = user63.getCreatedBy();
        java.lang.String str65 = user63.getLangKey();
        java.time.Instant instant66 = user63.getCreatedDate();
        java.time.Instant instant77 = null;
        java.time.Instant instant79 = null;
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet85 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet85, strArray84);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM87 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant77, "error.validation", instant79, (java.util.Set<java.lang.String>) strSet85);
        java.lang.String str88 = managedUserVM87.getFirstName();
        java.lang.String str89 = managedUserVM87.getCreatedBy();
        java.util.Set<java.lang.String> strSet90 = managedUserVM87.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM91 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant60, "LoginVM{username='null', rememberMe=null}", instant66, strSet90);
        user26.setResetDate(instant60);
        boolean boolean93 = authority22.equals((java.lang.Object) instant60);
        user17.setCreatedDate(instant60);
        user9.setLastModifiedDate(instant60);
        user9.setEmail("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO98 = userMapper0.userToUserDTO(user9);
        java.lang.String str99 = userDTO98.getEmail();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Authority{name='null'}" + "'", str23, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user26);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str52, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(alunoSet55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(instant60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(instant66);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "hi!" + "'", str88, "hi!");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(userDTO98);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str99, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLogin();
        user0.setLastName("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.lang.String str13 = user0.toString();
        java.lang.Long long14 = user0.getId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str13, "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(long14);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        java.lang.String str4 = socialUserConnection0.getUserId();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str7 = socialUserConnection0.toString();
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        user10.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str13 = user10.getLastName();
        java.time.Instant instant14 = user10.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str19 = user16.getLastName();
        java.time.Instant instant20 = user16.getLastModifiedDate();
        java.time.Instant instant30 = null;
        java.time.Instant instant32 = null;
        java.time.Instant instant43 = null;
        java.time.Instant instant45 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant43, "error.validation", instant45, (java.util.Set<java.lang.String>) strSet51);
        com.unifacisa.tcc.service.dto.UserDTO userDTO54 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant30, "", instant32, (java.util.Set<java.lang.String>) strSet51);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant14, "", instant20, (java.util.Set<java.lang.String>) strSet51);
        java.lang.String str56 = managedUserVM55.getLogin();
        boolean boolean57 = managedUserVM55.isActivated();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str19, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str56, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        java.lang.Long long34 = professor0.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa36 = professor0.email("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(pessoa36);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long6 = user0.getId();
        user0.setCreatedBy("error.validation");
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user9);
        java.lang.String str11 = user9.getImageUrl();
        java.lang.String str12 = user9.getLangKey();
        user9.setLastModifiedBy("");
        user9.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant17 = user9.getCreatedDate();
        user0.setResetDate(instant17);
        java.lang.String str19 = user0.getLogin();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.matricula((java.lang.Long) 10L);
        pessoa8.setPrimeiroNome("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(pessoa8);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long20 = aluno19.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno23, aluno27, aluno28 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        java.lang.String str36 = professor21.toString();
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno39, aluno43, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        java.lang.String str52 = professor37.toString();
        java.lang.Long long53 = professor37.getMatricula();
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str62 = aluno61.getEmail();
        aluno61.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno56, aluno60, aluno61 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor54.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        java.lang.String str69 = professor54.toString();
        com.unifacisa.tcc.domain.Professor professor71 = professor54.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa73 = professor71.primeiroNome("");
        professor71.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor76 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str79 = aluno78.getEmail();
        aluno78.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno83 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str84 = aluno83.getEmail();
        aluno83.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray87 = new com.unifacisa.tcc.domain.Aluno[] { aluno77, aluno78, aluno82, aluno83 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet88 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet88, alunoArray87);
        professor76.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet88);
        professor71.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet88);
        com.unifacisa.tcc.domain.Professor professor92 = professor37.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet88);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet88);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet94 = professor21.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno95 = aluno19.professor(professor21);
        com.unifacisa.tcc.domain.Professor professor96 = professor0.removeAluno(aluno95);
        java.lang.Long long97 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor99 = professor0.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str36, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str52, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str69, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(pessoa73);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(alunoArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(professor92);
        org.junit.Assert.assertNotNull(alunoSet94);
        org.junit.Assert.assertNotNull(aluno95);
        org.junit.Assert.assertNotNull(professor96);
        org.junit.Assert.assertNull(long97);
        org.junit.Assert.assertNotNull(professor99);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = socialUserConnection0.getExpireTime();
        java.lang.String str5 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getEmail();
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str38 = userDTO33.getImageUrl();
        java.lang.String str39 = userDTO33.getFirstName();
        java.lang.String str40 = userDTO33.getFirstName();
        java.lang.String str41 = userDTO33.getLogin();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getProfileURL();
        java.lang.String str2 = socialUserConnection0.getProfileURL();
        java.lang.Long long3 = socialUserConnection0.getExpireTime();
        java.lang.Long long4 = socialUserConnection0.getId();
        java.lang.String str5 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        java.lang.Long long6 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent7 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant8 = persistentAuditEvent7.getAuditEventDate();
        java.lang.Long long9 = persistentAuditEvent7.getId();
        java.lang.Long long10 = persistentAuditEvent7.getId();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        java.lang.String str13 = user11.getLangKey();
        java.time.Instant instant14 = user11.getCreatedDate();
        persistentAuditEvent7.setAuditEventDate(instant14);
        java.lang.String str16 = persistentAuditEvent7.getAuditEventType();
        persistentAuditEvent7.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str19 = persistentAuditEvent7.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent20 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant21 = persistentAuditEvent20.getAuditEventDate();
        java.lang.String str22 = persistentAuditEvent20.getPrincipal();
        java.lang.String str23 = persistentAuditEvent20.getPrincipal();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent24 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant25 = persistentAuditEvent24.getAuditEventDate();
        java.lang.String str26 = persistentAuditEvent24.getPrincipal();
        persistentAuditEvent24.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap29 = persistentAuditEvent24.getData();
        persistentAuditEvent20.setData(strMap29);
        persistentAuditEvent7.setData(strMap29);
        persistentAuditEvent0.setData(strMap29);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent33 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent33.setAuditEventType("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        java.util.Map<java.lang.String, java.lang.String> strMap36 = persistentAuditEvent33.getData();
        persistentAuditEvent0.setData(strMap36);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent9.getData();
        persistentAuditEvent9.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long13 = persistentAuditEvent9.getId();
        java.lang.Long long14 = persistentAuditEvent9.getId();
        java.time.Instant instant15 = persistentAuditEvent9.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        persistentAuditEvent9.setData(strMap16);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent18 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant19 = persistentAuditEvent18.getAuditEventDate();
        java.lang.Long long20 = persistentAuditEvent18.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent21 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent21.getData();
        persistentAuditEvent18.setData(strMap22);
        persistentAuditEvent9.setData(strMap22);
        persistentAuditEvent0.setData(strMap22);
        java.lang.Long long26 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(long26);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", (java.lang.Long) 1L, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=0, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='100', habilitadoTcc='false'}", "UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "LoginVM{username='null', rememberMe=false}", "", "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 100L);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str12 = user9.getLastName();
        java.time.Instant instant13 = user9.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        java.lang.String str16 = user15.getCreatedBy();
        java.lang.String str17 = user15.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant21 = user18.getLastModifiedDate();
        user15.setCreatedDate(instant21);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant45 = null;
        java.time.Instant instant47 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant45, "error.validation", instant47, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant13, "", instant21, (java.util.Set<java.lang.String>) strSet53);
        java.util.Set<java.lang.String> strSet58 = userDTO57.getAuthorities();
        java.time.Instant instant59 = userDTO57.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper60 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user62 = userMapper60.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user64 = userMapper60.userFromId((java.lang.Long) 100L);
        user64.setEmail("LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}");
        java.time.Instant instant67 = user64.getLastModifiedDate();
        userDTO57.setLastModifiedDate(instant67);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str12, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNotNull(user62);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNotNull(instant67);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.time.Instant instant3 = user0.getResetDate();
        java.lang.String str4 = user0.getActivationKey();
        java.lang.Long long5 = user0.getId();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO7 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        java.lang.String str8 = user6.getImageUrl();
        java.lang.String str9 = user6.getLangKey();
        java.lang.String str10 = user6.getLogin();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant14 = user11.getLastModifiedDate();
        user6.setLastModifiedDate(instant14);
        java.lang.String str16 = user6.getLogin();
        user6.setLastName("");
        user6.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user6.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        java.lang.String str23 = user6.getEmail();
        java.lang.String str24 = user6.getImageUrl();
        java.lang.String str25 = user6.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str38 = user35.getLastName();
        java.time.Instant instant39 = user35.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user41 = new com.unifacisa.tcc.domain.User();
        java.lang.String str42 = user41.getCreatedBy();
        java.lang.String str43 = user41.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        user44.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant47 = user44.getLastModifiedDate();
        user41.setCreatedDate(instant47);
        java.time.Instant instant58 = null;
        java.time.Instant instant60 = null;
        java.time.Instant instant71 = null;
        java.time.Instant instant73 = null;
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet79 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet79, strArray78);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM81 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant71, "error.validation", instant73, (java.util.Set<java.lang.String>) strSet79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO82 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant58, "", instant60, (java.util.Set<java.lang.String>) strSet79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant39, "", instant47, (java.util.Set<java.lang.String>) strSet79);
        java.util.Set<java.lang.String> strSet84 = userDTO83.getAuthorities();
        java.time.Instant instant85 = userDTO83.getLastModifiedDate();
        user6.setResetDate(instant85);
        user0.setLastModifiedDate(instant85);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str25, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str38, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(instant85);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList15 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource16 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList17 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList18 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList19 = logsResource16.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str21 = loggerVM20.getName();
        loggerVM20.setLevel("error.validation");
        java.lang.String str24 = loggerVM20.getLevel();
        java.lang.String str25 = loggerVM20.toString();
        java.lang.String str26 = loggerVM20.toString();
        loggerVM20.setName("error.concurrencyFailure");
        java.lang.String str29 = loggerVM20.getName();
        logsResource16.changeLevel(loggerVM20);
        logsResource0.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM32 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str33 = loggerVM32.getLevel();
        java.lang.String str34 = loggerVM32.toString();
        java.lang.String str35 = loggerVM32.getLevel();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(loggerVMList15);
        org.junit.Assert.assertNotNull(loggerVMList17);
        org.junit.Assert.assertNotNull(loggerVMList18);
        org.junit.Assert.assertNotNull(loggerVMList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.validation" + "'", str24, "error.validation");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str25, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str26, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "error.concurrencyFailure" + "'", str29, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str34, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        java.lang.Boolean boolean35 = aluno33.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor36 = professor18.addAluno(aluno33);
        com.unifacisa.tcc.domain.Professor professor37 = aluno33.getProfessor();
        com.unifacisa.tcc.domain.Professor professor38 = aluno33.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor43 = professor38.removeAluno(aluno39);
        aluno39.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor46 = professor17.removeAluno(aluno39);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection47 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str48 = socialUserConnection47.getUserId();
        socialUserConnection47.setDisplayName("");
        java.lang.String str51 = socialUserConnection47.getProfileURL();
        boolean boolean52 = professor46.equals((java.lang.Object) socialUserConnection47);
        java.lang.String str53 = socialUserConnection47.getProviderUserId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.Boolean boolean3 = loginVM0.isRememberMe();
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        loginVM0.setUsername("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
        java.lang.String str8 = loginVM0.getUsername();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str4, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}" + "'", str8, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long10 = socialUserConnection4.getRank();
        socialUserConnection4.setSecret("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        socialUserConnection4.setProfileURL("error.concurrencyFailure");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.toString();
        java.lang.String str4 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        java.lang.String str15 = user12.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper0.userToUserDTO(user12);
        java.lang.String str17 = user12.getFirstName();
        user12.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setSecret("Authority{name='null'}");
        socialUserConnection0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str10, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLogin();
        user0.setLastName("");
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        java.lang.String str17 = user0.getEmail();
        java.lang.String str18 = user0.getImageUrl();
        user0.setFirstName("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant21 = user0.getResetDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(instant21);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor33 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = professor0.matricula((java.lang.Long) 1L);
        professor0.setSegundoNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        professor0.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor0.numeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setPassword("error.concurrencyFailure");
        java.lang.Class<?> wildcardClass9 = loginVM0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str6, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.Long long10 = socialUserConnection0.getRank();
        java.lang.String str11 = socialUserConnection0.getProviderId();
        java.lang.String str12 = socialUserConnection0.getProviderId();
        java.lang.String str13 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str13, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        java.time.Instant instant10 = null;
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        user12.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = new com.unifacisa.tcc.service.dto.UserDTO(user12);
        java.time.Instant instant17 = userDTO16.getLastModifiedDate();
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant28, "error.validation", instant30, (java.util.Set<java.lang.String>) strSet36);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM39 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant10, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant17, (java.util.Set<java.lang.String>) strSet36);
        managedUserVM39.setLogin("LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        managedUserVM39.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray8 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList9 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList9, userArray8);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList11 = userMapper7.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray13 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList14 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList14, userArray13);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList16 = userMapper12.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList14);
        java.util.List<com.unifacisa.tcc.domain.User> userList17 = userMapper7.userDTOsToUsers(userDTOList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray24 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList25 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList25, userArray24);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList27 = userMapper23.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList25);
        java.util.List<com.unifacisa.tcc.domain.User> userList28 = userMapper18.userDTOsToUsers(userDTOList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray30 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList31 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList31, userArray30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList31);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray35 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList36 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList36, userArray35);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList38 = userMapper34.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList36);
        java.util.List<com.unifacisa.tcc.domain.User> userList39 = userMapper29.userDTOsToUsers(userDTOList38);
        java.util.List<com.unifacisa.tcc.domain.User> userList40 = userMapper18.userDTOsToUsers(userDTOList38);
        java.util.List<com.unifacisa.tcc.domain.User> userList41 = userMapper7.userDTOsToUsers(userDTOList38);
        java.util.List<com.unifacisa.tcc.domain.User> userList42 = userMapper0.userDTOsToUsers(userDTOList38);
        com.unifacisa.tcc.domain.User user44 = userMapper0.userFromId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userDTOList11);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(userDTOList16);
        org.junit.Assert.assertNotNull(userList17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(userDTOList27);
        org.junit.Assert.assertNotNull(userList28);
        org.junit.Assert.assertNotNull(userArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(userArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(userDTOList38);
        org.junit.Assert.assertNotNull(userList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(userList42);
        org.junit.Assert.assertNotNull(user44);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.getCreatedBy();
        user19.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant23 = user19.getLastModifiedDate();
        boolean boolean24 = professor0.equals((java.lang.Object) instant23);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        aluno25.setProfessor(professor26);
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM42 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM42.setKey("error.concurrencyFailure");
        java.lang.String str45 = keyAndPasswordVM42.getNewPassword();
        boolean boolean46 = aluno25.equals((java.lang.Object) str45);
        java.lang.Boolean boolean47 = aluno25.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor48 = professor0.addAluno(aluno25);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(professor48);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno9.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = aluno9.primeiroNome("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(pessoa13);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getSecret();
        java.lang.String str10 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getId();
        socialUserConnection0.setId((java.lang.Long) 10L);
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setAccessToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        java.time.Instant instant4 = user2.getLastModifiedDate();
        user2.setLangKey("");
        user2.setLastModifiedBy("Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(instant4);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.String str3 = loginVM0.getPassword();
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        java.lang.String str5 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.lang.String str7 = user0.getLangKey();
        java.time.Instant instant8 = user0.getResetDate();
        java.lang.String str9 = user0.toString();
        java.time.Instant instant10 = user0.getCreatedDate();
        user0.setLastModifiedBy("LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        java.lang.String str13 = user0.getCreatedBy();
        java.lang.Long long14 = user0.getId();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(long14);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        java.lang.String str15 = user12.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper0.userToUserDTO(user12);
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.time.Instant instant19 = user17.getResetDate();
        java.lang.String str20 = user17.getResetKey();
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str34 = user31.getLastName();
        java.time.Instant instant35 = user31.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str40 = user37.getLastName();
        java.time.Instant instant41 = user37.getLastModifiedDate();
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.service.dto.UserDTO userDTO75 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant51, "", instant53, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant35, "", instant41, (java.util.Set<java.lang.String>) strSet72);
        user17.setResetDate(instant35);
        user17.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str80 = user17.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user17);
        user17.setFirstName("");
        java.lang.String str84 = user17.getImageUrl();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str34, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = professor34.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = pessoa39.matricula((java.lang.Long) 0L);
        pessoa39.setEmail("LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor78 = aluno77.getProfessor();
        aluno77.setEmail("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(professor78);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str10 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str10, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("LoginVM{username='null', rememberMe=false}");
        java.lang.String str7 = managedUserVM0.getFirstName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='error.concurrencyFailure', rememberMe=null}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 1L, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", (java.lang.Long) 100L);
        socialUserConnection11.setUserId("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        socialUserConnection11.setAccessToken("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        socialUserConnection11.setSecret("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        aluno0.setId((java.lang.Long) (-1L));
        java.lang.String str6 = aluno0.toString();
        java.lang.Long long7 = aluno0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str9 = keyAndPasswordVM0.getKey();
        java.lang.String str10 = keyAndPasswordVM0.getKey();
        java.lang.String str11 = keyAndPasswordVM0.getKey();
        java.lang.String str12 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.concurrencyFailure" + "'", str9, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.concurrencyFailure" + "'", str10, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str12, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setEmail("");
        user0.setActivationKey("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.time.Instant instant13 = null;
        java.time.Instant instant15 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant26, "error.validation", instant28, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant13, "", instant15, (java.util.Set<java.lang.String>) strSet34);
        java.time.Instant instant38 = userDTO37.getLastModifiedDate();
        userDTO37.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean41 = socialUserConnection0.equals((java.lang.Object) userDTO37);
        socialUserConnection0.setAccessToken("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str44 = socialUserConnection0.getProviderId();
        java.lang.String str45 = socialUserConnection0.getProviderUserId();
        java.lang.String str46 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setAccessToken("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user10 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user14 = userMapper0.userFromId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(user14);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 0L, "LoginVM{username='null', rememberMe=null}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "", "LoggerVM{name='null', level='null'}", (java.lang.Long) 0L);
        socialUserConnection11.setProviderId("LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        boolean boolean6 = user0.getActivated();
        java.lang.String str7 = user0.getImageUrl();
        java.time.Instant instant8 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant8);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        java.lang.Long long5 = socialUserConnection0.getRank();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        java.lang.String str7 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.String str3 = loginVM0.getPassword();
        java.lang.String str4 = loginVM0.getPassword();
        java.lang.String str5 = loginVM0.toString();
        loginVM0.setUsername("LoggerVM{name='null', level='error.validation'}");
        loginVM0.setUsername("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str5, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection4.setProfileURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno8 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean9 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertNotNull(aluno8);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + true + "'", boolean9, true);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str10 = socialUserConnection0.toString();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        java.lang.String str13 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str10, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        socialUserConnection0.setRank((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor17.setPrimeiroNome("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor17.segundoNome("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(pessoa25);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str39 = aluno38.getSegundoNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        java.lang.String str9 = user8.getCreatedBy();
        java.lang.String str10 = user8.getLastModifiedBy();
        user8.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str13 = user8.toString();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        java.lang.String str16 = user14.getLastModifiedBy();
        user14.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.getCreatedBy();
        user19.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO23 = new com.unifacisa.tcc.service.dto.UserDTO(user19);
        java.time.Instant instant24 = userDTO23.getLastModifiedDate();
        user14.setCreatedDate(instant24);
        user8.setResetDate(instant24);
        java.lang.String str27 = user8.getFirstName();
        java.lang.String str28 = user8.getLastName();
        java.time.Instant instant29 = user8.getLastModifiedDate();
        user0.setCreatedDate(instant29);
        java.lang.String str31 = user0.getLangKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str13, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(instant29);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor8 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa10 = professor8.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.primeiroNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        boolean boolean13 = authority0.equals((java.lang.Object) pessoa12);
        java.lang.String str14 = authority0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(pessoa10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str14, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray19 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno10, aluno14, aluno15 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet20, alunoArray19);
        professor8.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet20);
        java.lang.String str23 = professor8.toString();
        com.unifacisa.tcc.domain.Professor professor25 = professor8.diponibilidade((java.lang.Boolean) false);
        aluno7.setProfessor(professor8);
        aluno7.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        aluno7.setSegundoNome("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray42 = new com.unifacisa.tcc.domain.Aluno[] { aluno32, aluno33, aluno37, aluno38 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet43 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet43, alunoArray42);
        professor31.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet43);
        java.lang.String str46 = professor31.toString();
        professor31.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str50 = aluno49.getEmail();
        aluno49.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor53 = aluno49.getProfessor();
        com.unifacisa.tcc.domain.Professor professor54 = professor31.addAluno(aluno49);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = professor31.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor57 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno59, aluno63, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        professor57.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str73 = aluno72.getEmail();
        java.lang.Boolean boolean74 = aluno72.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor75 = professor57.addAluno(aluno72);
        aluno72.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str79 = professor78.getPrimeiroNome();
        java.lang.Boolean boolean80 = professor78.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa82 = professor78.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno83 = aluno72.professor(professor78);
        aluno83.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor86 = professor31.addAluno(aluno83);
        aluno7.setProfessor(professor86);
        java.lang.Boolean boolean88 = professor86.isDiponibilidade();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(alunoArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(alunoArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str46, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(professor53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(pessoa56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNotNull(pessoa82);
        org.junit.Assert.assertNotNull(aluno83);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertEquals("'" + boolean88 + "' != '" + false + "'", boolean88, false);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getFirstName();
        java.lang.String str38 = userDTO33.getCreatedBy();
        java.lang.String str39 = userDTO33.getLangKey();
        java.lang.String str40 = userDTO33.getLogin();
        java.lang.String str41 = userDTO33.getLogin();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.validation" + "'", str39, "error.validation");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str41, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user13 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent23 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long24 = persistentAuditEvent23.getId();
        persistentAuditEvent23.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long27 = persistentAuditEvent23.getId();
        com.unifacisa.tcc.domain.User user28 = new com.unifacisa.tcc.domain.User();
        java.lang.String str29 = user28.getCreatedBy();
        user28.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant32 = user28.getLastModifiedDate();
        persistentAuditEvent23.setAuditEventDate(instant32);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO(user35);
        java.lang.String str37 = user35.toString();
        java.time.Instant instant38 = user35.getLastModifiedDate();
        java.time.Instant instant49 = null;
        java.time.Instant instant51 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant49, "error.validation", instant51, (java.util.Set<java.lang.String>) strSet57);
        java.lang.String str60 = managedUserVM59.getFirstName();
        java.lang.String str61 = managedUserVM59.getCreatedBy();
        java.util.Set<java.lang.String> strSet62 = managedUserVM59.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "LoggerVM{name='null', level='error.validation'}", "", "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", false, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "Authority{name=''}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", instant32, "error.concurrencyFailure", instant38, strSet62);
        user13.setLastModifiedDate(instant38);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str37, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant38);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNotNull(strSet62);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        java.time.Instant instant19 = null;
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        java.lang.String str22 = user21.getCreatedBy();
        user21.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO25 = new com.unifacisa.tcc.service.dto.UserDTO(user21);
        java.time.Instant instant26 = userDTO25.getLastModifiedDate();
        java.time.Instant instant37 = null;
        java.time.Instant instant39 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant37, "error.validation", instant39, (java.util.Set<java.lang.String>) strSet45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM48 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant19, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant26, (java.util.Set<java.lang.String>) strSet45);
        user0.setLastModifiedDate(instant19);
        java.lang.Long long50 = user0.getId();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(long50);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        java.lang.String str76 = aluno38.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno38.segundoNome("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str76, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa78);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getCreatedBy();
        java.time.Instant instant21 = managedUserVM19.getCreatedDate();
        boolean boolean22 = professor0.equals((java.lang.Object) managedUserVM19);
        boolean boolean23 = managedUserVM19.isActivated();
        java.lang.String str24 = managedUserVM19.toString();
        java.lang.String str25 = managedUserVM19.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str24, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user7);
        java.lang.String str9 = user7.getImageUrl();
        boolean boolean11 = user7.equals((java.lang.Object) (byte) -1);
        java.lang.String str12 = user7.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = user7.getAuthorities();
        user0.setAuthorities(authoritySet13);
        user0.setImageUrl("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        java.lang.String str17 = user0.getResetKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(authoritySet13);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        java.lang.String str36 = professor35.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno39, aluno43, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        java.lang.Boolean boolean54 = aluno52.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor55 = professor37.addAluno(aluno52);
        com.unifacisa.tcc.domain.Professor professor56 = aluno52.getProfessor();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet57 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Professor professor58 = professor35.alunos(alunoSet57);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = professor58.segundoNome("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNotNull(alunoSet57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant34, "error.validation", instant36, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO46 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant9, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant11, (java.util.Set<java.lang.String>) strSet42);
        userDTO46.setId((java.lang.Long) 100L);
        java.lang.String str49 = userDTO46.getFirstName();
        java.time.Instant instant50 = userDTO46.getLastModifiedDate();
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str49, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(instant50);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.String str2 = socialUserConnection0.getAccessToken();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        aluno15.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str22 = professor21.getPrimeiroNome();
        java.lang.Boolean boolean23 = professor21.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor21.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno15.professor(professor21);
        java.lang.Long long27 = aluno26.getMatricula();
        java.lang.Long long28 = aluno26.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = aluno26.matricula((java.lang.Long) 100L);
        aluno26.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNotNull(pessoa30);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant7);
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user10);
        java.lang.String str12 = user10.getImageUrl();
        java.lang.String str13 = user10.getLangKey();
        user10.setLastModifiedBy("");
        user10.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant18 = user10.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant18);
        java.lang.String str20 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        java.lang.String str1 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str2 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getExpireTime();
        java.lang.String str6 = socialUserConnection0.getImageURL();
        java.lang.Long long7 = socialUserConnection0.getId();
        socialUserConnection0.setUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Boolean boolean23 = professor18.isDiponibilidade();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getCreatedBy();
        java.time.Instant instant21 = managedUserVM19.getCreatedDate();
        boolean boolean22 = professor0.equals((java.lang.Object) managedUserVM19);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor0.primeiroNome("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        professor0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pessoa24);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getProviderId();
        java.lang.String str12 = socialUserConnection0.getAccessToken();
        java.lang.String str13 = socialUserConnection0.getSecret();
        java.lang.String str14 = socialUserConnection0.getProfileURL();
        java.lang.String str15 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}" + "'", str15, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant15 = user12.getLastModifiedDate();
        user9.setCreatedDate(instant15);
        java.lang.String str17 = user9.toString();
        java.time.Instant instant18 = user9.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant18);
        java.lang.String str20 = persistentAuditEvent0.getPrincipal();
        java.lang.String str21 = persistentAuditEvent0.getAuditEventType();
        java.lang.String str22 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str20, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno8 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno8.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str11 = aluno8.getSegundoNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertNotNull(aluno8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        java.lang.String str6 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        java.lang.Long long4 = socialUserConnection0.getId();
        java.lang.String str5 = socialUserConnection0.getImageURL();
        java.lang.String str6 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        java.lang.String str9 = socialUserConnection0.toString();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("LoggerVM{name='null', level='error.validation'}", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        java.lang.String str5 = fieldErrorVM3.getField();
        java.lang.String str6 = fieldErrorVM3.getField();
        java.lang.String str7 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str4, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str5, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str7, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("LoggerVM{name='null', level='error.validation'}");
        boolean boolean5 = managedUserVM0.isActivated();
        boolean boolean6 = managedUserVM0.isActivated();
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strSet7);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        java.lang.Long long5 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setDisplayName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        com.unifacisa.tcc.domain.Aluno aluno7 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno9.matricula((java.lang.Long) 0L);
        java.lang.Boolean boolean12 = aluno9.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str15 = aluno9.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(aluno7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + true + "'", boolean12, true);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='1', habilitadoTcc='false'}" + "'", str15, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='1', habilitadoTcc='false'}");
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant9 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNotNull(instant9);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        user0.setLangKey("Authority{name='null'}");
        java.lang.String str6 = user0.getEmail();
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        boolean boolean9 = user0.getActivated();
        boolean boolean10 = user0.getActivated();
        java.lang.String str11 = user0.getResetKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.toString();
        java.time.Instant instant9 = user0.getCreatedDate();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM10 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM10.setKey("error.concurrencyFailure");
        java.lang.String str13 = keyAndPasswordVM10.getNewPassword();
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM10.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        boolean boolean18 = user0.equals((java.lang.Object) keyAndPasswordVM10);
        java.lang.String str19 = keyAndPasswordVM10.getKey();
        java.lang.String str20 = keyAndPasswordVM10.getKey();
        keyAndPasswordVM10.setKey("error.validation");
        java.lang.String str23 = keyAndPasswordVM10.getKey();
        keyAndPasswordVM10.setKey("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.concurrencyFailure" + "'", str19, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "error.concurrencyFailure" + "'", str20, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.lang.String str23 = managedUserVM20.getPassword();
        java.time.Instant instant24 = managedUserVM20.getLastModifiedDate();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNull(instant24);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.String str7 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='null'}" + "'", str6, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.String str2 = socialUserConnection0.getProviderUserId();
        java.lang.String str3 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long18 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.String str34 = professor19.toString();
        com.unifacisa.tcc.domain.Professor professor36 = professor19.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = professor36.primeiroNome("");
        professor36.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno43, aluno47, aluno48 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str66 = aluno65.getEmail();
        aluno65.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray69 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno60, aluno64, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet70 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet70, alunoArray69);
        professor58.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet70);
        aluno57.setProfessor(professor58);
        com.unifacisa.tcc.domain.Professor professor74 = professor36.removeAluno(aluno57);
        com.unifacisa.tcc.domain.Professor professor75 = professor0.addAluno(aluno57);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno57.email("Authority{name='null'}");
        pessoa77.setEmail("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str34, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(pessoa38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(alunoArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(pessoa77);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getResetKey();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        user14.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str17 = user14.getLastName();
        java.time.Instant instant18 = user14.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user20 = new com.unifacisa.tcc.domain.User();
        user20.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str23 = user20.getLastName();
        java.time.Instant instant24 = user20.getLastModifiedDate();
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM57 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant47, "error.validation", instant49, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.service.dto.UserDTO userDTO58 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant34, "", instant36, (java.util.Set<java.lang.String>) strSet55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM59 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant18, "", instant24, (java.util.Set<java.lang.String>) strSet55);
        user0.setResetDate(instant18);
        user0.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str63 = user0.getResetKey();
        java.lang.String str64 = user0.getLastName();
        java.lang.String str65 = user0.getLastName();
        java.time.Instant instant66 = user0.getCreatedDate();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str17, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str23, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(instant66);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "LoggerVM{name='', level='null'}", "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getLastModifiedBy();
        java.lang.String str10 = user0.getEmail();
        java.lang.String str11 = user0.getEmail();
        java.lang.String str12 = user0.getResetKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str12, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.time.Instant instant35 = userDTO33.getLastModifiedDate();
        java.util.Set<java.lang.String> strSet36 = userDTO33.getAuthorities();
        java.util.Set<java.lang.String> strSet37 = userDTO33.getAuthorities();
        java.lang.String str38 = userDTO33.getLogin();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.String str4 = aluno0.toString();
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa79 = aluno77.primeiroNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str80 = aluno77.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(pessoa79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Aluno{id=null, primeiroNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str80, "Aluno{id=null, primeiroNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        java.lang.String str6 = socialUserConnection0.getImageURL();
        socialUserConnection0.setAccessToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        java.lang.String str31 = professor16.toString();
        java.lang.Long long32 = professor16.getMatricula();
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        java.lang.String str48 = professor33.toString();
        com.unifacisa.tcc.domain.Professor professor50 = professor33.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa52 = professor50.primeiroNome("");
        professor50.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str58 = aluno57.getEmail();
        aluno57.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str63 = aluno62.getEmail();
        aluno62.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray66 = new com.unifacisa.tcc.domain.Aluno[] { aluno56, aluno57, aluno61, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet67 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet67, alunoArray66);
        professor55.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        professor50.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        com.unifacisa.tcc.domain.Professor professor71 = professor16.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        java.lang.String str73 = professor0.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str48, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(pessoa52);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(alunoArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno75.habilitadoTcc((java.lang.Boolean) false);
        java.lang.String str81 = aluno80.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str81, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLogin();
        java.lang.String str35 = userDTO33.getImageUrl();
        java.lang.String str36 = userDTO33.getLastName();
        java.lang.String str37 = userDTO33.getLastModifiedBy();
        java.lang.String str38 = userDTO33.getLastName();
        java.lang.String str39 = userDTO33.getImageUrl();
        java.lang.String str40 = userDTO33.getLogin();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.concurrencyFailure" + "'", str36, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.lang.String str7 = user0.getLangKey();
        java.time.Instant instant8 = user0.getResetDate();
        java.lang.String str9 = user0.toString();
        user0.setPassword("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str12 = user0.toString();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str12, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        java.lang.Boolean boolean37 = aluno35.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor38 = professor20.addAluno(aluno35);
        com.unifacisa.tcc.domain.Professor professor39 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Professor professor40 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor40.removeAluno(aluno41);
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.removeAluno(aluno41);
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(professor50);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getActivationKey();
        java.time.Instant instant37 = user0.getResetDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(instant37);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        java.lang.String str7 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", (java.lang.Long) 10L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "hi!", "Authority{name='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 1L);
        socialUserConnection11.setSecret("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno6 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray18 = new com.unifacisa.tcc.domain.Aluno[] { aluno8, aluno9, aluno13, aluno14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet19 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet19, alunoArray18);
        professor7.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet19);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        java.lang.Boolean boolean24 = aluno22.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor25 = professor7.addAluno(aluno22);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa27 = professor25.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa29 = professor25.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor25.setEmail("Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}");
        com.unifacisa.tcc.domain.Professor professor33 = professor25.diponibilidade((java.lang.Boolean) false);
        aluno0.setProfessor(professor33);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno37, aluno41, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        java.lang.Boolean boolean52 = aluno50.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor53 = professor35.addAluno(aluno50);
        com.unifacisa.tcc.domain.Professor professor54 = aluno50.getProfessor();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet55 = professor54.getAlunos();
        professor33.setAlunos(alunoSet55);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(professor4);
        org.junit.Assert.assertNotNull(aluno6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(alunoArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(pessoa27);
        org.junit.Assert.assertNotNull(pessoa29);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(alunoSet55);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}", "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Authority{name=''}", (java.lang.Long) 10L, "LoggerVM{name='', level='error.validation'}", "error.concurrencyFailure", "LoginVM{username='LoggerVM{name='null', level='error.validation'}', rememberMe=null}", "LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", (java.lang.Long) 0L);
        java.lang.String str12 = socialUserConnection11.getUserId();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}" + "'", str12, "Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}");
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        java.lang.String str7 = user5.getLangKey();
        java.time.Instant instant8 = user5.getCreatedDate();
        persistentAuditEvent4.setAuditEventDate(instant8);
        persistentAuditEvent0.setAuditEventDate(instant8);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long12 = persistentAuditEvent11.getId();
        persistentAuditEvent11.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long15 = persistentAuditEvent11.getId();
        persistentAuditEvent11.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.util.Map<java.lang.String, java.lang.String> strMap18 = persistentAuditEvent11.getData();
        persistentAuditEvent0.setData(strMap18);
        java.lang.String str20 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", (java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "Authority{name='null'}", (java.lang.Long) 10L);
        java.lang.Long long12 = socialUserConnection11.getId();
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.Long long7 = socialUserConnection4.getExpireTime();
        java.lang.String str8 = socialUserConnection4.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.segundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str23 = professor18.getEmail();
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        java.lang.String str39 = professor24.toString();
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno41, aluno42, aluno46, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        java.lang.String str55 = professor40.toString();
        java.lang.Long long56 = professor40.getMatricula();
        com.unifacisa.tcc.domain.Professor professor57 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno59, aluno63, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        professor57.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        java.lang.String str72 = professor57.toString();
        com.unifacisa.tcc.domain.Professor professor74 = professor57.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa76 = professor74.primeiroNome("");
        professor74.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor79 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno80 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str82 = aluno81.getEmail();
        aluno81.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno85 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno86 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str87 = aluno86.getEmail();
        aluno86.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray90 = new com.unifacisa.tcc.domain.Aluno[] { aluno80, aluno81, aluno85, aluno86 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet91 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet91, alunoArray90);
        professor79.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet91);
        professor74.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet91);
        com.unifacisa.tcc.domain.Professor professor95 = professor40.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet91);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet91);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet97 = professor24.getAlunos();
        com.unifacisa.tcc.domain.Professor professor98 = professor18.alunos(alunoSet97);
        java.lang.Long long99 = professor18.getNumeroContato();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str39, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str55, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str72, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(pessoa76);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(alunoArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(professor95);
        org.junit.Assert.assertNotNull(alunoSet97);
        org.junit.Assert.assertNotNull(professor98);
        org.junit.Assert.assertNull(long99);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        java.lang.Boolean boolean23 = aluno21.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor24 = professor6.addAluno(aluno21);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection29 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean30 = aluno25.equals((java.lang.Object) socialUserConnection29);
        socialUserConnection29.setRefreshToken("error.validation");
        socialUserConnection29.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean35 = aluno21.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str36 = aluno21.toString();
        java.lang.Boolean boolean37 = aluno21.isHabilitadoTcc();
        java.lang.String str38 = aluno21.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor3.removeAluno(aluno21);
        aluno21.setNumeroContato((java.lang.Long) (-1L));
        aluno21.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str36, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str38, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor39);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO13 = new com.unifacisa.tcc.service.dto.UserDTO(user12);
        user12.setLangKey("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(user12);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.String str6 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection26 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean27 = aluno22.equals((java.lang.Object) socialUserConnection26);
        com.unifacisa.tcc.domain.Aluno aluno29 = aluno22.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor30 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray41 = new com.unifacisa.tcc.domain.Aluno[] { aluno31, aluno32, aluno36, aluno37 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet42 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet42, alunoArray41);
        professor30.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet42);
        java.lang.String str45 = professor30.toString();
        com.unifacisa.tcc.domain.Professor professor47 = professor30.diponibilidade((java.lang.Boolean) false);
        aluno29.setProfessor(professor30);
        com.unifacisa.tcc.domain.Professor professor49 = professor17.removeAluno(aluno29);
        professor49.setSegundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(aluno29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(alunoArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str45, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(professor49);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='null'}" + "'", str6, "Authority{name='null'}");
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("error.validation");
        java.lang.String str9 = loggerVM5.getLevel();
        java.lang.String str10 = loggerVM5.toString();
        loggerVM5.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        loggerVM5.setName("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        logsResource0.changeLevel(loggerVM5);
        loggerVM5.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        loggerVM5.setLevel("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}");
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.toString();
        java.lang.String str4 = loginVM0.getPassword();
        java.lang.String str5 = loginVM0.toString();
        java.lang.String str6 = loginVM0.getPassword();
        loginVM0.setUsername("");
        java.lang.String str9 = loginVM0.getPassword();
        java.lang.String str10 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str5, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        java.lang.String str32 = aluno15.toString();
        aluno15.setPrimeiroNome("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        aluno15.setEmail("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        aluno44.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno39, aluno43, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        java.lang.String str52 = professor37.toString();
        com.unifacisa.tcc.domain.Professor professor54 = professor37.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa56 = professor54.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor58 = professor54.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor58.getAlunos();
        aluno15.setProfessor(professor58);
        java.lang.String str61 = professor58.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str32, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str52, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(pessoa56);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str61, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        java.lang.Boolean boolean23 = aluno21.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor24 = professor6.addAluno(aluno21);
        aluno21.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str28 = professor27.getPrimeiroNome();
        java.lang.Boolean boolean29 = professor27.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa31 = professor27.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno21.professor(professor27);
        java.lang.Long long33 = aluno32.getMatricula();
        boolean boolean34 = authority0.equals((java.lang.Object) aluno32);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(pessoa31);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLangKey();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = user0.getEmail();
        user0.setActivated(false);
        java.lang.String str8 = user0.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        java.lang.Long long19 = professor0.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(long19);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.lang.String str3 = managedUserVM0.toString();
        java.lang.String str4 = managedUserVM0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor21 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.String str37 = professor22.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor22.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet40 = professor22.getAlunos();
        professor21.setAlunos(alunoSet40);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor21.primeiroNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Aluno aluno44 = aluno0.professor(professor21);
        professor21.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str37, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(alunoSet40);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(aluno44);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str39 = userDTO33.getCreatedBy();
        java.time.Instant instant40 = userDTO33.getLastModifiedDate();
        boolean boolean41 = userDTO33.isActivated();
        java.lang.String str42 = userDTO33.getLastName();
        java.lang.String str43 = userDTO33.getFirstName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "error.concurrencyFailure" + "'", str42, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.toString();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        java.lang.String str5 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        user0.setPassword("SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.toString();
        com.unifacisa.tcc.domain.Professor professor14 = aluno12.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno12.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno18 = aluno16.habilitadoTcc((java.lang.Boolean) false);
        boolean boolean19 = user0.equals((java.lang.Object) aluno18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno18.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = aluno18.segundoNome("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor14);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNotNull(aluno18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNotNull(pessoa23);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        boolean boolean6 = user0.getActivated();
        java.lang.String str7 = user0.getLogin();
        java.lang.String str8 = user0.getResetKey();
        java.lang.String str9 = user0.getFirstName();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", (java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "Authority{name='null'}", (java.lang.Long) 10L);
        socialUserConnection11.setSecret("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        java.lang.String str3 = authority0.getName();
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        authority0.setName("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str8 = authority0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str8, "Authority{name='User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno5 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNotNull(aluno5);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        java.lang.String str4 = aluno0.toString();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        aluno5.setProfessor(professor6);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = aluno5.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor24 = aluno5.getProfessor();
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray36 = new com.unifacisa.tcc.domain.Aluno[] { aluno26, aluno27, aluno31, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet37 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet37, alunoArray36);
        professor25.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet37);
        java.lang.String str40 = professor25.toString();
        com.unifacisa.tcc.domain.Professor professor42 = professor25.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        aluno50.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray54 = new com.unifacisa.tcc.domain.Aluno[] { aluno44, aluno45, aluno49, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet55 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet55, alunoArray54);
        professor43.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        com.unifacisa.tcc.domain.Professor professor58 = professor42.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet55);
        aluno5.setProfessor(professor58);
        aluno0.setProfessor(professor58);
        professor58.setEmail("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(alunoArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str40, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(alunoArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(professor58);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.getEmail();
        user0.setActivated(false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.Long long6 = persistentAuditEvent4.getId();
        java.lang.String str7 = persistentAuditEvent4.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLangKey();
        java.time.Instant instant12 = user9.getCreatedDate();
        persistentAuditEvent8.setAuditEventDate(instant12);
        persistentAuditEvent4.setAuditEventDate(instant12);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long16 = persistentAuditEvent15.getId();
        persistentAuditEvent15.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long19 = persistentAuditEvent15.getId();
        persistentAuditEvent15.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent15.getData();
        persistentAuditEvent4.setData(strMap22);
        boolean boolean24 = socialUserConnection0.equals((java.lang.Object) persistentAuditEvent4);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.lang.String str4 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant8 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        java.lang.Boolean boolean37 = aluno35.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor38 = professor20.addAluno(aluno35);
        com.unifacisa.tcc.domain.Professor professor39 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Professor professor40 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor40.removeAluno(aluno41);
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.removeAluno(aluno41);
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        java.lang.Boolean boolean66 = aluno64.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor67 = professor49.addAluno(aluno64);
        com.unifacisa.tcc.domain.Professor professor68 = aluno64.getProfessor();
        com.unifacisa.tcc.domain.Professor professor69 = aluno64.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno71 = aluno64.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long72 = aluno71.getId();
        com.unifacisa.tcc.domain.Professor professor73 = professor17.addAluno(aluno71);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(aluno71);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNotNull(professor73);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str37 = userDTO33.getLangKey();
        boolean boolean38 = userDTO33.isActivated();
        java.lang.String str39 = userDTO33.getLastName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.validation" + "'", str37, "error.validation");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor72 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str75 = aluno74.getEmail();
        aluno74.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno79 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str80 = aluno79.getEmail();
        aluno79.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray83 = new com.unifacisa.tcc.domain.Aluno[] { aluno73, aluno74, aluno78, aluno79 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet84 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet84, alunoArray83);
        professor72.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet84);
        com.unifacisa.tcc.domain.Professor professor87 = professor56.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet84);
        com.unifacisa.tcc.domain.Professor professor89 = professor56.diponibilidade((java.lang.Boolean) false);
        java.lang.Long long90 = professor56.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor92 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet93 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Professor professor94 = professor17.alunos(alunoSet93);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(alunoArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertNull(long90);
        org.junit.Assert.assertNotNull(professor92);
        org.junit.Assert.assertNotNull(alunoSet93);
        org.junit.Assert.assertNotNull(professor94);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Authority{name='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Authority{name='null'}" + "'", str5, "Authority{name='null'}");
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        boolean boolean12 = userDTO11.isActivated();
        java.lang.String str13 = userDTO11.getLastModifiedBy();
        java.lang.String str14 = userDTO11.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = userDTO1.getLastModifiedDate();
        userDTO1.setId((java.lang.Long) 1L);
        userDTO1.setLogin("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        userDTO1.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(instant2);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("LoginVM{username='null', rememberMe=false}");
        boolean boolean7 = managedUserVM0.isActivated();
        java.lang.String str8 = managedUserVM0.getLangKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getPassword();
        java.time.Instant instant10 = user0.getResetDate();
        java.lang.String str11 = user0.getPassword();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection6 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str7 = socialUserConnection6.getUserId();
        socialUserConnection6.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        boolean boolean10 = user0.equals((java.lang.Object) socialUserConnection6);
        java.lang.Long long11 = socialUserConnection6.getExpireTime();
        socialUserConnection6.setProfileURL("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection6.setSecret("");
        java.lang.String str16 = socialUserConnection6.getProfileURL();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str16, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        java.time.Instant instant39 = user0.getCreatedDate();
        user0.setPassword("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = aluno42.matricula((java.lang.Long) 0L);
        boolean boolean45 = user0.equals((java.lang.Object) aluno42);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = aluno42.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pessoa47);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor21 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.String str37 = professor22.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor22.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet40 = professor22.getAlunos();
        professor21.setAlunos(alunoSet40);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor21.primeiroNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Aluno aluno44 = aluno0.professor(professor21);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = aluno0.numeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor47 = aluno0.getProfessor();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str37, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(alunoSet40);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(aluno44);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNotNull(professor47);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        java.lang.String str15 = user12.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper0.userToUserDTO(user12);
        java.lang.String str17 = user12.getFirstName();
        java.lang.String str18 = user12.getLangKey();
        java.time.Instant instant19 = user12.getCreatedDate();
        java.lang.String str20 = user12.getLogin();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str39 = userDTO33.getCreatedBy();
        java.time.Instant instant40 = userDTO33.getCreatedDate();
        java.lang.String str41 = userDTO33.getLogin();
        boolean boolean42 = userDTO33.isActivated();
        java.lang.String str43 = userDTO33.toString();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str41, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str43, "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str37 = professor36.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor39 = professor36.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor39.primeiroNome("error.concurrencyFailure");
        aluno20.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor43 = aluno20.getProfessor();
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str45 = professor44.getPrimeiroNome();
        java.lang.Boolean boolean46 = professor44.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = professor44.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        java.lang.String str64 = professor49.toString();
        com.unifacisa.tcc.domain.Professor professor66 = professor49.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa68 = professor66.primeiroNome("");
        professor66.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno72 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str74 = aluno73.getEmail();
        aluno73.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str79 = aluno78.getEmail();
        aluno78.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno72, aluno73, aluno77, aluno78 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        professor71.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        professor66.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor87 = professor44.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa89 = professor44.primeiroNome("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str90 = professor44.getSegundoNome();
        aluno20.setProfessor(professor44);
        aluno20.setMatricula((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(pessoa48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str64, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(pessoa68);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(pessoa89);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = aluno15.segundoNome("");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = pessoa37.segundoNome("Authority{name=''}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = pessoa39.matricula((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(pessoa37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        java.time.Instant instant10 = null;
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM33 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant23, "error.validation", instant25, (java.util.Set<java.lang.String>) strSet31);
        java.lang.String str34 = managedUserVM33.getFirstName();
        java.lang.String str35 = managedUserVM33.getPassword();
        java.util.Set<java.lang.String> strSet36 = managedUserVM33.getAuthorities();
        java.util.Set<java.lang.String> strSet37 = managedUserVM33.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = userMapper12.authoritiesFromStrings(strSet37);
        com.unifacisa.tcc.domain.User user40 = userMapper12.userFromId((java.lang.Long) 100L);
        java.lang.String str41 = user40.getCreatedBy();
        java.lang.String str42 = user40.getLastModifiedBy();
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user40);
        java.time.Instant instant44 = user40.getLastModifiedDate();
        java.time.Instant instant45 = user40.getCreatedDate();
        java.time.Instant instant55 = null;
        java.time.Instant instant57 = null;
        java.time.Instant instant68 = null;
        java.time.Instant instant70 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM78 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant68, "error.validation", instant70, (java.util.Set<java.lang.String>) strSet76);
        com.unifacisa.tcc.service.dto.UserDTO userDTO79 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant55, "", instant57, (java.util.Set<java.lang.String>) strSet76);
        java.lang.String str80 = userDTO79.getLastName();
        java.lang.String str81 = userDTO79.getLogin();
        java.lang.String str82 = userDTO79.getFirstName();
        java.util.Set<java.lang.String> strSet83 = userDTO79.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM84 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='true', langKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', activationKey='null'}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", true, "Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "LoginVM{username='error.concurrencyFailure', rememberMe=false}", "error.validation", instant10, "UserDTO{login='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant45, strSet83);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNotNull(user40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(instant44);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "error.concurrencyFailure" + "'", str80, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(strSet83);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str10 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setExpireTime((java.lang.Long) 1L);
        java.lang.String str13 = socialUserConnection0.getSecret();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent2 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant3 = persistentAuditEvent2.getAuditEventDate();
        java.lang.Long long4 = persistentAuditEvent2.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent5.getData();
        persistentAuditEvent2.setData(strMap6);
        persistentAuditEvent0.setData(strMap6);
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        java.lang.String str11 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str39 = userDTO33.getCreatedBy();
        java.time.Instant instant40 = null;
        userDTO33.setLastModifiedDate(instant40);
        boolean boolean42 = userDTO33.isActivated();
        java.lang.String str43 = userDTO33.getLastName();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "error.concurrencyFailure" + "'", str43, "error.concurrencyFailure");
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        keyAndPasswordVM0.setNewPassword("LoggerVM{name='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', level='error.validation'}");
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.numeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = pessoa5.numeroContato((java.lang.Long) 0L);
        pessoa7.setEmail("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        pessoa7.setPrimeiroNome("User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str12 = pessoa7.getSegundoNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList15 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource16 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList17 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList18 = logsResource16.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList19 = logsResource16.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str21 = loggerVM20.getName();
        loggerVM20.setLevel("error.validation");
        java.lang.String str24 = loggerVM20.getLevel();
        java.lang.String str25 = loggerVM20.toString();
        java.lang.String str26 = loggerVM20.toString();
        loggerVM20.setName("error.concurrencyFailure");
        java.lang.String str29 = loggerVM20.getName();
        logsResource16.changeLevel(loggerVM20);
        logsResource0.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM32 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str33 = loggerVM32.getLevel();
        java.lang.String str34 = loggerVM32.getName();
        java.lang.String str35 = loggerVM32.getName();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(loggerVMList15);
        org.junit.Assert.assertNotNull(loggerVMList17);
        org.junit.Assert.assertNotNull(loggerVMList18);
        org.junit.Assert.assertNotNull(loggerVMList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.validation" + "'", str24, "error.validation");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str25, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str26, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "error.concurrencyFailure" + "'", str29, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection10 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean11 = aluno6.equals((java.lang.Object) socialUserConnection10);
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno6.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor14 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno16 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str17 = aluno16.getEmail();
        aluno16.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray25 = new com.unifacisa.tcc.domain.Aluno[] { aluno15, aluno16, aluno20, aluno21 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet26 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet26, alunoArray25);
        professor14.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet26);
        java.lang.String str29 = professor14.toString();
        com.unifacisa.tcc.domain.Professor professor31 = professor14.diponibilidade((java.lang.Boolean) false);
        aluno13.setProfessor(professor14);
        com.unifacisa.tcc.domain.Professor professor33 = aluno13.getProfessor();
        java.lang.String str34 = aluno13.getEmail();
        com.unifacisa.tcc.domain.Professor professor35 = professor3.addAluno(aluno13);
        java.lang.Long long36 = professor35.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(alunoArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str29, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(long36);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user13 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user15 = userMapper0.userFromId((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNotNull(user15);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        java.lang.Long long6 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent7 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant8 = persistentAuditEvent7.getAuditEventDate();
        java.lang.Long long9 = persistentAuditEvent7.getId();
        java.lang.Long long10 = persistentAuditEvent7.getId();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        java.lang.String str13 = user11.getLangKey();
        java.time.Instant instant14 = user11.getCreatedDate();
        persistentAuditEvent7.setAuditEventDate(instant14);
        java.lang.String str16 = persistentAuditEvent7.getAuditEventType();
        persistentAuditEvent7.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str19 = persistentAuditEvent7.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent20 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant21 = persistentAuditEvent20.getAuditEventDate();
        java.lang.String str22 = persistentAuditEvent20.getPrincipal();
        java.lang.String str23 = persistentAuditEvent20.getPrincipal();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent24 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant25 = persistentAuditEvent24.getAuditEventDate();
        java.lang.String str26 = persistentAuditEvent24.getPrincipal();
        persistentAuditEvent24.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap29 = persistentAuditEvent24.getData();
        persistentAuditEvent20.setData(strMap29);
        persistentAuditEvent7.setData(strMap29);
        persistentAuditEvent0.setData(strMap29);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent33 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str34 = persistentAuditEvent33.getPrincipal();
        java.lang.Long long35 = persistentAuditEvent33.getId();
        java.lang.String str36 = persistentAuditEvent33.getPrincipal();
        persistentAuditEvent33.setAuditEventType("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Map<java.lang.String, java.lang.String> strMap39 = persistentAuditEvent33.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = persistentAuditEvent33.getData();
        persistentAuditEvent0.setData(strMap40);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent12 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant13 = persistentAuditEvent12.getAuditEventDate();
        java.lang.Long long14 = persistentAuditEvent12.getId();
        java.lang.Long long15 = persistentAuditEvent12.getId();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.getCreatedBy();
        java.lang.String str18 = user16.getLangKey();
        java.time.Instant instant19 = user16.getCreatedDate();
        persistentAuditEvent12.setAuditEventDate(instant19);
        user10.setResetDate(instant19);
        java.time.Instant instant22 = user10.getResetDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user25 = userMapper23.userFromId((java.lang.Long) 1L);
        boolean boolean26 = user25.getActivated();
        java.time.Instant instant27 = user25.getLastModifiedDate();
        user10.setLastModifiedDate(instant27);
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        java.lang.String str31 = user30.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant33 = persistentAuditEvent32.getAuditEventDate();
        java.lang.Long long34 = persistentAuditEvent32.getId();
        java.lang.Long long35 = persistentAuditEvent32.getId();
        com.unifacisa.tcc.domain.User user36 = new com.unifacisa.tcc.domain.User();
        java.lang.String str37 = user36.getCreatedBy();
        java.lang.String str38 = user36.getLangKey();
        java.time.Instant instant39 = user36.getCreatedDate();
        persistentAuditEvent32.setAuditEventDate(instant39);
        user30.setResetDate(instant39);
        java.util.Set<java.lang.String> strSet42 = null;
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM43 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='Authority{name='null'}', rememberMe=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}", "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}", "", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", false, "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='', level='null'}", "Aluno{id=-1, primeiroNome='null', segundoNome='LoginVM{username='null', rememberMe=false}', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", instant27, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant39, strSet42);
        java.util.Set<java.lang.String> strSet44 = managedUserVM43.getAuthorities();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNotNull(user25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(instant33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNull(strSet44);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.Long long10 = socialUserConnection0.getRank();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getImageURL();
        socialUserConnection0.setSecret("Authority{name='LoggerVM{name='', level='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet22 = professor21.getAlunos();
        java.lang.String str23 = professor21.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(alunoSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str23, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Professor professor37 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor38 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray49 = new com.unifacisa.tcc.domain.Aluno[] { aluno39, aluno40, aluno44, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet50 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet50, alunoArray49);
        professor38.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet50);
        java.lang.String str53 = professor38.toString();
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str62 = aluno61.getEmail();
        aluno61.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno56, aluno60, aluno61 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor54.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Professor professor69 = professor38.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Professor professor71 = professor38.diponibilidade((java.lang.Boolean) false);
        aluno36.setProfessor(professor71);
        java.lang.Long long73 = aluno36.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(alunoArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str53, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNull(long73);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = persistentAuditEvent4.getData();
        persistentAuditEvent4.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long8 = persistentAuditEvent4.getId();
        java.lang.Long long9 = persistentAuditEvent4.getId();
        java.time.Instant instant10 = persistentAuditEvent4.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap11 = null;
        persistentAuditEvent4.setData(strMap11);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant14 = persistentAuditEvent13.getAuditEventDate();
        java.lang.Long long15 = persistentAuditEvent13.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = persistentAuditEvent16.getData();
        persistentAuditEvent13.setData(strMap17);
        persistentAuditEvent4.setData(strMap17);
        persistentAuditEvent0.setData(strMap17);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 1L);
        boolean boolean24 = user23.getActivated();
        java.time.Instant instant25 = user23.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant25);
        java.lang.String str27 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = aluno0.email("");
        aluno0.setMatricula((java.lang.Long) (-1L));
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(pessoa38);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        java.lang.Long long3 = professor0.getId();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor21 = professor4.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.primeiroNome("");
        professor21.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        professor21.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Professor professor42 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str44 = professor43.getPrimeiroNome();
        java.lang.Boolean boolean45 = professor43.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa47 = professor43.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        aluno50.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        aluno55.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray59 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno50, aluno54, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet60 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet60, alunoArray59);
        professor48.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet60);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        java.lang.Boolean boolean65 = aluno63.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor66 = professor48.addAluno(aluno63);
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str68 = aluno67.getEmail();
        aluno67.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection71 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean72 = aluno67.equals((java.lang.Object) socialUserConnection71);
        socialUserConnection71.setRefreshToken("error.validation");
        socialUserConnection71.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean77 = aluno63.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor78 = professor43.removeAluno(aluno63);
        com.unifacisa.tcc.domain.Aluno aluno79 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str80 = aluno79.getEmail();
        aluno79.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor83 = aluno79.getProfessor();
        com.unifacisa.tcc.domain.Professor professor84 = professor78.addAluno(aluno79);
        java.lang.String str85 = professor78.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor86 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str87 = professor86.getPrimeiroNome();
        java.lang.String str88 = professor86.getSegundoNome();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet89 = professor86.getAlunos();
        professor78.setAlunos(alunoSet89);
        professor42.setAlunos(alunoSet89);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(professor42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(pessoa47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(alunoArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(professor83);
        org.junit.Assert.assertNotNull(professor84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str85, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(alunoSet89);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = persistentAuditEvent0.getData();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(instant6);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "LoggerVM{name='null', level='null'}", "LoginVM{username='null', rememberMe=null}", (java.lang.Long) 100L, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Authority{name='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "LoggerVM{name='null', level='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 1L);
        java.lang.String str12 = socialUserConnection11.getProviderId();
        socialUserConnection11.setImageURL("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        java.lang.Long long15 = socialUserConnection11.getId();
        java.lang.String str16 = socialUserConnection11.getProfileURL();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str12, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Authority{name='null'}" + "'", str16, "Authority{name='null'}");
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant17 = persistentAuditEvent16.getAuditEventDate();
        persistentAuditEvent16.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent20 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = persistentAuditEvent20.getData();
        persistentAuditEvent20.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long24 = persistentAuditEvent20.getId();
        java.lang.Long long25 = persistentAuditEvent20.getId();
        java.time.Instant instant26 = persistentAuditEvent20.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = null;
        persistentAuditEvent20.setData(strMap27);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent29 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant30 = persistentAuditEvent29.getAuditEventDate();
        java.lang.Long long31 = persistentAuditEvent29.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = persistentAuditEvent32.getData();
        persistentAuditEvent29.setData(strMap33);
        persistentAuditEvent20.setData(strMap33);
        persistentAuditEvent16.setData(strMap33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 1L);
        boolean boolean40 = user39.getActivated();
        java.time.Instant instant41 = user39.getLastModifiedDate();
        persistentAuditEvent16.setAuditEventDate(instant41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray45 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList46 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList46, userArray45);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList48 = userMapper44.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList46);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList54 = userMapper44.userDTOsToUsers(userDTOList53);
        com.unifacisa.tcc.domain.User user56 = userMapper44.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO(user56);
        java.time.Instant instant58 = userDTO57.getLastModifiedDate();
        java.time.Instant instant69 = null;
        java.time.Instant instant71 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet77 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet77, strArray76);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM79 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant69, "error.validation", instant71, (java.util.Set<java.lang.String>) strSet77);
        java.lang.String str80 = managedUserVM79.getFirstName();
        java.util.Set<java.lang.String> strSet81 = managedUserVM79.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant41, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant58, strSet81);
        user0.setCreatedDate(instant41);
        user0.setImageUrl("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.time.Instant instant86 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNull(instant30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(userArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(userDTOList48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userList54);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(instant86);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setAccessToken("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setRank((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.matricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str10 = professor9.getPrimeiroNome();
        professor9.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray24 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno15, aluno19, aluno20 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet25 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet25, alunoArray24);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        professor9.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        java.lang.String str29 = professor9.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno0.professor(professor9);
        java.lang.String str31 = professor9.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(alunoArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor0.primeiroNome("LoginVM{username='error.concurrencyFailure', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = pessoa19.numeroContato((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(pessoa21);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.Long long6 = user0.getId();
        user0.setLastName("");
        java.lang.String str9 = user0.getEmail();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor0.primeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        java.lang.Boolean boolean43 = aluno41.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor44 = professor26.addAluno(aluno41);
        aluno41.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor47 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str48 = professor47.getPrimeiroNome();
        java.lang.Boolean boolean49 = professor47.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa51 = professor47.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno41.professor(professor47);
        aluno52.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor55 = professor0.addAluno(aluno52);
        com.unifacisa.tcc.domain.Professor professor57 = professor55.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor59 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str62 = aluno61.getEmail();
        aluno61.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str67 = aluno66.getEmail();
        aluno66.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray70 = new com.unifacisa.tcc.domain.Aluno[] { aluno60, aluno61, aluno65, aluno66 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet71 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet71, alunoArray70);
        professor59.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet71);
        java.lang.String str74 = professor59.toString();
        com.unifacisa.tcc.domain.Professor professor76 = professor59.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor77 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno79 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str80 = aluno79.getEmail();
        aluno79.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno83 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno84 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str85 = aluno84.getEmail();
        aluno84.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray88 = new com.unifacisa.tcc.domain.Aluno[] { aluno78, aluno79, aluno83, aluno84 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet89 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet89, alunoArray88);
        professor77.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet89);
        com.unifacisa.tcc.domain.Professor professor92 = professor76.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet89);
        aluno58.setProfessor(professor92);
        com.unifacisa.tcc.domain.Professor professor95 = professor92.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa97 = professor92.numeroContato((java.lang.Long) (-1L));
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet98 = professor92.getAlunos();
        professor57.setAlunos(alunoSet98);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(pessoa51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(alunoArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str74, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(alunoArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(professor92);
        org.junit.Assert.assertNotNull(professor95);
        org.junit.Assert.assertNotNull(pessoa97);
        org.junit.Assert.assertNotNull(alunoSet98);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str9 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str9, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.lang.String str4 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str9 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno40 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        aluno40.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long43 = aluno40.getNumeroContato();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(aluno40);
        org.junit.Assert.assertNull(long43);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.toString();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user3.getAuthorities();
        user0.setAuthorities(authoritySet9);
        user0.setLangKey("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        java.time.Instant instant13 = user0.getLastModifiedDate();
        java.lang.String str14 = user0.getImageUrl();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str2, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet9);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet36 = userDTO33.getAuthorities();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(strSet36);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.Professor professor37 = aluno36.getProfessor();
        professor37.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno41, aluno42, aluno46, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        java.lang.Boolean boolean57 = aluno55.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor58 = professor40.addAluno(aluno55);
        aluno55.setNumeroContato((java.lang.Long) 0L);
        aluno55.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor63 = professor37.addAluno(aluno55);
        com.unifacisa.tcc.domain.Professor professor65 = professor37.diponibilidade((java.lang.Boolean) false);
        java.lang.Boolean boolean66 = professor65.isDiponibilidade();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertEquals("'" + boolean66 + "' != '" + false + "'", boolean66, false);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        com.unifacisa.tcc.domain.Professor professor33 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        java.lang.String str34 = professor33.getSegundoNome();
        professor33.setPrimeiroNome("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setProviderId("User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str16 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str10, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str1 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant2 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        java.lang.String str4 = user3.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant6 = persistentAuditEvent5.getAuditEventDate();
        java.lang.Long long7 = persistentAuditEvent5.getId();
        java.lang.Long long8 = persistentAuditEvent5.getId();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLangKey();
        java.time.Instant instant12 = user9.getCreatedDate();
        persistentAuditEvent5.setAuditEventDate(instant12);
        user3.setResetDate(instant12);
        java.time.Instant instant15 = user3.getResetDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 1L);
        boolean boolean19 = user18.getActivated();
        java.time.Instant instant20 = user18.getLastModifiedDate();
        user3.setLastModifiedDate(instant20);
        persistentAuditEvent0.setAuditEventDate(instant20);
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(instant20);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.lang.Long long6 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent7 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long9 = persistentAuditEvent8.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant11 = persistentAuditEvent10.getAuditEventDate();
        java.lang.Long long12 = persistentAuditEvent10.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = persistentAuditEvent13.getData();
        persistentAuditEvent10.setData(strMap14);
        persistentAuditEvent8.setData(strMap14);
        persistentAuditEvent7.setData(strMap14);
        persistentAuditEvent0.setData(strMap14);
        java.lang.String str19 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Professor professor16 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.Long long17 = professor0.getMatricula();
        professor0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.time.Instant instant7 = managedUserVM0.getCreatedDate();
        managedUserVM0.setId((java.lang.Long) (-1L));
        java.lang.String str10 = managedUserVM0.getPassword();
        java.lang.String str11 = managedUserVM0.getCreatedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        aluno75.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:05.135Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:05.135Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.validation", "hi!", (java.lang.Long) 100L, "hi!", "error.concurrencyFailure", "error.concurrencyFailure", "error.validation", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "", (java.lang.Long) 100L);
        java.lang.String str12 = socialUserConnection11.getProviderId();
        socialUserConnection11.setExpireTime((java.lang.Long) 1L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "error.validation" + "'", str12, "error.validation");
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.Boolean boolean3 = loginVM0.isRememberMe();
        java.lang.String str4 = loginVM0.toString();
        loginVM0.setUsername("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = loginVM0.getUsername();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str4, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getEmail();
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str38 = userDTO33.getImageUrl();
        java.time.Instant instant39 = userDTO33.getCreatedDate();
        java.lang.String str40 = userDTO33.getLastModifiedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getImageUrl();
        user0.setImageUrl("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setPassword("LoginVM{username='null', rememberMe=null}");
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user8);
        java.lang.String str10 = user8.getImageUrl();
        java.lang.String str11 = user8.getEmail();
        boolean boolean12 = user8.getActivated();
        com.unifacisa.tcc.domain.Authority authority13 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str14 = authority13.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor28 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray39 = new com.unifacisa.tcc.domain.Aluno[] { aluno29, aluno30, aluno34, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet40 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet40, alunoArray39);
        professor28.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        java.lang.String str43 = professor28.toString();
        com.unifacisa.tcc.domain.Professor professor45 = professor28.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet46 = professor28.getAlunos();
        com.unifacisa.tcc.domain.User user47 = new com.unifacisa.tcc.domain.User();
        java.lang.String str48 = user47.getCreatedBy();
        user47.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant51 = user47.getLastModifiedDate();
        boolean boolean52 = professor28.equals((java.lang.Object) instant51);
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        java.lang.String str55 = user54.getCreatedBy();
        java.lang.String str56 = user54.getLangKey();
        java.time.Instant instant57 = user54.getCreatedDate();
        java.time.Instant instant68 = null;
        java.time.Instant instant70 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM78 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant68, "error.validation", instant70, (java.util.Set<java.lang.String>) strSet76);
        java.lang.String str79 = managedUserVM78.getFirstName();
        java.lang.String str80 = managedUserVM78.getCreatedBy();
        java.util.Set<java.lang.String> strSet81 = managedUserVM78.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant51, "LoginVM{username='null', rememberMe=null}", instant57, strSet81);
        user17.setResetDate(instant51);
        boolean boolean84 = authority13.equals((java.lang.Object) instant51);
        user8.setCreatedDate(instant51);
        user0.setLastModifiedDate(instant51);
        user0.setEmail("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user0.setPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        user0.setLangKey("User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Authority{name='null'}" + "'", str14, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(alunoArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str43, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(alunoSet46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.String str2 = loginVM0.toString();
        java.lang.String str3 = loginVM0.toString();
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str2, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(boolean5);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor32 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno34 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno37, aluno41, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        java.lang.String str50 = professor35.toString();
        com.unifacisa.tcc.domain.Professor professor51 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str54 = aluno53.getEmail();
        aluno53.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray62 = new com.unifacisa.tcc.domain.Aluno[] { aluno52, aluno53, aluno57, aluno58 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet63 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet63, alunoArray62);
        professor51.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        com.unifacisa.tcc.domain.Professor professor66 = professor35.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        com.unifacisa.tcc.domain.Professor professor68 = professor35.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa70 = professor35.matricula((java.lang.Long) 1L);
        java.lang.String str71 = professor35.getPrimeiroNome();
        aluno34.setProfessor(professor35);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str50, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(alunoArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertNotNull(pessoa70);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str4 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        keyAndPasswordVM0.setNewPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.Boolean boolean1 = professor0.isDiponibilidade();
        java.lang.Long long2 = professor0.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor4 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.Long long5 = professor0.getId();
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = pessoa23.email("LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNotNull(pessoa25);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant4 = user0.getLastModifiedDate();
        user0.setLastName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setCreatedBy("error.concurrencyFailure");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet9 = user0.getAuthorities();
        java.lang.String str10 = user0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNotNull(authoritySet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str10, "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.String str8 = loginVM0.toString();
        java.lang.Boolean boolean9 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str8, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str6 = loginVM0.getUsername();
        java.lang.String str7 = loginVM0.getUsername();
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='-1', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str6, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        java.lang.String str5 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO38 = new com.unifacisa.tcc.service.dto.UserDTO(user37);
        java.lang.String str39 = user37.getImageUrl();
        user37.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user37.setActivated(true);
        boolean boolean44 = aluno0.equals((java.lang.Object) user37);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = aluno0.segundoNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pessoa46);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        java.lang.Boolean boolean26 = aluno24.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Professor professor28 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray39 = new com.unifacisa.tcc.domain.Aluno[] { aluno29, aluno30, aluno34, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet40 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet40, alunoArray39);
        professor28.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        java.lang.String str43 = professor28.toString();
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray55 = new com.unifacisa.tcc.domain.Aluno[] { aluno45, aluno46, aluno50, aluno51 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet56 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet56, alunoArray55);
        professor44.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Professor professor59 = professor28.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno24.professor(professor59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno24.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno66 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor67 = professor21.addAluno(aluno62);
        aluno62.setNumeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(alunoArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str43, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(alunoArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertNotNull(aluno66);
        org.junit.Assert.assertNotNull(professor67);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long8 = socialUserConnection0.getExpireTime();
        java.lang.String str9 = socialUserConnection0.toString();
        java.lang.Long long10 = socialUserConnection0.getId();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str14 = user11.getLastModifiedBy();
        java.lang.String str15 = user11.getLogin();
        user11.setFirstName("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        boolean boolean18 = socialUserConnection0.equals((java.lang.Object) "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        java.lang.Boolean boolean6 = loginVM0.isRememberMe();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.String str8 = loginVM0.getPassword();
        java.lang.String str9 = loginVM0.toString();
        java.lang.String str10 = loginVM0.toString();
        java.lang.String str11 = loginVM0.toString();
        java.lang.Boolean boolean12 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str9, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str10, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str11, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        java.lang.String str3 = authority0.getName();
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        java.lang.String str21 = professor6.toString();
        com.unifacisa.tcc.domain.Professor professor23 = professor6.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor39 = professor23.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray51 = new com.unifacisa.tcc.domain.Aluno[] { aluno41, aluno42, aluno46, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet52 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet52, alunoArray51);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet52);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        java.lang.Boolean boolean57 = aluno55.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor58 = professor40.addAluno(aluno55);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = professor58.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor61 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str69 = aluno68.getEmail();
        aluno68.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno62, aluno63, aluno67, aluno68 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        professor61.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str77 = aluno76.getEmail();
        java.lang.Boolean boolean78 = aluno76.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor79 = professor61.addAluno(aluno76);
        com.unifacisa.tcc.domain.Professor professor80 = aluno76.getProfessor();
        com.unifacisa.tcc.domain.Professor professor81 = aluno76.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str83 = aluno82.getEmail();
        aluno82.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor86 = professor81.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor87 = professor58.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor88 = professor23.addAluno(aluno82);
        boolean boolean89 = authority0.equals((java.lang.Object) aluno82);
        authority0.setName("Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}");
        authority0.setName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str21, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(alunoArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(professor58);
        org.junit.Assert.assertNotNull(pessoa60);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant34, "error.validation", instant36, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.dto.UserDTO userDTO46 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant9, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant11, (java.util.Set<java.lang.String>) strSet42);
        userDTO46.setId((java.lang.Long) 100L);
        java.lang.String str49 = userDTO46.getLangKey();
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str49, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        user5.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant8 = user5.getLastModifiedDate();
        user0.setLastModifiedDate(instant8);
        java.lang.String str10 = user0.getLogin();
        user0.setLastName("");
        user0.setLastModifiedBy("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str15 = user0.getPassword();
        java.time.Instant instant16 = user0.getCreatedDate();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(instant16);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        java.lang.String str4 = user0.getEmail();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        java.lang.String str7 = user5.getLastModifiedBy();
        user5.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str10 = user5.toString();
        java.time.Instant instant11 = user5.getCreatedDate();
        java.lang.String str12 = user5.getActivationKey();
        java.time.Instant instant13 = user5.getLastModifiedDate();
        user0.setCreatedDate(instant13);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet15 = user0.getAuthorities();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str10, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNotNull(authoritySet15);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getAuditEventType();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getActivationKey();
        java.time.Instant instant9 = user0.getResetDate();
        user0.setLangKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='error.validation', expireTime=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray13 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList14 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList14, userArray13);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList16 = userMapper12.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList14);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper12.userDTOsToUsers(userDTOList21);
        com.unifacisa.tcc.domain.User user24 = userMapper12.userFromId((java.lang.Long) 1L);
        user24.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str27 = user24.getFirstName();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent28 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant29 = persistentAuditEvent28.getAuditEventDate();
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO31 = new com.unifacisa.tcc.service.dto.UserDTO(user30);
        java.lang.String str32 = user30.toString();
        java.time.Instant instant33 = user30.getCreatedDate();
        persistentAuditEvent28.setAuditEventDate(instant33);
        user24.setLastModifiedDate(instant33);
        user0.setCreatedDate(instant33);
        user0.setPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(userDTOList16);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(instant29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str32, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant33);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user4 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) (-1L));
        user6.setLangKey("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str9 = user6.getLastModifiedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setUsername("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant6 = user3.getLastModifiedDate();
        user0.setCreatedDate(instant6);
        java.lang.String str8 = user0.getEmail();
        user0.setEmail("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray24 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno15, aluno19, aluno20 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet25 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet25, alunoArray24);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        java.lang.String str28 = professor13.toString();
        com.unifacisa.tcc.domain.Professor professor30 = professor13.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet31 = professor13.getAlunos();
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        java.lang.String str33 = user32.getCreatedBy();
        user32.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant36 = user32.getLastModifiedDate();
        boolean boolean37 = professor13.equals((java.lang.Object) instant36);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        java.lang.String str41 = user39.getLangKey();
        java.time.Instant instant42 = user39.getCreatedDate();
        java.time.Instant instant53 = null;
        java.time.Instant instant55 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant53, "error.validation", instant55, (java.util.Set<java.lang.String>) strSet61);
        java.lang.String str64 = managedUserVM63.getFirstName();
        java.lang.String str65 = managedUserVM63.getCreatedBy();
        java.util.Set<java.lang.String> strSet66 = managedUserVM63.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM67 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant36, "LoginVM{username='null', rememberMe=null}", instant42, strSet66);
        user2.setResetDate(instant36);
        user2.setLastName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        com.unifacisa.tcc.domain.User user71 = new com.unifacisa.tcc.domain.User();
        java.lang.String str72 = user71.getCreatedBy();
        user71.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user75 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO76 = new com.unifacisa.tcc.service.dto.UserDTO(user75);
        java.lang.String str77 = user75.getImageUrl();
        java.lang.String str78 = user75.getLangKey();
        java.lang.String str79 = user75.getLogin();
        com.unifacisa.tcc.domain.User user80 = new com.unifacisa.tcc.domain.User();
        user80.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant83 = user80.getLastModifiedDate();
        user75.setLastModifiedDate(instant83);
        user71.setLastModifiedDate(instant83);
        user2.setResetDate(instant83);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent87 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant88 = persistentAuditEvent87.getAuditEventDate();
        java.lang.Long long89 = persistentAuditEvent87.getId();
        java.lang.Long long90 = persistentAuditEvent87.getId();
        com.unifacisa.tcc.domain.User user91 = new com.unifacisa.tcc.domain.User();
        java.lang.String str92 = user91.getCreatedBy();
        java.lang.String str93 = user91.getLangKey();
        java.time.Instant instant94 = user91.getCreatedDate();
        persistentAuditEvent87.setAuditEventDate(instant94);
        java.time.Instant instant96 = persistentAuditEvent87.getAuditEventDate();
        user2.setResetDate(instant96);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(alunoArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str28, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(alunoSet31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(instant42);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(instant83);
        org.junit.Assert.assertNull(instant88);
        org.junit.Assert.assertNull(long89);
        org.junit.Assert.assertNull(long90);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(instant94);
        org.junit.Assert.assertNotNull(instant96);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant2 = user0.getResetDate();
        java.lang.String str3 = user0.getImageUrl();
        user0.setImageUrl("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setPassword("LoginVM{username='null', rememberMe=null}");
        user0.setActivationKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant10 = user0.getLastModifiedDate();
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant10);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        professor0.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = aluno20.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno20);
        java.lang.String str24 = aluno20.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='Authority{name='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        java.lang.String str9 = user8.getCreatedBy();
        java.lang.String str10 = user8.getLastModifiedBy();
        user8.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str13 = user8.toString();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        java.lang.String str16 = user14.getLastModifiedBy();
        user14.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        java.lang.String str20 = user19.getCreatedBy();
        user19.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO23 = new com.unifacisa.tcc.service.dto.UserDTO(user19);
        java.time.Instant instant24 = userDTO23.getLastModifiedDate();
        user14.setCreatedDate(instant24);
        user8.setResetDate(instant24);
        java.lang.String str27 = user8.getFirstName();
        java.lang.String str28 = user8.getLastName();
        java.time.Instant instant29 = user8.getLastModifiedDate();
        user0.setCreatedDate(instant29);
        java.lang.String str31 = user0.getCreatedBy();
        java.lang.String str32 = user0.getLastModifiedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str13, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(instant29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getRefreshToken();
        java.lang.Long long7 = socialUserConnection4.getExpireTime();
        java.lang.String str8 = socialUserConnection4.getAccessToken();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        keyAndPasswordVM0.setNewPassword("error.concurrencyFailure");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        // The following exception was thrown during execution in test generation
        try {
            com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        user0.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant41 = user0.getResetDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(instant41);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = aluno20.numeroContato((java.lang.Long) 100L);
        pessoa37.setPrimeiroNome("LoggerVM{name='null', level='null'}");
        pessoa37.setId((java.lang.Long) 100L);
        pessoa37.setSegundoNome("Professor{id=null, primeiroNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(pessoa37);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", (java.lang.Long) 0L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "hi!", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 10L);
        java.lang.String str12 = socialUserConnection11.getSecret();
        java.lang.String str13 = socialUserConnection11.getProviderId();
        socialUserConnection11.setDisplayName("");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str13, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}", "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) 10L, "LoggerVM{name='error.concurrencyFailure', level='error.validation'}", "Authority{name='Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "LoggerVM{name='null', level='User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 0L);
        socialUserConnection11.setProviderId("");
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getEmail();
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str38 = userDTO33.getLangKey();
        java.lang.String str39 = userDTO33.getImageUrl();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.validation" + "'", str38, "error.validation");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setUsername("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setUsername("LoginVM{username='', rememberMe=null}");
        java.lang.Boolean boolean13 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "LoggerVM{name='null', level='null'}", "LoginVM{username='null', rememberMe=null}", (java.lang.Long) 100L, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Authority{name='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "LoggerVM{name='null', level='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 1L);
        java.lang.String str12 = socialUserConnection11.getProviderId();
        java.lang.String str13 = socialUserConnection11.getAccessToken();
        socialUserConnection11.setId((java.lang.Long) 1L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str12, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str13, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user3);
        java.lang.String str5 = user3.getImageUrl();
        boolean boolean7 = user3.equals((java.lang.Object) (byte) -1);
        java.lang.String str8 = user3.getLastName();
        java.lang.String str9 = user3.getFirstName();
        java.time.Instant instant10 = user3.getResetDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        java.lang.String str13 = user12.getCreatedBy();
        java.lang.String str14 = user12.getLastModifiedBy();
        java.lang.String str15 = user12.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO16 = userMapper0.userToUserDTO(user12);
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user17);
        java.time.Instant instant19 = user17.getResetDate();
        java.lang.String str20 = user17.getResetKey();
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str34 = user31.getLastName();
        java.time.Instant instant35 = user31.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str40 = user37.getLastName();
        java.time.Instant instant41 = user37.getLastModifiedDate();
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.service.dto.UserDTO userDTO75 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant51, "", instant53, (java.util.Set<java.lang.String>) strSet72);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant35, "", instant41, (java.util.Set<java.lang.String>) strSet72);
        user17.setResetDate(instant35);
        user17.setEmail("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str80 = user17.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user17);
        java.lang.String str82 = user17.getLogin();
        user17.setActivationKey("");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(userDTO11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(userDTO16);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str34, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str40, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("error.concurrencyFailure");
        java.lang.String str9 = loggerVM0.getLevel();
        java.lang.String str10 = loggerVM0.getName();
        loggerVM0.setLevel("LoginVM{username='null', rememberMe=false}");
        java.lang.Class<?> wildcardClass13 = loggerVM0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.concurrencyFailure" + "'", str10, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.lang.String str1 = userDTO0.getLogin();
        java.lang.String str2 = userDTO0.getLastModifiedBy();
        java.lang.String str3 = userDTO0.getLastModifiedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent4.getPrincipal();
        persistentAuditEvent4.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLangKey();
        java.time.Instant instant13 = user10.getCreatedDate();
        persistentAuditEvent9.setAuditEventDate(instant13);
        persistentAuditEvent4.setAuditEventDate(instant13);
        user0.setLastModifiedDate(instant13);
        java.lang.String str17 = user0.getLangKey();
        java.lang.String str18 = user0.getEmail();
        user0.setResetKey("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        aluno15.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str22 = professor21.getPrimeiroNome();
        java.lang.Boolean boolean23 = professor21.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor21.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno15.professor(professor21);
        aluno15.setEmail("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor30 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray41 = new com.unifacisa.tcc.domain.Aluno[] { aluno31, aluno32, aluno36, aluno37 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet42 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet42, alunoArray41);
        professor30.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet42);
        java.lang.String str45 = professor30.toString();
        com.unifacisa.tcc.domain.Professor professor47 = professor30.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str51 = aluno50.getEmail();
        aluno50.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str56 = aluno55.getEmail();
        aluno55.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray59 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno50, aluno54, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet60 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet60, alunoArray59);
        professor48.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet60);
        com.unifacisa.tcc.domain.Professor professor63 = professor47.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet60);
        aluno29.setProfessor(professor63);
        com.unifacisa.tcc.domain.Professor professor66 = professor63.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa68 = professor63.numeroContato((java.lang.Long) (-1L));
        aluno15.setProfessor(professor63);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa71 = aluno15.numeroContato((java.lang.Long) 1L);
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(alunoArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str45, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(alunoArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(professor63);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(pessoa68);
        org.junit.Assert.assertNotNull(pessoa71);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        java.util.List<com.unifacisa.tcc.domain.User> userList25 = userMapper3.userDTOsToUsers(userDTOList23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper0.usersToUserDTOs(userList25);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper32 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray33 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList34 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList34, userArray33);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList36 = userMapper32.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper27.userDTOsToUsers(userDTOList36);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray39 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList40 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList40, userArray39);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList42 = userMapper38.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray44 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList45 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList45, userArray44);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList47 = userMapper43.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        java.util.List<com.unifacisa.tcc.domain.User> userList48 = userMapper38.userDTOsToUsers(userDTOList47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray50 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList51 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList51, userArray50);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList53 = userMapper49.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList51);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray55 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList56 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList56, userArray55);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList58 = userMapper54.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList56);
        java.util.List<com.unifacisa.tcc.domain.User> userList59 = userMapper49.userDTOsToUsers(userDTOList58);
        java.util.List<com.unifacisa.tcc.domain.User> userList60 = userMapper38.userDTOsToUsers(userDTOList58);
        java.util.List<com.unifacisa.tcc.domain.User> userList61 = userMapper27.userDTOsToUsers(userDTOList58);
        java.util.List<com.unifacisa.tcc.domain.User> userList62 = userMapper0.userDTOsToUsers(userDTOList58);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userList25);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(userDTOList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userDTOList42);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userDTOList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(userArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(userDTOList53);
        org.junit.Assert.assertNotNull(userArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTOList58);
        org.junit.Assert.assertNotNull(userList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertNotNull(userList62);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user7);
        java.lang.String str9 = user7.getImageUrl();
        boolean boolean11 = user7.equals((java.lang.Object) (byte) -1);
        java.lang.String str12 = user7.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = user7.getAuthorities();
        user0.setAuthorities(authoritySet13);
        java.lang.String str15 = user0.getLangKey();
        user0.setFirstName("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(authoritySet13);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str44 = userDTO43.getCreatedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}", "LoginVM{username='error.concurrencyFailure', rememberMe=false}", "LoginVM{username='LoggerVM{name='null', level='error.validation'}', rememberMe=null}");
        java.lang.String str4 = fieldErrorVM3.getField();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=false}" + "'", str4, "LoginVM{username='error.concurrencyFailure', rememberMe=false}");
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        aluno38.setNumeroContato((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderId("LoggerVM{name='null', level='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}");
        socialUserConnection0.setRefreshToken("");
        socialUserConnection0.setExpireTime((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long10 = persistentAuditEvent9.getId();
        persistentAuditEvent9.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long13 = persistentAuditEvent9.getId();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        user14.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant18 = user14.getLastModifiedDate();
        persistentAuditEvent9.setAuditEventDate(instant18);
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = new com.unifacisa.tcc.service.dto.UserDTO(user21);
        java.lang.String str23 = user21.toString();
        java.time.Instant instant24 = user21.getLastModifiedDate();
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant35, "error.validation", instant37, (java.util.Set<java.lang.String>) strSet43);
        java.lang.String str46 = managedUserVM45.getFirstName();
        java.lang.String str47 = managedUserVM45.getCreatedBy();
        java.util.Set<java.lang.String> strSet48 = managedUserVM45.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO49 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "LoggerVM{name='null', level='error.validation'}", "", "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", false, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "Authority{name=''}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", instant18, "error.concurrencyFailure", instant24, strSet48);
        java.lang.String str50 = userDTO49.getFirstName();
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str23, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor21 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.String str37 = professor22.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor22.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet40 = professor22.getAlunos();
        professor21.setAlunos(alunoSet40);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor21.primeiroNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Aluno aluno44 = aluno0.professor(professor21);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = aluno0.numeroContato((java.lang.Long) 10L);
        java.lang.String str47 = aluno0.getSegundoNome();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str37, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(alunoSet40);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(aluno44);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str6 = loggerVM5.getName();
        loggerVM5.setLevel("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str9 = loggerVM5.toString();
        java.lang.String str10 = loggerVM5.getName();
        java.lang.String str11 = loggerVM5.getLevel();
        // The following exception was thrown during execution in test generation
        try {
            logsResource0.changeLevel(loggerVM5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: name argument cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}" + "'", str9, "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str11, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        java.lang.String str76 = aluno38.toString();
        com.unifacisa.tcc.domain.Professor professor77 = aluno38.getProfessor();
        java.lang.String str78 = aluno38.getSegundoNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str76, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = null;
        persistentAuditEvent0.setData(strMap4);
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        java.lang.String str31 = professor16.toString();
        com.unifacisa.tcc.domain.Professor professor33 = professor16.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet34 = professor16.getAlunos();
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        java.lang.String str36 = user35.getCreatedBy();
        user35.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant39 = user35.getLastModifiedDate();
        boolean boolean40 = professor16.equals((java.lang.Object) instant39);
        com.unifacisa.tcc.domain.User user42 = new com.unifacisa.tcc.domain.User();
        java.lang.String str43 = user42.getCreatedBy();
        java.lang.String str44 = user42.getLangKey();
        java.time.Instant instant45 = user42.getCreatedDate();
        java.time.Instant instant56 = null;
        java.time.Instant instant58 = null;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet64 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet64, strArray63);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM66 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant56, "error.validation", instant58, (java.util.Set<java.lang.String>) strSet64);
        java.lang.String str67 = managedUserVM66.getFirstName();
        java.lang.String str68 = managedUserVM66.getCreatedBy();
        java.util.Set<java.lang.String> strSet69 = managedUserVM66.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant39, "LoginVM{username='null', rememberMe=null}", instant45, strSet69);
        persistentAuditEvent0.setAuditEventDate(instant45);
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str31, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor33);
        org.junit.Assert.assertNotNull(alunoSet34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNotNull(strSet69);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        java.lang.Boolean boolean31 = aluno15.isHabilitadoTcc();
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        aluno15.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor36 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Professor professor37 = aluno15.getProfessor();
        professor37.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(professor37);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str8 = user0.getLastName();
        user0.setResetKey("error.validation");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        java.lang.String str6 = socialUserConnection4.getSecret();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        user5.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = user5.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant9);
        java.lang.Long long11 = persistentAuditEvent0.getId();
        java.time.Instant instant12 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNotNull(instant12);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        aluno15.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray24 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno15, aluno19, aluno20 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet25 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet25, alunoArray24);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet25);
        java.lang.String str28 = professor13.toString();
        com.unifacisa.tcc.domain.Professor professor30 = professor13.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet31 = professor13.getAlunos();
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        java.lang.String str33 = user32.getCreatedBy();
        user32.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant36 = user32.getLastModifiedDate();
        boolean boolean37 = professor13.equals((java.lang.Object) instant36);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        java.lang.String str41 = user39.getLangKey();
        java.time.Instant instant42 = user39.getCreatedDate();
        java.time.Instant instant53 = null;
        java.time.Instant instant55 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant53, "error.validation", instant55, (java.util.Set<java.lang.String>) strSet61);
        java.lang.String str64 = managedUserVM63.getFirstName();
        java.lang.String str65 = managedUserVM63.getCreatedBy();
        java.util.Set<java.lang.String> strSet66 = managedUserVM63.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM67 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant36, "LoginVM{username='null', rememberMe=null}", instant42, strSet66);
        user2.setResetDate(instant36);
        user2.setLastName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str71 = user2.getEmail();
        java.lang.String str72 = user2.getLastName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(alunoArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str28, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(alunoSet31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(instant42);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str72, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.domain.User> userList10 = userMapper0.userDTOsToUsers(userDTOList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.domain.User> userList21 = userMapper11.userDTOsToUsers(userDTOList20);
        java.util.List<com.unifacisa.tcc.domain.User> userList22 = userMapper0.userDTOsToUsers(userDTOList20);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.time.Instant instant57 = null;
        java.time.Instant instant59 = null;
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet65 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet65, strArray64);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM67 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant57, "error.validation", instant59, (java.util.Set<java.lang.String>) strSet65);
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant44, "", instant46, (java.util.Set<java.lang.String>) strSet65);
        com.unifacisa.tcc.service.dto.UserDTO userDTO69 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant32, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant34, (java.util.Set<java.lang.String>) strSet65);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet70 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet65);
        com.unifacisa.tcc.domain.User user72 = userMapper0.userFromId((java.lang.Long) 1L);
        java.lang.String str73 = user72.getLastName();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userList10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userList21);
        org.junit.Assert.assertNotNull(userList22);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(authoritySet70);
        org.junit.Assert.assertNotNull(user72);
        org.junit.Assert.assertNull(str73);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 0L, "LoginVM{username='null', rememberMe=null}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "", "LoggerVM{name='null', level='null'}", (java.lang.Long) 0L);
        socialUserConnection11.setUserId("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str14 = socialUserConnection11.getAccessToken();
        socialUserConnection11.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str14, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.getLogin();
        java.lang.Long long4 = managedUserVM0.getId();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        java.lang.String str7 = managedUserVM0.toString();
        java.time.Instant instant8 = managedUserVM0.getLastModifiedDate();
        java.lang.String str9 = managedUserVM0.getLastName();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.time.Instant instant35 = userDTO33.getLastModifiedDate();
        java.lang.String str36 = userDTO33.getImageUrl();
        java.lang.String str37 = userDTO33.getImageUrl();
        userDTO33.setLogin("SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        java.lang.String str4 = user0.getLastName();
        user0.setActivated(false);
        java.lang.String str7 = user0.getCreatedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setId((java.lang.Long) 1L);
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str8 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Professor professor16 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.Long long17 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str19 = professor18.getPrimeiroNome();
        java.lang.Boolean boolean20 = professor18.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno25, aluno29, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        java.lang.Boolean boolean40 = aluno38.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor41 = professor23.addAluno(aluno38);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str43 = aluno42.getEmail();
        aluno42.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection46 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean47 = aluno42.equals((java.lang.Object) socialUserConnection46);
        socialUserConnection46.setRefreshToken("error.validation");
        socialUserConnection46.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean52 = aluno38.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor53 = professor18.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str55 = professor54.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor57 = professor54.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa59 = professor57.primeiroNome("error.concurrencyFailure");
        aluno38.setProfessor(professor57);
        com.unifacisa.tcc.domain.Professor professor61 = professor0.addAluno(aluno38);
        java.lang.String str62 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor64 = professor0.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNotNull(pessoa59);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str62, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(professor64);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str6, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray10 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList11 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList11, userArray10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper9.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList11);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.time.Instant instant48 = null;
        java.time.Instant instant50 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet56 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet56, strArray55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM58 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant48, "error.validation", instant50, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant35, "", instant37, (java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant23, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant25, (java.util.Set<java.lang.String>) strSet56);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet61 = userMapper9.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet56);
        com.unifacisa.tcc.domain.User user63 = userMapper9.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper64 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray65 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList66 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList66, userArray65);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList68 = userMapper64.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList66);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray70 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList71 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList71, userArray70);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList73 = userMapper69.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.domain.User> userList74 = userMapper64.userDTOsToUsers(userDTOList73);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList75 = userMapper9.usersToUserDTOs(userList74);
        java.util.List<com.unifacisa.tcc.domain.User> userList76 = userMapper0.userDTOsToUsers(userDTOList75);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(authoritySet61);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNotNull(userArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(userDTOList68);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(userDTOList73);
        org.junit.Assert.assertNotNull(userList74);
        org.junit.Assert.assertNotNull(userDTOList75);
        org.junit.Assert.assertNotNull(userList76);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        persistentAuditEvent0.setAuditEventType("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant7);
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setAuditEventType("User{login='null', firstName='null', lastName='null', email='null', imageUrl='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        java.lang.String str1 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str2 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str8 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str8, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.getPassword();
        java.time.Instant instant3 = managedUserVM0.getCreatedDate();
        java.lang.String str4 = managedUserVM0.getImageUrl();
        java.time.Instant instant5 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant5);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        java.time.Instant instant2 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(long3);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.Class<?> wildcardClass6 = loginVM0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection4.setRank((java.lang.Long) 10L);
        java.lang.Long long12 = socialUserConnection4.getId();
        java.lang.Long long13 = socialUserConnection4.getExpireTime();
        java.lang.String str14 = socialUserConnection4.getSecret();
        socialUserConnection4.setSecret("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}");
        socialUserConnection4.setProviderUserId("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.lang.String str2 = managedUserVM0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor2 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno4 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno6 = aluno4.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean7 = aluno6.isHabilitadoTcc();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str1, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor2);
        org.junit.Assert.assertNotNull(aluno4);
        org.junit.Assert.assertNotNull(aluno6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.lang.String str7 = user0.getLangKey();
        java.time.Instant instant8 = user0.getResetDate();
        java.lang.String str9 = user0.toString();
        user0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.getName();
        java.lang.String str6 = loggerVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.time.Instant instant7 = managedUserVM0.getCreatedDate();
        java.lang.String str8 = managedUserVM0.toString();
        java.lang.String str9 = managedUserVM0.getPassword();
        java.time.Instant instant10 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant10);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno38.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa79 = aluno77.primeiroNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor80 = aluno77.getProfessor();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(pessoa79);
        org.junit.Assert.assertNotNull(professor80);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setPassword("Authority{name='null'}");
        loginVM0.setUsername("Authority{name='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("");
        loginVM0.setUsername("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Authority{name='null'}', rememberMe=null}" + "'", str6, "LoginVM{username='Authority{name='null'}', rememberMe=null}");
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.lang.Long long11 = persistentAuditEvent9.getId();
        persistentAuditEvent9.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        java.lang.String str15 = user14.getCreatedBy();
        user14.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user14);
        java.time.Instant instant19 = userDTO18.getLastModifiedDate();
        persistentAuditEvent9.setAuditEventDate(instant19);
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO23 = new com.unifacisa.tcc.service.dto.UserDTO(user22);
        java.lang.String str24 = user22.getImageUrl();
        java.lang.String str25 = user22.getLangKey();
        java.lang.String str26 = user22.getLogin();
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        user27.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant30 = user27.getLastModifiedDate();
        user22.setLastModifiedDate(instant30);
        java.lang.String str32 = user22.getLastModifiedBy();
        java.time.Instant instant33 = user22.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent43 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long44 = persistentAuditEvent43.getId();
        persistentAuditEvent43.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long47 = persistentAuditEvent43.getId();
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        java.lang.String str49 = user48.getCreatedBy();
        user48.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant52 = user48.getLastModifiedDate();
        persistentAuditEvent43.setAuditEventDate(instant52);
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO(user55);
        java.lang.String str57 = user55.toString();
        java.time.Instant instant58 = user55.getLastModifiedDate();
        java.time.Instant instant69 = null;
        java.time.Instant instant71 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet77 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet77, strArray76);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM79 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant69, "error.validation", instant71, (java.util.Set<java.lang.String>) strSet77);
        java.lang.String str80 = managedUserVM79.getFirstName();
        java.lang.String str81 = managedUserVM79.getCreatedBy();
        java.util.Set<java.lang.String> strSet82 = managedUserVM79.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "LoggerVM{name='null', level='error.validation'}", "", "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", false, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "Authority{name=''}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", instant52, "error.concurrencyFailure", instant58, strSet82);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "", "LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", instant19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", instant33, strSet82);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str57, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
        org.junit.Assert.assertNotNull(strSet82);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.time.Instant instant41 = null;
        java.time.Instant instant43 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant55 = null;
        java.time.Instant instant66 = null;
        java.time.Instant instant68 = null;
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet74 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet74, strArray73);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant66, "error.validation", instant68, (java.util.Set<java.lang.String>) strSet74);
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant53, "", instant55, (java.util.Set<java.lang.String>) strSet74);
        com.unifacisa.tcc.service.dto.UserDTO userDTO78 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant41, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant43, (java.util.Set<java.lang.String>) strSet74);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet79 = userMapper27.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet74);
        com.unifacisa.tcc.domain.User user81 = userMapper27.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper82 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray83 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList84 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList84, userArray83);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList86 = userMapper82.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList84);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper87 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray88 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList89 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList89, userArray88);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList91 = userMapper87.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList89);
        java.util.List<com.unifacisa.tcc.domain.User> userList92 = userMapper82.userDTOsToUsers(userDTOList91);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList93 = userMapper27.usersToUserDTOs(userList92);
        java.util.List<com.unifacisa.tcc.domain.User> userList94 = userMapper0.userDTOsToUsers(userDTOList93);
        com.unifacisa.tcc.domain.User user96 = userMapper0.userFromId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(authoritySet79);
        org.junit.Assert.assertNotNull(user81);
        org.junit.Assert.assertNotNull(userArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(userDTOList86);
        org.junit.Assert.assertNotNull(userArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(userDTOList91);
        org.junit.Assert.assertNotNull(userList92);
        org.junit.Assert.assertNotNull(userDTOList93);
        org.junit.Assert.assertNotNull(userList94);
        org.junit.Assert.assertNotNull(user96);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user9);
        java.time.Instant instant11 = userDTO10.getLastModifiedDate();
        user0.setLastModifiedDate(instant11);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet13 = user0.getAuthorities();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(authoritySet13);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant14, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant16, (java.util.Set<java.lang.String>) strSet47);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet52 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.domain.User user54 = userMapper0.userFromId((java.lang.Long) 100L);
        user54.setResetKey("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(authoritySet52);
        org.junit.Assert.assertNotNull(user54);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = aluno0.email("");
        java.lang.String str39 = pessoa38.getSegundoNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = pessoa38.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(pessoa38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor31.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa35 = pessoa33.email("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str36 = pessoa35.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(pessoa35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str36, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str19 = user16.getLastName();
        java.time.Instant instant20 = user16.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.getCreatedBy();
        java.lang.String str24 = user22.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        user25.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant28 = user25.getLastModifiedDate();
        user22.setCreatedDate(instant28);
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.time.Instant instant52 = null;
        java.time.Instant instant54 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM62 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant52, "error.validation", instant54, (java.util.Set<java.lang.String>) strSet60);
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant39, "", instant41, (java.util.Set<java.lang.String>) strSet60);
        com.unifacisa.tcc.service.dto.UserDTO userDTO64 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant20, "", instant28, (java.util.Set<java.lang.String>) strSet60);
        user0.setCreatedDate(instant20);
        user0.setId((java.lang.Long) 0L);
        java.lang.String str68 = user0.getLangKey();
        com.unifacisa.tcc.domain.User user69 = new com.unifacisa.tcc.domain.User();
        java.lang.String str70 = user69.getCreatedBy();
        user69.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO73 = new com.unifacisa.tcc.service.dto.UserDTO(user69);
        java.lang.String str74 = userDTO73.getImageUrl();
        com.unifacisa.tcc.domain.User user75 = new com.unifacisa.tcc.domain.User();
        java.lang.String str76 = user75.getCreatedBy();
        java.lang.String str77 = user75.getLastModifiedBy();
        user75.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user80 = new com.unifacisa.tcc.domain.User();
        java.lang.String str81 = user80.getCreatedBy();
        user80.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO(user80);
        java.time.Instant instant85 = userDTO84.getLastModifiedDate();
        user75.setCreatedDate(instant85);
        userDTO73.setLastModifiedDate(instant85);
        user0.setCreatedDate(instant85);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str19, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(instant85);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        user0.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant5 = userDTO4.getLastModifiedDate();
        userDTO4.setLogin("LoginVM{username='null', rememberMe=false}");
        java.util.Set<java.lang.String> strSet8 = userDTO4.getAuthorities();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("error.concurrencyFailure");
        java.lang.String str9 = loggerVM0.getLevel();
        java.lang.String str10 = loggerVM0.getName();
        loggerVM0.setName("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.Class<?> wildcardClass13 = loggerVM0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "error.concurrencyFailure" + "'", str10, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor17.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str25 = professor24.getPrimeiroNome();
        java.lang.Boolean boolean26 = professor24.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno30, aluno31, aluno35, aluno36 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        professor29.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str45 = aluno44.getEmail();
        java.lang.Boolean boolean46 = aluno44.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor47 = professor29.addAluno(aluno44);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str49 = aluno48.getEmail();
        aluno48.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection52 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean53 = aluno48.equals((java.lang.Object) socialUserConnection52);
        socialUserConnection52.setRefreshToken("error.validation");
        socialUserConnection52.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean58 = aluno44.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor59 = professor24.removeAluno(aluno44);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str61 = aluno60.getEmail();
        aluno60.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor64 = aluno60.getProfessor();
        com.unifacisa.tcc.domain.Professor professor65 = professor59.addAluno(aluno60);
        java.lang.String str66 = professor59.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor67 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str68 = professor67.getPrimeiroNome();
        java.lang.String str69 = professor67.getSegundoNome();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet70 = professor67.getAlunos();
        professor59.setAlunos(alunoSet70);
        com.unifacisa.tcc.domain.Professor professor72 = professor17.alunos(alunoSet70);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(professor64);
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str66, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(alunoSet70);
        org.junit.Assert.assertNotNull(professor72);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long10 = socialUserConnection4.getRank();
        socialUserConnection4.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        socialUserConnection4.setDisplayName("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}");
        socialUserConnection4.setProviderId("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getResetKey();
        user0.setLangKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str9, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastName();
        com.unifacisa.tcc.service.dto.UserDTO userDTO4 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant5 = user0.getCreatedDate();
        java.lang.String str6 = user0.getLastName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str3, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        userDTO33.setId((java.lang.Long) 0L);
        java.lang.String str39 = userDTO33.getCreatedBy();
        java.time.Instant instant40 = userDTO33.getLastModifiedDate();
        boolean boolean41 = userDTO33.isActivated();
        java.lang.String str42 = userDTO33.getImageUrl();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.concurrencyFailure" + "'", str39, "error.concurrencyFailure");
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.getCreatedBy();
        user5.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user5);
        java.time.Instant instant10 = userDTO9.getLastModifiedDate();
        user0.setCreatedDate(instant10);
        user0.setCreatedBy("SocialUserConnection{id=null, userId=null, providerId='', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant10);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        user0.setLastModifiedBy("");
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.time.Instant instant8 = user0.getCreatedDate();
        java.lang.String str9 = user0.getPassword();
        user0.setLastModifiedBy("LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str5 = user0.getImageUrl();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        java.lang.String str8 = user7.getCreatedBy();
        java.lang.String str9 = user7.getLastModifiedBy();
        user7.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str12 = user7.toString();
        java.time.Instant instant13 = user7.getCreatedDate();
        user0.setResetDate(instant13);
        user0.setPassword("");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user0.getAuthorities();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str12, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNotNull(authoritySet17);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        professor0.setDiponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = aluno20.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor23 = professor0.addAluno(aluno20);
        java.lang.String str24 = professor0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.getEmail();
        user0.setLastModifiedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent17 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long18 = persistentAuditEvent17.getId();
        persistentAuditEvent17.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long21 = persistentAuditEvent17.getId();
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        java.lang.String str23 = user22.getCreatedBy();
        user22.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant26 = user22.getLastModifiedDate();
        persistentAuditEvent17.setAuditEventDate(instant26);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO(user29);
        java.lang.String str31 = user29.toString();
        java.time.Instant instant32 = user29.getLastModifiedDate();
        java.time.Instant instant43 = null;
        java.time.Instant instant45 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant43, "error.validation", instant45, (java.util.Set<java.lang.String>) strSet51);
        java.lang.String str54 = managedUserVM53.getFirstName();
        java.lang.String str55 = managedUserVM53.getCreatedBy();
        java.util.Set<java.lang.String> strSet56 = managedUserVM53.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "LoggerVM{name='null', level='error.validation'}", "", "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", false, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "Authority{name=''}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", instant26, "error.concurrencyFailure", instant32, strSet56);
        user0.setCreatedDate(instant26);
        java.lang.String str59 = user0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str31, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent3.getData();
        persistentAuditEvent0.setData(strMap4);
        java.lang.Long long6 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        java.lang.String str13 = user11.getLastModifiedBy();
        user11.setActivationKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str16 = user11.getEmail();
        user11.setLastModifiedBy("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent28 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long29 = persistentAuditEvent28.getId();
        persistentAuditEvent28.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long32 = persistentAuditEvent28.getId();
        com.unifacisa.tcc.domain.User user33 = new com.unifacisa.tcc.domain.User();
        java.lang.String str34 = user33.getCreatedBy();
        user33.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant37 = user33.getLastModifiedDate();
        persistentAuditEvent28.setAuditEventDate(instant37);
        com.unifacisa.tcc.domain.User user40 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO(user40);
        java.lang.String str42 = user40.toString();
        java.time.Instant instant43 = user40.getLastModifiedDate();
        java.time.Instant instant54 = null;
        java.time.Instant instant56 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet62 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet62, strArray61);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM64 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant54, "error.validation", instant56, (java.util.Set<java.lang.String>) strSet62);
        java.lang.String str65 = managedUserVM64.getFirstName();
        java.lang.String str66 = managedUserVM64.getCreatedBy();
        java.util.Set<java.lang.String> strSet67 = managedUserVM64.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "LoggerVM{name='null', level='error.validation'}", "", "ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='error.concurrencyFailure', rememberMe=null}", false, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "Authority{name=''}", "LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}", instant37, "error.concurrencyFailure", instant43, strSet67);
        user11.setCreatedDate(instant37);
        persistentAuditEvent0.setAuditEventDate(instant37);
        java.lang.String str71 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(instant37);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str42, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "hi!" + "'", str65, "hi!");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 10L, "", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "error.concurrencyFailure", "hi!", false, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "LoginVM{username='null', rememberMe=null}", "LoginVM{username='null', rememberMe=null}", instant14, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant16, (java.util.Set<java.lang.String>) strSet47);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet52 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet72 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet72, strArray71);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant64, "error.validation", instant66, (java.util.Set<java.lang.String>) strSet72);
        java.lang.String str75 = managedUserVM74.getFirstName();
        java.lang.String str76 = managedUserVM74.getPassword();
        java.util.Set<java.lang.String> strSet77 = managedUserVM74.getAuthorities();
        java.util.Set<java.lang.String> strSet78 = managedUserVM74.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet79 = userMapper53.authoritiesFromStrings(strSet78);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper80 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user82 = userMapper80.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper83 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray84 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList85 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList85, userArray84);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList87 = userMapper83.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList85);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList88 = userMapper80.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList85);
        java.util.List<com.unifacisa.tcc.domain.User> userList89 = userMapper53.userDTOsToUsers(userDTOList88);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList90 = userMapper0.usersToUserDTOs(userList89);
        com.unifacisa.tcc.domain.User user92 = userMapper0.userFromId((java.lang.Long) 10L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(authoritySet52);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "error.concurrencyFailure" + "'", str76, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(authoritySet79);
        org.junit.Assert.assertNotNull(user82);
        org.junit.Assert.assertNotNull(userArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(userDTOList87);
        org.junit.Assert.assertNotNull(userDTOList88);
        org.junit.Assert.assertNotNull(userList89);
        org.junit.Assert.assertNotNull(userDTOList90);
        org.junit.Assert.assertNotNull(user92);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str20 = professor19.getPrimeiroNome();
        java.lang.Boolean boolean21 = professor19.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor19.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str32 = aluno31.getEmail();
        aluno31.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno25, aluno26, aluno30, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor24.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        java.lang.Boolean boolean41 = aluno39.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor42 = professor24.addAluno(aluno39);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection47 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean48 = aluno43.equals((java.lang.Object) socialUserConnection47);
        socialUserConnection47.setRefreshToken("error.validation");
        socialUserConnection47.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean53 = aluno39.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor54 = professor19.removeAluno(aluno39);
        com.unifacisa.tcc.domain.Professor professor56 = professor54.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor57 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str65 = aluno64.getEmail();
        aluno64.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno59, aluno63, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        professor57.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        java.lang.String str72 = professor57.toString();
        com.unifacisa.tcc.domain.Professor professor74 = professor57.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa76 = professor74.primeiroNome("");
        professor74.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor79 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno80 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str82 = aluno81.getEmail();
        aluno81.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno85 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno86 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str87 = aluno86.getEmail();
        aluno86.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray90 = new com.unifacisa.tcc.domain.Aluno[] { aluno80, aluno81, aluno85, aluno86 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet91 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet91, alunoArray90);
        professor79.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet91);
        professor74.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet91);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet95 = professor74.getAlunos();
        professor56.setAlunos(alunoSet95);
        com.unifacisa.tcc.domain.Professor professor97 = professor0.alunos(alunoSet95);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(professor42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str72, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(pessoa76);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(alunoArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(alunoSet95);
        org.junit.Assert.assertNotNull(professor97);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setUsername("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str11 = loginVM0.toString();
        java.lang.String str12 = loginVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}" + "'", str11, "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}" + "'", str12, "LoginVM{username='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', rememberMe=false}");
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        java.lang.Boolean boolean22 = aluno20.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor23 = professor5.addAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection28 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean29 = aluno24.equals((java.lang.Object) socialUserConnection28);
        socialUserConnection28.setRefreshToken("error.validation");
        socialUserConnection28.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean34 = aluno20.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor35 = professor0.removeAluno(aluno20);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor40 = aluno36.getProfessor();
        com.unifacisa.tcc.domain.Professor professor41 = professor35.addAluno(aluno36);
        professor35.setPrimeiroNome("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str44 = professor35.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str44, "Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("", "hi!", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", (java.lang.Long) 0L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "error.validation", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=null}", "", (java.lang.Long) 0L);
        socialUserConnection11.setAccessToken("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        socialUserConnection11.setSecret("Authority{name='null'}");
        java.lang.Class<?> wildcardClass16 = socialUserConnection11.getClass();
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str19 = professor18.getPrimeiroNome();
        java.lang.Boolean boolean20 = professor18.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = professor18.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno25, aluno29, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        java.lang.String str38 = professor23.toString();
        com.unifacisa.tcc.domain.Professor professor40 = professor23.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = professor40.primeiroNome("");
        professor40.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str48 = aluno47.getEmail();
        aluno47.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str53 = aluno52.getEmail();
        aluno52.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray56 = new com.unifacisa.tcc.domain.Aluno[] { aluno46, aluno47, aluno51, aluno52 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet57 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet57, alunoArray56);
        professor45.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        professor40.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        com.unifacisa.tcc.domain.Professor professor61 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet57);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        java.lang.Boolean boolean65 = aluno63.isHabilitadoTcc();
        aluno63.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = aluno63.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor70 = professor0.addAluno(aluno63);
        java.lang.Long long71 = professor0.getMatricula();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str38, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(pessoa42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(alunoArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNull(long71);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getUserId();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setSecret("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        socialUserConnection0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.Object obj2 = null;
        boolean boolean3 = authority0.equals(obj2);
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        java.lang.String str6 = authority0.getName();
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray18 = new com.unifacisa.tcc.domain.Aluno[] { aluno8, aluno9, aluno13, aluno14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet19 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet19, alunoArray18);
        professor7.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet19);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        java.lang.Boolean boolean24 = aluno22.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor25 = professor7.addAluno(aluno22);
        com.unifacisa.tcc.domain.Professor professor26 = aluno22.getProfessor();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor26.getAlunos();
        boolean boolean28 = authority0.equals((java.lang.Object) professor26);
        java.lang.Long long29 = professor26.getMatricula();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}" + "'", str6, "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(alunoArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(long29);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = professor3.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray17 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno8, aluno12, aluno13 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet18 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet18, alunoArray17);
        professor6.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet18);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        java.lang.Boolean boolean23 = aluno21.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor24 = professor6.addAluno(aluno21);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection29 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean30 = aluno25.equals((java.lang.Object) socialUserConnection29);
        socialUserConnection29.setRefreshToken("error.validation");
        socialUserConnection29.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean35 = aluno21.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str36 = aluno21.toString();
        java.lang.Boolean boolean37 = aluno21.isHabilitadoTcc();
        java.lang.String str38 = aluno21.toString();
        com.unifacisa.tcc.domain.Professor professor39 = professor3.removeAluno(aluno21);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor39.primeiroNome("LoggerVM{name='error.concurrencyFailure', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(alunoArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str36, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str38, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa20 = aluno15.primeiroNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.Long long21 = pessoa20.getMatricula();
        pessoa20.setNumeroContato((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(pessoa20);
        org.junit.Assert.assertNull(long21);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent1 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long2 = persistentAuditEvent1.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant4 = persistentAuditEvent3.getAuditEventDate();
        java.lang.Long long5 = persistentAuditEvent3.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent6.getData();
        persistentAuditEvent3.setData(strMap7);
        persistentAuditEvent1.setData(strMap7);
        persistentAuditEvent0.setData(strMap7);
        java.lang.String str11 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant12 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(instant12);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getActivationKey();
        java.time.Instant instant9 = user0.getResetDate();
        user0.setActivated(true);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str12 = user9.getLastName();
        java.time.Instant instant13 = user9.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        java.lang.String str16 = user15.getCreatedBy();
        java.lang.String str17 = user15.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant21 = user18.getLastModifiedDate();
        user15.setCreatedDate(instant21);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant45 = null;
        java.time.Instant instant47 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet53 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet53, strArray52);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant45, "error.validation", instant47, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO56 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet53);
        com.unifacisa.tcc.service.dto.UserDTO userDTO57 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "LoggerVM{name='null', level='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "", "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", instant13, "", instant21, (java.util.Set<java.lang.String>) strSet53);
        java.util.Set<java.lang.String> strSet58 = userDTO57.getAuthorities();
        java.time.Instant instant59 = userDTO57.getLastModifiedDate();
        java.time.Instant instant60 = userDTO57.getCreatedDate();
        java.lang.String str61 = userDTO57.toString();
        java.lang.String str62 = userDTO57.getLastName();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str12, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNotNull(instant60);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}" + "'", str61, "UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str62, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.lang.String str35 = userDTO33.toString();
        java.time.Instant instant36 = userDTO33.getLastModifiedDate();
        java.lang.String str37 = userDTO33.getLogin();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str35, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setUsername("error.concurrencyFailure");
        java.lang.String str3 = loginVM0.getPassword();
        java.lang.String str4 = loginVM0.getPassword();
        java.lang.String str5 = loginVM0.toString();
        loginVM0.setUsername("LoggerVM{name='null', level='error.validation'}");
        loginVM0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='1', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoginVM{username='error.concurrencyFailure', rememberMe=null}" + "'", str5, "LoginVM{username='error.concurrencyFailure', rememberMe=null}");
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.lang.String str23 = managedUserVM20.getLastModifiedBy();
        java.util.Set<java.lang.String> strSet24 = managedUserVM20.getAuthorities();
        java.lang.String str25 = managedUserVM20.toString();
        java.time.Instant instant26 = managedUserVM20.getLastModifiedDate();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.validation" + "'", str23, "error.validation");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str25, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(instant26);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setUserId("error.validation");
        java.lang.String str3 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("error.validation");
        socialUserConnection0.setImageURL("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 1L);
        socialUserConnection0.setExpireTime((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        java.lang.String str8 = socialUserConnection0.toString();
        java.lang.String str9 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getResetKey();
        java.lang.String str9 = user0.getLangKey();
        user0.setPassword("LoginVM{username='Authority{name='null'}', rememberMe=null}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent22 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant23 = persistentAuditEvent22.getAuditEventDate();
        persistentAuditEvent22.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent26 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = persistentAuditEvent26.getData();
        persistentAuditEvent26.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long30 = persistentAuditEvent26.getId();
        java.lang.Long long31 = persistentAuditEvent26.getId();
        java.time.Instant instant32 = persistentAuditEvent26.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap33 = null;
        persistentAuditEvent26.setData(strMap33);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent35 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant36 = persistentAuditEvent35.getAuditEventDate();
        java.lang.Long long37 = persistentAuditEvent35.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap39 = persistentAuditEvent38.getData();
        persistentAuditEvent35.setData(strMap39);
        persistentAuditEvent26.setData(strMap39);
        persistentAuditEvent22.setData(strMap39);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user45 = userMapper43.userFromId((java.lang.Long) 1L);
        boolean boolean46 = user45.getActivated();
        java.time.Instant instant47 = user45.getLastModifiedDate();
        persistentAuditEvent22.setAuditEventDate(instant47);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray51 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList52 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList52, userArray51);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList54 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList52);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper55 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray56 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList57 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList57, userArray56);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList59 = userMapper55.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList57);
        java.util.List<com.unifacisa.tcc.domain.User> userList60 = userMapper50.userDTOsToUsers(userDTOList59);
        com.unifacisa.tcc.domain.User user62 = userMapper50.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO(user62);
        java.time.Instant instant64 = userDTO63.getLastModifiedDate();
        java.time.Instant instant75 = null;
        java.time.Instant instant77 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant75, "error.validation", instant77, (java.util.Set<java.lang.String>) strSet83);
        java.lang.String str86 = managedUserVM85.getFirstName();
        java.util.Set<java.lang.String> strSet87 = managedUserVM85.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM88 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant47, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant64, strSet87);
        user0.setCreatedDate(instant64);
        user0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(userArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(userDTOList54);
        org.junit.Assert.assertNotNull(userArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(userDTOList59);
        org.junit.Assert.assertNotNull(userList60);
        org.junit.Assert.assertNotNull(user62);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNotNull(strSet87);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user4);
        java.lang.String str6 = user4.getImageUrl();
        java.lang.String str7 = user4.getLangKey();
        java.lang.String str8 = user4.getLogin();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant12 = user9.getLastModifiedDate();
        user4.setLastModifiedDate(instant12);
        persistentAuditEvent0.setAuditEventDate(instant12);
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        persistentAuditEvent0.setPrincipal("");
        java.lang.String str19 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        java.time.Instant instant7 = user4.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant7);
        java.lang.String str9 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setSecret("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        java.lang.String str11 = socialUserConnection0.getProviderId();
        java.lang.String str12 = socialUserConnection0.getAccessToken();
        java.lang.String str13 = socialUserConnection0.getProviderId();
        java.lang.String str14 = socialUserConnection0.getUserId();
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        com.unifacisa.tcc.domain.User user88 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO89 = new com.unifacisa.tcc.service.dto.UserDTO(user88);
        java.time.Instant instant90 = userDTO89.getLastModifiedDate();
        user0.setLastModifiedDate(instant90);
        java.time.Instant instant92 = user0.getLastModifiedDate();
        boolean boolean93 = user0.getActivated();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet94 = user0.getAuthorities();
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant90);
        org.junit.Assert.assertNotNull(instant92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(authoritySet94);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}'}", "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Authority{name=''}", (java.lang.Long) 10L, "LoggerVM{name='', level='error.validation'}", "error.concurrencyFailure", "LoginVM{username='LoggerVM{name='null', level='error.validation'}', rememberMe=null}", "LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", (java.lang.Long) 0L);
        socialUserConnection11.setDisplayName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("LoginVM{username='null', rememberMe=null}");
        java.lang.String str10 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.getFirstName();
        java.lang.String str25 = managedUserVM20.toString();
        java.lang.String str26 = managedUserVM20.toString();
        java.lang.String str27 = managedUserVM20.getLastName();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str25, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str26, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.concurrencyFailure" + "'", str27, "error.concurrencyFailure");
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant15 = user12.getLastModifiedDate();
        user9.setCreatedDate(instant15);
        java.lang.String str17 = user9.toString();
        java.time.Instant instant18 = user9.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant18);
        java.lang.String str20 = persistentAuditEvent0.getPrincipal();
        java.lang.String str21 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str20, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setName("error.concurrencyFailure");
        java.lang.String str9 = loggerVM0.getName();
        loggerVM0.setLevel("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.concurrencyFailure" + "'", str9, "error.concurrencyFailure");
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLastModifiedBy();
        java.lang.String str37 = user0.getActivationKey();
        java.lang.String str38 = user0.getResetKey();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant11 = null;
        java.time.Instant instant13 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant11, "error.validation", instant13, (java.util.Set<java.lang.String>) strSet19);
        java.lang.String str22 = managedUserVM21.getFirstName();
        java.lang.String str23 = managedUserVM21.getPassword();
        java.util.Set<java.lang.String> strSet24 = managedUserVM21.getAuthorities();
        java.util.Set<java.lang.String> strSet25 = managedUserVM21.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet26 = userMapper0.authoritiesFromStrings(strSet25);
        com.unifacisa.tcc.domain.User user28 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper29 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user31 = userMapper29.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper32 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray33 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList34 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList34, userArray33);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList36 = userMapper32.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList34);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList37 = userMapper29.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList38 = userMapper0.userDTOsToUsers(userDTOList37);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(authoritySet26);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNotNull(user31);
        org.junit.Assert.assertNotNull(userArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(userDTOList36);
        org.junit.Assert.assertNotNull(userDTOList37);
        org.junit.Assert.assertNotNull(userList38);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long6 = user0.getId();
        user0.setCreatedBy("error.validation");
        java.lang.String str9 = user0.getLastName();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 1L);
        boolean boolean3 = user2.getActivated();
        java.time.Instant instant4 = user2.getLastModifiedDate();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection9 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean10 = aluno5.equals((java.lang.Object) socialUserConnection9);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str15 = aluno5.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor16 = aluno5.getProfessor();
        boolean boolean17 = user2.equals((java.lang.Object) aluno5);
        com.unifacisa.tcc.domain.Aluno aluno19 = aluno5.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(instant4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(professor16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(aluno19);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.String str3 = managedUserVM0.toString();
        java.lang.String str4 = managedUserVM0.getLogin();
        java.lang.Long long5 = managedUserVM0.getId();
        java.time.Instant instant6 = managedUserVM0.getCreatedDate();
        java.lang.String str7 = managedUserVM0.getPassword();
        java.time.Instant instant8 = managedUserVM0.getLastModifiedDate();
        java.util.Set<java.lang.String> strSet9 = managedUserVM0.getAuthorities();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(strSet9);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        socialUserConnection0.setSecret("Authority{name='null'}");
        java.lang.Long long7 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("LoginVM{username='Authority{name='null'}', rememberMe=null}", "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}", "LoginVM{username='', rememberMe=null}", (java.lang.Long) (-1L), "Authority{name='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='1', habilitadoTcc='false'}", "Professor{id=null, primeiroNome='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) (-1L));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        java.lang.String str78 = aluno75.getPrimeiroNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        professor17.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno24, aluno28, aluno29 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno40, aluno41, aluno45, aluno46 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor39.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        aluno38.setProfessor(professor39);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.removeAluno(aluno38);
        com.unifacisa.tcc.domain.Professor professor56 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str59 = aluno58.getEmail();
        aluno58.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str64 = aluno63.getEmail();
        aluno63.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno57, aluno58, aluno62, aluno63 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor56.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        java.lang.String str71 = professor56.toString();
        com.unifacisa.tcc.domain.Professor professor73 = professor56.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet74 = professor56.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno38.professor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno75.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor78 = aluno75.getProfessor();
        aluno75.setSegundoNome("User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno75.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str71, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(alunoSet74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor78);
        org.junit.Assert.assertNotNull(aluno82);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "UserDTO{login='LoggerVM{name='null', level='null'}', firstName='error.concurrencyFailure', lastName='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', imageUrl='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', activated=true, langKey='', createdBy=Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, createdDate=2021-03-24T23:46:14.824Z, lastModifiedBy='', lastModifiedDate=2021-03-24T23:46:14.824Z, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='10', habilitadoTcc='true'}", (java.lang.Long) 0L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}", "Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", (java.lang.Long) (-1L));
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getSecret();
        java.lang.Long long4 = socialUserConnection0.getRank();
        java.lang.String str5 = socialUserConnection0.getProfileURL();
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setProviderId("ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str9 = socialUserConnection0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=null, providerId='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        aluno0.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection4 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean5 = aluno0.equals((java.lang.Object) socialUserConnection4);
        socialUserConnection4.setRefreshToken("error.validation");
        socialUserConnection4.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.Long long10 = socialUserConnection4.getRank();
        java.lang.String str11 = socialUserConnection4.getProfileURL();
        java.lang.String str12 = socialUserConnection4.getUserId();
        java.lang.String str13 = socialUserConnection4.getAccessToken();
        java.lang.String str14 = socialUserConnection4.getSecret();
        java.lang.String str15 = socialUserConnection4.getProviderId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str14, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long1 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setAuditEventType("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        persistentAuditEvent0.setPrincipal("LoginVM{username='null', rememberMe=false}");
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent0.getData();
        java.lang.String str10 = persistentAuditEvent0.getPrincipal();
        java.lang.Long long11 = persistentAuditEvent0.getId();
        java.time.Instant instant12 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setAuditEventType("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str10, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(instant12);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        keyAndPasswordVM0.setNewPassword("error.concurrencyFailure");
        keyAndPasswordVM0.setKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "error.concurrencyFailure" + "'", str7, "error.concurrencyFailure");
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getActivationKey();
        java.time.Instant instant9 = user0.getResetDate();
        java.lang.String str10 = user0.getResetKey();
        java.lang.String str11 = user0.getResetKey();
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long4 = persistentAuditEvent0.getId();
        java.lang.Long long5 = persistentAuditEvent0.getId();
        java.time.Instant instant6 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = null;
        persistentAuditEvent0.setData(strMap7);
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        java.lang.String str10 = user9.getCreatedBy();
        java.lang.String str11 = user9.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant15 = user12.getLastModifiedDate();
        user9.setCreatedDate(instant15);
        java.lang.String str17 = user9.toString();
        java.time.Instant instant18 = user9.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant18);
        java.lang.String str20 = persistentAuditEvent0.getPrincipal();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        persistentAuditEvent0.setData(strMap21);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str20, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM1 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str2 = loginVM1.getUsername();
        loginVM1.setUsername("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Boolean boolean5 = loginVM1.isRememberMe();
        boolean boolean6 = authority0.equals((java.lang.Object) loginVM1);
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO8 = new com.unifacisa.tcc.service.dto.UserDTO(user7);
        java.time.Instant instant9 = userDTO8.getLastModifiedDate();
        userDTO8.setId((java.lang.Long) 1L);
        userDTO8.setLogin("LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
        java.lang.String str14 = userDTO8.getCreatedBy();
        boolean boolean15 = authority0.equals((java.lang.Object) userDTO8);
        java.lang.String str16 = userDTO8.getLogin();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}" + "'", str16, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}");
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.String str7 = loginVM0.getUsername();
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("LoggerVM{name='null', level='error.validation'}");
        managedUserVM0.setLogin("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str7 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = socialUserConnection0.getUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray22 = new com.unifacisa.tcc.domain.Aluno[] { aluno12, aluno13, aluno17, aluno18 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet23 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet23, alunoArray22);
        professor11.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet23);
        java.lang.String str26 = professor11.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor11.getAlunos();
        java.time.Instant instant37 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant50 = null;
        java.time.Instant instant52 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM60 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant50, "error.validation", instant52, (java.util.Set<java.lang.String>) strSet58);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant37, "", instant39, (java.util.Set<java.lang.String>) strSet58);
        java.lang.String str62 = userDTO61.getLastName();
        java.lang.String str63 = userDTO61.getEmail();
        userDTO61.setId((java.lang.Long) 0L);
        java.lang.String str66 = userDTO61.getImageUrl();
        userDTO61.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean69 = professor11.equals((java.lang.Object) userDTO61);
        boolean boolean70 = socialUserConnection0.equals((java.lang.Object) userDTO61);
        java.lang.String str71 = userDTO61.getLastName();
        userDTO61.setId((java.lang.Long) 100L);
        java.lang.String str74 = userDTO61.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(alunoArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str26, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "error.concurrencyFailure" + "'", str62, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "error.concurrencyFailure" + "'", str63, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "error.concurrencyFailure" + "'", str71, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "error.concurrencyFailure" + "'", str74, "error.concurrencyFailure");
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        aluno0.setId((java.lang.Long) (-1L));
        aluno0.setEmail("LoginVM{username='', rememberMe=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa6);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLastModifiedBy();
        user0.setCreatedBy("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        java.lang.String str39 = user0.getImageUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("");
        java.lang.String str7 = pessoa6.getPrimeiroNome();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = pessoa6.matricula((java.lang.Long) 10L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(pessoa9);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.lang.Long long3 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user4);
        java.lang.String str6 = user4.getImageUrl();
        java.lang.String str7 = user4.getLangKey();
        java.lang.String str8 = user4.getLogin();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        user9.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant12 = user9.getLastModifiedDate();
        user4.setLastModifiedDate(instant12);
        persistentAuditEvent0.setAuditEventDate(instant12);
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='null', level='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor30 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        aluno32.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str38 = aluno37.getEmail();
        aluno37.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray41 = new com.unifacisa.tcc.domain.Aluno[] { aluno31, aluno32, aluno36, aluno37 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet42 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet42, alunoArray41);
        professor30.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet42);
        java.lang.String str45 = professor30.toString();
        com.unifacisa.tcc.domain.Professor professor47 = professor30.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet48 = professor30.getAlunos();
        com.unifacisa.tcc.domain.User user49 = new com.unifacisa.tcc.domain.User();
        java.lang.String str50 = user49.getCreatedBy();
        user49.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant53 = user49.getLastModifiedDate();
        boolean boolean54 = professor30.equals((java.lang.Object) instant53);
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        java.lang.String str57 = user56.getCreatedBy();
        java.lang.String str58 = user56.getLangKey();
        java.time.Instant instant59 = user56.getCreatedDate();
        java.time.Instant instant70 = null;
        java.time.Instant instant72 = null;
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet78 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet78, strArray77);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM80 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant70, "error.validation", instant72, (java.util.Set<java.lang.String>) strSet78);
        java.lang.String str81 = managedUserVM80.getFirstName();
        java.lang.String str82 = managedUserVM80.getCreatedBy();
        java.util.Set<java.lang.String> strSet83 = managedUserVM80.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM84 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant53, "LoginVM{username='null', rememberMe=null}", instant59, strSet83);
        user19.setResetDate(instant53);
        java.time.Instant instant86 = user19.getCreatedDate();
        persistentAuditEvent0.setAuditEventDate(instant86);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(alunoArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str45, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(alunoSet48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "hi!" + "'", str81, "hi!");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNotNull(instant86);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant25 = null;
        com.unifacisa.tcc.domain.User user27 = new com.unifacisa.tcc.domain.User();
        java.lang.String str28 = user27.getCreatedBy();
        user27.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO31 = new com.unifacisa.tcc.service.dto.UserDTO(user27);
        java.time.Instant instant32 = userDTO31.getLastModifiedDate();
        java.time.Instant instant43 = null;
        java.time.Instant instant45 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant43, "error.validation", instant45, (java.util.Set<java.lang.String>) strSet51);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM54 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", false, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoginVM{username='null', rememberMe=false}", "error.validation", instant25, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", instant32, (java.util.Set<java.lang.String>) strSet51);
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        java.lang.String str57 = user56.getCreatedBy();
        java.lang.String str58 = user56.getLastModifiedBy();
        user56.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str61 = user56.getEmail();
        java.time.Instant instant62 = user56.getLastModifiedDate();
        java.lang.String[] strArray86 = new java.lang.String[] { "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}", "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "SocialUserConnection{id=1, userId=error.validation, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "hi!", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}", "User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" };
        java.util.LinkedHashSet<java.lang.String> strSet87 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet87, strArray86);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM89 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", true, "Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", instant25, "LoginVM{username='null', rememberMe=null}", instant62, (java.util.Set<java.lang.String>) strSet87);
        managedUserVM0.setLastModifiedDate(instant25);
        java.lang.String str91 = managedUserVM0.getLastName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        user0.setLangKey("Authority{name='null'}");
        java.lang.String str6 = user0.getEmail();
        java.lang.String str7 = user0.toString();
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO9 = new com.unifacisa.tcc.service.dto.UserDTO(user8);
        java.lang.String str10 = user8.getImageUrl();
        boolean boolean12 = user8.equals((java.lang.Object) (byte) -1);
        java.lang.String str13 = user8.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet14 = user8.getAuthorities();
        user8.setImageUrl("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        user17.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant20 = user17.getLastModifiedDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        user8.setLastModifiedDate(instant21);
        user0.setCreatedDate(instant21);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(authoritySet14);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.Boolean boolean1 = professor0.isDiponibilidade();
        java.lang.Long long2 = professor0.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor4 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        java.lang.Boolean boolean7 = aluno5.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor8 = aluno5.getProfessor();
        aluno5.setId((java.lang.Long) (-1L));
        java.lang.String str11 = aluno5.toString();
        aluno5.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor14 = professor4.removeAluno(aluno5);
        org.junit.Assert.assertNull(boolean1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(professor8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str11, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor14);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getCreatedBy();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getEmail();
        java.util.Set<java.lang.String> strSet26 = managedUserVM20.getAuthorities();
        java.lang.String str27 = managedUserVM20.getLastModifiedBy();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.validation" + "'", str25, "error.validation");
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "error.validation" + "'", str27, "error.validation");
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str3 = user0.getLastModifiedBy();
        java.lang.String str4 = user0.getLogin();
        user0.setFirstName("User{login='null', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        user0.setLastName("SocialUserConnection{id=null, userId=null, providerId='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        java.lang.String str3 = authority0.getName();
        authority0.setName("Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}");
        authority0.setName("User{login='null', firstName='null', lastName='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        authority0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='Authority{name='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        loggerVM0.setLevel("error.validation");
        java.lang.String str4 = loggerVM0.getLevel();
        java.lang.String str5 = loggerVM0.toString();
        java.lang.String str6 = loggerVM0.toString();
        loggerVM0.setLevel("Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str9 = loggerVM0.getName();
        java.lang.String str10 = loggerVM0.toString();
        java.lang.String str11 = loggerVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "error.validation" + "'", str4, "error.validation");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str5, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str6, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str10, "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str11, "LoggerVM{name='null', level='Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.toString();
        java.lang.String str2 = authority0.toString();
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor8 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa10 = professor8.primeiroNome("error.concurrencyFailure");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.primeiroNome("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        boolean boolean13 = authority0.equals((java.lang.Object) pessoa12);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection14 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection14.setUserId("error.validation");
        java.lang.String str17 = socialUserConnection14.getProfileURL();
        socialUserConnection14.setId((java.lang.Long) 1L);
        java.lang.String str20 = socialUserConnection14.getRefreshToken();
        java.lang.String str21 = socialUserConnection14.getUserId();
        java.lang.String str22 = socialUserConnection14.getImageURL();
        java.lang.String str23 = socialUserConnection14.getProviderUserId();
        java.lang.String str24 = socialUserConnection14.getDisplayName();
        java.lang.String str25 = socialUserConnection14.getSecret();
        boolean boolean26 = authority0.equals((java.lang.Object) socialUserConnection14);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Authority{name='null'}" + "'", str1, "Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Authority{name='null'}" + "'", str2, "Authority{name='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(pessoa10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "error.validation" + "'", str21, "error.validation");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Professor professor19 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Professor professor20 = aluno15.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor25 = professor20.removeAluno(aluno21);
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str29 = aluno28.getEmail();
        aluno28.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        aluno33.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno27, aluno28, aluno32, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        professor26.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        java.lang.Boolean boolean43 = aluno41.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor44 = professor26.addAluno(aluno41);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str46 = aluno45.getEmail();
        aluno45.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection49 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean50 = aluno45.equals((java.lang.Object) socialUserConnection49);
        socialUserConnection49.setRefreshToken("error.validation");
        socialUserConnection49.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean55 = aluno41.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str56 = aluno41.toString();
        java.lang.Boolean boolean57 = aluno41.isHabilitadoTcc();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        aluno41.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor62 = aluno41.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno63 = aluno21.professor(professor62);
        java.lang.String str64 = professor62.getSegundoNome();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(professor25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str56, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(professor62);
        org.junit.Assert.assertNotNull(aluno63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        keyAndPasswordVM0.setNewPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str10 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("Aluno{id=null, primeiroNome='null', segundoNome='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str10, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        professor0.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        java.lang.String str50 = aluno32.toString();
        com.unifacisa.tcc.domain.Professor professor51 = professor0.removeAluno(aluno32);
        com.unifacisa.tcc.domain.Professor professor52 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str55 = aluno54.getEmail();
        aluno54.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno53, aluno54, aluno58, aluno59 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        professor52.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        java.lang.String str67 = professor52.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet68 = professor52.getAlunos();
        com.unifacisa.tcc.domain.Professor professor69 = professor51.alunos(alunoSet68);
        java.lang.String str70 = professor69.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str50, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str67, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet68);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}" + "'", str70, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str1 = aluno0.getEmail();
        java.lang.Boolean boolean2 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str7 = aluno6.getEmail();
        aluno6.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str12 = aluno11.getEmail();
        aluno11.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray15 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno6, aluno10, aluno11 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet16 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet16, alunoArray15);
        professor4.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet16);
        java.lang.String str19 = professor4.toString();
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Professor professor35 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno36 = aluno0.professor(professor35);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa38 = aluno0.email("");
        java.lang.String str39 = pessoa38.getSegundoNome();
        pessoa38.setEmail("LoggerVM{name='', level='error.validation'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(alunoArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str19, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(aluno36);
        org.junit.Assert.assertNotNull(pessoa38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getLangKey();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        java.lang.String str5 = user4.getCreatedBy();
        java.lang.String str6 = user4.getLangKey();
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str10 = aluno9.getEmail();
        aluno9.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str15 = aluno14.getEmail();
        aluno14.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray18 = new com.unifacisa.tcc.domain.Aluno[] { aluno8, aluno9, aluno13, aluno14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet19 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet19, alunoArray18);
        professor7.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet19);
        java.lang.String str22 = professor7.toString();
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno25, aluno29, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        boolean boolean39 = user4.equals((java.lang.Object) professor7);
        java.lang.String str40 = user4.getLogin();
        user4.setId((java.lang.Long) 0L);
        user4.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant45 = user4.getLastModifiedDate();
        user0.setLastModifiedDate(instant45);
        java.time.Instant instant56 = null;
        java.time.Instant instant58 = null;
        java.time.Instant instant69 = null;
        java.time.Instant instant71 = null;
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet77 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet77, strArray76);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM79 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant69, "error.validation", instant71, (java.util.Set<java.lang.String>) strSet77);
        com.unifacisa.tcc.service.dto.UserDTO userDTO80 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant56, "", instant58, (java.util.Set<java.lang.String>) strSet77);
        java.lang.String str81 = userDTO80.getLastName();
        java.lang.String str82 = userDTO80.getLogin();
        java.lang.String str83 = userDTO80.getFirstName();
        java.util.Set<java.lang.String> strSet84 = userDTO80.getAuthorities();
        boolean boolean85 = userDTO80.isActivated();
        java.lang.String str86 = userDTO80.getEmail();
        java.lang.String str87 = userDTO80.getCreatedBy();
        boolean boolean88 = userDTO80.isActivated();
        boolean boolean89 = user0.equals((java.lang.Object) boolean88);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(alunoArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str22, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "error.concurrencyFailure" + "'", str81, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "" + "'", str83, "");
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "error.concurrencyFailure" + "'", str86, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "error.concurrencyFailure" + "'", str87, "error.concurrencyFailure");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        java.lang.String str35 = userDTO33.getLogin();
        java.lang.String str36 = userDTO33.getLangKey();
        userDTO33.setLogin("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='Authority{name='null'}', activationKey='null'}");
        userDTO33.setLogin("Professor{id=null, primeiroNome='LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=false}', segundoNome='null', matricula='null', email='LoggerVM{name='null', level='error.validation'}', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "error.validation" + "'", str36, "error.validation");
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        user0.setActivated(false);
        user0.setActivated(true);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray43 = new com.unifacisa.tcc.domain.Aluno[] { aluno33, aluno34, aluno38, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet44 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet44, alunoArray43);
        professor32.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        java.lang.String str47 = professor32.toString();
        professor32.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str51 = professor50.getPrimeiroNome();
        java.lang.Boolean boolean52 = professor50.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = professor50.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str58 = aluno57.getEmail();
        aluno57.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str63 = aluno62.getEmail();
        aluno62.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray66 = new com.unifacisa.tcc.domain.Aluno[] { aluno56, aluno57, aluno61, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet67 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet67, alunoArray66);
        professor55.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet67);
        java.lang.String str70 = professor55.toString();
        com.unifacisa.tcc.domain.Professor professor72 = professor55.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa74 = professor72.primeiroNome("");
        professor72.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor77 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno79 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str80 = aluno79.getEmail();
        aluno79.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno83 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno84 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str85 = aluno84.getEmail();
        aluno84.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray88 = new com.unifacisa.tcc.domain.Aluno[] { aluno78, aluno79, aluno83, aluno84 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet89 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet89, alunoArray88);
        professor77.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet89);
        professor72.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet89);
        com.unifacisa.tcc.domain.Professor professor93 = professor50.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet89);
        professor32.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet89);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet89);
        professor0.setMatricula((java.lang.Long) 1L);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet98 = professor0.getAlunos();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(alunoArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(alunoArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str70, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertNotNull(pessoa74);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(alunoArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(professor93);
        org.junit.Assert.assertNotNull(alunoSet98);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastModifiedBy();
        java.lang.String str35 = userDTO33.toString();
        java.lang.String str36 = userDTO33.getLogin();
        java.lang.String str37 = userDTO33.getFirstName();
        boolean boolean38 = userDTO33.isActivated();
        java.lang.String str39 = userDTO33.getLangKey();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str35, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "error.validation" + "'", str39, "error.validation");
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("");
        java.time.Instant instant13 = null;
        java.time.Instant instant15 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant26, "error.validation", instant28, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant13, "", instant15, (java.util.Set<java.lang.String>) strSet34);
        java.time.Instant instant38 = userDTO37.getLastModifiedDate();
        userDTO37.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean41 = socialUserConnection0.equals((java.lang.Object) userDTO37);
        socialUserConnection0.setAccessToken("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str44 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant3 = user0.getLastModifiedDate();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet4 = null;
        user0.setAuthorities(authoritySet4);
        user0.setActivationKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str8 = user0.getActivationKey();
        java.lang.String str9 = user0.getResetKey();
        user0.setActivationKey("Professor{id=null, primeiroNome='error.concurrencyFailure', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str8, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet18 = professor0.getAlunos();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getCreatedBy();
        java.time.Instant instant21 = managedUserVM19.getCreatedDate();
        boolean boolean22 = professor0.equals((java.lang.Object) managedUserVM19);
        java.lang.String str23 = managedUserVM19.getEmail();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(alunoSet18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getPassword();
        java.lang.String str4 = user0.getLogin();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.getImageURL();
        java.lang.Long long5 = socialUserConnection0.getRank();
        socialUserConnection0.setDisplayName("LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long5);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        java.lang.Boolean boolean26 = aluno24.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Professor professor28 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray39 = new com.unifacisa.tcc.domain.Aluno[] { aluno29, aluno30, aluno34, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet40 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet40, alunoArray39);
        professor28.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        java.lang.String str43 = professor28.toString();
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray55 = new com.unifacisa.tcc.domain.Aluno[] { aluno45, aluno46, aluno50, aluno51 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet56 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet56, alunoArray55);
        professor44.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Professor professor59 = professor28.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno24.professor(professor59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno24.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno66 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor67 = professor21.addAluno(aluno62);
        java.lang.Long long68 = aluno62.getNumeroContato();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(alunoArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str43, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(alunoArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertNotNull(aluno66);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNull(long68);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.util.List<com.unifacisa.tcc.domain.User> userList13 = userMapper3.userDTOsToUsers(userDTOList12);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray15 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList16 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList16, userArray15);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList18 = userMapper14.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.util.List<com.unifacisa.tcc.domain.User> userList24 = userMapper14.userDTOsToUsers(userDTOList23);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray26 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList27 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList27, userArray26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper25.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        java.util.List<com.unifacisa.tcc.domain.User> userList35 = userMapper25.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList36 = userMapper14.userDTOsToUsers(userDTOList34);
        java.util.List<com.unifacisa.tcc.domain.User> userList37 = userMapper3.userDTOsToUsers(userDTOList34);
        java.time.Instant instant47 = null;
        java.time.Instant instant49 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant61 = null;
        java.time.Instant instant72 = null;
        java.time.Instant instant74 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant72, "error.validation", instant74, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO83 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant59, "", instant61, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.service.dto.UserDTO userDTO84 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant47, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant49, (java.util.Set<java.lang.String>) strSet80);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet85 = userMapper3.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet80);
        user0.setAuthorities(authoritySet85);
        java.lang.String str87 = user0.getLastName();
        java.lang.String str88 = user0.getImageUrl();
        com.unifacisa.tcc.service.dto.UserDTO userDTO89 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(userList13);
        org.junit.Assert.assertNotNull(userArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(userDTOList18);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userList24);
        org.junit.Assert.assertNotNull(userArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userList35);
        org.junit.Assert.assertNotNull(userList36);
        org.junit.Assert.assertNotNull(userList37);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(authoritySet85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str87, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        java.lang.String str38 = user37.getCreatedBy();
        java.lang.String str39 = user37.getLangKey();
        java.time.Instant instant40 = user37.getCreatedDate();
        persistentAuditEvent36.setAuditEventDate(instant40);
        user0.setCreatedDate(instant40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setActivationKey("LoggerVM{name='null', level='error.validation'}");
        java.lang.String str46 = user0.getLastName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str24 = aluno23.getEmail();
        aluno23.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray27 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno18, aluno22, aluno23 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet28 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet28, alunoArray27);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Professor professor31 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet28);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Professor professor36 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str39 = aluno38.getEmail();
        aluno38.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str44 = aluno43.getEmail();
        aluno43.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray47 = new com.unifacisa.tcc.domain.Aluno[] { aluno37, aluno38, aluno42, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet48 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet48, alunoArray47);
        professor36.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet48);
        java.lang.String str51 = professor36.toString();
        com.unifacisa.tcc.domain.Professor professor52 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str55 = aluno54.getEmail();
        aluno54.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str60 = aluno59.getEmail();
        aluno59.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno53, aluno54, aluno58, aluno59 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        professor52.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Professor professor67 = professor36.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno68 = aluno32.professor(professor67);
        com.unifacisa.tcc.domain.Aluno aluno70 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa72 = aluno32.numeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor73 = professor31.removeAluno(aluno32);
        professor73.setPrimeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(alunoArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(alunoArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str51, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(aluno68);
        org.junit.Assert.assertNotNull(aluno70);
        org.junit.Assert.assertNotNull(pessoa72);
        org.junit.Assert.assertNotNull(professor73);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.getPrimeiroNome();
        java.lang.Boolean boolean2 = professor0.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str13 = aluno12.getEmail();
        aluno12.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray16 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno7, aluno11, aluno12 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet17 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet17, alunoArray16);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet17);
        java.lang.String str20 = professor5.toString();
        com.unifacisa.tcc.domain.Professor professor22 = professor5.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor22.primeiroNome("");
        professor22.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        professor22.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor43 = professor0.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        java.lang.String str44 = professor0.toString();
        professor0.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Long long47 = professor0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(alunoArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str20, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str44, "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long47);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str4, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLangKey();
        java.lang.String str4 = user0.getLogin();
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.getLogin();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        java.lang.Boolean boolean9 = aluno7.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor10 = aluno7.getProfessor();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str14 = aluno13.getEmail();
        aluno13.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str19 = aluno18.getEmail();
        aluno18.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray22 = new com.unifacisa.tcc.domain.Aluno[] { aluno12, aluno13, aluno17, aluno18 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet23 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet23, alunoArray22);
        professor11.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet23);
        java.lang.String str26 = professor11.toString();
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str30 = aluno29.getEmail();
        aluno29.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str35 = aluno34.getEmail();
        aluno34.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray38 = new com.unifacisa.tcc.domain.Aluno[] { aluno28, aluno29, aluno33, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet39 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet39, alunoArray38);
        professor27.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Professor professor42 = professor11.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet39);
        com.unifacisa.tcc.domain.Aluno aluno43 = aluno7.professor(professor42);
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user44);
        java.lang.String str46 = user44.getImageUrl();
        user44.setLangKey("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        user44.setActivated(true);
        boolean boolean51 = aluno7.equals((java.lang.Object) user44);
        user44.setLangKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str54 = user44.getActivationKey();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet55 = user44.getAuthorities();
        user0.setAuthorities(authoritySet55);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(professor10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(alunoArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str26, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(alunoArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(professor42);
        org.junit.Assert.assertNotNull(aluno43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(authoritySet55);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        aluno24.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno18, aluno19, aluno23, aluno24 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        professor17.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str33 = aluno32.getEmail();
        java.lang.Boolean boolean34 = aluno32.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor35 = professor17.addAluno(aluno32);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str37 = aluno36.getEmail();
        aluno36.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection40 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean41 = aluno36.equals((java.lang.Object) socialUserConnection40);
        socialUserConnection40.setRefreshToken("error.validation");
        socialUserConnection40.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean46 = aluno32.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str47 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno aluno49 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor50 = professor1.removeAluno(aluno49);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper51 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray52 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList53 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList53, userArray52);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList55 = userMapper51.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList53);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper56 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray57 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList58 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList58, userArray57);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList60 = userMapper56.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList58);
        java.util.List<com.unifacisa.tcc.domain.User> userList61 = userMapper51.userDTOsToUsers(userDTOList60);
        boolean boolean62 = professor50.equals((java.lang.Object) userMapper51);
        java.lang.Boolean boolean63 = professor50.isDiponibilidade();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str47, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno49);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNotNull(userArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(userDTOList55);
        org.junit.Assert.assertNotNull(userArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(userDTOList60);
        org.junit.Assert.assertNotNull(userList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(boolean63);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = null;
        managedUserVM0.setLastModifiedDate(instant1);
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.getLastModifiedBy();
        java.time.Instant instant5 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant5);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("hi!");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        java.lang.String str8 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.String str11 = loginVM0.getPassword();
        loginVM0.setPassword("hi!");
        loginVM0.setUsername("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str16 = loginVM0.getUsername();
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str16, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor21 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = professor21.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str25 = aluno24.getEmail();
        java.lang.Boolean boolean26 = aluno24.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Professor professor28 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str31 = aluno30.getEmail();
        aluno30.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray39 = new com.unifacisa.tcc.domain.Aluno[] { aluno29, aluno30, aluno34, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet40 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet40, alunoArray39);
        professor28.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet40);
        java.lang.String str43 = professor28.toString();
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str47 = aluno46.getEmail();
        aluno46.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray55 = new com.unifacisa.tcc.domain.Aluno[] { aluno45, aluno46, aluno50, aluno51 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet56 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet56, alunoArray55);
        professor44.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Professor professor59 = professor28.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet56);
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno24.professor(professor59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno24.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno66 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor67 = professor21.addAluno(aluno62);
        java.lang.Class<?> wildcardClass68 = professor67.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(professor21);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(alunoArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str43, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(alunoArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(professor59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertNotNull(aluno66);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getPassword();
        java.lang.String str2 = managedUserVM0.toString();
        java.lang.String str3 = managedUserVM0.getPassword();
        java.lang.String str4 = managedUserVM0.getLastName();
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.time.Instant instant7 = managedUserVM0.getCreatedDate();
        java.lang.String str8 = managedUserVM0.getLangKey();
        java.lang.String str9 = managedUserVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str2, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str9, "ManagedUserVM{} UserDTO{login='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getUsername();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        java.lang.String str3 = loginVM0.toString();
        java.lang.String str4 = loginVM0.getPassword();
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        java.lang.Boolean boolean7 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(boolean7);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        userDTO33.setLogin("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant37 = userDTO33.getLastModifiedDate();
        java.lang.String str38 = userDTO33.getLangKey();
        java.lang.String str39 = userDTO33.getLastModifiedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertNull(instant37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.validation" + "'", str38, "error.validation");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setId((java.lang.Long) 10L);
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        java.lang.String str7 = user0.getPassword();
        java.lang.String str8 = user0.getLangKey();
        java.lang.String str9 = user0.getFirstName();
        user0.setResetKey("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        user0.setActivationKey("hi!");
        boolean boolean7 = user0.getActivated();
        java.lang.String str8 = user0.getFirstName();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = new com.unifacisa.tcc.service.dto.UserDTO(user9);
        java.lang.String str11 = user9.getImageUrl();
        java.lang.String str12 = user9.getLangKey();
        java.lang.String str13 = user9.getLogin();
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        user14.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant17 = user14.getLastModifiedDate();
        user9.setLastModifiedDate(instant17);
        user0.setLastModifiedDate(instant17);
        java.lang.String str20 = user0.getLastName();
        java.lang.String str21 = user0.getResetKey();
        java.lang.String str22 = user0.getResetKey();
        java.lang.String str23 = user0.getEmail();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str12 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str12, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        user0.setResetKey("LoginVM{username='null', rememberMe=null}");
        java.lang.String str8 = user0.getLastName();
        user0.setLastModifiedBy("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant12 = userDTO11.getLastModifiedDate();
        java.lang.String str13 = userDTO11.getEmail();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getCreatedBy();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setLogin("LoggerVM{name='null', level='error.validation'}");
        boolean boolean5 = managedUserVM0.isActivated();
        java.time.Instant instant6 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(instant6);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLastModifiedBy();
        java.lang.String str37 = user0.getActivationKey();
        user0.setCreatedBy("error.validation");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.Long long14 = socialUserConnection0.getRank();
        socialUserConnection0.setProviderUserId("LoginVM{username='error.concurrencyFailure', rememberMe=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}" + "'", str10, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(long14);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setLastName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        java.lang.String str8 = socialUserConnection0.toString();
        socialUserConnection0.setUserId("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.lang.String str11 = socialUserConnection0.getImageURL();
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.concurrencyFailure" + "'", str11, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        user0.setImageUrl("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str41 = user0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.lang.String str22 = managedUserVM20.getPassword();
        java.util.Set<java.lang.String> strSet23 = managedUserVM20.getAuthorities();
        java.lang.String str24 = managedUserVM20.toString();
        java.lang.String str25 = managedUserVM20.getFirstName();
        java.lang.String str26 = managedUserVM20.toString();
        java.lang.String str27 = managedUserVM20.getCreatedBy();
        java.lang.String str28 = managedUserVM20.getLogin();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "error.concurrencyFailure" + "'", str22, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str24, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str26, "ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant11 = persistentAuditEvent10.getAuditEventDate();
        persistentAuditEvent10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent14 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap15 = persistentAuditEvent14.getData();
        persistentAuditEvent14.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long18 = persistentAuditEvent14.getId();
        java.lang.Long long19 = persistentAuditEvent14.getId();
        java.time.Instant instant20 = persistentAuditEvent14.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = null;
        persistentAuditEvent14.setData(strMap21);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent23 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant24 = persistentAuditEvent23.getAuditEventDate();
        java.lang.Long long25 = persistentAuditEvent23.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent26 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap27 = persistentAuditEvent26.getData();
        persistentAuditEvent23.setData(strMap27);
        persistentAuditEvent14.setData(strMap27);
        persistentAuditEvent10.setData(strMap27);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper31 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user33 = userMapper31.userFromId((java.lang.Long) 1L);
        boolean boolean34 = user33.getActivated();
        java.time.Instant instant35 = user33.getLastModifiedDate();
        persistentAuditEvent10.setAuditEventDate(instant35);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper38 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray39 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList40 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList40, userArray39);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList42 = userMapper38.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList40);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray44 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList45 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList45, userArray44);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList47 = userMapper43.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        java.util.List<com.unifacisa.tcc.domain.User> userList48 = userMapper38.userDTOsToUsers(userDTOList47);
        com.unifacisa.tcc.domain.User user50 = userMapper38.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = new com.unifacisa.tcc.service.dto.UserDTO(user50);
        java.time.Instant instant52 = userDTO51.getLastModifiedDate();
        java.time.Instant instant63 = null;
        java.time.Instant instant65 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet71 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet71, strArray70);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM73 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant63, "error.validation", instant65, (java.util.Set<java.lang.String>) strSet71);
        java.lang.String str74 = managedUserVM73.getFirstName();
        java.util.Set<java.lang.String> strSet75 = managedUserVM73.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM76 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', expireTime=null}", "UserDTO{login='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", false, "error.validation", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}", instant35, "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant52, strSet75);
        java.lang.String str77 = managedUserVM76.getLogin();
        java.time.Instant instant78 = managedUserVM76.getCreatedDate();
        java.lang.String str79 = managedUserVM76.getCreatedBy();
        managedUserVM76.setId((java.lang.Long) 10L);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long19);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNull(instant24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(user33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNotNull(userArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(userDTOList42);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userDTOList47);
        org.junit.Assert.assertNotNull(userList48);
        org.junit.Assert.assertNotNull(user50);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}" + "'", str77, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNotNull(instant78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str79, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList3 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str5 = loggerVM4.getName();
        loggerVM4.setLevel("error.validation");
        java.lang.String str8 = loggerVM4.getLevel();
        java.lang.String str9 = loggerVM4.toString();
        java.lang.String str10 = loggerVM4.toString();
        loggerVM4.setName("error.concurrencyFailure");
        java.lang.String str13 = loggerVM4.getName();
        logsResource0.changeLevel(loggerVM4);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str16 = loggerVM15.getName();
        loggerVM15.setLevel("error.validation");
        java.lang.String str19 = loggerVM15.getLevel();
        java.lang.String str20 = loggerVM15.toString();
        java.lang.String str21 = loggerVM15.toString();
        loggerVM15.setName("error.concurrencyFailure");
        java.lang.String str24 = loggerVM15.getLevel();
        java.lang.String str25 = loggerVM15.getName();
        loggerVM15.setLevel("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM15);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM29 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str30 = loggerVM29.getName();
        loggerVM29.setLevel("error.validation");
        java.lang.String str33 = loggerVM29.getName();
        loggerVM29.setName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str36 = loggerVM29.toString();
        logsResource0.changeLevel(loggerVM29);
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str9, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str10, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "error.concurrencyFailure" + "'", str13, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "error.validation" + "'", str19, "error.validation");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str20, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoggerVM{name='null', level='error.validation'}" + "'", str21, "LoggerVM{name='null', level='error.validation'}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "error.validation" + "'", str24, "error.validation");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "error.concurrencyFailure" + "'", str25, "error.concurrencyFailure");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}" + "'", str36, "LoggerVM{name='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', level='error.validation'}");
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        boolean boolean5 = socialUserConnection0.equals((java.lang.Object) "");
        java.lang.Long long6 = socialUserConnection0.getId();
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str10 = socialUserConnection0.getUserId();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        boolean boolean4 = user0.equals((java.lang.Object) (byte) -1);
        java.lang.String str5 = user0.getLastName();
        java.lang.String str6 = user0.getFirstName();
        java.time.Instant instant7 = user0.getResetDate();
        java.lang.String str8 = user0.getLogin();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=null}");
        user0.setId((java.lang.Long) 100L);
        java.lang.String str13 = user0.getImageUrl();
        user0.setLangKey("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLangKey();
        java.time.Instant instant9 = user6.getCreatedDate();
        persistentAuditEvent5.setAuditEventDate(instant9);
        persistentAuditEvent0.setAuditEventDate(instant9);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant9);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.time.Instant instant3 = user0.getResetDate();
        java.lang.String str4 = user0.toString();
        user0.setCreatedBy("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str4, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.User user38 = new com.unifacisa.tcc.domain.User();
        user38.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean41 = professor34.equals((java.lang.Object) user38);
        professor34.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.time.Instant instant34 = userDTO33.getLastModifiedDate();
        java.lang.String str35 = userDTO33.getLogin();
        java.lang.String str36 = userDTO33.getLastModifiedBy();
        java.lang.String str37 = userDTO33.toString();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(instant34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}" + "'", str37, "UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str9 = socialUserConnection0.getSecret();
        socialUserConnection0.setDisplayName("LoggerVM{name='null', level='error.validation'}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        boolean boolean4 = user0.getActivated();
        com.unifacisa.tcc.domain.Authority authority5 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str6 = authority5.toString();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        java.lang.String str35 = professor20.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor20.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor20.getAlunos();
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        java.lang.String str40 = user39.getCreatedBy();
        user39.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        java.time.Instant instant43 = user39.getLastModifiedDate();
        boolean boolean44 = professor20.equals((java.lang.Object) instant43);
        com.unifacisa.tcc.domain.User user46 = new com.unifacisa.tcc.domain.User();
        java.lang.String str47 = user46.getCreatedBy();
        java.lang.String str48 = user46.getLangKey();
        java.time.Instant instant49 = user46.getCreatedDate();
        java.time.Instant instant60 = null;
        java.time.Instant instant62 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM70 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant60, "error.validation", instant62, (java.util.Set<java.lang.String>) strSet68);
        java.lang.String str71 = managedUserVM70.getFirstName();
        java.lang.String str72 = managedUserVM70.getCreatedBy();
        java.util.Set<java.lang.String> strSet73 = managedUserVM70.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM74 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "Professor{id=null, primeiroNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoggerVM{name='null', level='error.validation'}", true, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", instant43, "LoginVM{username='null', rememberMe=null}", instant49, strSet73);
        user9.setResetDate(instant43);
        boolean boolean76 = authority5.equals((java.lang.Object) instant43);
        user0.setCreatedDate(instant43);
        com.unifacisa.tcc.domain.User user78 = new com.unifacisa.tcc.domain.User();
        java.lang.String str79 = user78.getCreatedBy();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent80 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant81 = persistentAuditEvent80.getAuditEventDate();
        java.lang.Long long82 = persistentAuditEvent80.getId();
        java.lang.Long long83 = persistentAuditEvent80.getId();
        com.unifacisa.tcc.domain.User user84 = new com.unifacisa.tcc.domain.User();
        java.lang.String str85 = user84.getCreatedBy();
        java.lang.String str86 = user84.getLangKey();
        java.time.Instant instant87 = user84.getCreatedDate();
        persistentAuditEvent80.setAuditEventDate(instant87);
        user78.setResetDate(instant87);
        user0.setLastModifiedDate(instant87);
        java.lang.String str91 = user0.getActivationKey();
        java.lang.String str92 = user0.getCreatedBy();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Authority{name='null'}" + "'", str6, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(instant81);
        org.junit.Assert.assertNull(long82);
        org.junit.Assert.assertNull(long83);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(instant87);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str2 = persistentAuditEvent0.getPrincipal();
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent5.getData();
        persistentAuditEvent5.setPrincipal("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.Long long9 = persistentAuditEvent5.getId();
        persistentAuditEvent5.setPrincipal("error.concurrencyFailure");
        persistentAuditEvent5.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent14 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.Long long15 = persistentAuditEvent14.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant17 = persistentAuditEvent16.getAuditEventDate();
        java.lang.Long long18 = persistentAuditEvent16.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent19 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = persistentAuditEvent19.getData();
        persistentAuditEvent16.setData(strMap20);
        persistentAuditEvent14.setData(strMap20);
        persistentAuditEvent5.setData(strMap20);
        persistentAuditEvent0.setData(strMap20);
        java.lang.Long long25 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(long25);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        java.lang.String str3 = user0.getPassword();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent4 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant5 = persistentAuditEvent4.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent4.getPrincipal();
        persistentAuditEvent4.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.getCreatedBy();
        java.lang.String str12 = user10.getLangKey();
        java.time.Instant instant13 = user10.getCreatedDate();
        persistentAuditEvent9.setAuditEventDate(instant13);
        persistentAuditEvent4.setAuditEventDate(instant13);
        user0.setLastModifiedDate(instant13);
        user0.setResetKey("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray25 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList26 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList26, userArray25);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList28 = userMapper24.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList26);
        java.util.List<com.unifacisa.tcc.domain.User> userList29 = userMapper19.userDTOsToUsers(userDTOList28);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray31 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList32 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList32, userArray31);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper30.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList32);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray36 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList37 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList37, userArray36);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList39 = userMapper35.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList37);
        java.util.List<com.unifacisa.tcc.domain.User> userList40 = userMapper30.userDTOsToUsers(userDTOList39);
        java.util.List<com.unifacisa.tcc.domain.User> userList41 = userMapper19.userDTOsToUsers(userDTOList39);
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant63 = null;
        java.time.Instant instant65 = null;
        java.time.Instant instant76 = null;
        java.time.Instant instant78 = null;
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet84 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet84, strArray83);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM86 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant76, "error.validation", instant78, (java.util.Set<java.lang.String>) strSet84);
        com.unifacisa.tcc.service.dto.UserDTO userDTO87 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant63, "", instant65, (java.util.Set<java.lang.String>) strSet84);
        com.unifacisa.tcc.service.dto.UserDTO userDTO88 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "hi!", "", "hi!", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "error.concurrencyFailure", instant51, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", instant53, (java.util.Set<java.lang.String>) strSet84);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet89 = userMapper19.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet84);
        user0.setAuthorities(authoritySet89);
        java.lang.Class<?> wildcardClass91 = authoritySet89.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(userDTOList28);
        org.junit.Assert.assertNotNull(userList29);
        org.junit.Assert.assertNotNull(userArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(userDTOList39);
        org.junit.Assert.assertNotNull(userList40);
        org.junit.Assert.assertNotNull(userList41);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(authoritySet89);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        aluno15.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str22 = professor21.getPrimeiroNome();
        java.lang.Boolean boolean23 = professor21.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = professor21.primeiroNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno15.professor(professor21);
        com.unifacisa.tcc.domain.Professor professor27 = null;
        aluno26.setProfessor(professor27);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNotNull(aluno26);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.String str6 = user0.getLastName();
        java.lang.String str7 = user0.getLastName();
        user0.setLastModifiedBy("SocialUserConnection{id=-1, userId=null, providerId='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}', providerUserId='null', rank=null, displayName='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='Authority{name='null'}', refreshToken='null', expireTime=0}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user8 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user10 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user12 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user14 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant26, "error.validation", instant28, (java.util.Set<java.lang.String>) strSet34);
        java.lang.String str37 = managedUserVM36.getFirstName();
        java.lang.String str38 = managedUserVM36.getPassword();
        java.util.Set<java.lang.String> strSet39 = managedUserVM36.getAuthorities();
        java.util.Set<java.lang.String> strSet40 = managedUserVM36.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet41 = userMapper15.authoritiesFromStrings(strSet40);
        com.unifacisa.tcc.domain.User user43 = userMapper15.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user44 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user44);
        java.lang.String str46 = user44.toString();
        java.time.Instant instant47 = user44.getCreatedDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO49 = userMapper15.userToUserDTO(user44);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO(user44);
        com.unifacisa.tcc.service.dto.UserDTO userDTO51 = userMapper0.userToUserDTO(user44);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper52 = new com.unifacisa.tcc.service.mapper.UserMapper();
        java.time.Instant instant63 = null;
        java.time.Instant instant65 = null;
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet71 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet71, strArray70);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM73 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant63, "error.validation", instant65, (java.util.Set<java.lang.String>) strSet71);
        java.lang.String str74 = managedUserVM73.getFirstName();
        java.lang.String str75 = managedUserVM73.getPassword();
        java.util.Set<java.lang.String> strSet76 = managedUserVM73.getAuthorities();
        java.util.Set<java.lang.String> strSet77 = managedUserVM73.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet78 = userMapper52.authoritiesFromStrings(strSet77);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet79 = userMapper0.authoritiesFromStrings(strSet77);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "error.concurrencyFailure" + "'", str38, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(authoritySet41);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str46, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertNotNull(userDTO49);
        org.junit.Assert.assertNotNull(userDTO51);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "error.concurrencyFailure" + "'", str75, "error.concurrencyFailure");
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(authoritySet78);
        org.junit.Assert.assertNotNull(authoritySet79);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str16 = aluno15.getEmail();
        java.lang.Boolean boolean17 = aluno15.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor18 = professor0.addAluno(aluno15);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str20 = aluno19.getEmail();
        aluno19.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection23 = new com.unifacisa.tcc.domain.SocialUserConnection();
        boolean boolean24 = aluno19.equals((java.lang.Object) socialUserConnection23);
        socialUserConnection23.setRefreshToken("error.validation");
        socialUserConnection23.setProviderUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean29 = aluno15.equals((java.lang.Object) "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str30 = aluno15.toString();
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno15.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor33 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        aluno35.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str41 = aluno40.getEmail();
        aluno40.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno35, aluno39, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        professor33.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        java.lang.String str48 = professor33.toString();
        com.unifacisa.tcc.domain.Professor professor49 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        aluno51.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str57 = aluno56.getEmail();
        aluno56.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray60 = new com.unifacisa.tcc.domain.Aluno[] { aluno50, aluno51, aluno55, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet61 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet61, alunoArray60);
        professor49.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        com.unifacisa.tcc.domain.Professor professor64 = professor33.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet61);
        aluno15.setProfessor(professor64);
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str67 = aluno66.getEmail();
        java.lang.Boolean boolean68 = aluno66.isHabilitadoTcc();
        aluno66.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa72 = aluno66.primeiroNome("hi!");
        aluno66.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno66.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor77 = professor64.removeAluno(aluno66);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str30, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str48, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(alunoArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(professor64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(pessoa72);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(professor77);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getAccessToken();
        java.lang.String str4 = socialUserConnection0.toString();
        java.lang.Long long5 = socialUserConnection0.getId();
        java.lang.String str6 = socialUserConnection0.getProfileURL();
        java.lang.String str7 = socialUserConnection0.getProviderId();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str21 = user18.getLastName();
        java.time.Instant instant22 = user18.getLastModifiedDate();
        com.unifacisa.tcc.domain.User user24 = new com.unifacisa.tcc.domain.User();
        user24.setLastName("Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str27 = user24.getLastName();
        java.time.Instant instant28 = user24.getLastModifiedDate();
        java.time.Instant instant38 = null;
        java.time.Instant instant40 = null;
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet59 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet59, strArray58);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM61 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant51, "error.validation", instant53, (java.util.Set<java.lang.String>) strSet59);
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant38, "", instant40, (java.util.Set<java.lang.String>) strSet59);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) (-1L), "LoggerVM{name='null', level='error.validation'}", "Authority{name='null'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='null', level='error.validation'}", instant22, "", instant28, (java.util.Set<java.lang.String>) strSet59);
        boolean boolean64 = socialUserConnection0.equals((java.lang.Object) "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str4, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str21, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str27, "Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant22, "error.validation", instant24, (java.util.Set<java.lang.String>) strSet30);
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant9, "", instant11, (java.util.Set<java.lang.String>) strSet30);
        java.lang.String str34 = userDTO33.getLastName();
        java.lang.String str35 = userDTO33.getCreatedBy();
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "error.concurrencyFailure" + "'", str34, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.concurrencyFailure" + "'", str35, "error.concurrencyFailure");
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        java.time.Instant instant3 = user0.getCreatedDate();
        java.lang.String str4 = user0.getActivationKey();
        java.lang.String str5 = user0.getFirstName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(instant3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = professor17.primeiroNome("");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str23 = aluno22.getEmail();
        aluno22.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str28 = aluno27.getEmail();
        aluno27.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray31 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno22, aluno26, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet32 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet32, alunoArray31);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet32);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str36 = aluno35.getEmail();
        java.lang.Boolean boolean37 = aluno35.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor38 = professor20.addAluno(aluno35);
        com.unifacisa.tcc.domain.Professor professor39 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Professor professor40 = aluno35.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str42 = aluno41.getEmail();
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor40.removeAluno(aluno41);
        aluno41.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor48 = professor17.removeAluno(aluno41);
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str52 = aluno51.getEmail();
        java.lang.Boolean boolean53 = aluno51.isHabilitadoTcc();
        aluno51.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Boolean boolean56 = aluno51.isHabilitadoTcc();
        java.lang.String str57 = aluno51.toString();
        aluno51.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        com.unifacisa.tcc.domain.Professor professor60 = professor48.addAluno(aluno51);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(alunoArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + true + "'", boolean56, true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str57, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(professor60);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor17 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str21 = aluno20.getEmail();
        aluno20.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str26 = aluno25.getEmail();
        aluno25.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray29 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno20, aluno24, aluno25 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet30 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet30, alunoArray29);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet30);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str34 = aluno33.getEmail();
        java.lang.Boolean boolean35 = aluno33.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor36 = professor18.addAluno(aluno33);
        com.unifacisa.tcc.domain.Professor professor37 = aluno33.getProfessor();
        com.unifacisa.tcc.domain.Professor professor38 = aluno33.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str40 = aluno39.getEmail();
        aluno39.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor43 = professor38.removeAluno(aluno39);
        aluno39.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor46 = professor17.removeAluno(aluno39);
        professor17.setEmail("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=0, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(alunoArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(professor46);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str3 = aluno2.getEmail();
        aluno2.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str8 = aluno7.getEmail();
        aluno7.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray11 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno2, aluno6, aluno7 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet12 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet12, alunoArray11);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet12);
        java.lang.String str15 = professor0.toString();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet16 = professor0.getAlunos();
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM49 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant39, "error.validation", instant41, (java.util.Set<java.lang.String>) strSet47);
        com.unifacisa.tcc.service.dto.UserDTO userDTO50 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "", "", "error.concurrencyFailure", "error.concurrencyFailure", true, "hi!", "error.validation", "error.concurrencyFailure", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet47);
        java.lang.String str51 = userDTO50.getLastName();
        java.lang.String str52 = userDTO50.getEmail();
        userDTO50.setId((java.lang.Long) 0L);
        java.lang.String str55 = userDTO50.getImageUrl();
        userDTO50.setLogin("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        boolean boolean58 = professor0.equals((java.lang.Object) userDTO50);
        professor0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(alunoArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str15, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(alunoSet16);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "error.concurrencyFailure" + "'", str51, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "error.concurrencyFailure" + "'", str52, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!" + "'", str55, "hi!");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        java.lang.String str2 = loggerVM0.toString();
        java.lang.String str3 = loggerVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str2, "LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str3, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        socialUserConnection0.setImageURL("error.concurrencyFailure");
        java.lang.Long long4 = socialUserConnection0.getExpireTime();
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        java.lang.Long long9 = socialUserConnection0.getId();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long9);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str11 = socialUserConnection0.getProfileURL();
        java.lang.String str12 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        java.lang.String str16 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor18 = professor1.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        aluno0.setProfessor(professor34);
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        java.lang.Boolean boolean40 = professor37.isDiponibilidade();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + true + "'", boolean40, true);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLastModifiedBy();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        java.lang.String str5 = user0.toString();
        com.unifacisa.tcc.domain.User user6 = new com.unifacisa.tcc.domain.User();
        java.lang.String str7 = user6.getCreatedBy();
        java.lang.String str8 = user6.getLastModifiedBy();
        user6.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        java.lang.String str12 = user11.getCreatedBy();
        user11.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO15 = new com.unifacisa.tcc.service.dto.UserDTO(user11);
        java.time.Instant instant16 = userDTO15.getLastModifiedDate();
        user6.setCreatedDate(instant16);
        user0.setResetDate(instant16);
        java.lang.String str19 = user0.getFirstName();
        java.lang.String str20 = user0.getLastName();
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM21 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        java.lang.String str22 = keyAndPasswordVM21.getNewPassword();
        java.lang.String str23 = keyAndPasswordVM21.getNewPassword();
        keyAndPasswordVM21.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM21.setKey("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='ManagedUserVM{} UserDTO{login='hi!', firstName='hi!', lastName='error.concurrencyFailure', email='error.validation', imageUrl='', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='error.validation', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=10}");
        java.lang.String str28 = keyAndPasswordVM21.getNewPassword();
        boolean boolean29 = user0.equals((java.lang.Object) keyAndPasswordVM21);
        java.lang.String str30 = keyAndPasswordVM21.getNewPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str28, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str30, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.getCreatedBy();
        java.lang.String str2 = user0.getLangKey();
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str6 = aluno5.getEmail();
        aluno5.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str11 = aluno10.getEmail();
        aluno10.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray14 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno5, aluno9, aluno10 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet15 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet15, alunoArray14);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet15);
        java.lang.String str18 = professor3.toString();
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str22 = aluno21.getEmail();
        aluno21.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str27 = aluno26.getEmail();
        aluno26.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno21, aluno25, aluno26 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor19.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        com.unifacisa.tcc.domain.Professor professor34 = professor3.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        boolean boolean35 = user0.equals((java.lang.Object) professor3);
        java.lang.String str36 = user0.getLogin();
        user0.setId((java.lang.Long) 0L);
        java.time.Instant instant39 = user0.getCreatedDate();
        com.unifacisa.tcc.domain.User user40 = new com.unifacisa.tcc.domain.User();
        java.lang.String str41 = user40.getCreatedBy();
        user40.setFirstName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO(user40);
        java.time.Instant instant45 = userDTO44.getLastModifiedDate();
        user0.setResetDate(instant45);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(alunoArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(instant45);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("User{login='null', firstName='null', lastName='Aluno{id=-1, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='0', habilitadoTcc='false'}", "LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='LoggerVM{name='null', level='error.validation'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}'}", (java.lang.Long) 0L, "LoginVM{username='SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}', rememberMe=true}", "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='error.concurrencyFailure', imageURL='error.concurrencyFailure', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "", "Authority{name='Professor{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', numeroContato='null', diponibilidade='false'}'}", "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", (java.lang.Long) 1L);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno3 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str4 = aluno3.getEmail();
        aluno3.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.String str9 = aluno8.getEmail();
        aluno8.setNumeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno[] alunoArray12 = new com.unifacisa.tcc.domain.Aluno[] { aluno2, aluno3, aluno7, aluno8 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet13 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet13, alunoArray12);
        professor1.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet13);
        aluno0.setProfessor(professor1);
        professor1.setSegundoNome("LoginVM{username='null', rememberMe=null}");
        professor1.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Boolean boolean21 = professor1.isDiponibilidade();
        com.unifacisa.tcc.domain.Aluno aluno22 = null;
        // The following exception was thrown during execution in test generation
        try {
            com.unifacisa.tcc.domain.Professor professor23 = professor1.removeAluno(aluno22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(alunoArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("error.concurrencyFailure");
        java.lang.String str3 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str6 = keyAndPasswordVM0.getKey();
        java.lang.String str7 = keyAndPasswordVM0.getNewPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "error.concurrencyFailure" + "'", str6, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.dto.UserDTO userDTO1 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getEmail();
        java.lang.String str4 = user0.getLogin();
        java.lang.String str5 = user0.getLastModifiedBy();
        java.lang.Long long6 = user0.getId();
        user0.setResetKey("LoggerVM{name='null', level='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        java.lang.String str1 = socialUserConnection0.getUserId();
        java.lang.Long long2 = socialUserConnection0.getRank();
        java.lang.String str3 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setProfileURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setDisplayName("UserDTO{login='', firstName='', lastName='error.concurrencyFailure', email='error.concurrencyFailure', imageUrl='hi!', activated=true, langKey='error.validation', createdBy=error.concurrencyFailure, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[hi!, error.validation, ]}");
        socialUserConnection0.setId((java.lang.Long) 0L);
        socialUserConnection0.setUserId("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "error.validation", "error.validation", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM20 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "hi!", "error.concurrencyFailure", "hi!", "error.concurrencyFailure", "error.validation", false, "", "", "", instant10, "error.validation", instant12, (java.util.Set<java.lang.String>) strSet18);
        java.lang.String str21 = managedUserVM20.getFirstName();
        java.util.Set<java.lang.String> strSet22 = managedUserVM20.getAuthorities();
        java.lang.String str23 = managedUserVM20.getLastName();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "error.concurrencyFailure" + "'", str23, "error.concurrencyFailure");
    }
}
