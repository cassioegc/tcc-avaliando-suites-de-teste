import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test3001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3001");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("");
        java.lang.String str13 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3002");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', rememberMe=false}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3003");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        professor0.setPrimeiroNome("");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor0.primeiroNome("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        java.lang.String str9 = professor0.getSegundoNome();
        java.lang.String str10 = professor0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=null, primeiroNome='LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str10, "Professor{id=null, primeiroNome='LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test3004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3004");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.Boolean boolean5 = loginVM0.isRememberMe();
        loginVM0.setUsername("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        loginVM0.setPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str10 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3005");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str1 = loggerVM0.getName();
        java.lang.String str2 = loggerVM0.getLevel();
        java.lang.String str3 = loggerVM0.getLevel();
        loggerVM0.setLevel("Authority{name=''}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test3006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3006");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant9 = user0.getResetDate();
        java.lang.Long long10 = user0.getId();
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setLangKey("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor17 = professor15.diponibilidade((java.lang.Boolean) true);
        professor17.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor17.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.String str25 = aluno22.getPrimeiroNome();
        java.lang.Long long26 = aluno22.getMatricula();
        java.lang.Boolean boolean27 = aluno22.isHabilitadoTcc();
        java.lang.String str28 = aluno22.toString();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long30 = aluno29.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa32 = aluno29.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        aluno33.setPrimeiroNome("");
        java.lang.Long long36 = aluno33.getMatricula();
        java.lang.Long long37 = aluno33.getMatricula();
        aluno33.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = aluno33.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno43 = aluno33.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean46 = aluno44.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long48 = aluno47.getId();
        aluno47.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.String str51 = aluno47.toString();
        com.unifacisa.tcc.domain.Aluno[] alunoArray52 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno29, aluno33, aluno44, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet53 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet53, alunoArray52);
        com.unifacisa.tcc.domain.Professor professor55 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet53);
        java.lang.Long long56 = professor17.getNumeroContato();
        boolean boolean57 = user0.equals((java.lang.Object) professor17);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str28, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(pessoa32);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(aluno43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str51, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(alunoArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(long56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test3007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3007");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        java.time.Instant instant15 = null;
        java.time.Instant instant17 = null;
        java.time.Instant instant27 = null;
        java.time.Instant instant29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant27, "hi!", instant29, (java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM36 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant15, "", instant17, (java.util.Set<java.lang.String>) strSet33);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet37 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet33);
        com.unifacisa.tcc.domain.User user38 = new com.unifacisa.tcc.domain.User();
        user38.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user38.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user45 = userMapper43.userFromId((java.lang.Long) 100L);
        user45.setLangKey("");
        java.time.Instant instant48 = user45.getResetDate();
        java.time.Instant instant49 = user45.getCreatedDate();
        user38.setResetDate(instant49);
        java.time.Instant instant51 = null;
        user38.setCreatedDate(instant51);
        java.lang.String str53 = user38.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        java.lang.String str55 = user54.toString();
        boolean boolean56 = user38.equals((java.lang.Object) user54);
        user38.setEmail("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user38);
        java.lang.String str60 = user38.getResetKey();
        java.lang.Long long61 = user38.getId();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(authoritySet37);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertNull(instant48);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str55, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(long61);
    }

    @Test
    public void test3008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3008");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant15 = managedUserVM14.getCreatedDate();
        java.lang.Long long16 = managedUserVM14.getId();
        java.time.Instant instant17 = managedUserVM14.getCreatedDate();
        java.lang.String str18 = managedUserVM14.getLastModifiedBy();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity19 = userResource3.createUser(managedUserVM14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test3009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3009");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        aluno2.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        com.unifacisa.tcc.domain.Professor professor13 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno2.professor(professor7);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str17 = aluno2.toString();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity18 = alunoResource1.createAluno(aluno2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.unifacisa.tcc.domain.Aluno> alunoList19 = alunoResource1.getAllAlunos();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str17, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(alunoResponseEntity18);
    }

    @Test
    public void test3010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3010");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        java.lang.String str12 = professor7.toString();
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno0.professor(professor7);
        java.lang.String str14 = aluno0.getEmail();
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(aluno13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test3011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3011");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        loggingAspect4.springBeanPointcut();
        loggingAspect4.springBeanPointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test3012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3012");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        aluno6.setPrimeiroNome("");
        java.lang.Long long9 = aluno6.getMatricula();
        java.lang.Long long10 = aluno6.getMatricula();
        aluno6.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = aluno6.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno6.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor18 = null;
        aluno17.setProfessor(professor18);
        aluno17.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = aluno17.primeiroNome("hi!");
        java.lang.Long long24 = aluno17.getId();
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno17.habilitadoTcc((java.lang.Boolean) false);
        aluno17.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str30 = professor29.toString();
        com.unifacisa.tcc.domain.Professor professor32 = professor29.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet33 = professor29.getAlunos();
        java.lang.Long long34 = professor29.getNumeroContato();
        professor29.setMatricula((java.lang.Long) (-1L));
        aluno17.setProfessor(professor29);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno16.professor(professor29);
        com.unifacisa.tcc.domain.Professor professor39 = professor2.removeAluno(aluno16);
        professor2.setMatricula((java.lang.Long) 100L);
        professor2.setEmail("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str30, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(alunoSet33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(professor39);
    }

    @Test
    public void test3013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3013");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setAuditEventType("UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:49.938Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:49.938Z, authorities=[]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test3014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3014");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.concurrencyFailure", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3015");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        java.lang.String str8 = aluno0.getSegundoNome();
        aluno0.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str11 = aluno0.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno0.setProfessor(professor12);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3016");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        user4.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str7 = user4.getResetKey();
        user4.setId((java.lang.Long) 10L);
        java.lang.String str10 = user4.getLangKey();
        user4.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user4.setImageUrl("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        java.time.Instant instant15 = user4.getLastModifiedDate();
        persistentAuditEvent0.setAuditEventDate(instant15);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(instant15);
    }

    @Test
    public void test3017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3017");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user2.getAuthorities();
        java.lang.String str18 = user2.toString();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str21 = user2.getFirstName();
        java.lang.String str22 = user2.toString();
        user2.setPassword("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=-1, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(authoritySet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str18, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str22, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
    }

    @Test
    public void test3018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3018");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        java.time.Instant instant10 = user0.getLastModifiedDate();
        java.time.Instant instant11 = user0.getResetDate();
        java.lang.String str12 = user0.getResetKey();
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3019");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.String str11 = loginVM0.toString();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}" + "'", str11, "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
    }

    @Test
    public void test3020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3020");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', habilitadoTcc='false'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository2.createConnectionRepository("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
    }

    @Test
    public void test3021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3021");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        user2.setLastName("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet7 = user2.getAuthorities();
        java.lang.String str8 = user2.getLastName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray10 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList11 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList11, userArray10);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList13 = userMapper9.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList11);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant24, "", instant26, (java.util.Set<java.lang.String>) strSet42);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet46 = userMapper9.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user49 = userMapper47.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user52 = userMapper50.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper54 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user56 = userMapper54.userFromId((java.lang.Long) 100L);
        user56.setLangKey("");
        java.time.Instant instant59 = user56.getResetDate();
        java.time.Instant instant60 = user56.getCreatedDate();
        user53.setCreatedDate(instant60);
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = userMapper50.userToUserDTO(user53);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper63 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray64 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList65 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList65, userArray64);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList67 = userMapper63.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList65);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList68 = userMapper50.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList65);
        java.util.List<com.unifacisa.tcc.domain.User> userList69 = userMapper47.userDTOsToUsers(userDTOList68);
        java.util.List<com.unifacisa.tcc.domain.User> userList70 = userMapper9.userDTOsToUsers(userDTOList68);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user74 = new com.unifacisa.tcc.domain.User();
        user74.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM77 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet78 = managedUserVM77.getAuthorities();
        boolean boolean79 = user74.equals((java.lang.Object) strSet78);
        java.time.Instant instant80 = user74.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper71.userToUserDTO(user74);
        java.time.Instant instant82 = userDTO81.getCreatedDate();
        java.util.Set<java.lang.String> strSet83 = userDTO81.getAuthorities();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet84 = userMapper9.authoritiesFromStrings(strSet83);
        user2.setAuthorities(authoritySet84);
        java.time.Instant instant86 = user2.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(authoritySet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(userArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(userDTOList13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(authoritySet46);
        org.junit.Assert.assertNotNull(user49);
        org.junit.Assert.assertNotNull(user52);
        org.junit.Assert.assertNotNull(user56);
        org.junit.Assert.assertNull(instant59);
        org.junit.Assert.assertNotNull(instant60);
        org.junit.Assert.assertNotNull(userDTO62);
        org.junit.Assert.assertNotNull(userArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(userDTOList67);
        org.junit.Assert.assertNotNull(userDTOList68);
        org.junit.Assert.assertNotNull(userList69);
        org.junit.Assert.assertNotNull(userList70);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(strSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(instant80);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertNotNull(instant82);
        org.junit.Assert.assertNotNull(strSet83);
        org.junit.Assert.assertNotNull(authoritySet84);
        org.junit.Assert.assertNotNull(instant86);
    }

    @Test
    public void test3022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3022");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = loggerVM0.toString();
        loggerVM0.setName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        java.lang.String str6 = loggerVM0.getLevel();
        java.lang.String str7 = loggerVM0.toString();
        loggerVM0.setName("LoggerVM{name='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}', level='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str3, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoggerVM{name='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}', level='null'}" + "'", str7, "LoggerVM{name='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}', level='null'}");
    }

    @Test
    public void test3023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3023");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        java.lang.String str9 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str12 = loginVM0.getPassword();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}" + "'", str9, "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3024");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str5 = socialUserConnection0.getProfileURL();
        java.lang.String str6 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProfileURL("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "error.concurrencyFailure" + "'", str6, "error.concurrencyFailure");
    }

    @Test
    public void test3025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3025");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        aluno2.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        com.unifacisa.tcc.domain.Professor professor13 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno2.professor(professor7);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str17 = aluno2.toString();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity18 = alunoResource1.createAluno(aluno2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity20 = alunoResource1.getAluno((java.lang.Long) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str17, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(alunoResponseEntity18);
    }

    @Test
    public void test3026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3026");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long12 = aluno11.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = aluno11.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno11.numeroContato((java.lang.Long) 1L);
        aluno11.setSegundoNome("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Boolean boolean19 = aluno11.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor20 = professor0.removeAluno(aluno11);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet21 = professor0.getAlunos();
        com.unifacisa.tcc.domain.Professor professor23 = professor0.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNotNull(pessoa16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNotNull(alunoSet21);
        org.junit.Assert.assertNotNull(professor23);
    }

    @Test
    public void test3027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3027");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str4 = persistentAuditEvent3.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent5.setId((java.lang.Long) 1L);
        java.lang.String str8 = persistentAuditEvent5.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent5.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent10.setId((java.lang.Long) 1L);
        java.lang.String str13 = persistentAuditEvent10.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = persistentAuditEvent10.getData();
        persistentAuditEvent5.setData(strMap14);
        persistentAuditEvent3.setData(strMap14);
        persistentAuditEvent0.setData(strMap14);
        persistentAuditEvent0.setAuditEventType("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap20 = persistentAuditEvent0.getData();
        java.lang.String str21 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setPrincipal("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}" + "'", str21, "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
    }

    @Test
    public void test3028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3028");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity5 = userResource3.deleteUser("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', diponibilidade='true'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3029");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        com.unifacisa.tcc.domain.Professor professor7 = aluno0.getProfessor();
        aluno0.setNumeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor10 = new com.unifacisa.tcc.domain.Professor();
        java.lang.Long long11 = professor10.getMatricula();
        java.lang.String str12 = professor10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno13 = aluno0.professor(professor10);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(professor7);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(aluno13);
    }

    @Test
    public void test3030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3030");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        java.lang.String str4 = user2.getActivationKey();
        java.lang.String str5 = user2.getImageUrl();
        user2.setActivationKey("LoggerVM{name='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', level='Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3031");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getFirstName();
        java.lang.String str20 = userDTO17.getEmail();
        java.lang.String str21 = userDTO17.getLogin();
        java.lang.String str22 = userDTO17.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str22, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3032");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.lang.String str17 = user13.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = userMapper0.userToUserDTO(user13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper19.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper0.usersToUserDTOs(userList33);
        com.unifacisa.tcc.domain.User user36 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray38 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList39 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList39, userArray38);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList41 = userMapper37.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList39);
        java.time.Instant instant52 = null;
        java.time.Instant instant54 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant64, "hi!", instant66, (java.util.Set<java.lang.String>) strSet70);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM73 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant52, "", instant54, (java.util.Set<java.lang.String>) strSet70);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet74 = userMapper37.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet70);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet75 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet70);
        com.unifacisa.tcc.domain.User user77 = userMapper0.userFromId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(userDTOList41);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(authoritySet74);
        org.junit.Assert.assertNotNull(authoritySet75);
        org.junit.Assert.assertNotNull(user77);
    }

    @Test
    public void test3033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3033");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity5 = userResource3.getUser("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3034");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("LoginVM{username='null', rememberMe=false}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test3035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3035");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        user2.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str24 = user2.getLastName();
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection25 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection25.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection25.setRank((java.lang.Long) 10L);
        socialUserConnection25.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection25.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection25.setProviderUserId("");
        java.lang.String str36 = socialUserConnection25.getUserId();
        boolean boolean37 = user2.equals((java.lang.Object) str36);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3036");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.lang.String str6 = user2.getEmail();
        java.time.Instant instant7 = user2.getLastModifiedDate();
        user2.setCreatedBy("");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant7);
    }

    @Test
    public void test3037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3037");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant10, "hi!", instant12, (java.util.Set<java.lang.String>) strSet28);
        managedUserVM31.setLogin("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test3038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3038");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList2 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource3 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList4 = logsResource3.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM5.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM5.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource3.changeLevel(loggerVM5);
        loggerVM5.setName("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        loggerVM5.setLevel("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        logsResource0.changeLevel(loggerVM5);
        java.lang.String str16 = loggerVM5.toString();
        java.lang.String str17 = loggerVM5.toString();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNotNull(loggerVMList2);
        org.junit.Assert.assertNotNull(loggerVMList4);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}" + "'", str16, "LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}" + "'", str17, "LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
    }

    @Test
    public void test3039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3039");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', habilitadoTcc='false'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3040");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getFirstName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test3041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3041");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        professor6.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor10 = null;
        aluno9.setProfessor(professor10);
        aluno9.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno9.primeiroNome("hi!");
        java.lang.Long long16 = aluno9.getId();
        com.unifacisa.tcc.domain.Aluno aluno18 = aluno9.habilitadoTcc((java.lang.Boolean) false);
        aluno9.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str22 = professor21.toString();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor24 = null;
        aluno23.setProfessor(professor24);
        java.lang.Long long26 = aluno23.getMatricula();
        java.lang.String str27 = aluno23.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor31 = aluno28.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        java.lang.Long long39 = aluno36.getMatricula();
        java.lang.String str40 = aluno36.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean43 = aluno41.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor44 = aluno41.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor46 = null;
        aluno45.setProfessor(professor46);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor52 = null;
        aluno51.setProfessor(professor52);
        aluno51.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor57 = null;
        aluno56.setProfessor(professor57);
        java.lang.Long long59 = aluno56.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean63 = aluno61.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor65 = null;
        aluno64.setProfessor(professor65);
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno23, aluno28, aluno32, aluno35, aluno36, aluno41, aluno45, aluno48, aluno51, aluno56, aluno60, aluno61, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        com.unifacisa.tcc.domain.Professor professor70 = professor21.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Aluno aluno71 = aluno9.professor(professor21);
        com.unifacisa.tcc.domain.Aluno aluno73 = aluno71.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor74 = aluno73.getProfessor();
        com.unifacisa.tcc.domain.Professor professor75 = professor6.removeAluno(aluno73);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = professor6.email("");
        com.unifacisa.tcc.domain.Aluno aluno78 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor79 = null;
        aluno78.setProfessor(professor79);
        aluno78.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor83 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor85 = professor83.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa87 = professor83.email("");
        com.unifacisa.tcc.domain.Professor professor89 = professor83.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno90 = aluno78.professor(professor89);
        com.unifacisa.tcc.domain.Professor professor91 = professor6.removeAluno(aluno78);
        com.unifacisa.tcc.domain.Aluno aluno92 = aluno0.professor(professor6);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNotNull(aluno18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str22, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(professor31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(professor44);
        org.junit.Assert.assertNull(long59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(aluno71);
        org.junit.Assert.assertNotNull(aluno73);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(pessoa77);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertNotNull(pessoa87);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertNotNull(aluno90);
        org.junit.Assert.assertNotNull(professor91);
        org.junit.Assert.assertNotNull(aluno92);
    }

    @Test
    public void test3042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3042");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        user10.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.String str25 = aluno22.getPrimeiroNome();
        java.lang.Long long26 = aluno22.getMatricula();
        boolean boolean27 = user17.equals((java.lang.Object) aluno22);
        user17.setFirstName("");
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        user30.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user30.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user37 = userMapper35.userFromId((java.lang.Long) 100L);
        user37.setLangKey("");
        java.time.Instant instant40 = user37.getResetDate();
        java.time.Instant instant41 = user37.getCreatedDate();
        user30.setResetDate(instant41);
        user17.setCreatedDate(instant41);
        user10.setResetDate(instant41);
        persistentAuditEvent0.setAuditEventDate(instant41);
        java.time.Instant instant46 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.util.Map<java.lang.String, java.lang.String> strMap49 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(user37);
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNull(strMap49);
    }

    @Test
    public void test3043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3043");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        boolean boolean1 = userDTO0.isActivated();
        java.lang.String str2 = userDTO0.getLastName();
        userDTO0.setLogin("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test3044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3044");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityUpdateAlert("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}", "Authority{name='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3045");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity46 = userResource3.deleteUser("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
    }

    @Test
    public void test3046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3046");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.email("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        java.lang.Long long6 = aluno0.getNumeroContato();
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test3047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3047");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno12.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno12.matricula((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertNotNull(pessoa16);
    }

    @Test
    public void test3048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3048");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.String str6 = managedUserVM4.getCreatedBy();
        managedUserVM4.setLogin("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity9 = userResource3.updateUser(managedUserVM4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3049");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        aluno39.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor46 = professor44.diponibilidade((java.lang.Boolean) true);
        professor46.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        aluno49.setHabilitadoTcc((java.lang.Boolean) false);
        aluno49.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        aluno57.setPrimeiroNome("");
        java.lang.Long long60 = aluno57.getMatricula();
        java.lang.Long long61 = aluno57.getMatricula();
        aluno57.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        java.lang.Long long68 = aluno64.getMatricula();
        aluno64.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno57, aluno64, aluno71 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        com.unifacisa.tcc.domain.Professor professor75 = professor46.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno39.professor(professor75);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno76.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno76.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor81 = professor38.removeAluno(aluno76);
        java.lang.Boolean boolean82 = aluno76.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa84 = aluno76.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor85 = aluno76.getProfessor();
        java.lang.Boolean boolean86 = aluno76.isHabilitadoTcc();
        aluno76.setNumeroContato((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa90 = aluno76.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor91 = aluno76.getProfessor();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
        org.junit.Assert.assertNotNull(pessoa84);
        org.junit.Assert.assertNull(professor85);
        org.junit.Assert.assertEquals("'" + boolean86 + "' != '" + false + "'", boolean86, false);
        org.junit.Assert.assertNotNull(pessoa90);
        org.junit.Assert.assertNull(professor91);
    }

    @Test
    public void test3050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3050");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.lang.String str17 = user13.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = userMapper0.userToUserDTO(user13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper19.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper0.usersToUserDTOs(userList33);
        com.unifacisa.tcc.domain.User user36 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray38 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList39 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList39, userArray38);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList41 = userMapper37.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList39);
        java.time.Instant instant52 = null;
        java.time.Instant instant54 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant64, "hi!", instant66, (java.util.Set<java.lang.String>) strSet70);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM73 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant52, "", instant54, (java.util.Set<java.lang.String>) strSet70);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet74 = userMapper37.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet70);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet75 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet70);
        com.unifacisa.tcc.domain.User user77 = userMapper0.userFromId((java.lang.Long) 10L);
        java.time.Instant instant78 = user77.getCreatedDate();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(userDTOList41);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(authoritySet74);
        org.junit.Assert.assertNotNull(authoritySet75);
        org.junit.Assert.assertNotNull(user77);
        org.junit.Assert.assertNotNull(instant78);
    }

    @Test
    public void test3051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3051");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.lang.String str2 = managedUserVM0.getLogin();
        java.lang.String str3 = managedUserVM0.getFirstName();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        managedUserVM0.setId((java.lang.Long) 1L);
        managedUserVM0.setId((java.lang.Long) 1L);
        boolean boolean9 = managedUserVM0.isActivated();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3052");
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        user10.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM13 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet14 = managedUserVM13.getAuthorities();
        boolean boolean15 = user10.equals((java.lang.Object) strSet14);
        java.time.Instant instant16 = user10.getLastModifiedDate();
        user10.setFirstName("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 100L);
        user23.setLangKey("");
        java.time.Instant instant26 = user23.getResetDate();
        java.time.Instant instant27 = user23.getCreatedDate();
        managedUserVM19.setLastModifiedDate(instant27);
        user10.setCreatedDate(instant27);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str32 = managedUserVM31.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper33 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user35 = userMapper33.userFromId((java.lang.Long) 100L);
        user35.setLangKey("");
        java.time.Instant instant38 = user35.getResetDate();
        java.time.Instant instant39 = user35.getCreatedDate();
        managedUserVM31.setLastModifiedDate(instant39);
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.time.Instant instant63 = null;
        java.time.Instant instant65 = null;
        java.lang.String[] strArray68 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet69 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet69, strArray68);
        com.unifacisa.tcc.service.dto.UserDTO userDTO71 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant63, "hi!", instant65, (java.util.Set<java.lang.String>) strSet69);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM72 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant51, "", instant53, (java.util.Set<java.lang.String>) strSet69);
        java.time.Instant instant73 = managedUserVM72.getCreatedDate();
        java.lang.String str74 = managedUserVM72.getLangKey();
        java.lang.String str75 = managedUserVM72.toString();
        java.util.Set<java.lang.String> strSet76 = managedUserVM72.getAuthorities();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM77 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 10L, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}", "", "Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", false, "ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Aluno{id=null, primeiroNome='hi!', segundoNome='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}", instant27, "LoginVM{username='null', rememberMe=null}", instant39, strSet76);
        java.time.Instant instant78 = managedUserVM77.getCreatedDate();
        org.junit.Assert.assertNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNotNull(instant27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(user35);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(instant73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str75, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(strSet76);
        org.junit.Assert.assertNotNull(instant78);
    }

    @Test
    public void test3053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3053");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setRank((java.lang.Long) 1L);
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setRank((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test3054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3054");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long10 = aluno9.getId();
        java.lang.String str11 = aluno9.getEmail();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = aluno9.segundoNome("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(pessoa13);
    }

    @Test
    public void test3055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3055");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor0.email("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Boolean boolean7 = professor0.isDiponibilidade();
        professor0.setNumeroContato((java.lang.Long) 100L);
        professor0.setDiponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + true + "'", boolean7, true);
    }

    @Test
    public void test3056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3056");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        java.lang.String str9 = loginVM0.getUsername();
        java.lang.String str10 = loginVM0.getUsername();
        loginVM0.setUsername("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        java.lang.String str13 = loginVM0.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str9, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str10, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoginVM{username='LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}', rememberMe=true}" + "'", str13, "LoginVM{username='LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}', rememberMe=true}");
    }

    @Test
    public void test3057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3057");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long7 = professor4.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor4.email("error.validation");
        professor4.setId((java.lang.Long) 0L);
        professor4.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Long long14 = professor4.getNumeroContato();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity15 = professorResource1.createProfessor(professor4);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = professor4.email("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNotNull(professorResponseEntity15);
        org.junit.Assert.assertNotNull(pessoa17);
    }

    @Test
    public void test3058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3058");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        org.springframework.core.env.Environment environment5 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect6 = loggingAspectConfiguration0.loggingAspect(environment5);
        org.springframework.core.env.Environment environment7 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect8 = loggingAspectConfiguration0.loggingAspect(environment7);
        org.springframework.core.env.Environment environment9 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect10 = loggingAspectConfiguration0.loggingAspect(environment9);
        loggingAspect10.applicationPackagePointcut();
        org.aspectj.lang.ProceedingJoinPoint proceedingJoinPoint12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj13 = loggingAspect10.logAround(proceedingJoinPoint12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
        org.junit.Assert.assertNotNull(loggingAspect6);
        org.junit.Assert.assertNotNull(loggingAspect8);
        org.junit.Assert.assertNotNull(loggingAspect10);
    }

    @Test
    public void test3059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3059");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str7 = professor2.getEmail();
        professor2.setId((java.lang.Long) 1L);
        java.lang.String str10 = professor2.toString();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Professor{id=1, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', diponibilidade='true'}" + "'", str10, "Professor{id=1, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test3060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3060");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        user16.setEmail("LoggerVM{name='null', level='null'}");
        java.time.Instant instant21 = user16.getResetDate();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(instant21);
    }

    @Test
    public void test3061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3061");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str7 = professor2.getSegundoNome();
        java.lang.Long long8 = professor2.getId();
        com.unifacisa.tcc.domain.Professor professor10 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor12 = professor10.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno13.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno23 = aluno13.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = aluno13.segundoNome("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.domain.Professor professor26 = aluno13.getProfessor();
        com.unifacisa.tcc.domain.Professor professor27 = professor12.removeAluno(aluno13);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet28 = professor27.getAlunos();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professor12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNotNull(aluno23);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(professor26);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertNotNull(alunoSet28);
    }

    @Test
    public void test3062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3062");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.String str3 = aluno0.getPrimeiroNome();
        java.lang.Long long4 = aluno0.getMatricula();
        java.lang.Boolean boolean5 = aluno0.isHabilitadoTcc();
        java.lang.String str6 = aluno0.toString();
        java.lang.String str7 = aluno0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str7, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test3063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3063");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        user0.setLastModifiedBy("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user12.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user12.getAuthorities();
        java.time.Instant instant18 = user12.getCreatedDate();
        userDTO11.setLastModifiedDate(instant18);
        java.lang.String str20 = userDTO11.getLastName();
        java.lang.String str21 = userDTO11.getCreatedBy();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet17);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str20, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str21, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3064");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setId((java.lang.Long) 10L);
        java.lang.String str6 = user0.getLangKey();
        user0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setImageUrl("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 10L);
        java.lang.String str14 = user13.getPassword();
        java.lang.String str15 = user13.getActivationKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        user18.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant25 = user18.getCreatedDate();
        user13.setCreatedDate(instant25);
        user0.setCreatedDate(instant25);
        user0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNotNull(instant25);
    }

    @Test
    public void test3065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3065");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        aluno39.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor46 = professor44.diponibilidade((java.lang.Boolean) true);
        professor46.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        aluno49.setHabilitadoTcc((java.lang.Boolean) false);
        aluno49.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        aluno57.setPrimeiroNome("");
        java.lang.Long long60 = aluno57.getMatricula();
        java.lang.Long long61 = aluno57.getMatricula();
        aluno57.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        java.lang.Long long68 = aluno64.getMatricula();
        aluno64.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray72 = new com.unifacisa.tcc.domain.Aluno[] { aluno49, aluno57, aluno64, aluno71 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet73 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet73, alunoArray72);
        com.unifacisa.tcc.domain.Professor professor75 = professor46.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet73);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno39.professor(professor75);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = aluno76.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno80 = aluno76.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor81 = professor38.removeAluno(aluno76);
        java.lang.Boolean boolean82 = aluno76.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa84 = aluno76.primeiroNome("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa86 = aluno76.primeiroNome("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(alunoArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(aluno80);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
        org.junit.Assert.assertNotNull(pessoa84);
        org.junit.Assert.assertNotNull(pessoa86);
    }

    @Test
    public void test3066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3066");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        userDTO0.setId((java.lang.Long) 0L);
        java.lang.String str3 = userDTO0.getCreatedBy();
        userDTO0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test3067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3067");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor22 = professor20.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.String str34 = aluno30.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean45 = aluno43.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        aluno46.setPrimeiroNome("");
        java.lang.Long long49 = aluno46.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray53 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno29, aluno30, aluno35, aluno38, aluno43, aluno46, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet54 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet54, alunoArray53);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        com.unifacisa.tcc.domain.Professor professor57 = professor22.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        java.lang.Long long58 = professor57.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor57.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa61 = professor57.segundoNome("hi!");
        java.lang.String str62 = professor57.getPrimeiroNome();
        java.lang.Long long63 = professor57.getMatricula();
        aluno15.setProfessor(professor57);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity65 = professorResource1.updateProfessor(professor57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNotNull(alunoArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertNotNull(pessoa61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(long63);
    }

    @Test
    public void test3068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3068");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet39 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.segundoNome("hi!");
        professor37.setNumeroContato((java.lang.Long) 1L);
        java.lang.String str44 = professor37.toString();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoSet39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='hi!', matricula='null', email='null', numeroContato='1', diponibilidade='true'}" + "'", str44, "Professor{id=null, primeiroNome='null', segundoNome='hi!', matricula='null', email='null', numeroContato='1', diponibilidade='true'}");
    }

    @Test
    public void test3069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3069");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}", "Authority{name='error.concurrencyFailure'}", (java.lang.Long) 10L, "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}", "Authority{name='error.concurrencyFailure'}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", (java.lang.Long) 1L);
        java.lang.String str12 = socialUserConnection11.getSecret();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str12, "Authority{name='error.concurrencyFailure'}");
    }

    @Test
    public void test3070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3070");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant9 = persistentAuditEvent8.getAuditEventDate();
        java.time.Instant instant10 = null;
        persistentAuditEvent8.setAuditEventDate(instant10);
        persistentAuditEvent8.setId((java.lang.Long) 1L);
        persistentAuditEvent8.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent16 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent16.setId((java.lang.Long) 1L);
        java.lang.String str19 = persistentAuditEvent16.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap20 = persistentAuditEvent16.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent21 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent21.setId((java.lang.Long) 1L);
        java.lang.String str24 = persistentAuditEvent21.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = persistentAuditEvent21.getData();
        persistentAuditEvent16.setData(strMap25);
        persistentAuditEvent8.setData(strMap25);
        persistentAuditEvent0.setData(strMap25);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str7, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test3071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3071");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long5 = professor2.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = professor2.email("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        pessoa7.setMatricula((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNotNull(pessoa7);
    }

    @Test
    public void test3072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3072");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setAuditEventType("");
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        java.lang.Long long9 = persistentAuditEvent0.getId();
        java.util.Map<java.lang.String, java.lang.String> strMap10 = null;
        persistentAuditEvent0.setData(strMap10);
        java.lang.String str12 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3073");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setCreatedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str4 = user0.getLastModifiedBy();
        java.lang.String str5 = user0.getFirstName();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet6 = user0.getAuthorities();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(authoritySet6);
    }

    @Test
    public void test3074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3074");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3075");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}", "Professor{id=null, primeiroNome='LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "LoggerVM{name='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}', level='null'}");
    }

    @Test
    public void test3076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3076");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        aluno11.setHabilitadoTcc((java.lang.Boolean) false);
        aluno11.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.Long long23 = aluno19.getMatricula();
        aluno19.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        java.lang.Long long30 = aluno26.getMatricula();
        aluno26.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray34 = new com.unifacisa.tcc.domain.Aluno[] { aluno11, aluno19, aluno26, aluno33 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet35 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet35, alunoArray34);
        com.unifacisa.tcc.domain.Professor professor37 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        com.unifacisa.tcc.domain.Professor professor38 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet35);
        java.lang.String str39 = professor2.getPrimeiroNome();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNotNull(alunoArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test3077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3077");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str6 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str6, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
    }

    @Test
    public void test3078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3078");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        user2.setCreatedDate(instant26);
        java.lang.String str29 = user2.getCreatedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet30 = user2.getAuthorities();
        java.lang.String str31 = user2.getFirstName();
        user2.setCreatedBy("");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(authoritySet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test3079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3079");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.lang.String str17 = user13.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = userMapper0.userToUserDTO(user13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper19.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper0.usersToUserDTOs(userList33);
        com.unifacisa.tcc.domain.User user36 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray38 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList39 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList39, userArray38);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList41 = userMapper37.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList39);
        java.time.Instant instant52 = null;
        java.time.Instant instant54 = null;
        java.time.Instant instant64 = null;
        java.time.Instant instant66 = null;
        java.lang.String[] strArray69 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet70 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet70, strArray69);
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant64, "hi!", instant66, (java.util.Set<java.lang.String>) strSet70);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM73 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant52, "", instant54, (java.util.Set<java.lang.String>) strSet70);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet74 = userMapper37.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet70);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet75 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet70);
        com.unifacisa.tcc.domain.User user77 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str78 = user77.getEmail();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertNotNull(userArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(userDTOList41);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(authoritySet74);
        org.junit.Assert.assertNotNull(authoritySet75);
        org.junit.Assert.assertNotNull(user77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test3080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3080");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.Boolean boolean4 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setResetKey("hi!");
        java.lang.String str10 = user7.getResetKey();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor13 = professor11.diponibilidade((java.lang.Boolean) true);
        professor13.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str16 = professor13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        professor19.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.Long long25 = aluno22.getMatricula();
        aluno22.setHabilitadoTcc((java.lang.Boolean) false);
        aluno22.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.Long long34 = aluno30.getMatricula();
        aluno30.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        aluno37.setPrimeiroNome("");
        java.lang.Long long40 = aluno37.getMatricula();
        java.lang.Long long41 = aluno37.getMatricula();
        aluno37.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno30, aluno37, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        com.unifacisa.tcc.domain.Professor professor48 = professor19.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor13.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor57 = professor55.diponibilidade((java.lang.Boolean) true);
        professor57.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        aluno60.setHabilitadoTcc((java.lang.Boolean) false);
        aluno60.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        aluno68.setPrimeiroNome("");
        java.lang.Long long71 = aluno68.getMatricula();
        java.lang.Long long72 = aluno68.getMatricula();
        aluno68.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        aluno75.setPrimeiroNome("");
        java.lang.Long long78 = aluno75.getMatricula();
        java.lang.Long long79 = aluno75.getMatricula();
        aluno75.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray83 = new com.unifacisa.tcc.domain.Aluno[] { aluno60, aluno68, aluno75, aluno82 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet84 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet84, alunoArray83);
        com.unifacisa.tcc.domain.Professor professor86 = professor57.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet84);
        com.unifacisa.tcc.domain.Aluno aluno87 = aluno50.professor(professor86);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa89 = aluno87.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno91 = aluno87.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor92 = professor49.removeAluno(aluno87);
        com.unifacisa.tcc.domain.Professor professor94 = professor92.diponibilidade((java.lang.Boolean) true);
        boolean boolean95 = user7.equals((java.lang.Object) professor92);
        com.unifacisa.tcc.domain.Aluno aluno96 = aluno0.professor(professor92);
        java.lang.Long long97 = aluno0.getMatricula();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNull(long79);
        org.junit.Assert.assertNotNull(alunoArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(aluno87);
        org.junit.Assert.assertNotNull(pessoa89);
        org.junit.Assert.assertNotNull(aluno91);
        org.junit.Assert.assertNotNull(professor92);
        org.junit.Assert.assertNotNull(professor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(aluno96);
        org.junit.Assert.assertNull(long97);
    }

    @Test
    public void test3081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3081");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = aluno0.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.toString();
        professor5.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long9 = professor5.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor5.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        professor5.setSegundoNome("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.Professor professor16 = professor5.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        professor19.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long22 = professor19.getId();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet23 = professor19.getAlunos();
        professor16.setAlunos(alunoSet23);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(alunoSet23);
    }

    @Test
    public void test3082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3082");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getFirstName();
        java.time.Instant instant20 = userDTO17.getCreatedDate();
        boolean boolean21 = userDTO17.isActivated();
        java.lang.String str22 = userDTO17.getLogin();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test3083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3083");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getUserId();
        socialUserConnection0.setRefreshToken("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
        socialUserConnection0.setProviderId("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long11 = socialUserConnection0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test3084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3084");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno10 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno11.setProfessor(professor12);
        aluno11.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = aluno11.primeiroNome("hi!");
        java.lang.Long long18 = aluno11.getId();
        com.unifacisa.tcc.domain.Aluno aluno20 = aluno11.habilitadoTcc((java.lang.Boolean) false);
        aluno11.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str24 = professor23.toString();
        com.unifacisa.tcc.domain.Professor professor26 = professor23.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet27 = professor23.getAlunos();
        java.lang.Long long28 = professor23.getNumeroContato();
        professor23.setMatricula((java.lang.Long) (-1L));
        aluno11.setProfessor(professor23);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno10.professor(professor23);
        java.lang.String str33 = professor23.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str35 = professor34.toString();
        com.unifacisa.tcc.domain.Professor professor37 = professor34.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet38 = professor34.getAlunos();
        com.unifacisa.tcc.domain.Professor professor39 = professor23.alunos(alunoSet38);
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor41 = null;
        aluno40.setProfessor(professor41);
        aluno40.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor47 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa49 = professor45.email("");
        com.unifacisa.tcc.domain.Professor professor51 = professor45.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno40.professor(professor51);
        com.unifacisa.tcc.domain.Professor professor53 = professor23.removeAluno(aluno40);
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        aluno54.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Aluno aluno58 = aluno54.habilitadoTcc((java.lang.Boolean) false);
        boolean boolean59 = professor53.equals((java.lang.Object) aluno54);
        java.lang.Boolean boolean60 = aluno54.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno54.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(aluno10);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNotNull(aluno20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(alunoSet27);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str35, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNotNull(alunoSet38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(pessoa49);
        org.junit.Assert.assertNotNull(professor51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(professor53);
        org.junit.Assert.assertNotNull(aluno58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + false + "'", boolean60, false);
        org.junit.Assert.assertNotNull(aluno62);
    }

    @Test
    public void test3085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3085");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("Professor{id=null, primeiroNome='null', segundoNome='hi!', matricula='null', email='null', numeroContato='1', diponibilidade='true'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3086");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3087");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user4 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user6 = userMapper0.userFromId((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user4);
        org.junit.Assert.assertNotNull(user6);
    }

    @Test
    public void test3088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3088");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        java.lang.String str7 = user2.getEmail();
        user2.setActivationKey("");
        user2.setCreatedBy("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str12 = user2.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str12, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3089");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.Boolean boolean4 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setResetKey("hi!");
        java.lang.String str10 = user7.getResetKey();
        com.unifacisa.tcc.domain.Professor professor11 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor13 = professor11.diponibilidade((java.lang.Boolean) true);
        professor13.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str16 = professor13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        professor19.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.Long long25 = aluno22.getMatricula();
        aluno22.setHabilitadoTcc((java.lang.Boolean) false);
        aluno22.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.Long long34 = aluno30.getMatricula();
        aluno30.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        aluno37.setPrimeiroNome("");
        java.lang.Long long40 = aluno37.getMatricula();
        java.lang.Long long41 = aluno37.getMatricula();
        aluno37.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray45 = new com.unifacisa.tcc.domain.Aluno[] { aluno22, aluno30, aluno37, aluno44 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet46 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet46, alunoArray45);
        com.unifacisa.tcc.domain.Professor professor48 = professor19.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Professor professor49 = professor13.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet46);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor55 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor57 = professor55.diponibilidade((java.lang.Boolean) true);
        professor57.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        aluno60.setHabilitadoTcc((java.lang.Boolean) false);
        aluno60.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        aluno68.setPrimeiroNome("");
        java.lang.Long long71 = aluno68.getMatricula();
        java.lang.Long long72 = aluno68.getMatricula();
        aluno68.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno75 = new com.unifacisa.tcc.domain.Aluno();
        aluno75.setPrimeiroNome("");
        java.lang.Long long78 = aluno75.getMatricula();
        java.lang.Long long79 = aluno75.getMatricula();
        aluno75.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray83 = new com.unifacisa.tcc.domain.Aluno[] { aluno60, aluno68, aluno75, aluno82 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet84 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet84, alunoArray83);
        com.unifacisa.tcc.domain.Professor professor86 = professor57.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet84);
        com.unifacisa.tcc.domain.Aluno aluno87 = aluno50.professor(professor86);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa89 = aluno87.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno91 = aluno87.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor92 = professor49.removeAluno(aluno87);
        com.unifacisa.tcc.domain.Professor professor94 = professor92.diponibilidade((java.lang.Boolean) true);
        boolean boolean95 = user7.equals((java.lang.Object) professor92);
        com.unifacisa.tcc.domain.Aluno aluno96 = aluno0.professor(professor92);
        aluno96.setSegundoNome("Aluno{id=null, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(boolean4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertNotNull(alunoArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long72);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNull(long79);
        org.junit.Assert.assertNotNull(alunoArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(aluno87);
        org.junit.Assert.assertNotNull(pessoa89);
        org.junit.Assert.assertNotNull(aluno91);
        org.junit.Assert.assertNotNull(professor92);
        org.junit.Assert.assertNotNull(professor94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(aluno96);
    }

    @Test
    public void test3090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3090");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setSecret("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setProfileURL("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        socialUserConnection0.setProfileURL("Authority{name='error.concurrencyFailure'}");
        java.lang.String str12 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3091");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str10 = socialUserConnection0.getImageURL();
        socialUserConnection0.setRank((java.lang.Long) 1L);
        socialUserConnection0.setUserId("User{login='null', firstName='null', lastName='null', email='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str15 = socialUserConnection0.getProviderUserId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str15, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3092");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str16 = socialUserConnection0.getRefreshToken();
        java.lang.String str17 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test3093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3093");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa7 = aluno0.primeiroNome("");
        java.lang.Boolean boolean8 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        aluno13.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        aluno27.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        aluno35.setPrimeiroNome("");
        java.lang.Long long38 = aluno35.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray42 = new com.unifacisa.tcc.domain.Aluno[] { aluno13, aluno18, aluno19, aluno24, aluno27, aluno32, aluno35, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet43 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet43, alunoArray42);
        professor12.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet43);
        com.unifacisa.tcc.domain.Professor professor46 = professor11.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet43);
        java.lang.Long long47 = professor46.getMatricula();
        java.lang.Long long48 = professor46.getMatricula();
        professor46.setEmail("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str51 = professor46.getPrimeiroNome();
        com.unifacisa.tcc.domain.Aluno aluno52 = aluno0.professor(professor46);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = professor46.numeroContato((java.lang.Long) 1L);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(pessoa7);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(aluno52);
        org.junit.Assert.assertNotNull(pessoa54);
    }

    @Test
    public void test3094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3094");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        java.lang.String str3 = managedUserVM0.getImageUrl();
        java.util.Set<java.lang.String> strSet4 = managedUserVM0.getAuthorities();
        java.lang.String str5 = managedUserVM0.getLastModifiedBy();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        java.lang.String str7 = managedUserVM0.getImageUrl();
        java.lang.String str8 = managedUserVM0.toString();
        managedUserVM0.setId((java.lang.Long) 1L);
        java.lang.String str11 = managedUserVM0.getPassword();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3095");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        user2.setCreatedBy("");
        user2.setResetKey("LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
    }

    @Test
    public void test3096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3096");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getLastModifiedBy();
        java.lang.String str20 = userDTO17.getFirstName();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test3097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3097");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.net.URI uRI9 = com.unifacisa.tcc.web.rest.errors.ErrorConstants.CONSTRAINT_VIOLATION_TYPE;
        boolean boolean10 = socialUserConnection0.equals((java.lang.Object) uRI9);
        socialUserConnection0.setId((java.lang.Long) 0L);
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        java.lang.String str15 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNotNull(uRI9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3098");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("Authority{name='null'}");
        socialUserConnection0.setProviderId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        aluno12.setPrimeiroNome("");
        java.lang.Long long15 = aluno12.getMatricula();
        java.lang.Long long16 = aluno12.getMatricula();
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor19 = professor17.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor22 = null;
        aluno21.setProfessor(professor22);
        aluno21.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor36 = null;
        aluno35.setProfessor(professor36);
        aluno35.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean42 = aluno40.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        aluno43.setPrimeiroNome("");
        java.lang.Long long46 = aluno43.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        aluno47.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray50 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno26, aluno27, aluno32, aluno35, aluno40, aluno43, aluno47 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet51 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet51, alunoArray50);
        professor20.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        com.unifacisa.tcc.domain.Professor professor54 = professor19.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet51);
        com.unifacisa.tcc.domain.Professor professor56 = professor54.diponibilidade((java.lang.Boolean) true);
        professor54.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet59 = professor54.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno12.professor(professor54);
        boolean boolean61 = socialUserConnection0.equals((java.lang.Object) professor54);
        java.lang.String str62 = professor54.getPrimeiroNome();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNotNull(professor19);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNotNull(alunoArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(professor54);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNotNull(alunoSet59);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test3099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3099");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        user10.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM13 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet14 = managedUserVM13.getAuthorities();
        boolean boolean15 = user10.equals((java.lang.Object) strSet14);
        java.time.Instant instant16 = user10.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = userMapper7.userToUserDTO(user10);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray24 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList25 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList25, userArray24);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList27 = userMapper23.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList25);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList28 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList25);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        user29.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet33 = managedUserVM32.getAuthorities();
        boolean boolean34 = user29.equals((java.lang.Object) strSet33);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray36 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList37 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList37, userArray36);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList39 = userMapper35.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList37);
        java.time.Instant instant50 = null;
        java.time.Instant instant52 = null;
        java.time.Instant instant62 = null;
        java.time.Instant instant64 = null;
        java.lang.String[] strArray67 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet68 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet68, strArray67);
        com.unifacisa.tcc.service.dto.UserDTO userDTO70 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant62, "hi!", instant64, (java.util.Set<java.lang.String>) strSet68);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM71 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant50, "", instant52, (java.util.Set<java.lang.String>) strSet68);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet72 = userMapper35.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet68);
        user29.setAuthorities(authoritySet72);
        java.lang.String str74 = user29.getFirstName();
        user29.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = userMapper18.userToUserDTO(user29);
        com.unifacisa.tcc.domain.User user79 = userMapper18.userFromId((java.lang.Long) 0L);
        user79.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant82 = user79.getLastModifiedDate();
        user10.setLastModifiedDate(instant82);
        persistentAuditEvent0.setAuditEventDate(instant82);
        persistentAuditEvent0.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='hi!', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertNotNull(userDTO17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(userDTOList27);
        org.junit.Assert.assertNotNull(userDTOList28);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(userArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(userDTOList39);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(authoritySet72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(userDTO77);
        org.junit.Assert.assertNotNull(user79);
        org.junit.Assert.assertNotNull(instant82);
    }

    @Test
    public void test3100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3100");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        loggingAspect18.springBeanPointcut();
        loggingAspect18.applicationPackagePointcut();
        loggingAspect18.springBeanPointcut();
        loggingAspect18.applicationPackagePointcut();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
    }

    @Test
    public void test3101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3101");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getImageURL();
        java.lang.String str9 = socialUserConnection0.getProviderUserId();
        java.lang.String str10 = socialUserConnection0.toString();
        socialUserConnection0.setProviderId("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        java.lang.String str13 = socialUserConnection0.getRefreshToken();
        java.lang.String str14 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "error.validation" + "'", str8, "error.validation");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "error.validation" + "'", str14, "error.validation");
    }

    @Test
    public void test3102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3102");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor11);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        professor15.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor15.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long20 = professor15.getId();
        professor15.setNumeroContato((java.lang.Long) 100L);
        java.lang.String str23 = professor15.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno0.professor(professor15);
        com.unifacisa.tcc.domain.Professor professor25 = null;
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno24.professor(professor25);
        com.unifacisa.tcc.domain.Professor professor27 = new com.unifacisa.tcc.domain.Professor();
        java.lang.Long long28 = professor27.getMatricula();
        java.lang.String str29 = professor27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno24.professor(professor27);
        com.unifacisa.tcc.domain.Professor professor31 = aluno30.getProfessor();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor31);
    }

    @Test
    public void test3103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3103");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        user2.setLastName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str8 = user2.getResetKey();
        java.lang.String str9 = user2.getActivationKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3104");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = aluno7.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = aluno15.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str21 = professor20.toString();
        professor20.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long24 = professor20.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa26 = professor20.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno27 = aluno15.professor(professor20);
        professor20.setSegundoNome("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno7.professor(professor20);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str21, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(pessoa26);
        org.junit.Assert.assertNotNull(aluno27);
        org.junit.Assert.assertNotNull(aluno30);
    }

    @Test
    public void test3105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3105");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.String str7 = professor6.toString();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        aluno8.setPrimeiroNome("");
        java.lang.Long long11 = aluno8.getMatricula();
        java.lang.Long long12 = aluno8.getMatricula();
        aluno8.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor22 = professor20.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.String str34 = aluno30.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean45 = aluno43.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        aluno46.setPrimeiroNome("");
        java.lang.Long long49 = aluno46.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray53 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno29, aluno30, aluno35, aluno38, aluno43, aluno46, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet54 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet54, alunoArray53);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        com.unifacisa.tcc.domain.Professor professor57 = professor22.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        aluno15.setProfessor(professor57);
        aluno8.setProfessor(professor57);
        aluno8.setHabilitadoTcc((java.lang.Boolean) false);
        aluno8.setId((java.lang.Long) 1L);
        java.lang.String str64 = aluno8.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor65 = professor6.addAluno(aluno8);
        professor65.setSegundoNome("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        professor65.setId((java.lang.Long) 1L);
        professor65.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNotNull(alunoArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(professor65);
    }

    @Test
    public void test3106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3106");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.toString();
        java.lang.String str2 = loginVM0.toString();
        java.lang.String str3 = loginVM0.getUsername();
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str1, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str2, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test3107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3107");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long7 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor2.primeiroNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        com.unifacisa.tcc.domain.Professor professor11 = professor2.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
    }

    @Test
    public void test3108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3108");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository2.createConnectionRepository("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository12 = customSocialUsersConnectionRepository2.createConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository14 = customSocialUsersConnectionRepository2.createConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertNotNull(connectionRepository12);
        org.junit.Assert.assertNotNull(connectionRepository14);
    }

    @Test
    public void test3109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3109");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        java.lang.String str13 = aluno0.toString();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno0.primeiroNome("hi!");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(pessoa15);
    }

    @Test
    public void test3110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3110");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setRefreshToken("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.Long long15 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test3111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3111");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor3 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno4 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor5 = null;
        aluno4.setProfessor(professor5);
        aluno4.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        java.lang.Long long13 = aluno10.getMatricula();
        java.lang.String str14 = aluno10.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean17 = aluno15.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor19 = null;
        aluno18.setProfessor(professor19);
        aluno18.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        aluno26.setPrimeiroNome("");
        java.lang.Long long29 = aluno26.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno4, aluno9, aluno10, aluno15, aluno18, aluno23, aluno26, aluno30 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        professor3.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        java.lang.Long long38 = professor37.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet39 = professor37.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor37.email("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = professor37.numeroContato((java.lang.Long) (-1L));
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user55 = userMapper53.userFromId((java.lang.Long) 100L);
        user55.setLangKey("");
        java.time.Instant instant58 = user55.getResetDate();
        java.time.Instant instant59 = user55.getCreatedDate();
        user55.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant62 = user55.getCreatedDate();
        com.unifacisa.tcc.domain.User user64 = new com.unifacisa.tcc.domain.User();
        user64.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user64.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant69 = user64.getLastModifiedDate();
        java.lang.String[] strArray85 = new java.lang.String[] { "LoginVM{username='null', rememberMe=false}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}", "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "LoggerVM{name='null', level='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet86 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet86, strArray85);
        com.unifacisa.tcc.service.dto.UserDTO userDTO88 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", false, "hi!", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", instant62, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant69, (java.util.Set<java.lang.String>) strSet86);
        boolean boolean89 = professor37.equals((java.lang.Object) false);
        com.unifacisa.tcc.domain.Professor professor91 = professor37.diponibilidade((java.lang.Boolean) true);
        professor91.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(alunoSet39);
        org.junit.Assert.assertNotNull(pessoa41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(instant58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertNotNull(instant69);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(professor91);
    }

    @Test
    public void test3112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3112");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long4 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        aluno5.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno5.primeiroNome("hi!");
        java.lang.Long long12 = aluno5.getId();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        aluno5.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.toString();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        java.lang.Long long55 = aluno52.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno28, aluno31, aluno32, aluno37, aluno41, aluno44, aluno47, aluno52, aluno56, aluno57, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        com.unifacisa.tcc.domain.Professor professor66 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno67 = aluno5.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno67.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = professor0.removeAluno(aluno67);
        java.lang.Boolean boolean71 = professor70.isDiponibilidade();
        java.lang.Boolean boolean72 = professor70.isDiponibilidade();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(aluno67);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertEquals("'" + boolean71 + "' != '" + false + "'", boolean71, false);
        org.junit.Assert.assertEquals("'" + boolean72 + "' != '" + false + "'", boolean72, false);
    }

    @Test
    public void test3113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3113");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str14 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str14, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3114");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        org.springframework.core.env.Environment environment5 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect6 = loggingAspectConfiguration0.loggingAspect(environment5);
        loggingAspect6.applicationPackagePointcut();
        loggingAspect6.springBeanPointcut();
        loggingAspect6.applicationPackagePointcut();
        loggingAspect6.springBeanPointcut();
        loggingAspect6.applicationPackagePointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
        org.junit.Assert.assertNotNull(loggingAspect6);
    }

    @Test
    public void test3115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3115");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean7 = aluno0.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = aluno0.numeroContato((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno0.email("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=-1, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(pessoa11);
    }

    @Test
    public void test3116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3116");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3117");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        socialUserConnection0.setUserId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray8 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList9 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList9, userArray8);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList11 = userMapper7.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList9);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray13 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList14 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList14, userArray13);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList16 = userMapper12.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList14);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList17 = userMapper7.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList14);
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet22 = managedUserVM21.getAuthorities();
        boolean boolean23 = user18.equals((java.lang.Object) strSet22);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray25 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList26 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList26, userArray25);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList28 = userMapper24.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList26);
        java.time.Instant instant39 = null;
        java.time.Instant instant41 = null;
        java.time.Instant instant51 = null;
        java.time.Instant instant53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet57 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet57, strArray56);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant51, "hi!", instant53, (java.util.Set<java.lang.String>) strSet57);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM60 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant39, "", instant41, (java.util.Set<java.lang.String>) strSet57);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet61 = userMapper24.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet57);
        user18.setAuthorities(authoritySet61);
        java.lang.String str63 = user18.getFirstName();
        user18.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO66 = userMapper7.userToUserDTO(user18);
        com.unifacisa.tcc.domain.User user68 = userMapper7.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user69 = new com.unifacisa.tcc.domain.User();
        user69.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user69.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant74 = user69.getLastModifiedDate();
        user69.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant77 = user69.getResetDate();
        user69.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        java.time.Instant instant80 = user69.getResetDate();
        user69.setLastName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant83 = user69.getLastModifiedDate();
        java.lang.String str84 = user69.getCreatedBy();
        com.unifacisa.tcc.service.dto.UserDTO userDTO85 = userMapper7.userToUserDTO(user69);
        boolean boolean86 = socialUserConnection0.equals((java.lang.Object) user69);
        socialUserConnection0.setAccessToken("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        java.lang.Long long89 = socialUserConnection0.getRank();
        org.junit.Assert.assertNotNull(userArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(userDTOList11);
        org.junit.Assert.assertNotNull(userArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(userDTOList16);
        org.junit.Assert.assertNotNull(userDTOList17);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(userDTOList28);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(authoritySet61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(userDTO66);
        org.junit.Assert.assertNotNull(user68);
        org.junit.Assert.assertNotNull(instant74);
        org.junit.Assert.assertNull(instant77);
        org.junit.Assert.assertNull(instant80);
        org.junit.Assert.assertNotNull(instant83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str84, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(userDTO85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNull(long89);
    }

    @Test
    public void test3118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3118");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setLastModifiedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        user0.setLastModifiedBy("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        user17.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user17.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        user24.setLangKey("");
        java.time.Instant instant27 = user24.getResetDate();
        java.time.Instant instant28 = user24.getCreatedDate();
        user17.setResetDate(instant28);
        java.time.Instant instant31 = null;
        java.time.Instant instant42 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant54 = null;
        java.time.Instant instant56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant54, "hi!", instant56, (java.util.Set<java.lang.String>) strSet60);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant42, "", instant44, (java.util.Set<java.lang.String>) strSet60);
        java.time.Instant instant64 = managedUserVM63.getCreatedDate();
        java.lang.String str65 = managedUserVM63.getLangKey();
        java.lang.String str66 = managedUserVM63.toString();
        java.util.Set<java.lang.String> strSet67 = managedUserVM63.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}", "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "error.validation", true, "Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", instant28, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant31, strSet67);
        user0.setLastModifiedDate(instant28);
        java.lang.String str70 = user0.getLangKey();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(instant27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str66, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNull(str70);
    }

    @Test
    public void test3119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3119");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", "LoginVM{username='null', rememberMe=false}", "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}", (java.lang.Long) 0L, "", "Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}", "", (java.lang.Long) 10L);
        java.lang.String str12 = socialUserConnection11.getAccessToken();
        java.lang.String str13 = socialUserConnection11.getAccessToken();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test3120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3120");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getImageUrl();
        java.time.Instant instant3 = managedUserVM0.getCreatedDate();
        java.time.Instant instant4 = managedUserVM0.getLastModifiedDate();
        java.lang.String str5 = managedUserVM0.getLastModifiedBy();
        java.lang.String str6 = managedUserVM0.getCreatedBy();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3121");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor2.email("");
        com.unifacisa.tcc.domain.Professor professor8 = professor2.diponibilidade((java.lang.Boolean) true);
        professor8.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity11 = professorResource1.createProfessor(professor8);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str14 = professor13.toString();
        com.unifacisa.tcc.domain.Professor professor16 = professor13.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet17 = professor13.getAlunos();
        com.unifacisa.tcc.domain.Professor professor18 = professor12.alunos(alunoSet17);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity19 = professorResource1.updateProfessor(professor18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professorResponseEntity11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str14, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNotNull(alunoSet17);
        org.junit.Assert.assertNotNull(professor18);
    }

    @Test
    public void test3122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3122");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.email("");
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor16 = professor8.addAluno(aluno13);
        java.lang.Long long17 = aluno13.getNumeroContato();
        boolean boolean18 = user2.equals((java.lang.Object) long17);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet19 = user2.getAuthorities();
        user2.setFirstName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.time.Instant instant22 = user2.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(authoritySet19);
        org.junit.Assert.assertNotNull(instant22);
    }

    @Test
    public void test3123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3123");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity3 = professorResource1.getProfessor((java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3124");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        user2.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Authority authority9 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str10 = authority9.getName();
        java.lang.String str11 = authority9.getName();
        authority9.setName("");
        com.unifacisa.tcc.domain.Authority authority14 = new com.unifacisa.tcc.domain.Authority();
        authority14.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority14.setName("error.concurrencyFailure");
        com.unifacisa.tcc.domain.Authority[] authorityArray19 = new com.unifacisa.tcc.domain.Authority[] { authority9, authority14 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority> authoritySet20 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Authority>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Authority>) authoritySet20, authorityArray19);
        user2.setAuthorities((java.util.Set<com.unifacisa.tcc.domain.Authority>) authoritySet20);
        java.time.Instant instant23 = user2.getResetDate();
        java.lang.String str24 = user2.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(authorityArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test3125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3125");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 100L);
        user8.setLangKey("");
        java.time.Instant instant11 = user8.getResetDate();
        java.time.Instant instant12 = user8.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.String str16 = aluno13.getPrimeiroNome();
        java.lang.Long long17 = aluno13.getMatricula();
        boolean boolean18 = user8.equals((java.lang.Object) aluno13);
        user8.setFirstName("");
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user21.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        user21.setResetDate(instant32);
        user8.setCreatedDate(instant32);
        persistentAuditEvent0.setAuditEventDate(instant32);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        java.util.Map<java.lang.String, java.lang.String> strMap38 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}");
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str43 = persistentAuditEvent0.getAuditEventType();
        java.lang.String str44 = persistentAuditEvent0.getPrincipal();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent45 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant46 = persistentAuditEvent45.getAuditEventDate();
        java.lang.Long long47 = persistentAuditEvent45.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent48 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str49 = persistentAuditEvent48.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent50 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent50.setId((java.lang.Long) 1L);
        java.lang.String str53 = persistentAuditEvent50.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap54 = persistentAuditEvent50.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent55 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent55.setId((java.lang.Long) 1L);
        java.lang.String str58 = persistentAuditEvent55.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap59 = persistentAuditEvent55.getData();
        persistentAuditEvent50.setData(strMap59);
        persistentAuditEvent48.setData(strMap59);
        persistentAuditEvent45.setData(strMap59);
        persistentAuditEvent0.setData(strMap59);
        persistentAuditEvent0.setAuditEventType("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str43, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test3126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3126");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        professor4.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity9 = professorResource1.createProfessor(professor4);
        com.unifacisa.tcc.domain.Professor professor10 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor12 = professor10.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        aluno14.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor21 = null;
        aluno20.setProfessor(professor21);
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.String str24 = aluno20.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean27 = aluno25.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor29 = null;
        aluno28.setProfessor(professor29);
        aluno28.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean35 = aluno33.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        aluno36.setPrimeiroNome("");
        java.lang.Long long39 = aluno36.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        aluno40.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray43 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno20, aluno25, aluno28, aluno33, aluno36, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet44 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet44, alunoArray43);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        com.unifacisa.tcc.domain.Professor professor47 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        java.lang.Long long48 = professor47.getId();
        java.lang.Long long49 = professor47.getId();
        professor47.setSegundoNome("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean52 = professor47.isDiponibilidade();
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        user53.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user53.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant58 = user53.getLastModifiedDate();
        user53.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant61 = user53.getResetDate();
        user53.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        java.time.Instant instant64 = user53.getResetDate();
        user53.setLastName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant67 = user53.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO(user53);
        boolean boolean69 = professor47.equals((java.lang.Object) user53);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        aluno70.setPrimeiroNome("");
        aluno70.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor75 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor77 = professor75.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa79 = professor75.email("");
        com.unifacisa.tcc.domain.Professor professor81 = professor75.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno70.professor(professor75);
        com.unifacisa.tcc.domain.Aluno aluno83 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor84 = null;
        aluno83.setProfessor(professor84);
        java.lang.Long long86 = aluno83.getMatricula();
        java.lang.String str87 = aluno83.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor88 = professor75.removeAluno(aluno83);
        java.lang.String str89 = aluno83.getEmail();
        com.unifacisa.tcc.domain.Professor professor90 = professor47.removeAluno(aluno83);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa92 = professor47.numeroContato((java.lang.Long) 10L);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity93 = professorResource1.updateProfessor(professor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(professorResponseEntity9);
        org.junit.Assert.assertNotNull(professor12);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNotNull(alunoArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNull(long48);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + true + "'", boolean52, true);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNull(instant61);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNotNull(pessoa79);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNull(long86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(professor88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(professor90);
        org.junit.Assert.assertNotNull(pessoa92);
    }

    @Test
    public void test3127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3127");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str7 = professor4.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        professor10.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        aluno13.setHabilitadoTcc((java.lang.Boolean) false);
        aluno13.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        aluno21.setPrimeiroNome("");
        java.lang.Long long24 = aluno21.getMatricula();
        java.lang.Long long25 = aluno21.getMatricula();
        aluno21.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        aluno28.setPrimeiroNome("");
        java.lang.Long long31 = aluno28.getMatricula();
        java.lang.Long long32 = aluno28.getMatricula();
        aluno28.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray36 = new com.unifacisa.tcc.domain.Aluno[] { aluno13, aluno21, aluno28, aluno35 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet37 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet37, alunoArray36);
        com.unifacisa.tcc.domain.Professor professor39 = professor10.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet37);
        com.unifacisa.tcc.domain.Professor professor40 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet37);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        aluno41.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor46 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor48 = professor46.diponibilidade((java.lang.Boolean) true);
        professor48.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        aluno51.setPrimeiroNome("");
        java.lang.Long long54 = aluno51.getMatricula();
        aluno51.setHabilitadoTcc((java.lang.Boolean) false);
        aluno51.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        java.lang.Long long62 = aluno59.getMatricula();
        java.lang.Long long63 = aluno59.getMatricula();
        aluno59.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        aluno66.setPrimeiroNome("");
        java.lang.Long long69 = aluno66.getMatricula();
        java.lang.Long long70 = aluno66.getMatricula();
        aluno66.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray74 = new com.unifacisa.tcc.domain.Aluno[] { aluno51, aluno59, aluno66, aluno73 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet75 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet75, alunoArray74);
        com.unifacisa.tcc.domain.Professor professor77 = professor48.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet75);
        com.unifacisa.tcc.domain.Aluno aluno78 = aluno41.professor(professor77);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = aluno78.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno78.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor83 = professor40.removeAluno(aluno78);
        java.lang.Boolean boolean84 = aluno78.isHabilitadoTcc();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa86 = aluno78.primeiroNome("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity87 = alunoResource1.createAluno(aluno78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNotNull(alunoArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNotNull(alunoArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNotNull(aluno78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNotNull(professor83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertNotNull(pessoa86);
    }

    @Test
    public void test3128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3128");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setResetKey("hi!");
        java.lang.String str12 = user9.getResetKey();
        boolean boolean14 = user9.equals((java.lang.Object) 10.0f);
        java.lang.String str15 = user9.getCreatedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        user16.setCreatedDate(instant23);
        boolean boolean25 = user16.getActivated();
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant40 = user35.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.String str52 = aluno49.getPrimeiroNome();
        java.lang.Long long53 = aluno49.getMatricula();
        boolean boolean54 = user44.equals((java.lang.Object) aluno49);
        user44.setFirstName("");
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        user57.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user57.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user64 = userMapper62.userFromId((java.lang.Long) 100L);
        user64.setLangKey("");
        java.time.Instant instant67 = user64.getResetDate();
        java.time.Instant instant68 = user64.getCreatedDate();
        user57.setResetDate(instant68);
        user44.setCreatedDate(instant68);
        java.util.Set<java.lang.String> strSet71 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant40, "", instant68, strSet71);
        user16.setLastModifiedDate(instant40);
        user9.setResetDate(instant40);
        user2.setLastModifiedDate(instant40);
        java.lang.String str76 = user2.getLangKey();
        java.lang.String str77 = user2.getLangKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNull(instant67);
        org.junit.Assert.assertNotNull(instant68);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test3129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3129");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setId((java.lang.Long) 10L);
        java.lang.String str6 = user0.getLangKey();
        user0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setImageUrl("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        java.time.Instant instant11 = user0.getLastModifiedDate();
        user0.setFirstName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(instant11);
    }

    @Test
    public void test3130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3130");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "hi!", "");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        java.lang.String str6 = fieldErrorVM3.getField();
        java.lang.String str7 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test3131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3131");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent9 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant10 = persistentAuditEvent9.getAuditEventDate();
        java.time.Instant instant11 = null;
        persistentAuditEvent9.setAuditEventDate(instant11);
        java.time.Instant instant13 = persistentAuditEvent9.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = null;
        persistentAuditEvent9.setData(strMap14);
        java.lang.String str16 = persistentAuditEvent9.getPrincipal();
        boolean boolean17 = user2.equals((java.lang.Object) persistentAuditEvent9);
        user2.setId((java.lang.Long) 1L);
        user2.setLastName("hi!");
        user2.setActivated(false);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test3132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3132");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        userDTO17.setLogin("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        java.lang.String str21 = userDTO17.getCreatedBy();
        java.lang.String str22 = userDTO17.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UserDTO{login='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str22, "UserDTO{login='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3133");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user2.getAuthorities();
        java.lang.String str18 = user2.toString();
        user2.setCreatedBy("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        user2.setFirstName("LoginVM{username='null', rememberMe=null}");
        java.lang.String str23 = user2.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(authoritySet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str18, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str23, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
    }

    @Test
    public void test3134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3134");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.springBeanPointcut();
        org.aspectj.lang.ProceedingJoinPoint proceedingJoinPoint8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj9 = loggingAspect4.logAround(proceedingJoinPoint8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test3135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3135");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        java.lang.String str3 = managedUserVM0.getImageUrl();
        java.lang.String str4 = managedUserVM0.getCreatedBy();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getLastModifiedBy();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3136");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getCreatedBy();
        com.unifacisa.tcc.domain.User user9 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper10 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user12 = userMapper10.userFromId((java.lang.Long) 100L);
        user12.setLangKey("");
        java.time.Instant instant15 = user12.getResetDate();
        java.time.Instant instant16 = user12.getCreatedDate();
        user9.setCreatedDate(instant16);
        boolean boolean18 = user9.getActivated();
        com.unifacisa.tcc.domain.User user28 = new com.unifacisa.tcc.domain.User();
        user28.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user28.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant33 = user28.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user37 = userMapper35.userFromId((java.lang.Long) 100L);
        user37.setLangKey("");
        java.time.Instant instant40 = user37.getResetDate();
        java.time.Instant instant41 = user37.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        java.lang.String str45 = aluno42.getPrimeiroNome();
        java.lang.Long long46 = aluno42.getMatricula();
        boolean boolean47 = user37.equals((java.lang.Object) aluno42);
        user37.setFirstName("");
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        user50.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user50.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper55 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user57 = userMapper55.userFromId((java.lang.Long) 100L);
        user57.setLangKey("");
        java.time.Instant instant60 = user57.getResetDate();
        java.time.Instant instant61 = user57.getCreatedDate();
        user50.setResetDate(instant61);
        user37.setCreatedDate(instant61);
        java.util.Set<java.lang.String> strSet64 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant33, "", instant61, strSet64);
        user9.setLastModifiedDate(instant33);
        user2.setResetDate(instant33);
        java.lang.String str68 = user2.getLangKey();
        java.lang.String str69 = user2.getResetKey();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet70 = user2.getAuthorities();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNotNull(user37);
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(user57);
        org.junit.Assert.assertNull(instant60);
        org.junit.Assert.assertNotNull(instant61);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(authoritySet70);
    }

    @Test
    public void test3137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3137");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("Authority{name='null'}");
        socialUserConnection0.setRefreshToken("LoginVM{username='null', rememberMe=null}");
        java.lang.String str10 = socialUserConnection0.toString();
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.Long long12 = socialUserConnection0.getExpireTime();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}" + "'", str10, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(long12);
    }

    @Test
    public void test3138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3138");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = null;
        managedUserVM0.setLastModifiedDate(instant3);
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getLogin();
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        managedUserVM0.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        java.lang.String str10 = managedUserVM0.toString();
        java.lang.String str11 = managedUserVM0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str11, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3139");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3140");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        java.lang.Long long5 = professor0.getNumeroContato();
        professor0.setMatricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        aluno8.setPrimeiroNome("");
        java.lang.Long long11 = aluno8.getMatricula();
        java.lang.Long long12 = aluno8.getMatricula();
        aluno8.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno8.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno18 = aluno8.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        aluno19.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = aluno19.primeiroNome("hi!");
        java.lang.Long long26 = aluno19.getId();
        com.unifacisa.tcc.domain.Aluno aluno28 = aluno19.habilitadoTcc((java.lang.Boolean) false);
        aluno19.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str32 = professor31.toString();
        com.unifacisa.tcc.domain.Professor professor34 = professor31.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet35 = professor31.getAlunos();
        java.lang.Long long36 = professor31.getNumeroContato();
        professor31.setMatricula((java.lang.Long) (-1L));
        aluno19.setProfessor(professor31);
        com.unifacisa.tcc.domain.Aluno aluno40 = aluno18.professor(professor31);
        com.unifacisa.tcc.domain.Professor professor41 = professor0.addAluno(aluno18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa43 = aluno18.matricula((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Professor professor44 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor46 = professor44.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor47 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor49 = null;
        aluno48.setProfessor(professor49);
        aluno48.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor55 = null;
        aluno54.setProfessor(professor55);
        java.lang.Long long57 = aluno54.getMatricula();
        java.lang.String str58 = aluno54.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean61 = aluno59.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor63 = null;
        aluno62.setProfessor(professor63);
        aluno62.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean69 = aluno67.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        aluno70.setPrimeiroNome("");
        java.lang.Long long73 = aluno70.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        aluno74.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray77 = new com.unifacisa.tcc.domain.Aluno[] { aluno48, aluno53, aluno54, aluno59, aluno62, aluno67, aluno70, aluno74 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet78 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet78, alunoArray77);
        professor47.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Professor professor81 = professor46.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Aluno aluno82 = new com.unifacisa.tcc.domain.Aluno();
        aluno82.setPrimeiroNome("");
        java.lang.Long long85 = aluno82.getMatricula();
        java.lang.Long long86 = aluno82.getMatricula();
        aluno82.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor89 = professor81.addAluno(aluno82);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa91 = professor89.segundoNome("Authority{name='null'}");
        com.unifacisa.tcc.domain.Aluno aluno92 = aluno18.professor(professor89);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa94 = aluno18.email("error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa16);
        org.junit.Assert.assertNotNull(aluno18);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(aluno28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str32, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNotNull(alunoSet35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNotNull(aluno40);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertNotNull(pessoa43);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNotNull(alunoArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNull(long85);
        org.junit.Assert.assertNull(long86);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertNotNull(pessoa91);
        org.junit.Assert.assertNotNull(aluno92);
        org.junit.Assert.assertNotNull(pessoa94);
    }

    @Test
    public void test3141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3141");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.String str11 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str14 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setUserId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=false}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3142");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("error.validation");
        aluno0.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor7.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long12 = professor7.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = professor7.segundoNome("LoggerVM{name='null', level='null'}");
        aluno0.setProfessor(professor7);
        java.lang.Long long16 = professor7.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor18 = professor7.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNotNull(professor18);
    }

    @Test
    public void test3143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3143");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        user2.setCreatedDate(instant26);
        java.lang.String str29 = user2.toString();
        java.time.Instant instant30 = user2.getCreatedDate();
        java.lang.String str31 = user2.getResetKey();
        java.lang.String str32 = user2.getPassword();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str29, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(instant30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test3144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3144");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("Authority{name='error.concurrencyFailure'}");
        loginVM0.setUsername("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test3145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3145");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        java.lang.String str2 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        java.lang.String str7 = loginVM0.getPassword();
        loginVM0.setUsername("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        loginVM0.setPassword("LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str7, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
    }

    @Test
    public void test3146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3146");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        socialUserConnection0.setRefreshToken("");
        socialUserConnection0.setDisplayName("Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        socialUserConnection0.setRank((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test3147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3147");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        java.lang.Boolean boolean3 = loginVM0.isRememberMe();
        loginVM0.setUsername("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        java.lang.String str6 = loginVM0.toString();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', rememberMe=null}" + "'", str6, "LoginVM{username='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', rememberMe=null}");
    }

    @Test
    public void test3148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3148");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.time.Instant instant3 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(instant3);
    }

    @Test
    public void test3149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3149");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='hi!', matricula='null', email='null', numeroContato='1', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str1, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test3150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3150");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str6 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        socialUserConnection0.setSecret("SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        java.lang.String str11 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str11, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3151");
        org.springframework.data.domain.Page page0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.PaginationUtil.generatePaginationHttpHeaders(page0, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3152");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        java.lang.String str60 = userDTO59.getEmail();
        java.lang.String str61 = userDTO59.toString();
        java.lang.String str62 = userDTO59.getFirstName();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNull(str60);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:15.832Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:15.832Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str61, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:15.832Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:15.832Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test3153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3153");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        professor6.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        professor11.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str14 = professor11.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor17 = professor15.diponibilidade((java.lang.Boolean) true);
        professor17.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        aluno20.setHabilitadoTcc((java.lang.Boolean) false);
        aluno20.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        aluno28.setPrimeiroNome("");
        java.lang.Long long31 = aluno28.getMatricula();
        java.lang.Long long32 = aluno28.getMatricula();
        aluno28.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        aluno35.setPrimeiroNome("");
        java.lang.Long long38 = aluno35.getMatricula();
        java.lang.Long long39 = aluno35.getMatricula();
        aluno35.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray43 = new com.unifacisa.tcc.domain.Aluno[] { aluno20, aluno28, aluno35, aluno42 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet44 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet44, alunoArray43);
        com.unifacisa.tcc.domain.Professor professor46 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        com.unifacisa.tcc.domain.Professor professor47 = professor11.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor49 = null;
        aluno48.setProfessor(professor49);
        aluno48.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor53 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor55 = professor53.diponibilidade((java.lang.Boolean) true);
        professor55.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        aluno58.setHabilitadoTcc((java.lang.Boolean) false);
        aluno58.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        aluno66.setPrimeiroNome("");
        java.lang.Long long69 = aluno66.getMatricula();
        java.lang.Long long70 = aluno66.getMatricula();
        aluno66.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno73 = new com.unifacisa.tcc.domain.Aluno();
        aluno73.setPrimeiroNome("");
        java.lang.Long long76 = aluno73.getMatricula();
        java.lang.Long long77 = aluno73.getMatricula();
        aluno73.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno80 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray81 = new com.unifacisa.tcc.domain.Aluno[] { aluno58, aluno66, aluno73, aluno80 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet82 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet82, alunoArray81);
        com.unifacisa.tcc.domain.Professor professor84 = professor55.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet82);
        com.unifacisa.tcc.domain.Aluno aluno85 = aluno48.professor(professor84);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa87 = aluno85.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno89 = aluno85.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor90 = professor47.removeAluno(aluno85);
        com.unifacisa.tcc.domain.Professor professor91 = professor6.addAluno(aluno85);
        java.lang.Long long92 = professor6.getNumeroContato();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNotNull(alunoArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(professor46);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNull(long76);
        org.junit.Assert.assertNull(long77);
        org.junit.Assert.assertNotNull(alunoArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(professor84);
        org.junit.Assert.assertNotNull(aluno85);
        org.junit.Assert.assertNotNull(pessoa87);
        org.junit.Assert.assertNotNull(aluno89);
        org.junit.Assert.assertNotNull(professor90);
        org.junit.Assert.assertNotNull(professor91);
        org.junit.Assert.assertNull(long92);
    }

    @Test
    public void test3154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3154");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant8 = user0.getResetDate();
        user0.setLastModifiedBy("Authority{name='error.concurrencyFailure'}");
        java.time.Instant instant11 = user0.getResetDate();
        user0.setLastName("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("LoginVM{username='LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}', rememberMe=true}");
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(instant11);
    }

    @Test
    public void test3155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3155");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        user16.setEmail("LoggerVM{name='null', level='null'}");
        user16.setResetKey("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        user16.setLangKey("LoginVM{username='', rememberMe=false}");
        user16.setLastName("LoggerVM{name='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}', level='null'}");
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test3156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3156");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM9 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str10 = managedUserVM9.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        managedUserVM9.setLastModifiedDate(instant17);
        user0.setCreatedDate(instant17);
        user0.setPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user0.setPassword("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:50.246Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:50.246Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str24 = user0.getEmail();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test3157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3157");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str5 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setDisplayName("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
        socialUserConnection0.setAccessToken("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
    }

    @Test
    public void test3158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3158");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        loggingAspect2.springBeanPointcut();
        loggingAspect2.springBeanPointcut();
        loggingAspect2.springBeanPointcut();
        loggingAspect2.springBeanPointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
    }

    @Test
    public void test3159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3159");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor9 = aluno0.getProfessor();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(professor9);
    }

    @Test
    public void test3160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3160");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        java.lang.String str4 = managedUserVM0.toString();
        java.time.Instant instant5 = null;
        managedUserVM0.setLastModifiedDate(instant5);
        java.lang.String str7 = managedUserVM0.getLangKey();
        java.time.Instant instant8 = managedUserVM0.getCreatedDate();
        managedUserVM0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test3161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3161");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant35, "hi!", instant37, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant23, "", instant25, (java.util.Set<java.lang.String>) strSet41);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet45 = userMapper8.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper3.userDTOsToUsers(userDTOList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user55 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper56 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user58 = userMapper56.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user59 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper60 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user62 = userMapper60.userFromId((java.lang.Long) 100L);
        user62.setLangKey("");
        java.time.Instant instant65 = user62.getResetDate();
        java.time.Instant instant66 = user62.getCreatedDate();
        user59.setCreatedDate(instant66);
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = userMapper56.userToUserDTO(user59);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray70 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList71 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList71, userArray70);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList73 = userMapper69.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper56.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList71);
        java.util.List<com.unifacisa.tcc.domain.User> userList75 = userMapper0.userDTOsToUsers(userDTOList74);
        com.unifacisa.tcc.domain.User user77 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user79 = userMapper0.userFromId((java.lang.Long) 1L);
        java.lang.String str80 = user79.getLastName();
        java.lang.String str81 = user79.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(authoritySet45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNotNull(user58);
        org.junit.Assert.assertNotNull(user62);
        org.junit.Assert.assertNull(instant65);
        org.junit.Assert.assertNotNull(instant66);
        org.junit.Assert.assertNotNull(userDTO68);
        org.junit.Assert.assertNotNull(userArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(userDTOList73);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertNotNull(userList75);
        org.junit.Assert.assertNotNull(user77);
        org.junit.Assert.assertNotNull(user79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
    }

    @Test
    public void test3162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3162");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        user0.setLastModifiedBy("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        user0.setEmail("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        user0.setEmail("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user0.setPassword("LoggerVM{name='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', level='null'}");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test3163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3163");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant48 = managedUserVM47.getCreatedDate();
        java.lang.Long long49 = managedUserVM47.getId();
        java.lang.Long long50 = managedUserVM47.getId();
        java.lang.String str51 = managedUserVM47.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity52 = userResource3.createUser(managedUserVM47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
        org.junit.Assert.assertNull(instant48);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str51, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3164");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        aluno15.setPrimeiroNome("error.validation");
        aluno15.setSegundoNome("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor22 = professor20.diponibilidade((java.lang.Boolean) true);
        professor22.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor22.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long27 = professor22.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa29 = professor22.segundoNome("LoggerVM{name='null', level='null'}");
        aluno15.setProfessor(professor22);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa32 = professor22.matricula((java.lang.Long) (-1L));
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity33 = professorResource1.updateProfessor(professor22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNotNull(pessoa29);
        org.junit.Assert.assertNotNull(pessoa32);
    }

    @Test
    public void test3165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3165");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user5 = userMapper3.userFromId((java.lang.Long) 100L);
        user5.setLangKey("");
        java.time.Instant instant8 = user5.getResetDate();
        java.time.Instant instant9 = user5.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.String str13 = aluno10.getPrimeiroNome();
        java.lang.Long long14 = aluno10.getMatricula();
        boolean boolean15 = user5.equals((java.lang.Object) aluno10);
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user16.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant21 = user16.getLastModifiedDate();
        user5.setCreatedDate(instant21);
        boolean boolean23 = authority0.equals((java.lang.Object) user5);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        aluno24.setPrimeiroNome("");
        java.lang.Long long27 = aluno24.getMatricula();
        aluno24.setHabilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa31 = aluno24.primeiroNome("");
        pessoa31.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        boolean boolean34 = authority0.equals((java.lang.Object) "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str35 = authority0.toString();
        java.lang.String str36 = authority0.getName();
        org.junit.Assert.assertNotNull(user5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNotNull(pessoa31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}" + "'", str35, "Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str36, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test3166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3166");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant9 = user0.getResetDate();
        java.lang.Long long10 = user0.getId();
        user0.setResetKey("LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test3167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3167");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str8 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("Authority{name='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str5, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str8, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test3168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3168");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getField();
        java.lang.String str6 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str4, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str5, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test3169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3169");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        aluno0.setEmail("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
    }

    @Test
    public void test3170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3170");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        professor9.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        aluno12.setPrimeiroNome("");
        java.lang.Long long15 = aluno12.getMatricula();
        aluno12.setHabilitadoTcc((java.lang.Boolean) false);
        aluno12.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.Long long31 = aluno27.getMatricula();
        aluno27.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno12, aluno20, aluno27, aluno34 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        com.unifacisa.tcc.domain.Professor professor38 = professor9.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor39 = professor6.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        professor39.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(professor38);
        org.junit.Assert.assertNotNull(professor39);
    }

    @Test
    public void test3171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3171");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}", "LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=, createdDate=2021-03-26T03:34:34.902Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.902Z, authorities=[]}");
    }

    @Test
    public void test3172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3172");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        java.lang.String str3 = managedUserVM0.getImageUrl();
        java.time.Instant instant4 = managedUserVM0.getCreatedDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
    }

    @Test
    public void test3173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3173");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno66 = aluno64.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor67 = aluno66.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = professor67.matricula((java.lang.Long) 100L);
        pessoa69.setMatricula((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertNotNull(aluno66);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertNotNull(pessoa69);
    }

    @Test
    public void test3174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3174");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        loggingAspect18.springBeanPointcut();
        loggingAspect18.applicationPackagePointcut();
        loggingAspect18.springBeanPointcut();
        loggingAspect18.springBeanPointcut();
        loggingAspect18.springBeanPointcut();
        loggingAspect18.springBeanPointcut();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
    }

    @Test
    public void test3175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3175");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "error.validation", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", (java.lang.Long) 0L, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", "SocialUserConnection{id=null, userId=error.concurrencyFailure, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='error.concurrencyFailure', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}', secret='null', refreshToken='null', expireTime=10}", "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='0', diponibilidade='true'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}", (java.lang.Long) 10L);
    }

    @Test
    public void test3176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3176");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor36 = professor34.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor45 = null;
        aluno44.setProfessor(professor45);
        java.lang.Long long47 = aluno44.getMatricula();
        java.lang.String str48 = aluno44.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean51 = aluno49.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        aluno52.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.Long long63 = aluno60.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray67 = new com.unifacisa.tcc.domain.Aluno[] { aluno38, aluno43, aluno44, aluno49, aluno52, aluno57, aluno60, aluno64 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet68 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet68, alunoArray67);
        professor37.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor71 = professor36.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor72 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet68);
        com.unifacisa.tcc.domain.Professor professor73 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str74 = professor73.toString();
        com.unifacisa.tcc.domain.Professor professor76 = professor73.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet77 = professor73.getAlunos();
        professor2.setAlunos(alunoSet77);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet79 = professor2.getAlunos();
        com.unifacisa.tcc.domain.Professor professor81 = professor2.diponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNull(long47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(long63);
        org.junit.Assert.assertNotNull(alunoArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str74, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNotNull(alunoSet77);
        org.junit.Assert.assertNotNull(alunoSet79);
        org.junit.Assert.assertNotNull(professor81);
    }

    @Test
    public void test3177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3177");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant46 = userDTO45.getCreatedDate();
        java.lang.String str47 = userDTO45.toString();
        java.lang.String str48 = userDTO45.getLogin();
        java.time.Instant instant49 = userDTO45.getCreatedDate();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNotNull(instant46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:16.174Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:16.174Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str47, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:16.174Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:16.174Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(instant49);
    }

    @Test
    public void test3178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3178");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        professor0.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long4 = professor0.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor6 = null;
        aluno5.setProfessor(professor6);
        aluno5.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = aluno5.primeiroNome("hi!");
        java.lang.Long long12 = aluno5.getId();
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno5.habilitadoTcc((java.lang.Boolean) false);
        aluno5.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor17 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str18 = professor17.toString();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        java.lang.Long long22 = aluno19.getMatricula();
        java.lang.String str23 = aluno19.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean26 = aluno24.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor27 = aluno24.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor33 = null;
        aluno32.setProfessor(professor33);
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.String str36 = aluno32.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean39 = aluno37.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor40 = aluno37.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor42 = null;
        aluno41.setProfessor(professor42);
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        aluno44.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        java.lang.Long long55 = aluno52.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean59 = aluno57.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor61 = null;
        aluno60.setProfessor(professor61);
        com.unifacisa.tcc.domain.Aluno[] alunoArray63 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno28, aluno31, aluno32, aluno37, aluno41, aluno44, aluno47, aluno52, aluno56, aluno57, aluno60 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet64 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet64, alunoArray63);
        com.unifacisa.tcc.domain.Professor professor66 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet64);
        com.unifacisa.tcc.domain.Aluno aluno67 = aluno5.professor(professor17);
        com.unifacisa.tcc.domain.Aluno aluno69 = aluno67.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor70 = professor0.removeAluno(aluno67);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa72 = professor0.segundoNome("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa74 = pessoa72.primeiroNome("SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(professor27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(professor40);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(alunoArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(aluno67);
        org.junit.Assert.assertNotNull(aluno69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(pessoa72);
        org.junit.Assert.assertNotNull(pessoa74);
    }

    @Test
    public void test3179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3179");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.String str7 = loginVM0.getPassword();
        loginVM0.setUsername("");
        loginVM0.setUsername("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.Boolean boolean12 = loginVM0.isRememberMe();
        java.lang.String str13 = loginVM0.getUsername();
        java.lang.String str14 = loginVM0.toString();
        java.lang.String str15 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str13, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', rememberMe=false}" + "'", str14, "LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', rememberMe=false}");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3180");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = professor5.segundoNome("");
        java.lang.Long long15 = pessoa14.getNumeroContato();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNull(long15);
    }

    @Test
    public void test3181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3181");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user63 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user65 = userMapper0.userFromId((java.lang.Long) 1L);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.unifacisa.tcc.domain.User> userList67 = userMapper0.userDTOsToUsers(userDTOList66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNotNull(user65);
    }

    @Test
    public void test3182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3182");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor7 = null;
        aluno6.setProfessor(professor7);
        aluno6.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor13 = null;
        aluno12.setProfessor(professor13);
        java.lang.Long long15 = aluno12.getMatricula();
        java.lang.String str16 = aluno12.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean19 = aluno17.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor21 = null;
        aluno20.setProfessor(professor21);
        aluno20.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean27 = aluno25.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        aluno28.setPrimeiroNome("");
        java.lang.Long long31 = aluno28.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        aluno32.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray35 = new com.unifacisa.tcc.domain.Aluno[] { aluno6, aluno11, aluno12, aluno17, aluno20, aluno25, aluno28, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet36 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet36, alunoArray35);
        professor5.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor39 = professor4.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet36);
        com.unifacisa.tcc.domain.Professor professor41 = professor39.diponibilidade((java.lang.Boolean) true);
        professor39.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM47 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("LoginVM{username='null', rememberMe=false}", "error.validation", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str48 = fieldErrorVM47.getField();
        boolean boolean49 = professor39.equals((java.lang.Object) str48);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity50 = professorResource1.updateProfessor(professor39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertNotNull(alunoArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(professor41);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "error.validation" + "'", str48, "error.validation");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test3183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3183");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.String str45 = user0.getFirstName();
        user0.setFirstName("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        java.lang.String str48 = user0.toString();
        user0.setLastName("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "User{login='null', firstName='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str48, "User{login='null', firstName='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3184");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str16 = socialUserConnection0.getRefreshToken();
        java.lang.String str17 = socialUserConnection0.getSecret();
        java.lang.String str18 = socialUserConnection0.getSecret();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test3185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3185");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO3 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper4 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user6 = userMapper4.userFromId((java.lang.Long) 100L);
        user6.setResetKey("hi!");
        java.lang.String str9 = user6.getResetKey();
        user6.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user14 = userMapper12.userFromId((java.lang.Long) 100L);
        user14.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        user14.setResetDate(instant23);
        user6.setResetDate(instant23);
        com.unifacisa.tcc.service.dto.UserDTO userDTO26 = new com.unifacisa.tcc.service.dto.UserDTO(user6);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent27 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap28 = null;
        persistentAuditEvent27.setData(strMap28);
        persistentAuditEvent27.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent32 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant33 = null;
        persistentAuditEvent32.setAuditEventDate(instant33);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        user35.setResetDate(instant46);
        persistentAuditEvent32.setAuditEventDate(instant46);
        persistentAuditEvent27.setAuditEventDate(instant46);
        user6.setCreatedDate(instant46);
        userDTO3.setLastModifiedDate(instant46);
        java.lang.String str52 = userDTO3.getLastName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test3186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3186");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.toString();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        user10.setCreatedDate(instant17);
        user2.setResetDate(instant17);
        java.lang.String str20 = user2.getLastModifiedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test3187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3187");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("error.validation");
        java.lang.String str6 = loginVM0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "error.validation" + "'", str6, "error.validation");
    }

    @Test
    public void test3188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3188");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.Long long45 = user0.getId();
        user0.setActivated(true);
        java.time.Instant instant48 = user0.getCreatedDate();
        user0.setResetKey("LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNotNull(instant48);
    }

    @Test
    public void test3189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3189");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setLevel("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        loggerVM0.setName("");
        java.lang.String str5 = loggerVM0.toString();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='', level='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str5, "LoggerVM{name='', level='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
    }

    @Test
    public void test3190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3190");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getImageUrl();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = managedUserVM0.getLastModifiedDate();
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str5 = managedUserVM4.toString();
        boolean boolean6 = managedUserVM4.isActivated();
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        user7.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user7.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user14 = userMapper12.userFromId((java.lang.Long) 100L);
        user14.setLangKey("");
        java.time.Instant instant17 = user14.getResetDate();
        java.time.Instant instant18 = user14.getCreatedDate();
        user7.setResetDate(instant18);
        java.time.Instant instant20 = null;
        user7.setCreatedDate(instant20);
        java.lang.String str22 = user7.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user23 = new com.unifacisa.tcc.domain.User();
        java.lang.String str24 = user23.toString();
        boolean boolean25 = user7.equals((java.lang.Object) user23);
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant40 = user35.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setLangKey("");
        java.time.Instant instant47 = user44.getResetDate();
        java.time.Instant instant48 = user44.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.String str52 = aluno49.getPrimeiroNome();
        java.lang.Long long53 = aluno49.getMatricula();
        boolean boolean54 = user44.equals((java.lang.Object) aluno49);
        user44.setFirstName("");
        com.unifacisa.tcc.domain.User user57 = new com.unifacisa.tcc.domain.User();
        user57.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user57.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper62 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user64 = userMapper62.userFromId((java.lang.Long) 100L);
        user64.setLangKey("");
        java.time.Instant instant67 = user64.getResetDate();
        java.time.Instant instant68 = user64.getCreatedDate();
        user57.setResetDate(instant68);
        user44.setCreatedDate(instant68);
        java.util.Set<java.lang.String> strSet71 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO72 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant40, "", instant68, strSet71);
        user23.setResetDate(instant68);
        managedUserVM4.setLastModifiedDate(instant68);
        managedUserVM0.setLastModifiedDate(instant68);
        java.lang.String str76 = managedUserVM0.getEmail();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNull(instant17);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str24, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(user64);
        org.junit.Assert.assertNull(instant67);
        org.junit.Assert.assertNotNull(instant68);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test3191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3191");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        loginVM0.setPassword("User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = loginVM0.toString();
        java.lang.String str10 = loginVM0.toString();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str9, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str10, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test3192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3192");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}", "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=-1, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test3193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3193");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        java.lang.Boolean boolean3 = loginVM0.isRememberMe();
        java.lang.String str4 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.String str7 = loginVM0.toString();
        org.junit.Assert.assertNull(boolean3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "LoginVM{username='null', rememberMe=true}" + "'", str7, "LoginVM{username='null', rememberMe=true}");
    }

    @Test
    public void test3194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3194");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        user0.setLastModifiedBy("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long12 = userDTO11.getId();
        java.lang.String str13 = userDTO11.getEmail();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3195");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setRefreshToken("");
        socialUserConnection0.setId((java.lang.Long) 100L);
        socialUserConnection0.setDisplayName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        socialUserConnection0.setImageURL("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3196");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setSegundoNome("hi!");
        boolean boolean6 = authority0.equals((java.lang.Object) "hi!");
        java.lang.String str7 = authority0.toString();
        authority0.setName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper10 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user12 = userMapper10.userFromId((java.lang.Long) 100L);
        user12.setLangKey("");
        java.time.Instant instant15 = user12.getResetDate();
        java.time.Instant instant16 = user12.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.String str20 = aluno17.getPrimeiroNome();
        java.lang.Long long21 = aluno17.getMatricula();
        boolean boolean22 = user12.equals((java.lang.Object) aluno17);
        user12.setFirstName("");
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        user25.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user25.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user32 = userMapper30.userFromId((java.lang.Long) 100L);
        user32.setLangKey("");
        java.time.Instant instant35 = user32.getResetDate();
        java.time.Instant instant36 = user32.getCreatedDate();
        user25.setResetDate(instant36);
        user12.setCreatedDate(instant36);
        java.lang.String str39 = user12.getCreatedBy();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet40 = user12.getAuthorities();
        boolean boolean41 = authority0.equals((java.lang.Object) user12);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='null'}" + "'", str7, "Authority{name='null'}");
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNotNull(instant16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(authoritySet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test3197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3197");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM5 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM5.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str8 = loggerVM5.toString();
        logsResource0.changeLevel(loggerVM5);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList10 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList11 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM12 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM12.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM12.setName("LoggerVM{name='null', level='null'}");
        loggerVM12.setLevel("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        logsResource0.changeLevel(loggerVM12);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str8, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertNotNull(loggerVMList10);
        org.junit.Assert.assertNotNull(loggerVMList11);
    }

    @Test
    public void test3198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3198");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str5 = socialUserConnection0.getRefreshToken();
        java.lang.Long long6 = socialUserConnection0.getId();
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.lang.String str9 = socialUserConnection0.getProfileURL();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.concurrencyFailure" + "'", str9, "error.concurrencyFailure");
    }

    @Test
    public void test3199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3199");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setLastName("LoginVM{username='null', rememberMe=null}");
        java.time.Instant instant8 = user2.getCreatedDate();
        user2.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(instant8);
    }

    @Test
    public void test3200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3200");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3201");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}", "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}", "User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", (java.lang.Long) (-1L), "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}", "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", "LoginVM{username='null', rememberMe=false}", (java.lang.Long) 10L);
        socialUserConnection11.setProfileURL("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3202");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str3 = authority0.getName();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM4 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM4.setLevel("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        boolean boolean7 = authority0.equals((java.lang.Object) "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str3, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test3203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3203");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Authority{name='Authority{name='error.concurrencyFailure'}'}", "Professor{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "", (java.lang.Long) 1L, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}'}", "LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}", "LoginVM{username='LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}', rememberMe=false}", "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}", "UserDTO{login='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}", (java.lang.Long) (-1L));
    }

    @Test
    public void test3204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3204");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        professor8.setPrimeiroNome("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        java.lang.Boolean boolean15 = professor8.isDiponibilidade();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = professor8.primeiroNome("LoggerVM{name='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', level='null'}");
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean20 = aluno18.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa22 = aluno18.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str24 = professor23.toString();
        professor23.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long27 = professor23.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa29 = professor23.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno30 = aluno18.professor(professor23);
        com.unifacisa.tcc.domain.Professor professor31 = aluno18.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = aluno18.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor34 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor36 = professor34.diponibilidade((java.lang.Boolean) true);
        professor36.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str39 = professor36.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        aluno40.setPrimeiroNome("");
        java.lang.Long long43 = aluno40.getMatricula();
        java.lang.Long long44 = aluno40.getMatricula();
        aluno40.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa48 = aluno40.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno50 = aluno40.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor52 = null;
        aluno51.setProfessor(professor52);
        aluno51.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = aluno51.primeiroNome("hi!");
        java.lang.Long long58 = aluno51.getId();
        com.unifacisa.tcc.domain.Aluno aluno60 = aluno51.habilitadoTcc((java.lang.Boolean) false);
        aluno51.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor63 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str64 = professor63.toString();
        com.unifacisa.tcc.domain.Professor professor66 = professor63.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet67 = professor63.getAlunos();
        java.lang.Long long68 = professor63.getNumeroContato();
        professor63.setMatricula((java.lang.Long) (-1L));
        aluno51.setProfessor(professor63);
        com.unifacisa.tcc.domain.Aluno aluno72 = aluno50.professor(professor63);
        com.unifacisa.tcc.domain.Professor professor73 = professor36.removeAluno(aluno50);
        com.unifacisa.tcc.domain.Professor professor75 = professor36.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno18.professor(professor75);
        com.unifacisa.tcc.domain.Professor professor77 = professor8.removeAluno(aluno18);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa79 = aluno18.primeiroNome("UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertEquals("'" + boolean15 + "' != '" + false + "'", boolean15, false);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pessoa22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str24, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNotNull(pessoa29);
        org.junit.Assert.assertNotNull(aluno30);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(long43);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNotNull(pessoa48);
        org.junit.Assert.assertNotNull(aluno50);
        org.junit.Assert.assertNotNull(pessoa57);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(aluno60);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str64, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNotNull(alunoSet67);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(aluno72);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(aluno76);
        org.junit.Assert.assertNotNull(professor77);
        org.junit.Assert.assertNotNull(pessoa79);
    }

    @Test
    public void test3205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3205");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getKey();
        java.lang.String str11 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("error.concurrencyFailure");
        java.lang.String str16 = keyAndPasswordVM0.getKey();
        java.lang.String str17 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        java.lang.String str20 = keyAndPasswordVM0.getKey();
        java.lang.String str21 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "error.concurrencyFailure" + "'", str17, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}" + "'", str20, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}" + "'", str21, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test3206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3206");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setLastModifiedBy("hi!");
        boolean boolean6 = user0.getActivated();
        java.lang.String str7 = user0.getActivationKey();
        user0.setActivationKey("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        user0.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant12 = user0.getCreatedDate();
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper14 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user16 = userMapper14.userFromId((java.lang.Long) 100L);
        user16.setLangKey("");
        java.time.Instant instant19 = user16.getResetDate();
        java.time.Instant instant20 = user16.getCreatedDate();
        user13.setCreatedDate(instant20);
        boolean boolean22 = user13.getActivated();
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        user32.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user32.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant37 = user32.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper39 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user41 = userMapper39.userFromId((java.lang.Long) 100L);
        user41.setLangKey("");
        java.time.Instant instant44 = user41.getResetDate();
        java.time.Instant instant45 = user41.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        aluno46.setPrimeiroNome("");
        java.lang.String str49 = aluno46.getPrimeiroNome();
        java.lang.Long long50 = aluno46.getMatricula();
        boolean boolean51 = user41.equals((java.lang.Object) aluno46);
        user41.setFirstName("");
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        user54.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user54.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper59 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user61 = userMapper59.userFromId((java.lang.Long) 100L);
        user61.setLangKey("");
        java.time.Instant instant64 = user61.getResetDate();
        java.time.Instant instant65 = user61.getCreatedDate();
        user54.setResetDate(instant65);
        user41.setCreatedDate(instant65);
        java.util.Set<java.lang.String> strSet68 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO69 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant37, "", instant65, strSet68);
        user13.setLastModifiedDate(instant37);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setResetKey("hi!");
        java.lang.String str76 = user73.getResetKey();
        user73.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper79 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user81 = userMapper79.userFromId((java.lang.Long) 100L);
        user81.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper84 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user86 = userMapper84.userFromId((java.lang.Long) 100L);
        user86.setLangKey("");
        java.time.Instant instant89 = user86.getResetDate();
        java.time.Instant instant90 = user86.getCreatedDate();
        user81.setResetDate(instant90);
        user73.setResetDate(instant90);
        user13.setCreatedDate(instant90);
        user0.setCreatedDate(instant90);
        java.time.Instant instant95 = user0.getResetDate();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertNotNull(user16);
        org.junit.Assert.assertNull(instant19);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(instant37);
        org.junit.Assert.assertNotNull(user41);
        org.junit.Assert.assertNull(instant44);
        org.junit.Assert.assertNotNull(instant45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertNotNull(instant65);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(user81);
        org.junit.Assert.assertNotNull(user86);
        org.junit.Assert.assertNull(instant89);
        org.junit.Assert.assertNotNull(instant90);
        org.junit.Assert.assertNull(instant95);
    }

    @Test
    public void test3207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3207");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.String str16 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setImageURL("LoginVM{username='null', rememberMe=true}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test3208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3208");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str9 = user2.getEmail();
        user2.setLangKey("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        java.time.Instant instant12 = user2.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(instant12);
    }

    @Test
    public void test3209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3209");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.Boolean boolean4 = aluno0.isHabilitadoTcc();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertNull(boolean4);
    }

    @Test
    public void test3210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3210");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        java.lang.String str4 = managedUserVM0.toString();
        java.time.Instant instant5 = null;
        managedUserVM0.setLastModifiedDate(instant5);
        java.lang.String str7 = managedUserVM0.getLangKey();
        java.lang.String str8 = managedUserVM0.getLastName();
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user18.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant23 = user18.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper25 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user27 = userMapper25.userFromId((java.lang.Long) 100L);
        user27.setLangKey("");
        java.time.Instant instant30 = user27.getResetDate();
        java.time.Instant instant31 = user27.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        aluno32.setPrimeiroNome("");
        java.lang.String str35 = aluno32.getPrimeiroNome();
        java.lang.Long long36 = aluno32.getMatricula();
        boolean boolean37 = user27.equals((java.lang.Object) aluno32);
        user27.setFirstName("");
        com.unifacisa.tcc.domain.User user40 = new com.unifacisa.tcc.domain.User();
        user40.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user40.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper45 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user47 = userMapper45.userFromId((java.lang.Long) 100L);
        user47.setLangKey("");
        java.time.Instant instant50 = user47.getResetDate();
        java.time.Instant instant51 = user47.getCreatedDate();
        user40.setResetDate(instant51);
        user27.setCreatedDate(instant51);
        java.util.Set<java.lang.String> strSet54 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO55 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant23, "", instant51, strSet54);
        java.time.Instant instant56 = userDTO55.getCreatedDate();
        managedUserVM0.setLastModifiedDate(instant56);
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNotNull(user27);
        org.junit.Assert.assertNull(instant30);
        org.junit.Assert.assertNotNull(instant31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(user47);
        org.junit.Assert.assertNull(instant50);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertNotNull(instant56);
    }

    @Test
    public void test3211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3211");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet4 = professor0.getAlunos();
        professor0.setId((java.lang.Long) 1L);
        professor0.setId((java.lang.Long) 10L);
        java.lang.String str9 = professor0.getSegundoNome();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
        org.junit.Assert.assertNotNull(alunoSet4);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3212");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.getImageUrl();
        com.unifacisa.tcc.domain.User user2 = new com.unifacisa.tcc.domain.User();
        user2.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user2.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        user2.setResetDate(instant13);
        managedUserVM0.setLastModifiedDate(instant13);
        java.lang.String str16 = managedUserVM0.toString();
        java.time.Instant instant17 = managedUserVM0.getLastModifiedDate();
        java.lang.String str18 = managedUserVM0.getCreatedBy();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:16.640Z, authorities=null}" + "'", str16, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:16.640Z, authorities=null}");
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test3213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3213");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = loginVM0.toString();
        loginVM0.setUsername("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str11 = loginVM0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}" + "'", str6, "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}', rememberMe=false}" + "'", str11, "LoginVM{username='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}', rememberMe=false}");
    }

    @Test
    public void test3214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3214");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        java.lang.String str4 = managedUserVM0.toString();
        java.lang.String str5 = managedUserVM0.toString();
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3215");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str5 = professor2.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        aluno6.setPrimeiroNome("");
        java.lang.Long long9 = aluno6.getMatricula();
        java.lang.Long long10 = aluno6.getMatricula();
        aluno6.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa14 = aluno6.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno16 = aluno6.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor18 = null;
        aluno17.setProfessor(professor18);
        aluno17.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa23 = aluno17.primeiroNome("hi!");
        java.lang.Long long24 = aluno17.getId();
        com.unifacisa.tcc.domain.Aluno aluno26 = aluno17.habilitadoTcc((java.lang.Boolean) false);
        aluno17.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str30 = professor29.toString();
        com.unifacisa.tcc.domain.Professor professor32 = professor29.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet33 = professor29.getAlunos();
        java.lang.Long long34 = professor29.getNumeroContato();
        professor29.setMatricula((java.lang.Long) (-1L));
        aluno17.setProfessor(professor29);
        com.unifacisa.tcc.domain.Aluno aluno38 = aluno16.professor(professor29);
        com.unifacisa.tcc.domain.Professor professor39 = professor2.removeAluno(aluno16);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa41 = professor39.matricula((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNotNull(pessoa14);
        org.junit.Assert.assertNotNull(aluno16);
        org.junit.Assert.assertNotNull(pessoa23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(aluno26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str30, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(alunoSet33);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(aluno38);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNotNull(pessoa41);
    }

    @Test
    public void test3216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3216");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        loggingAspect2.springBeanPointcut();
        loggingAspect2.springBeanPointcut();
        loggingAspect2.applicationPackagePointcut();
        loggingAspect2.applicationPackagePointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
    }

    @Test
    public void test3217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3217");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str4 = persistentAuditEvent3.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent5.setId((java.lang.Long) 1L);
        java.lang.String str8 = persistentAuditEvent5.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent5.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent10.setId((java.lang.Long) 1L);
        java.lang.String str13 = persistentAuditEvent10.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = persistentAuditEvent10.getData();
        persistentAuditEvent5.setData(strMap14);
        persistentAuditEvent3.setData(strMap14);
        persistentAuditEvent0.setData(strMap14);
        java.lang.Long long18 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str23 = persistentAuditEvent0.getPrincipal();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str23, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
    }

    @Test
    public void test3218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3218");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository2 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource3 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository2);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = professor4.email("");
        com.unifacisa.tcc.domain.Professor professor10 = professor4.diponibilidade((java.lang.Boolean) true);
        professor10.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource3.createProfessor(professor10);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity14 = professorResource1.createProfessor(professor10);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa21 = aluno15.primeiroNome("hi!");
        java.lang.Long long22 = aluno15.getId();
        com.unifacisa.tcc.domain.Aluno aluno24 = aluno15.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long25 = aluno24.getMatricula();
        com.unifacisa.tcc.domain.Professor professor26 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor28 = professor26.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = professor26.email("");
        com.unifacisa.tcc.domain.Professor professor32 = professor26.diponibilidade((java.lang.Boolean) true);
        professor32.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno35 = aluno24.professor(professor32);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity36 = professorResource1.createProfessor(professor32);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long42 = professor39.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa44 = professor39.email("error.validation");
        professor39.setId((java.lang.Long) 0L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity47 = professorResource1.createProfessor(professor39);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity49 = professorResource1.deleteProfessor((java.lang.Long) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(professorResponseEntity13);
        org.junit.Assert.assertNotNull(professorResponseEntity14);
        org.junit.Assert.assertNotNull(pessoa21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(aluno24);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNotNull(professor28);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(professor32);
        org.junit.Assert.assertNotNull(aluno35);
        org.junit.Assert.assertNotNull(professorResponseEntity36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(pessoa44);
        org.junit.Assert.assertNotNull(professorResponseEntity47);
    }

    @Test
    public void test3219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3219");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent7 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap8 = null;
        persistentAuditEvent7.setData(strMap8);
        java.time.Instant instant10 = null;
        persistentAuditEvent7.setAuditEventDate(instant10);
        java.time.Instant instant12 = persistentAuditEvent7.getAuditEventDate();
        persistentAuditEvent7.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        persistentAuditEvent15.setData(strMap16);
        java.time.Instant instant18 = null;
        persistentAuditEvent15.setAuditEventDate(instant18);
        persistentAuditEvent15.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent15.getData();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user25 = userMapper23.userFromId((java.lang.Long) 100L);
        user25.setResetKey("hi!");
        user25.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user32 = userMapper30.userFromId((java.lang.Long) 100L);
        user32.setLangKey("");
        java.time.Instant instant35 = user32.getResetDate();
        java.time.Instant instant36 = user32.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        aluno37.setPrimeiroNome("");
        java.lang.String str40 = aluno37.getPrimeiroNome();
        java.lang.Long long41 = aluno37.getMatricula();
        boolean boolean42 = user32.equals((java.lang.Object) aluno37);
        user32.setFirstName("");
        com.unifacisa.tcc.domain.User user45 = new com.unifacisa.tcc.domain.User();
        user45.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user45.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper50 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user52 = userMapper50.userFromId((java.lang.Long) 100L);
        user52.setLangKey("");
        java.time.Instant instant55 = user52.getResetDate();
        java.time.Instant instant56 = user52.getCreatedDate();
        user45.setResetDate(instant56);
        user32.setCreatedDate(instant56);
        user25.setResetDate(instant56);
        persistentAuditEvent15.setAuditEventDate(instant56);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent61 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant62 = persistentAuditEvent61.getAuditEventDate();
        java.time.Instant instant63 = null;
        persistentAuditEvent61.setAuditEventDate(instant63);
        persistentAuditEvent61.setId((java.lang.Long) 1L);
        persistentAuditEvent61.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent69 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent69.setId((java.lang.Long) 1L);
        java.lang.String str72 = persistentAuditEvent69.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap73 = persistentAuditEvent69.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent74 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent74.setId((java.lang.Long) 1L);
        java.lang.String str77 = persistentAuditEvent74.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = persistentAuditEvent74.getData();
        persistentAuditEvent69.setData(strMap78);
        persistentAuditEvent61.setData(strMap78);
        persistentAuditEvent15.setData(strMap78);
        persistentAuditEvent7.setData(strMap78);
        persistentAuditEvent0.setData(strMap78);
        java.lang.Long long84 = persistentAuditEvent0.getId();
        java.lang.Long long85 = persistentAuditEvent0.getId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(user25);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(long41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(user52);
        org.junit.Assert.assertNull(instant55);
        org.junit.Assert.assertNotNull(instant56);
        org.junit.Assert.assertNull(instant62);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(long84);
        org.junit.Assert.assertNull(long85);
    }

    @Test
    public void test3220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3220");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray2 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList3 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList3, userArray2);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList5 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList3);
        java.time.Instant instant16 = null;
        java.time.Instant instant18 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant28, "hi!", instant30, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant16, "", instant18, (java.util.Set<java.lang.String>) strSet34);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = userMapper1.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        user39.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user39.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user46 = userMapper44.userFromId((java.lang.Long) 100L);
        user46.setLangKey("");
        java.time.Instant instant49 = user46.getResetDate();
        java.time.Instant instant50 = user46.getCreatedDate();
        user39.setResetDate(instant50);
        java.time.Instant instant52 = null;
        user39.setCreatedDate(instant52);
        java.lang.String str54 = user39.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        java.lang.String str56 = user55.toString();
        boolean boolean57 = user39.equals((java.lang.Object) user55);
        user39.setEmail("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = userMapper1.userToUserDTO(user39);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = userMapper0.userToUserDTO(user39);
        java.lang.String str62 = userDTO61.getLastModifiedBy();
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userDTOList5);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNotNull(user46);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str56, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTO60);
        org.junit.Assert.assertNotNull(userDTO61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test3221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3221");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        java.lang.Long long9 = aluno5.getNumeroContato();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        aluno10.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor15 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor17 = professor15.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor18 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        aluno19.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor26 = null;
        aluno25.setProfessor(professor26);
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.String str29 = aluno25.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean32 = aluno30.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean40 = aluno38.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        aluno41.setPrimeiroNome("");
        java.lang.Long long44 = aluno41.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        aluno45.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray48 = new com.unifacisa.tcc.domain.Aluno[] { aluno19, aluno24, aluno25, aluno30, aluno33, aluno38, aluno41, aluno45 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet49 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet49, alunoArray48);
        professor18.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        com.unifacisa.tcc.domain.Professor professor52 = professor17.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet49);
        aluno10.setProfessor(professor52);
        aluno5.setProfessor(professor52);
        professor52.setSegundoNome("Authority{name=''}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNotNull(alunoArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(professor52);
    }

    @Test
    public void test3222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3222");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        java.lang.String str7 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='hi!', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='10', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Long long10 = socialUserConnection0.getRank();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(long10);
    }

    @Test
    public void test3223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3223");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        persistentAuditEvent0.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        user10.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.String str25 = aluno22.getPrimeiroNome();
        java.lang.Long long26 = aluno22.getMatricula();
        boolean boolean27 = user17.equals((java.lang.Object) aluno22);
        user17.setFirstName("");
        com.unifacisa.tcc.domain.User user30 = new com.unifacisa.tcc.domain.User();
        user30.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user30.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper35 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user37 = userMapper35.userFromId((java.lang.Long) 100L);
        user37.setLangKey("");
        java.time.Instant instant40 = user37.getResetDate();
        java.time.Instant instant41 = user37.getCreatedDate();
        user30.setResetDate(instant41);
        user17.setCreatedDate(instant41);
        user10.setResetDate(instant41);
        persistentAuditEvent0.setAuditEventDate(instant41);
        java.util.Map<java.lang.String, java.lang.String> strMap46 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(user37);
        org.junit.Assert.assertNull(instant40);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test3224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3224");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', habilitadoTcc='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}", "Authority{name='null'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test3225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3225");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str4, "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3226");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        org.springframework.core.env.Environment environment5 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect6 = loggingAspectConfiguration0.loggingAspect(environment5);
        org.springframework.core.env.Environment environment7 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect8 = loggingAspectConfiguration0.loggingAspect(environment7);
        loggingAspect8.springBeanPointcut();
        loggingAspect8.applicationPackagePointcut();
        loggingAspect8.springBeanPointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
        org.junit.Assert.assertNotNull(loggingAspect6);
        org.junit.Assert.assertNotNull(loggingAspect8);
    }

    @Test
    public void test3227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3227");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper3 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray4 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList5 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList5, userArray4);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList7 = userMapper3.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList5);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray9 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList10 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList10, userArray9);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList10);
        java.time.Instant instant23 = null;
        java.time.Instant instant25 = null;
        java.time.Instant instant35 = null;
        java.time.Instant instant37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        com.unifacisa.tcc.service.dto.UserDTO userDTO43 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant35, "hi!", instant37, (java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM44 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant23, "", instant25, (java.util.Set<java.lang.String>) strSet41);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet45 = userMapper8.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray47 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList48 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList48, userArray47);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList50 = userMapper46.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList51 = userMapper8.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList48);
        java.util.List<com.unifacisa.tcc.domain.User> userList52 = userMapper3.userDTOsToUsers(userDTOList51);
        java.util.List<com.unifacisa.tcc.domain.User> userList53 = userMapper0.userDTOsToUsers(userDTOList51);
        com.unifacisa.tcc.domain.User user55 = userMapper0.userFromId((java.lang.Long) 100L);
        user55.setId((java.lang.Long) 0L);
        user55.setLastModifiedBy("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(userArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(userDTOList7);
        org.junit.Assert.assertNotNull(userArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(authoritySet45);
        org.junit.Assert.assertNotNull(userArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(userDTOList50);
        org.junit.Assert.assertNotNull(userDTOList51);
        org.junit.Assert.assertNotNull(userList52);
        org.junit.Assert.assertNotNull(userList53);
        org.junit.Assert.assertNotNull(user55);
    }

    @Test
    public void test3228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3228");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getProviderId();
        java.lang.String str7 = socialUserConnection0.getProviderUserId();
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        java.lang.Long long9 = socialUserConnection0.getId();
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str12 = socialUserConnection0.getSecret();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3229");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3230");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setImageURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='null'}");
        java.lang.String str7 = socialUserConnection0.toString();
        socialUserConnection0.setExpireTime((java.lang.Long) 10L);
        java.lang.String str10 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}" + "'", str7, "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='null'}" + "'", str10, "LoggerVM{name='null', level='null'}");
    }

    @Test
    public void test3231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3231");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        java.lang.String str5 = loginVM0.getUsername();
        java.lang.String str6 = loginVM0.getPassword();
        java.lang.String str7 = loginVM0.getPassword();
        java.lang.Class<?> wildcardClass8 = loginVM0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3232");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user2.setResetDate(instant11);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setResetKey("hi!");
        user15.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        java.lang.String str30 = aluno27.getPrimeiroNome();
        java.lang.Long long31 = aluno27.getMatricula();
        boolean boolean32 = user22.equals((java.lang.Object) aluno27);
        user22.setFirstName("");
        com.unifacisa.tcc.domain.User user35 = new com.unifacisa.tcc.domain.User();
        user35.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user35.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        user35.setResetDate(instant46);
        user22.setCreatedDate(instant46);
        user15.setResetDate(instant46);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent50 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant51 = null;
        persistentAuditEvent50.setAuditEventDate(instant51);
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        user53.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user53.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper58 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user60 = userMapper58.userFromId((java.lang.Long) 100L);
        user60.setLangKey("");
        java.time.Instant instant63 = user60.getResetDate();
        java.time.Instant instant64 = user60.getCreatedDate();
        user53.setResetDate(instant64);
        persistentAuditEvent50.setAuditEventDate(instant64);
        user15.setCreatedDate(instant64);
        user2.setLastModifiedDate(instant64);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet69 = user2.getAuthorities();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(long31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertNotNull(user60);
        org.junit.Assert.assertNull(instant63);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNotNull(authoritySet69);
    }

    @Test
    public void test3233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3233");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        user0.setEmail("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
    }

    @Test
    public void test3234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3234");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.time.Instant instant13 = null;
        persistentAuditEvent11.setAuditEventDate(instant13);
        java.time.Instant instant15 = persistentAuditEvent11.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap16 = null;
        persistentAuditEvent11.setData(strMap16);
        java.lang.String str18 = persistentAuditEvent11.getPrincipal();
        java.lang.String str19 = persistentAuditEvent11.getAuditEventType();
        persistentAuditEvent11.setId((java.lang.Long) 100L);
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent11.getData();
        java.lang.String str23 = persistentAuditEvent11.getPrincipal();
        persistentAuditEvent11.setAuditEventType("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
        boolean boolean26 = socialUserConnection0.equals((java.lang.Object) "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test3235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3235");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        managedUserVM0.setId((java.lang.Long) (-1L));
        java.lang.String str5 = managedUserVM0.getImageUrl();
        managedUserVM0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3236");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getDisplayName();
        java.lang.String str4 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Long long7 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(long7);
    }

    @Test
    public void test3237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3237");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        user2.setLastName("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet7 = user2.getAuthorities();
        java.lang.String str8 = user2.getLastName();
        java.time.Instant instant9 = user2.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(authoritySet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str8, "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(instant9);
    }

    @Test
    public void test3238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3238");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM38 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet39 = managedUserVM38.getAuthorities();
        java.time.Instant instant40 = null;
        managedUserVM38.setLastModifiedDate(instant40);
        managedUserVM38.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity responseEntity44 = userResource3.createUser(managedUserVM38);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity46 = userResource3.deleteUser("Professor{id=null, primeiroNome='LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertNull(strSet39);
        org.junit.Assert.assertNotNull(responseEntity44);
    }

    @Test
    public void test3239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3239");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO3 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str4 = user2.getFirstName();
        java.lang.String str5 = user2.getCreatedBy();
        java.lang.String str6 = user2.getImageUrl();
        java.lang.String str7 = user2.toString();
        user2.setResetKey("");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str7, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3240");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setEmail("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str8 = professor7.toString();
        professor7.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str11 = professor7.getEmail();
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor7);
        java.lang.String str13 = aluno0.toString();
        java.lang.String str14 = aluno0.getPrimeiroNome();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str8, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3241");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.toString();
        java.lang.String str5 = managedUserVM0.getCreatedBy();
        boolean boolean6 = managedUserVM0.isActivated();
        java.time.Instant instant7 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant8 = managedUserVM0.getLastModifiedDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(instant8);
    }

    @Test
    public void test3242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3242");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap4 = customSocialConnectionRepository3.findAllConnections();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3243");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setRefreshToken("");
        socialUserConnection0.setId((java.lang.Long) 100L);
        socialUserConnection0.setDisplayName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        socialUserConnection0.setUserId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3244");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.String str45 = user0.getPassword();
        user0.setPassword("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str48 = user0.getActivationKey();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test3245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3245");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        java.lang.Long long3 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.util.Map<java.lang.String, java.lang.String> strMap6 = persistentAuditEvent0.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap7 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test3246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3246");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent23 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap24 = null;
        persistentAuditEvent23.setData(strMap24);
        persistentAuditEvent23.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent28 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant29 = null;
        persistentAuditEvent28.setAuditEventDate(instant29);
        com.unifacisa.tcc.domain.User user31 = new com.unifacisa.tcc.domain.User();
        user31.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user31.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper36 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user38 = userMapper36.userFromId((java.lang.Long) 100L);
        user38.setLangKey("");
        java.time.Instant instant41 = user38.getResetDate();
        java.time.Instant instant42 = user38.getCreatedDate();
        user31.setResetDate(instant42);
        persistentAuditEvent28.setAuditEventDate(instant42);
        persistentAuditEvent23.setAuditEventDate(instant42);
        user2.setCreatedDate(instant42);
        user2.setFirstName("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user51 = userMapper49.userFromId((java.lang.Long) 100L);
        user51.setResetKey("hi!");
        user51.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper56 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user58 = userMapper56.userFromId((java.lang.Long) 100L);
        user58.setLangKey("");
        java.time.Instant instant61 = user58.getResetDate();
        java.time.Instant instant62 = user58.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.String str66 = aluno63.getPrimeiroNome();
        java.lang.Long long67 = aluno63.getMatricula();
        boolean boolean68 = user58.equals((java.lang.Object) aluno63);
        user58.setFirstName("");
        com.unifacisa.tcc.domain.User user71 = new com.unifacisa.tcc.domain.User();
        user71.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user71.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper76 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user78 = userMapper76.userFromId((java.lang.Long) 100L);
        user78.setLangKey("");
        java.time.Instant instant81 = user78.getResetDate();
        java.time.Instant instant82 = user78.getCreatedDate();
        user71.setResetDate(instant82);
        user58.setCreatedDate(instant82);
        user51.setResetDate(instant82);
        user2.setLastModifiedDate(instant82);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet87 = user2.getAuthorities();
        java.lang.String str88 = user2.getFirstName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNotNull(user38);
        org.junit.Assert.assertNull(instant41);
        org.junit.Assert.assertNotNull(instant42);
        org.junit.Assert.assertNotNull(user51);
        org.junit.Assert.assertNotNull(user58);
        org.junit.Assert.assertNull(instant61);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(user78);
        org.junit.Assert.assertNull(instant81);
        org.junit.Assert.assertNotNull(instant82);
        org.junit.Assert.assertNotNull(authoritySet87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str88, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
    }

    @Test
    public void test3247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3247");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setLevel("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str3 = loggerVM0.getName();
        java.lang.String str4 = loggerVM0.getLevel();
        loggerVM0.setLevel("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str4, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3248");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        aluno5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor10 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user11.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        user11.setResetDate(instant22);
        java.time.Instant instant24 = null;
        user11.setCreatedDate(instant24);
        java.lang.String str26 = user11.getPassword();
        boolean boolean27 = user11.getActivated();
        boolean boolean28 = aluno5.equals((java.lang.Object) user11);
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor31 = professor29.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        java.lang.Long long42 = aluno39.getMatricula();
        java.lang.String str43 = aluno39.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean46 = aluno44.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.Long long58 = aluno55.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray62 = new com.unifacisa.tcc.domain.Aluno[] { aluno33, aluno38, aluno39, aluno44, aluno47, aluno52, aluno55, aluno59 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet63 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet63, alunoArray62);
        professor32.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        com.unifacisa.tcc.domain.Professor professor66 = professor31.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        java.lang.Long long67 = professor66.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet68 = professor66.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa70 = professor66.segundoNome("hi!");
        professor66.setNumeroContato((java.lang.Long) 1L);
        aluno5.setProfessor(professor66);
        professor66.setPrimeiroNome("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(alunoArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(alunoSet68);
        org.junit.Assert.assertNotNull(pessoa70);
    }

    @Test
    public void test3249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3249");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        com.unifacisa.tcc.domain.Professor professor6 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor8 = professor6.diponibilidade((java.lang.Boolean) true);
        professor8.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str11 = professor8.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor14 = professor12.diponibilidade((java.lang.Boolean) true);
        professor14.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.Long long20 = aluno17.getMatricula();
        aluno17.setHabilitadoTcc((java.lang.Boolean) false);
        aluno17.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        aluno32.setPrimeiroNome("");
        java.lang.Long long35 = aluno32.getMatricula();
        java.lang.Long long36 = aluno32.getMatricula();
        aluno32.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray40 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno25, aluno32, aluno39 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet41 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet41, alunoArray40);
        com.unifacisa.tcc.domain.Professor professor43 = professor14.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Professor professor44 = professor8.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet41);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor46 = null;
        aluno45.setProfessor(professor46);
        aluno45.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor52 = professor50.diponibilidade((java.lang.Boolean) true);
        professor52.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.Long long58 = aluno55.getMatricula();
        aluno55.setHabilitadoTcc((java.lang.Boolean) false);
        aluno55.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.Long long66 = aluno63.getMatricula();
        java.lang.Long long67 = aluno63.getMatricula();
        aluno63.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        aluno70.setPrimeiroNome("");
        java.lang.Long long73 = aluno70.getMatricula();
        java.lang.Long long74 = aluno70.getMatricula();
        aluno70.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno77 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray78 = new com.unifacisa.tcc.domain.Aluno[] { aluno55, aluno63, aluno70, aluno77 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet79 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet79, alunoArray78);
        com.unifacisa.tcc.domain.Professor professor81 = professor52.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet79);
        com.unifacisa.tcc.domain.Aluno aluno82 = aluno45.professor(professor81);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa84 = aluno82.segundoNome("");
        com.unifacisa.tcc.domain.Aluno aluno86 = aluno82.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor87 = professor44.removeAluno(aluno82);
        com.unifacisa.tcc.domain.Professor professor89 = professor87.diponibilidade((java.lang.Boolean) true);
        boolean boolean90 = user2.equals((java.lang.Object) professor87);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa92 = professor87.email("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:15.765Z, authorities=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(professor14);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNull(long35);
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNotNull(alunoArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(professor43);
        org.junit.Assert.assertNotNull(professor44);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNull(long73);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertNotNull(alunoArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(aluno82);
        org.junit.Assert.assertNotNull(pessoa84);
        org.junit.Assert.assertNotNull(aluno86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(professor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(pessoa92);
    }

    @Test
    public void test3250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3250");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        java.lang.String str11 = professor10.getSegundoNome();
        java.lang.String str12 = professor10.getEmail();
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = professor13.email("");
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        aluno18.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = professor13.addAluno(aluno18);
        com.unifacisa.tcc.domain.Professor professor24 = professor10.removeAluno(aluno18);
        java.lang.Long long25 = professor24.getNumeroContato();
        professor24.setNumeroContato((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(long25);
    }

    @Test
    public void test3251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3251");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.String str56 = aluno53.getPrimeiroNome();
        java.lang.Long long57 = aluno53.getMatricula();
        boolean boolean58 = user48.equals((java.lang.Object) aluno53);
        user48.setFirstName("");
        user48.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = user48.getAuthorities();
        user0.setAuthorities(authoritySet63);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str66 = user0.toString();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str66, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3252");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("error.concurrencyFailure", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3253");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test3254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3254");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor4 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor6 = professor4.diponibilidade((java.lang.Boolean) true);
        professor6.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        aluno9.setPrimeiroNome("");
        java.lang.Long long12 = aluno9.getMatricula();
        aluno9.setHabilitadoTcc((java.lang.Boolean) false);
        aluno9.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.Long long20 = aluno17.getMatricula();
        java.lang.Long long21 = aluno17.getMatricula();
        aluno17.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        aluno24.setPrimeiroNome("");
        java.lang.Long long27 = aluno24.getMatricula();
        java.lang.Long long28 = aluno24.getMatricula();
        aluno24.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray32 = new com.unifacisa.tcc.domain.Aluno[] { aluno9, aluno17, aluno24, aluno31 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet33 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet33, alunoArray32);
        com.unifacisa.tcc.domain.Professor professor35 = professor6.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet33);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = professor6.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor38 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor40 = professor38.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor41 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor49 = null;
        aluno48.setProfessor(professor49);
        java.lang.Long long51 = aluno48.getMatricula();
        java.lang.String str52 = aluno48.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean55 = aluno53.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor57 = null;
        aluno56.setProfessor(professor57);
        aluno56.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean63 = aluno61.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        aluno64.setPrimeiroNome("");
        java.lang.Long long67 = aluno64.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno68 = new com.unifacisa.tcc.domain.Aluno();
        aluno68.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray71 = new com.unifacisa.tcc.domain.Aluno[] { aluno42, aluno47, aluno48, aluno53, aluno56, aluno61, aluno64, aluno68 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet72 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet72, alunoArray71);
        professor41.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor75 = professor40.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor76 = professor6.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa78 = professor6.email("error.validation");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa80 = pessoa78.segundoNome("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        boolean boolean81 = aluno0.equals((java.lang.Object) pessoa80);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNotNull(alunoArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(professor35);
        org.junit.Assert.assertNotNull(pessoa37);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(alunoArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNotNull(pessoa78);
        org.junit.Assert.assertNotNull(pessoa80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test3255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3255");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getCreatedBy();
        java.lang.String str9 = user2.getLastModifiedBy();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper10 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user12 = userMapper10.userFromId((java.lang.Long) 100L);
        user12.setResetKey("hi!");
        java.lang.String str15 = user12.getResetKey();
        user12.setLastName("LoginVM{username='null', rememberMe=null}");
        java.lang.String str18 = user12.getActivationKey();
        java.lang.String str19 = user12.toString();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet20 = user12.getAuthorities();
        user2.setAuthorities(authoritySet20);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "User{login='null', firstName='null', lastName='LoginVM{username='null', rememberMe=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str19, "User{login='null', firstName='null', lastName='LoginVM{username='null', rememberMe=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(authoritySet20);
    }

    @Test
    public void test3256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3256");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        aluno5.setHabilitadoTcc((java.lang.Boolean) false);
        aluno5.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.Long long17 = aluno13.getMatricula();
        aluno13.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        aluno20.setPrimeiroNome("");
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.Long long24 = aluno20.getMatricula();
        aluno20.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray28 = new com.unifacisa.tcc.domain.Aluno[] { aluno5, aluno13, aluno20, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet29 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet29, alunoArray28);
        com.unifacisa.tcc.domain.Professor professor31 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet29);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa33 = professor2.matricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.Long long37 = aluno34.getMatricula();
        java.lang.Long long38 = aluno34.getMatricula();
        aluno34.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa42 = aluno34.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno44 = aluno34.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor45 = professor2.removeAluno(aluno34);
        professor2.setSegundoNome("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNotNull(alunoArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(pessoa33);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long38);
        org.junit.Assert.assertNotNull(pessoa42);
        org.junit.Assert.assertNotNull(aluno44);
        org.junit.Assert.assertNotNull(professor45);
    }

    @Test
    public void test3257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3257");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.String str56 = aluno53.getPrimeiroNome();
        java.lang.Long long57 = aluno53.getMatricula();
        boolean boolean58 = user48.equals((java.lang.Object) aluno53);
        user48.setFirstName("");
        user48.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = user48.getAuthorities();
        user0.setAuthorities(authoritySet63);
        user0.setResetKey("SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        java.lang.String str67 = user0.getPassword();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test3258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3258");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        persistentAuditEvent0.setAuditEventType("error.validation");
        persistentAuditEvent0.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.time.Instant instant9 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant9);
    }

    @Test
    public void test3259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3259");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        aluno2.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        com.unifacisa.tcc.domain.Professor professor13 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno2.professor(professor7);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str17 = aluno2.toString();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity18 = alunoResource1.createAluno(aluno2);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        aluno19.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor26 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.email("");
        com.unifacisa.tcc.domain.Professor professor30 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno31 = aluno19.professor(professor24);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor34 = professor32.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        aluno36.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        java.lang.Long long45 = aluno42.getMatricula();
        java.lang.String str46 = aluno42.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean49 = aluno47.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean57 = aluno55.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        aluno62.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno41, aluno42, aluno47, aluno50, aluno55, aluno58, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Professor professor69 = professor34.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        aluno19.setProfessor(professor34);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity71 = alunoResource1.createAluno(aluno19);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity73 = alunoResource1.deleteAluno((java.lang.Long) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str17, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(alunoResponseEntity18);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(aluno31);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(alunoResponseEntity71);
    }

    @Test
    public void test3260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3260");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.String str17 = aluno13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor18 = professor5.removeAluno(aluno13);
        com.unifacisa.tcc.domain.Professor professor19 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str20 = professor19.toString();
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor22 = null;
        aluno21.setProfessor(professor22);
        java.lang.Long long24 = aluno21.getMatricula();
        java.lang.String str25 = aluno21.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean28 = aluno26.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor29 = aluno26.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean32 = aluno30.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor35 = null;
        aluno34.setProfessor(professor35);
        java.lang.Long long37 = aluno34.getMatricula();
        java.lang.String str38 = aluno34.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean41 = aluno39.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor42 = aluno39.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor44 = null;
        aluno43.setProfessor(professor44);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        aluno46.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor50 = null;
        aluno49.setProfessor(professor50);
        aluno49.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno54 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor55 = null;
        aluno54.setProfessor(professor55);
        java.lang.Long long57 = aluno54.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean61 = aluno59.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor63 = null;
        aluno62.setProfessor(professor63);
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno26, aluno30, aluno33, aluno34, aluno39, aluno43, aluno46, aluno49, aluno54, aluno58, aluno59, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        com.unifacisa.tcc.domain.Professor professor68 = professor19.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Professor professor70 = professor19.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa72 = professor19.matricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno73 = aluno13.professor(professor19);
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str20, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(professor29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(professor42);
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(professor68);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(pessoa72);
        org.junit.Assert.assertNotNull(aluno73);
    }

    @Test
    public void test3261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3261");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setImageURL("LoggerVM{name='null', level='ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}'}");
        socialUserConnection0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3262");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper4 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user6 = userMapper4.userFromId((java.lang.Long) 100L);
        user6.setLangKey("");
        java.time.Instant instant9 = user6.getResetDate();
        java.time.Instant instant10 = user6.getCreatedDate();
        user3.setCreatedDate(instant10);
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = userMapper0.userToUserDTO(user3);
        java.lang.String str13 = userDTO12.getCreatedBy();
        java.time.Instant instant14 = userDTO12.getCreatedDate();
        java.lang.String str15 = userDTO12.getLogin();
        java.lang.String str16 = userDTO12.getLangKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNotNull(userDTO12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test3263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3263");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        managedUserVM14.setId((java.lang.Long) 1L);
        org.springframework.http.ResponseEntity responseEntity18 = userResource3.createUser(managedUserVM14);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM19 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str20 = managedUserVM19.toString();
        java.lang.String str21 = managedUserVM19.getImageUrl();
        java.lang.Long long22 = managedUserVM19.getId();
        java.lang.String str23 = managedUserVM19.getLastModifiedBy();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity24 = userResource3.createUser(managedUserVM19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(responseEntity18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str20, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test3264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3264");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        managedUserVM14.setId((java.lang.Long) 1L);
        org.springframework.http.ResponseEntity responseEntity18 = userResource3.createUser(managedUserVM14);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity20 = userResource3.getUser("ManagedUserVM{} UserDTO{login='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(responseEntity18);
    }

    @Test
    public void test3265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3265");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.String str3 = aluno0.getPrimeiroNome();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno8 = aluno0.habilitadoTcc((java.lang.Boolean) true);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(aluno8);
    }

    @Test
    public void test3266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3266");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        java.lang.String str38 = managedUserVM35.getFirstName();
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str38, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3267");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setImageURL("Authority{name='null'}");
        java.lang.String str11 = socialUserConnection0.getProviderUserId();
        java.lang.String str12 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3268");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str5 = socialUserConnection0.getRefreshToken();
        java.lang.Long long6 = socialUserConnection0.getRank();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setRank((java.lang.Long) 100L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test3269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3269");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setResetKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant8 = user0.getResetDate();
        java.time.Instant instant9 = user0.getResetDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper10 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user12 = userMapper10.userFromId((java.lang.Long) 100L);
        user12.setResetKey("hi!");
        user12.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        aluno24.setPrimeiroNome("");
        java.lang.String str27 = aluno24.getPrimeiroNome();
        java.lang.Long long28 = aluno24.getMatricula();
        boolean boolean29 = user19.equals((java.lang.Object) aluno24);
        user19.setFirstName("");
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        user32.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user32.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 100L);
        user39.setLangKey("");
        java.time.Instant instant42 = user39.getResetDate();
        java.time.Instant instant43 = user39.getCreatedDate();
        user32.setResetDate(instant43);
        user19.setCreatedDate(instant43);
        user12.setResetDate(instant43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO47 = new com.unifacisa.tcc.service.dto.UserDTO(user12);
        user12.setLastName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str50 = user12.getLastName();
        boolean boolean51 = user0.equals((java.lang.Object) user12);
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNull(instant8);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(user12);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str50, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test3270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3270");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        java.lang.String str3 = user2.getActivationKey();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        user4.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user4.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setLangKey("");
        java.time.Instant instant14 = user11.getResetDate();
        java.time.Instant instant15 = user11.getCreatedDate();
        user4.setResetDate(instant15);
        boolean boolean17 = user4.getActivated();
        user4.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str20 = user4.getPassword();
        java.lang.Long long21 = user4.getId();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        user25.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user25.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user32 = userMapper30.userFromId((java.lang.Long) 100L);
        user32.setLangKey("");
        java.time.Instant instant35 = user32.getResetDate();
        java.time.Instant instant36 = user32.getCreatedDate();
        user25.setResetDate(instant36);
        boolean boolean38 = user25.getActivated();
        user25.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant41 = user25.getCreatedDate();
        user24.setCreatedDate(instant41);
        user4.setLastModifiedDate(instant41);
        user2.setCreatedDate(instant41);
        java.lang.String str45 = user2.getPassword();
        java.lang.String str46 = user2.toString();
        java.lang.String str47 = user2.getActivationKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str46, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test3271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3271");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setImageURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setId((java.lang.Long) 100L);
        java.lang.String str7 = socialUserConnection0.getDisplayName();
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test3272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3272");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        aluno2.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        com.unifacisa.tcc.domain.Professor professor13 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno2.professor(professor7);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str17 = aluno2.toString();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity18 = alunoResource1.createAluno(aluno2);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        aluno19.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor26 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.email("");
        com.unifacisa.tcc.domain.Professor professor30 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno31 = aluno19.professor(professor24);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor34 = professor32.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        aluno36.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        java.lang.Long long45 = aluno42.getMatricula();
        java.lang.String str46 = aluno42.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean49 = aluno47.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean57 = aluno55.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        aluno62.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno41, aluno42, aluno47, aluno50, aluno55, aluno58, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Professor professor69 = professor34.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        aluno19.setProfessor(professor34);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity71 = alunoResource1.createAluno(aluno19);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity73 = alunoResource1.deleteAluno((java.lang.Long) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str17, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(alunoResponseEntity18);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(aluno31);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(alunoResponseEntity71);
    }

    @Test
    public void test3273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3273");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        boolean boolean7 = user2.equals((java.lang.Object) 10.0f);
        java.lang.String str8 = user2.getLangKey();
        boolean boolean9 = user2.getActivated();
        java.lang.String str10 = user2.getFirstName();
        java.lang.String str11 = user2.getLastModifiedBy();
        user2.setEmail("Professor{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3274");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str8 = socialUserConnection0.getProviderUserId();
        java.lang.String str9 = socialUserConnection0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}" + "'", str9, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test3275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3275");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        org.springframework.core.env.Environment environment17 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect18 = loggingAspectConfiguration15.loggingAspect(environment17);
        loggingAspect18.springBeanPointcut();
        loggingAspect18.applicationPackagePointcut();
        loggingAspect18.springBeanPointcut();
        loggingAspect18.springBeanPointcut();
        loggingAspect18.springBeanPointcut();
        loggingAspect18.applicationPackagePointcut();
        org.aspectj.lang.JoinPoint joinPoint25 = null;
        java.lang.Throwable throwable26 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect18.logAfterThrowing(joinPoint25, throwable26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(loggingAspect18);
    }

    @Test
    public void test3276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3276");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Professor professor6 = professor0.diponibilidade((java.lang.Boolean) true);
        java.lang.String str7 = professor6.toString();
        com.unifacisa.tcc.domain.Aluno aluno8 = new com.unifacisa.tcc.domain.Aluno();
        aluno8.setPrimeiroNome("");
        java.lang.Long long11 = aluno8.getMatricula();
        java.lang.Long long12 = aluno8.getMatricula();
        aluno8.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor22 = professor20.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor23 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor31 = null;
        aluno30.setProfessor(professor31);
        java.lang.Long long33 = aluno30.getMatricula();
        java.lang.String str34 = aluno30.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor39 = null;
        aluno38.setProfessor(professor39);
        aluno38.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean45 = aluno43.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        aluno46.setPrimeiroNome("");
        java.lang.Long long49 = aluno46.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray53 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno29, aluno30, aluno35, aluno38, aluno43, aluno46, aluno50 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet54 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet54, alunoArray53);
        professor23.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        com.unifacisa.tcc.domain.Professor professor57 = professor22.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet54);
        aluno15.setProfessor(professor57);
        aluno8.setProfessor(professor57);
        aluno8.setHabilitadoTcc((java.lang.Boolean) false);
        aluno8.setId((java.lang.Long) 1L);
        java.lang.String str64 = aluno8.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor65 = professor6.addAluno(aluno8);
        professor65.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = professor65.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa71 = professor65.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str7, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNotNull(alunoArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNotNull(pessoa71);
    }

    @Test
    public void test3277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3277");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        user0.setLastModifiedBy("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM8 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str9 = managedUserVM8.getImageUrl();
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        user10.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user10.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        user10.setResetDate(instant21);
        managedUserVM8.setLastModifiedDate(instant21);
        user0.setLastModifiedDate(instant21);
        java.lang.Long long25 = user0.getId();
        user0.setImageUrl("ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNull(long25);
    }

    @Test
    public void test3278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3278");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setLangKey("");
        java.time.Instant instant14 = user11.getResetDate();
        java.time.Instant instant15 = user11.getCreatedDate();
        user8.setCreatedDate(instant15);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = userMapper5.userToUserDTO(user8);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList24 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user36 = userMapper34.userFromId((java.lang.Long) 100L);
        user36.setLangKey("");
        java.time.Instant instant39 = user36.getResetDate();
        java.time.Instant instant40 = user36.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent42 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap43 = null;
        persistentAuditEvent42.setData(strMap43);
        persistentAuditEvent42.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent47 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant48 = null;
        persistentAuditEvent47.setAuditEventDate(instant48);
        com.unifacisa.tcc.domain.User user50 = new com.unifacisa.tcc.domain.User();
        user50.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user50.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper55 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user57 = userMapper55.userFromId((java.lang.Long) 100L);
        user57.setLangKey("");
        java.time.Instant instant60 = user57.getResetDate();
        java.time.Instant instant61 = user57.getCreatedDate();
        user50.setResetDate(instant61);
        persistentAuditEvent47.setAuditEventDate(instant61);
        persistentAuditEvent42.setAuditEventDate(instant61);
        java.time.Instant instant75 = null;
        java.time.Instant instant77 = null;
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet83 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet83, strArray82);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM85 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant75, "error.concurrencyFailure", instant77, (java.util.Set<java.lang.String>) strSet83);
        com.unifacisa.tcc.service.dto.UserDTO userDTO86 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "hi!", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant40, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant61, (java.util.Set<java.lang.String>) strSet83);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet87 = userMapper0.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet83);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(userDTO17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userDTOList24);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user57);
        org.junit.Assert.assertNull(instant60);
        org.junit.Assert.assertNotNull(instant61);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(authoritySet87);
    }

    @Test
    public void test3279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3279");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("LoggerVM{name='null', level='null'}");
        socialUserConnection0.setRefreshToken("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        socialUserConnection0.setProfileURL("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3280");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor3 = aluno0.getProfessor();
        java.lang.String str4 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        professor7.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        aluno10.setPrimeiroNome("");
        java.lang.Long long13 = aluno10.getMatricula();
        aluno10.setHabilitadoTcc((java.lang.Boolean) false);
        aluno10.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        aluno25.setPrimeiroNome("");
        java.lang.Long long28 = aluno25.getMatricula();
        java.lang.Long long29 = aluno25.getMatricula();
        aluno25.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray33 = new com.unifacisa.tcc.domain.Aluno[] { aluno10, aluno18, aluno25, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet34 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet34, alunoArray33);
        com.unifacisa.tcc.domain.Professor professor36 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet34);
        com.unifacisa.tcc.domain.Professor professor37 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor39 = professor37.diponibilidade((java.lang.Boolean) true);
        professor39.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str42 = professor39.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor43 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor45 = professor43.diponibilidade((java.lang.Boolean) true);
        professor45.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.Long long51 = aluno48.getMatricula();
        aluno48.setHabilitadoTcc((java.lang.Boolean) false);
        aluno48.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        aluno56.setPrimeiroNome("");
        java.lang.Long long59 = aluno56.getMatricula();
        java.lang.Long long60 = aluno56.getMatricula();
        aluno56.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno63 = new com.unifacisa.tcc.domain.Aluno();
        aluno63.setPrimeiroNome("");
        java.lang.Long long66 = aluno63.getMatricula();
        java.lang.Long long67 = aluno63.getMatricula();
        aluno63.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray71 = new com.unifacisa.tcc.domain.Aluno[] { aluno48, aluno56, aluno63, aluno70 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet72 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet72, alunoArray71);
        com.unifacisa.tcc.domain.Professor professor74 = professor45.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor75 = professor39.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Professor professor76 = professor7.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet72);
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno0.professor(professor7);
        com.unifacisa.tcc.domain.Professor professor78 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str79 = professor78.toString();
        com.unifacisa.tcc.domain.Professor professor81 = professor78.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet82 = professor78.getAlunos();
        professor78.setPrimeiroNome("");
        professor78.setNumeroContato((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa88 = professor78.email("hi!");
        com.unifacisa.tcc.domain.Aluno aluno89 = aluno77.professor(professor78);
        java.lang.Long long90 = aluno77.getId();
        java.lang.String str91 = aluno77.getEmail();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(professor3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNull(long13);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertNull(long29);
        org.junit.Assert.assertNotNull(alunoArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(professor36);
        org.junit.Assert.assertNotNull(professor39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(professor45);
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertNull(long59);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long66);
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(alunoArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertNotNull(professor76);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str79, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor81);
        org.junit.Assert.assertNotNull(alunoSet82);
        org.junit.Assert.assertNotNull(pessoa88);
        org.junit.Assert.assertNotNull(aluno89);
        org.junit.Assert.assertNull(long90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test3281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3281");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        boolean boolean5 = user0.getActivated();
        java.lang.String str6 = user0.getActivationKey();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3282");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        java.lang.String str45 = user0.getFirstName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setResetKey("hi!");
        user48.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user55 = userMapper53.userFromId((java.lang.Long) 100L);
        user55.setLangKey("");
        java.time.Instant instant58 = user55.getResetDate();
        java.time.Instant instant59 = user55.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno60 = new com.unifacisa.tcc.domain.Aluno();
        aluno60.setPrimeiroNome("");
        java.lang.String str63 = aluno60.getPrimeiroNome();
        java.lang.Long long64 = aluno60.getMatricula();
        boolean boolean65 = user55.equals((java.lang.Object) aluno60);
        user55.setFirstName("");
        com.unifacisa.tcc.domain.User user68 = new com.unifacisa.tcc.domain.User();
        user68.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user68.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper73 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user75 = userMapper73.userFromId((java.lang.Long) 100L);
        user75.setLangKey("");
        java.time.Instant instant78 = user75.getResetDate();
        java.time.Instant instant79 = user75.getCreatedDate();
        user68.setResetDate(instant79);
        user55.setCreatedDate(instant79);
        user48.setResetDate(instant79);
        user0.setResetDate(instant79);
        user0.setResetKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        user0.setLastModifiedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant88 = user0.getCreatedDate();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(instant58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertNull(long64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(user75);
        org.junit.Assert.assertNull(instant78);
        org.junit.Assert.assertNotNull(instant79);
        org.junit.Assert.assertNotNull(instant88);
    }

    @Test
    public void test3283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3283");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        java.lang.String str4 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str4, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
    }

    @Test
    public void test3284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3284");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        java.lang.String str4 = user2.getActivationKey();
        java.lang.String str5 = user2.getCreatedBy();
        java.lang.String str6 = user2.getResetKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3285");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository0 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator1 = null;
        com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository customSocialUsersConnectionRepository2 = new com.unifacisa.tcc.repository.CustomSocialUsersConnectionRepository(socialUserConnectionRepository0, connectionFactoryLocator1);
        org.springframework.social.connect.ConnectionRepository connectionRepository4 = customSocialUsersConnectionRepository2.createConnectionRepository("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.springframework.social.connect.ConnectionRepository connectionRepository6 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository8 = customSocialUsersConnectionRepository2.createConnectionRepository("LoginVM{username='null', rememberMe=false}");
        org.springframework.social.connect.ConnectionRepository connectionRepository10 = customSocialUsersConnectionRepository2.createConnectionRepository("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository12 = customSocialUsersConnectionRepository2.createConnectionRepository("LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.springframework.social.connect.ConnectionRepository connectionRepository14 = customSocialUsersConnectionRepository2.createConnectionRepository("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        org.junit.Assert.assertNotNull(connectionRepository4);
        org.junit.Assert.assertNotNull(connectionRepository6);
        org.junit.Assert.assertNotNull(connectionRepository8);
        org.junit.Assert.assertNotNull(connectionRepository10);
        org.junit.Assert.assertNotNull(connectionRepository12);
        org.junit.Assert.assertNotNull(connectionRepository14);
    }

    @Test
    public void test3286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3286");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Professor{id=null, primeiroNome='null', segundoNome='hi!', matricula='null', email='null', numeroContato='1', diponibilidade='true'}", "Authority{name='Authority{name='Authority{name='error.concurrencyFailure'}'}'}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='', numeroContato='null', habilitadoTcc='true'}", (java.lang.Long) 1L, "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}", "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}", "Professor{id=null, primeiroNome='LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", (java.lang.Long) 1L);
    }

    @Test
    public void test3287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3287");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user2.getAuthorities();
        user2.setLastName("Authority{name=''}");
        user2.setLangKey("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(authoritySet17);
    }

    @Test
    public void test3288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3288");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        java.lang.String str17 = socialUserConnection0.getAccessToken();
        java.lang.Long long18 = socialUserConnection0.getId();
        java.lang.Long long19 = socialUserConnection0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertNull(long19);
    }

    @Test
    public void test3289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3289");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setUsername("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str5 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = loginVM0.isRememberMe();
        loginVM0.setUsername("LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str5, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test3290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3290");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        authority0.setName("error.concurrencyFailure");
        java.lang.String str5 = authority0.toString();
        authority0.setName("Authority{name='error.concurrencyFailure'}");
        authority0.setName("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant11 = persistentAuditEvent10.getAuditEventDate();
        java.time.Instant instant12 = null;
        persistentAuditEvent10.setAuditEventDate(instant12);
        java.time.Instant instant14 = persistentAuditEvent10.getAuditEventDate();
        persistentAuditEvent10.setPrincipal("");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user20 = userMapper18.userFromId((java.lang.Long) 100L);
        user20.setLangKey("");
        java.time.Instant instant23 = user20.getResetDate();
        java.time.Instant instant24 = user20.getCreatedDate();
        user17.setCreatedDate(instant24);
        boolean boolean26 = user17.getActivated();
        com.unifacisa.tcc.domain.User user36 = new com.unifacisa.tcc.domain.User();
        user36.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user36.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant41 = user36.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user45 = userMapper43.userFromId((java.lang.Long) 100L);
        user45.setLangKey("");
        java.time.Instant instant48 = user45.getResetDate();
        java.time.Instant instant49 = user45.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        aluno50.setPrimeiroNome("");
        java.lang.String str53 = aluno50.getPrimeiroNome();
        java.lang.Long long54 = aluno50.getMatricula();
        boolean boolean55 = user45.equals((java.lang.Object) aluno50);
        user45.setFirstName("");
        com.unifacisa.tcc.domain.User user58 = new com.unifacisa.tcc.domain.User();
        user58.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user58.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper63 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user65 = userMapper63.userFromId((java.lang.Long) 100L);
        user65.setLangKey("");
        java.time.Instant instant68 = user65.getResetDate();
        java.time.Instant instant69 = user65.getCreatedDate();
        user58.setResetDate(instant69);
        user45.setCreatedDate(instant69);
        java.util.Set<java.lang.String> strSet72 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO73 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant41, "", instant69, strSet72);
        user17.setLastModifiedDate(instant41);
        persistentAuditEvent10.setAuditEventDate(instant41);
        boolean boolean76 = authority0.equals((java.lang.Object) instant41);
        java.lang.String str77 = authority0.toString();
        java.lang.String str78 = authority0.toString();
        authority0.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str5, "Authority{name='error.concurrencyFailure'}");
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNotNull(user20);
        org.junit.Assert.assertNull(instant23);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNotNull(user45);
        org.junit.Assert.assertNull(instant48);
        org.junit.Assert.assertNotNull(instant49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(user65);
        org.junit.Assert.assertNull(instant68);
        org.junit.Assert.assertNotNull(instant69);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Authority{name=''}" + "'", str77, "Authority{name=''}");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Authority{name=''}" + "'", str78, "Authority{name=''}");
    }

    @Test
    public void test3291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3291");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray2 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList3 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList3, userArray2);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList5 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList3);
        java.time.Instant instant16 = null;
        java.time.Instant instant18 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO36 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant28, "hi!", instant30, (java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM37 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant16, "", instant18, (java.util.Set<java.lang.String>) strSet34);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = userMapper1.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet34);
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        user39.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user39.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user46 = userMapper44.userFromId((java.lang.Long) 100L);
        user46.setLangKey("");
        java.time.Instant instant49 = user46.getResetDate();
        java.time.Instant instant50 = user46.getCreatedDate();
        user39.setResetDate(instant50);
        java.time.Instant instant52 = null;
        user39.setCreatedDate(instant52);
        java.lang.String str54 = user39.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        java.lang.String str56 = user55.toString();
        boolean boolean57 = user39.equals((java.lang.Object) user55);
        user39.setEmail("");
        com.unifacisa.tcc.service.dto.UserDTO userDTO60 = userMapper1.userToUserDTO(user39);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = userMapper0.userToUserDTO(user39);
        com.unifacisa.tcc.domain.User user63 = userMapper0.userFromId((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userDTOList5);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNotNull(user46);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNotNull(instant50);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str56, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(userDTO60);
        org.junit.Assert.assertNotNull(userDTO61);
        org.junit.Assert.assertNotNull(user63);
    }

    @Test
    public void test3292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3292");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        java.time.Instant instant3 = null;
        persistentAuditEvent0.setAuditEventDate(instant3);
        java.time.Instant instant5 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str6 = persistentAuditEvent0.getAuditEventType();
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(instant7);
    }

    @Test
    public void test3293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3293");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        aluno2.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        com.unifacisa.tcc.domain.Professor professor13 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno2.professor(professor7);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str17 = aluno2.toString();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity18 = alunoResource1.createAluno(aluno2);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        aluno19.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor26 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.email("");
        com.unifacisa.tcc.domain.Professor professor30 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno31 = aluno19.professor(professor24);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor34 = professor32.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        aluno36.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        java.lang.Long long45 = aluno42.getMatricula();
        java.lang.String str46 = aluno42.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean49 = aluno47.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean57 = aluno55.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        aluno62.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno41, aluno42, aluno47, aluno50, aluno55, aluno58, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Professor professor69 = professor34.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        aluno19.setProfessor(professor34);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity71 = alunoResource1.createAluno(aluno19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<com.unifacisa.tcc.domain.Aluno> alunoList72 = alunoResource1.getAllAlunos();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str17, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(alunoResponseEntity18);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(aluno31);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(alunoResponseEntity71);
    }

    @Test
    public void test3294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3294");
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository0 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource1 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository0);
        com.unifacisa.tcc.domain.Professor professor2 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor4 = professor2.diponibilidade((java.lang.Boolean) true);
        professor4.setDiponibilidade((java.lang.Boolean) false);
        professor4.setId((java.lang.Long) 100L);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity9 = professorResource1.createProfessor(professor4);
        com.unifacisa.tcc.domain.Professor professor10 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor12 = professor10.diponibilidade((java.lang.Boolean) true);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity13 = professorResource1.updateProfessor(professor12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(professorResponseEntity9);
        org.junit.Assert.assertNotNull(professor12);
    }

    @Test
    public void test3295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3295");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.segundoNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        aluno0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(pessoa5);
    }

    @Test
    public void test3296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3296");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        boolean boolean16 = user3.getActivated();
        user3.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant19 = user3.getCreatedDate();
        user2.setCreatedDate(instant19);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM21.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM21.setName("LoggerVM{name='null', level='null'}");
        boolean boolean26 = user2.equals((java.lang.Object) loggerVM21);
        java.lang.String str27 = loggerVM21.toString();
        java.lang.String str28 = loggerVM21.getLevel();
        java.lang.String str29 = loggerVM21.toString();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}" + "'", str27, "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}" + "'", str29, "LoggerVM{name='LoggerVM{name='null', level='null'}', level='null'}");
    }

    @Test
    public void test3297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3297");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        user61.setImageUrl("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
    }

    @Test
    public void test3298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3298");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        com.unifacisa.tcc.web.rest.LogsResource logsResource12 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM13.setName("LoginVM{username='null', rememberMe=false}");
        logsResource12.changeLevel(loggerVM13);
        loggerVM13.setName("Authority{name='error.concurrencyFailure'}");
        logsResource0.changeLevel(loggerVM13);
        com.unifacisa.tcc.web.rest.LogsResource logsResource20 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM21 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM21.setName("LoginVM{username='null', rememberMe=false}");
        logsResource20.changeLevel(loggerVM21);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList25 = logsResource20.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM26 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM26.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM26.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource20.changeLevel(loggerVM26);
        com.unifacisa.tcc.web.rest.LogsResource logsResource32 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM33 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM33.setName("LoginVM{username='null', rememberMe=false}");
        logsResource32.changeLevel(loggerVM33);
        loggerVM33.setName("Authority{name='error.concurrencyFailure'}");
        logsResource20.changeLevel(loggerVM33);
        logsResource0.changeLevel(loggerVM33);
        loggerVM33.setLevel("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        loggerVM33.setLevel("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', numeroContato='null', habilitadoTcc='true'}");
        loggerVM33.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        loggerVM33.setName("");
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertNotNull(loggerVMList25);
    }

    @Test
    public void test3299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3299");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', habilitadoTcc='null'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test3300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3300");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRefreshToken("Authority{name='Authority{name='error.concurrencyFailure'}'}");
    }

    @Test
    public void test3301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3301");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.getLogin();
        java.lang.String str5 = managedUserVM0.toString();
        java.util.Set<java.lang.String> strSet6 = managedUserVM0.getAuthorities();
        java.lang.String str7 = managedUserVM0.getLogin();
        java.lang.String str8 = managedUserVM0.toString();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3302");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.Long long6 = socialUserConnection0.getExpireTime();
        socialUserConnection0.setProviderId("Authority{name='null'}");
        socialUserConnection0.setRefreshToken("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long6);
    }

    @Test
    public void test3303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3303");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        managedUserVM0.setLogin("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str4 = managedUserVM0.getLastName();
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.toString();
        java.time.Instant instant7 = managedUserVM0.getCreatedDate();
        managedUserVM0.setLogin("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str6, "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant7);
    }

    @Test
    public void test3304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3304");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor18 = null;
        aluno17.setProfessor(professor18);
        aluno17.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor24 = null;
        aluno23.setProfessor(professor24);
        java.lang.Long long26 = aluno23.getMatricula();
        java.lang.String str27 = aluno23.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean30 = aluno28.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno31 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor32 = null;
        aluno31.setProfessor(professor32);
        aluno31.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean38 = aluno36.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        java.lang.Long long42 = aluno39.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        aluno43.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray46 = new com.unifacisa.tcc.domain.Aluno[] { aluno17, aluno22, aluno23, aluno28, aluno31, aluno36, aluno39, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet47 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet47, alunoArray46);
        professor16.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        com.unifacisa.tcc.domain.Professor professor50 = professor15.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet47);
        aluno0.setProfessor(professor15);
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        aluno0.setEmail("LoginVM{username='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}', rememberMe=false}");
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNotNull(alunoArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(professor50);
    }

    @Test
    public void test3305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3305");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        boolean boolean3 = managedUserVM0.isActivated();
        java.lang.String str4 = managedUserVM0.toString();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3306");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        loggingAspect2.springBeanPointcut();
        loggingAspect2.springBeanPointcut();
        org.aspectj.lang.ProceedingJoinPoint proceedingJoinPoint5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = loggingAspect2.logAround(proceedingJoinPoint5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
    }

    @Test
    public void test3307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3307");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        persistentAuditEvent0.setAuditEventType("error.validation");
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        java.lang.String str7 = persistentAuditEvent0.getPrincipal();
        persistentAuditEvent0.setAuditEventType("ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test3308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3308");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("Authority{name='null'}");
        socialUserConnection0.setAccessToken("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setProfileURL("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str5, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3309");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        java.lang.Long long3 = socialUserConnection0.getExpireTime();
        java.lang.Long long4 = socialUserConnection0.getId();
        socialUserConnection0.setProviderId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        socialUserConnection0.setImageURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str9 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3310");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setImageURL("LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test3311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3311");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("LoggerVM{name='null', level='null'}");
        socialUserConnection0.setRefreshToken("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str12 = socialUserConnection0.getProviderId();
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        user13.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM16 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet17 = managedUserVM16.getAuthorities();
        boolean boolean18 = user13.equals((java.lang.Object) strSet17);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray20 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList21 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList21, userArray20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper19.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList21);
        java.time.Instant instant34 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant46 = null;
        java.time.Instant instant48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        com.unifacisa.tcc.service.dto.UserDTO userDTO54 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant46, "hi!", instant48, (java.util.Set<java.lang.String>) strSet52);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM55 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant34, "", instant36, (java.util.Set<java.lang.String>) strSet52);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet56 = userMapper19.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet52);
        user13.setAuthorities(authoritySet56);
        boolean boolean58 = user13.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper59 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user61 = userMapper59.userFromId((java.lang.Long) 100L);
        user61.setLangKey("");
        java.time.Instant instant64 = user61.getResetDate();
        java.time.Instant instant65 = user61.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        aluno66.setPrimeiroNome("");
        java.lang.String str69 = aluno66.getPrimeiroNome();
        java.lang.Long long70 = aluno66.getMatricula();
        boolean boolean71 = user61.equals((java.lang.Object) aluno66);
        user61.setFirstName("");
        user61.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet76 = user61.getAuthorities();
        user13.setAuthorities(authoritySet76);
        boolean boolean78 = socialUserConnection0.equals((java.lang.Object) user13);
        java.lang.String str79 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str12, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(userArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(authoritySet56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertNotNull(instant65);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(authoritySet76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str79, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3312");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant3 = user0.getResetDate();
        java.lang.String str4 = user0.getLastName();
        org.junit.Assert.assertNull(instant3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test3313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3313");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor1 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str2 = professor1.toString();
        com.unifacisa.tcc.domain.Professor professor4 = professor1.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet5 = professor1.getAlunos();
        com.unifacisa.tcc.domain.Professor professor6 = professor0.alunos(alunoSet5);
        professor0.setPrimeiroNome("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str2, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor4);
        org.junit.Assert.assertNotNull(alunoSet5);
        org.junit.Assert.assertNotNull(professor6);
    }

    @Test
    public void test3314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3314");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str4 = loginVM0.toString();
        loginVM0.setPassword("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str4, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3315");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        java.lang.String str2 = user0.getImageUrl();
        java.lang.String str3 = user0.getLogin();
        user0.setLastModifiedBy("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}");
        user0.setFirstName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test3316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3316");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        user0.setLastModifiedBy("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        com.unifacisa.tcc.domain.User user12 = new com.unifacisa.tcc.domain.User();
        user12.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user12.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user12.getAuthorities();
        java.time.Instant instant18 = user12.getCreatedDate();
        userDTO11.setLastModifiedDate(instant18);
        userDTO11.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(authoritySet17);
        org.junit.Assert.assertNotNull(instant18);
    }

    @Test
    public void test3317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3317");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent5.setId((java.lang.Long) 1L);
        java.lang.String str8 = persistentAuditEvent5.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent5.getData();
        persistentAuditEvent0.setData(strMap9);
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        java.util.Map<java.lang.String, java.lang.String> strMap15 = persistentAuditEvent0.getData();
        java.lang.String str16 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 10L);
        java.lang.String str19 = persistentAuditEvent0.getAuditEventType();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test3318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3318");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.Long long6 = socialUserConnection0.getExpireTime();
        java.lang.String str7 = socialUserConnection0.getImageURL();
        socialUserConnection0.setExpireTime((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test3319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3319");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        aluno0.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa10 = aluno0.segundoNome("SocialUserConnection{id=null, userId=null, providerId='null', providerUserId='error.concurrencyFailure', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=0}");
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor12 = null;
        aluno11.setProfessor(professor12);
        java.lang.Long long14 = aluno11.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor20 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor22 = professor20.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor20.email("");
        com.unifacisa.tcc.domain.Professor professor26 = professor20.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno27 = aluno15.professor(professor26);
        aluno11.setProfessor(professor26);
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor31 = professor29.diponibilidade((java.lang.Boolean) true);
        professor31.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno34 = new com.unifacisa.tcc.domain.Aluno();
        aluno34.setPrimeiroNome("");
        java.lang.Long long37 = aluno34.getMatricula();
        aluno34.setHabilitadoTcc((java.lang.Boolean) false);
        aluno34.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        aluno42.setPrimeiroNome("");
        java.lang.Long long45 = aluno42.getMatricula();
        java.lang.Long long46 = aluno42.getMatricula();
        aluno42.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        java.lang.Long long52 = aluno49.getMatricula();
        java.lang.Long long53 = aluno49.getMatricula();
        aluno49.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno56 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray57 = new com.unifacisa.tcc.domain.Aluno[] { aluno34, aluno42, aluno49, aluno56 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet58 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet58, alunoArray57);
        com.unifacisa.tcc.domain.Professor professor60 = professor31.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet58);
        com.unifacisa.tcc.domain.Professor professor61 = professor26.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet58);
        aluno0.setProfessor(professor61);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa10);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(pessoa24);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(aluno27);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNull(long37);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNull(long46);
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertNull(long53);
        org.junit.Assert.assertNotNull(alunoArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(professor60);
        org.junit.Assert.assertNotNull(professor61);
    }

    @Test
    public void test3320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3320");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM6 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet7 = managedUserVM6.getAuthorities();
        boolean boolean8 = user3.equals((java.lang.Object) strSet7);
        java.time.Instant instant9 = user3.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = userMapper0.userToUserDTO(user3);
        java.lang.String str11 = userDTO10.getCreatedBy();
        java.lang.String str12 = userDTO10.getLastName();
        java.lang.String str13 = userDTO10.getFirstName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(userDTO10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str11, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3321");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = professor0.email("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Boolean boolean7 = professor0.isDiponibilidade();
        professor0.setNumeroContato((java.lang.Long) 100L);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet10 = professor0.getAlunos();
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + true + "'", boolean7, true);
        org.junit.Assert.assertNotNull(alunoSet10);
    }

    @Test
    public void test3322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3322");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor62 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor64 = professor62.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa66 = professor62.email("");
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        aluno67.setPrimeiroNome("");
        aluno67.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor72 = professor62.addAluno(aluno67);
        com.unifacisa.tcc.domain.User user73 = new com.unifacisa.tcc.domain.User();
        user73.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user73.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper78 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user80 = userMapper78.userFromId((java.lang.Long) 100L);
        user80.setLangKey("");
        java.time.Instant instant83 = user80.getResetDate();
        java.time.Instant instant84 = user80.getCreatedDate();
        user73.setResetDate(instant84);
        java.time.Instant instant86 = null;
        user73.setCreatedDate(instant86);
        java.lang.String str88 = user73.getPassword();
        boolean boolean89 = user73.getActivated();
        boolean boolean90 = aluno67.equals((java.lang.Object) user73);
        com.unifacisa.tcc.service.dto.UserDTO userDTO91 = userMapper0.userToUserDTO(user73);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(professor64);
        org.junit.Assert.assertNotNull(pessoa66);
        org.junit.Assert.assertNotNull(professor72);
        org.junit.Assert.assertNotNull(user80);
        org.junit.Assert.assertNull(instant83);
        org.junit.Assert.assertNotNull(instant84);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(userDTO91);
    }

    @Test
    public void test3323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3323");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = null;
        user2.setLastModifiedDate(instant5);
        user2.setLastName("LoginVM{username='null', rememberMe=null}");
        user2.setLangKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO11 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str12 = userDTO11.getCreatedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test3324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3324");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        java.lang.String str11 = professor10.getSegundoNome();
        java.lang.String str12 = professor10.getEmail();
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor15 = professor13.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = professor13.email("");
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        aluno18.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor23 = professor13.addAluno(aluno18);
        com.unifacisa.tcc.domain.Professor professor24 = professor10.removeAluno(aluno18);
        java.lang.Long long25 = professor24.getNumeroContato();
        professor24.setMatricula((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNotNull(professor24);
        org.junit.Assert.assertNull(long25);
    }

    @Test
    public void test3325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3325");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.String str4 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.toString();
        professor5.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long9 = professor5.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno10 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor11 = null;
        aluno10.setProfessor(professor11);
        aluno10.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa16 = aluno10.primeiroNome("hi!");
        java.lang.Long long17 = aluno10.getId();
        com.unifacisa.tcc.domain.Aluno aluno19 = aluno10.habilitadoTcc((java.lang.Boolean) false);
        aluno10.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor22 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str23 = professor22.toString();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        java.lang.Long long27 = aluno24.getMatricula();
        java.lang.String str28 = aluno24.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor32 = aluno29.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean35 = aluno33.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno37 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor38 = null;
        aluno37.setProfessor(professor38);
        java.lang.Long long40 = aluno37.getMatricula();
        java.lang.String str41 = aluno37.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean44 = aluno42.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor45 = aluno42.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor47 = null;
        aluno46.setProfessor(professor47);
        com.unifacisa.tcc.domain.Aluno aluno49 = new com.unifacisa.tcc.domain.Aluno();
        aluno49.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor53 = null;
        aluno52.setProfessor(professor53);
        aluno52.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno57 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor58 = null;
        aluno57.setProfessor(professor58);
        java.lang.Long long60 = aluno57.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean64 = aluno62.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno65 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor66 = null;
        aluno65.setProfessor(professor66);
        com.unifacisa.tcc.domain.Aluno[] alunoArray68 = new com.unifacisa.tcc.domain.Aluno[] { aluno24, aluno29, aluno33, aluno36, aluno37, aluno42, aluno46, aluno49, aluno52, aluno57, aluno61, aluno62, aluno65 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet69 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet69, alunoArray68);
        com.unifacisa.tcc.domain.Professor professor71 = professor22.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet69);
        com.unifacisa.tcc.domain.Aluno aluno72 = aluno10.professor(professor22);
        com.unifacisa.tcc.domain.Aluno aluno74 = aluno72.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor75 = professor5.removeAluno(aluno72);
        java.lang.Boolean boolean76 = professor5.isDiponibilidade();
        com.unifacisa.tcc.domain.Aluno aluno77 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Aluno aluno79 = aluno77.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str4, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(pessoa16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNotNull(aluno19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str23, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(professor32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(professor45);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(alunoArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(professor71);
        org.junit.Assert.assertNotNull(aluno72);
        org.junit.Assert.assertNotNull(aluno74);
        org.junit.Assert.assertNotNull(professor75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
        org.junit.Assert.assertNotNull(aluno77);
        org.junit.Assert.assertNotNull(aluno79);
    }

    @Test
    public void test3326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3326");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str5 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setKey("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str8 = keyAndPasswordVM0.getKey();
        keyAndPasswordVM0.setNewPassword("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:31.405Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:31.405Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str5, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str8, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
    }

    @Test
    public void test3327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3327");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        com.unifacisa.tcc.web.rest.LogsResource logsResource12 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM13.setName("LoginVM{username='null', rememberMe=false}");
        logsResource12.changeLevel(loggerVM13);
        loggerVM13.setName("Authority{name='error.concurrencyFailure'}");
        logsResource0.changeLevel(loggerVM13);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM20.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str23 = loggerVM20.getName();
        logsResource0.changeLevel(loggerVM20);
        loggerVM20.setLevel("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='null', accessToken='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str23, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3328");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setId((java.lang.Long) 10L);
        java.lang.String str6 = user0.getLangKey();
        user0.setPassword("SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        user0.setImageUrl("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 10L);
        java.lang.String str14 = user13.getPassword();
        java.lang.String str15 = user13.getActivationKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user18 = userMapper16.userFromId((java.lang.Long) 100L);
        user18.setLangKey("");
        java.time.Instant instant21 = user18.getResetDate();
        java.time.Instant instant22 = user18.getCreatedDate();
        user18.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant25 = user18.getCreatedDate();
        user13.setCreatedDate(instant25);
        user0.setCreatedDate(instant25);
        user0.setActivated(true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(user18);
        org.junit.Assert.assertNull(instant21);
        org.junit.Assert.assertNotNull(instant22);
        org.junit.Assert.assertNotNull(instant25);
    }

    @Test
    public void test3329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3329");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        aluno2.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        com.unifacisa.tcc.domain.Professor professor13 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno2.professor(professor7);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str17 = aluno2.toString();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity18 = alunoResource1.createAluno(aluno2);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        aluno19.setPrimeiroNome("");
        aluno19.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor24 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor26 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor24.email("");
        com.unifacisa.tcc.domain.Professor professor30 = professor24.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno31 = aluno19.professor(professor24);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor34 = professor32.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor35 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        aluno36.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno41 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        java.lang.Long long45 = aluno42.getMatricula();
        java.lang.String str46 = aluno42.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean49 = aluno47.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno50 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor51 = null;
        aluno50.setProfessor(professor51);
        aluno50.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean57 = aluno55.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.Long long61 = aluno58.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno62 = new com.unifacisa.tcc.domain.Aluno();
        aluno62.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray65 = new com.unifacisa.tcc.domain.Aluno[] { aluno36, aluno41, aluno42, aluno47, aluno50, aluno55, aluno58, aluno62 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet66 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet66, alunoArray65);
        professor35.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        com.unifacisa.tcc.domain.Professor professor69 = professor34.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet66);
        aluno19.setProfessor(professor34);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity71 = alunoResource1.createAluno(aluno19);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity73 = alunoResource1.deleteAluno((java.lang.Long) 100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str17, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(alunoResponseEntity18);
        org.junit.Assert.assertNotNull(professor26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNotNull(professor30);
        org.junit.Assert.assertNotNull(aluno31);
        org.junit.Assert.assertNotNull(professor34);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertNotNull(alunoArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(professor69);
        org.junit.Assert.assertNotNull(alunoResponseEntity71);
    }

    @Test
    public void test3330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3330");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str9 = socialUserConnection0.getImageURL();
        java.lang.String str10 = socialUserConnection0.getUserId();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test3331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3331");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders6 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createAlert("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap7 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders6);
    }

    @Test
    public void test3332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3332");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setCreatedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        user2.setLastModifiedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user2.setImageUrl("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
    }

    @Test
    public void test3333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3333");
        com.unifacisa.tcc.repository.AlunoRepository alunoRepository0 = null;
        com.unifacisa.tcc.web.rest.AlunoResource alunoResource1 = new com.unifacisa.tcc.web.rest.AlunoResource(alunoRepository0);
        com.unifacisa.tcc.domain.Aluno aluno2 = new com.unifacisa.tcc.domain.Aluno();
        aluno2.setPrimeiroNome("");
        aluno2.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor7 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor9 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor7.email("");
        com.unifacisa.tcc.domain.Professor professor13 = professor7.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno14 = aluno2.professor(professor7);
        aluno2.setHabilitadoTcc((java.lang.Boolean) false);
        java.lang.String str17 = aluno2.toString();
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Aluno> alunoResponseEntity18 = alunoResource1.createAluno(aluno2);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor20 = null;
        aluno19.setProfessor(professor20);
        aluno19.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa25 = aluno19.primeiroNome("hi!");
        java.lang.Long long26 = aluno19.getId();
        com.unifacisa.tcc.domain.Aluno aluno28 = aluno19.habilitadoTcc((java.lang.Boolean) false);
        aluno19.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor31 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str32 = professor31.toString();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        java.lang.Long long36 = aluno33.getMatricula();
        java.lang.String str37 = aluno33.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean40 = aluno38.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor41 = aluno38.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean44 = aluno42.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno45 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno46 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor47 = null;
        aluno46.setProfessor(professor47);
        java.lang.Long long49 = aluno46.getMatricula();
        java.lang.String str50 = aluno46.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean53 = aluno51.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor54 = aluno51.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno61 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor62 = null;
        aluno61.setProfessor(professor62);
        aluno61.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno66 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor67 = null;
        aluno66.setProfessor(professor67);
        java.lang.Long long69 = aluno66.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno70 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno71 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean73 = aluno71.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor75 = null;
        aluno74.setProfessor(professor75);
        com.unifacisa.tcc.domain.Aluno[] alunoArray77 = new com.unifacisa.tcc.domain.Aluno[] { aluno33, aluno38, aluno42, aluno45, aluno46, aluno51, aluno55, aluno58, aluno61, aluno66, aluno70, aluno71, aluno74 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet78 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet78, alunoArray77);
        com.unifacisa.tcc.domain.Professor professor80 = professor31.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet78);
        com.unifacisa.tcc.domain.Aluno aluno81 = aluno19.professor(professor31);
        com.unifacisa.tcc.domain.Aluno aluno83 = aluno81.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean84 = aluno81.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor85 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str86 = professor85.toString();
        professor85.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long89 = professor85.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa91 = professor85.matricula((java.lang.Long) (-1L));
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet92 = professor85.getAlunos();
        aluno81.setProfessor(professor85);
        aluno81.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor96 = aluno81.getProfessor();
        aluno2.setProfessor(professor96);
        org.junit.Assert.assertNotNull(professor9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(aluno14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}" + "'", str17, "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNotNull(alunoResponseEntity18);
        org.junit.Assert.assertNotNull(pessoa25);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(aluno28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str32, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(professor41);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(professor54);
        org.junit.Assert.assertNull(long69);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(alunoArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(professor80);
        org.junit.Assert.assertNotNull(aluno81);
        org.junit.Assert.assertNotNull(aluno83);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + false + "'", boolean84, false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str86, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long89);
        org.junit.Assert.assertNotNull(pessoa91);
        org.junit.Assert.assertNotNull(alunoSet92);
        org.junit.Assert.assertNotNull(professor96);
    }

    @Test
    public void test3334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3334");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.Long long6 = userDTO5.getId();
        java.lang.String str7 = userDTO5.getFirstName();
        java.time.Instant instant8 = userDTO5.getLastModifiedDate();
        java.lang.String str9 = userDTO5.getLogin();
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(instant8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3335");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper4 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user6 = userMapper4.userFromId((java.lang.Long) 100L);
        user6.setLangKey("");
        java.time.Instant instant9 = user6.getResetDate();
        java.time.Instant instant10 = user6.getCreatedDate();
        user3.setCreatedDate(instant10);
        com.unifacisa.tcc.service.dto.UserDTO userDTO12 = userMapper0.userToUserDTO(user3);
        java.lang.String str13 = userDTO12.getEmail();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNull(instant9);
        org.junit.Assert.assertNotNull(instant10);
        org.junit.Assert.assertNotNull(userDTO12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3336");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("");
        keyAndPasswordVM0.setKey("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        keyAndPasswordVM0.setKey("LoginVM{username='null', rememberMe=null}");
        keyAndPasswordVM0.setKey("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:31.405Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:31.405Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str15 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:31.405Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:31.405Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str15, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:31.405Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:31.405Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3337");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        java.lang.Long long3 = socialUserConnection0.getExpireTime();
        java.lang.Long long4 = socialUserConnection0.getId();
        socialUserConnection0.setProviderId("LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}");
        socialUserConnection0.setImageURL("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setSecret("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
    }

    @Test
    public void test3338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3338");
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        user10.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user10.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        user10.setResetDate(instant21);
        java.time.Instant instant23 = null;
        user10.setCreatedDate(instant23);
        java.lang.String str25 = user10.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user26 = new com.unifacisa.tcc.domain.User();
        java.lang.String str27 = user26.toString();
        boolean boolean28 = user10.equals((java.lang.Object) user26);
        com.unifacisa.tcc.domain.User user29 = new com.unifacisa.tcc.domain.User();
        user29.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM32 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet33 = managedUserVM32.getAuthorities();
        boolean boolean34 = user29.equals((java.lang.Object) strSet33);
        java.time.Instant instant35 = user29.getLastModifiedDate();
        user26.setLastModifiedDate(instant35);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO(user26);
        java.time.Instant instant38 = userDTO37.getCreatedDate();
        com.unifacisa.tcc.domain.User user39 = new com.unifacisa.tcc.domain.User();
        user39.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str42 = user39.getResetKey();
        user39.setLastModifiedBy("hi!");
        boolean boolean45 = user39.getActivated();
        java.lang.String str46 = user39.getActivationKey();
        user39.setActivationKey("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        user39.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant51 = user39.getCreatedDate();
        userDTO37.setLastModifiedDate(instant51);
        com.unifacisa.tcc.domain.User user54 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper55 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user57 = userMapper55.userFromId((java.lang.Long) 100L);
        user57.setLangKey("");
        java.time.Instant instant60 = user57.getResetDate();
        java.time.Instant instant61 = user57.getCreatedDate();
        user54.setCreatedDate(instant61);
        boolean boolean63 = user54.getActivated();
        java.time.Instant instant64 = user54.getLastModifiedDate();
        java.time.Instant instant74 = null;
        java.time.Instant instant76 = null;
        java.lang.String[] strArray79 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet80 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet80, strArray79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO82 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant74, "hi!", instant76, (java.util.Set<java.lang.String>) strSet80);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM83 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "User{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "LoginVM{username='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}', rememberMe=true}", "UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:49.938Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:49.938Z, authorities=[]}", "LoginVM{username='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', rememberMe=true}", "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", false, "Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}", "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "", instant51, "LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}", instant64, (java.util.Set<java.lang.String>) strSet80);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str27, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(instant35);
        org.junit.Assert.assertNotNull(instant38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(instant51);
        org.junit.Assert.assertNotNull(user57);
        org.junit.Assert.assertNull(instant60);
        org.junit.Assert.assertNotNull(instant61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(instant64);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test3339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3339");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.Boolean boolean4 = loginVM0.isRememberMe();
        loginVM0.setPassword("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str7 = loginVM0.getPassword();
        loginVM0.setUsername("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str10 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}" + "'", str7, "Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str10, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
    }

    @Test
    public void test3340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3340");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent3 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str4 = persistentAuditEvent3.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent5.setId((java.lang.Long) 1L);
        java.lang.String str8 = persistentAuditEvent5.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent5.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent10 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent10.setId((java.lang.Long) 1L);
        java.lang.String str13 = persistentAuditEvent10.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap14 = persistentAuditEvent10.getData();
        persistentAuditEvent5.setData(strMap14);
        persistentAuditEvent3.setData(strMap14);
        persistentAuditEvent0.setData(strMap14);
        java.lang.Long long18 = persistentAuditEvent0.getId();
        persistentAuditEvent0.setPrincipal("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        persistentAuditEvent0.setId((java.lang.Long) 10L);
        persistentAuditEvent0.setPrincipal("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(long18);
    }

    @Test
    public void test3341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3341");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.toString();
        java.lang.Boolean boolean2 = loginVM0.isRememberMe();
        loginVM0.setPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}");
        java.lang.String str5 = loginVM0.getUsername();
        java.lang.Boolean boolean6 = loginVM0.isRememberMe();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str1, "LoginVM{username='null', rememberMe=null}");
        org.junit.Assert.assertNull(boolean2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(boolean6);
    }

    @Test
    public void test3342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3342");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet1 = managedUserVM0.getAuthorities();
        java.time.Instant instant2 = null;
        managedUserVM0.setLastModifiedDate(instant2);
        managedUserVM0.setLogin("SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}");
        org.junit.Assert.assertNull(strSet1);
    }

    @Test
    public void test3343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3343");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user60 = new com.unifacisa.tcc.domain.User();
        user60.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user60.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper65 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user67 = userMapper65.userFromId((java.lang.Long) 100L);
        user67.setLangKey("");
        java.time.Instant instant70 = user67.getResetDate();
        java.time.Instant instant71 = user67.getCreatedDate();
        user60.setResetDate(instant71);
        java.time.Instant instant73 = null;
        user60.setCreatedDate(instant73);
        java.lang.String str75 = user60.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user76 = new com.unifacisa.tcc.domain.User();
        java.lang.String str77 = user76.toString();
        boolean boolean78 = user60.equals((java.lang.Object) user76);
        java.lang.String str79 = user76.getCreatedBy();
        com.unifacisa.tcc.service.dto.UserDTO userDTO80 = userMapper0.userToUserDTO(user76);
        com.unifacisa.tcc.domain.User user82 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str83 = user82.getFirstName();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user67);
        org.junit.Assert.assertNull(instant70);
        org.junit.Assert.assertNotNull(instant71);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str77, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(userDTO80);
        org.junit.Assert.assertNotNull(user82);
        org.junit.Assert.assertNull(str83);
    }

    @Test
    public void test3344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3344");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant5 = user0.getLastModifiedDate();
        user0.setActivated(false);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet8 = user0.getAuthorities();
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertNotNull(authoritySet8);
    }

    @Test
    public void test3345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3345");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.String str7 = aluno0.getEmail();
        com.unifacisa.tcc.domain.Professor professor8 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Professor professor15 = professor9.diponibilidade((java.lang.Boolean) true);
        java.lang.String str16 = professor15.toString();
        com.unifacisa.tcc.domain.Aluno aluno17 = new com.unifacisa.tcc.domain.Aluno();
        aluno17.setPrimeiroNome("");
        java.lang.Long long20 = aluno17.getMatricula();
        java.lang.Long long21 = aluno17.getMatricula();
        aluno17.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor25 = null;
        aluno24.setProfessor(professor25);
        aluno24.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor29 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor31 = professor29.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor32 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno38 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor40 = null;
        aluno39.setProfessor(professor40);
        java.lang.Long long42 = aluno39.getMatricula();
        java.lang.String str43 = aluno39.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno44 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean46 = aluno44.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        aluno47.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        aluno55.setPrimeiroNome("");
        java.lang.Long long58 = aluno55.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray62 = new com.unifacisa.tcc.domain.Aluno[] { aluno33, aluno38, aluno39, aluno44, aluno47, aluno52, aluno55, aluno59 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet63 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet63, alunoArray62);
        professor32.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        com.unifacisa.tcc.domain.Professor professor66 = professor31.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet63);
        aluno24.setProfessor(professor66);
        aluno17.setProfessor(professor66);
        aluno17.setHabilitadoTcc((java.lang.Boolean) false);
        aluno17.setId((java.lang.Long) 1L);
        java.lang.String str73 = aluno17.getPrimeiroNome();
        com.unifacisa.tcc.domain.Professor professor74 = professor15.addAluno(aluno17);
        com.unifacisa.tcc.domain.Aluno aluno75 = aluno0.professor(professor74);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa77 = aluno0.numeroContato((java.lang.Long) 0L);
        aluno0.setHabilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(professor8);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}" + "'", str16, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNull(long20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNull(long42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertNotNull(alunoArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(professor66);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(professor74);
        org.junit.Assert.assertNotNull(aluno75);
        org.junit.Assert.assertNotNull(pessoa77);
    }

    @Test
    public void test3346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3346");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        java.lang.String str17 = socialUserConnection0.getRefreshToken();
        java.lang.String str18 = socialUserConnection0.getProviderId();
        socialUserConnection0.setId((java.lang.Long) 100L);
        java.lang.String str21 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test3347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3347");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        java.lang.String str46 = user0.getImageUrl();
        user0.setLangKey("");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet49 = user0.getAuthorities();
        user0.setLastName("LoggerVM{name='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', level='Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}'}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(authoritySet49);
    }

    @Test
    public void test3348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3348");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<org.springframework.social.connect.Connection<?>> wildcardConnectionList5 = customSocialConnectionRepository3.findConnections("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', habilitadoTcc='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3349");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        aluno0.setNumeroContato((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean13 = aluno11.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor14 = aluno11.getProfessor();
        java.lang.String str15 = aluno11.toString();
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor18 = professor16.diponibilidade((java.lang.Boolean) true);
        professor18.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno21 = new com.unifacisa.tcc.domain.Aluno();
        aluno21.setPrimeiroNome("");
        java.lang.Long long24 = aluno21.getMatricula();
        aluno21.setHabilitadoTcc((java.lang.Boolean) false);
        aluno21.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        aluno29.setPrimeiroNome("");
        java.lang.Long long32 = aluno29.getMatricula();
        java.lang.Long long33 = aluno29.getMatricula();
        aluno29.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        aluno36.setPrimeiroNome("");
        java.lang.Long long39 = aluno36.getMatricula();
        java.lang.Long long40 = aluno36.getMatricula();
        aluno36.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno43 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray44 = new com.unifacisa.tcc.domain.Aluno[] { aluno21, aluno29, aluno36, aluno43 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet45 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet45, alunoArray44);
        com.unifacisa.tcc.domain.Professor professor47 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet45);
        com.unifacisa.tcc.domain.Professor professor48 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor50 = professor48.diponibilidade((java.lang.Boolean) true);
        professor50.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str53 = professor50.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor54 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor56 = professor54.diponibilidade((java.lang.Boolean) true);
        professor56.setDiponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        aluno59.setPrimeiroNome("");
        java.lang.Long long62 = aluno59.getMatricula();
        aluno59.setHabilitadoTcc((java.lang.Boolean) false);
        aluno59.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno67 = new com.unifacisa.tcc.domain.Aluno();
        aluno67.setPrimeiroNome("");
        java.lang.Long long70 = aluno67.getMatricula();
        java.lang.Long long71 = aluno67.getMatricula();
        aluno67.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno74 = new com.unifacisa.tcc.domain.Aluno();
        aluno74.setPrimeiroNome("");
        java.lang.Long long77 = aluno74.getMatricula();
        java.lang.Long long78 = aluno74.getMatricula();
        aluno74.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Aluno aluno81 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno59, aluno67, aluno74, aluno81 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        com.unifacisa.tcc.domain.Professor professor85 = professor56.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor86 = professor50.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Professor professor87 = professor18.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        com.unifacisa.tcc.domain.Aluno aluno88 = aluno11.professor(professor18);
        com.unifacisa.tcc.domain.Aluno aluno89 = aluno0.professor(professor18);
        com.unifacisa.tcc.domain.Aluno aluno91 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(professor14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str15, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(long24);
        org.junit.Assert.assertNull(long32);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNotNull(alunoArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(professor50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNull(long71);
        org.junit.Assert.assertNull(long77);
        org.junit.Assert.assertNull(long78);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertNotNull(professor86);
        org.junit.Assert.assertNotNull(professor87);
        org.junit.Assert.assertNotNull(aluno88);
        org.junit.Assert.assertNotNull(aluno89);
        org.junit.Assert.assertNotNull(aluno91);
    }

    @Test
    public void test3350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3350");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa5 = aluno0.segundoNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Professor professor6 = aluno0.getProfessor();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = professor6.getPrimeiroNome();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNotNull(pessoa5);
        org.junit.Assert.assertNull(professor6);
    }

    @Test
    public void test3351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3351");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}", "Professor{id=0, primeiroNome='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='error.validation', numeroContato='null', diponibilidade='true'}", "User{login='null', firstName='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3352");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        java.lang.String str8 = user2.getResetKey();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test3353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3353");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap5 = null;
        persistentAuditEvent0.setData(strMap5);
        java.time.Instant instant7 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str8 = persistentAuditEvent0.getAuditEventType();
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(instant7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test3354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3354");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getFirstName();
        java.lang.String str20 = userDTO17.getEmail();
        java.lang.String str21 = userDTO17.getLastName();
        java.lang.String str22 = userDTO17.toString();
        java.lang.String str23 = userDTO17.toString();
        java.lang.String str24 = userDTO17.getLastModifiedBy();
        java.lang.String str25 = userDTO17.getLastModifiedBy();
        java.lang.String str26 = userDTO17.toString();
        java.lang.String str27 = userDTO17.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str22, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str23, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str26, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str27, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3355");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='1', habilitadoTcc='null'}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3356");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str10 = keyAndPasswordVM0.getKey();
        java.lang.String str11 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        keyAndPasswordVM0.setNewPassword("error.concurrencyFailure");
        java.lang.String str16 = keyAndPasswordVM0.getKey();
        java.lang.String str17 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str18 = keyAndPasswordVM0.getNewPassword();
        java.lang.String str19 = keyAndPasswordVM0.getKey();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "error.concurrencyFailure" + "'", str17, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "error.concurrencyFailure" + "'", str18, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test3357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3357");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper20 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user22 = userMapper20.userFromId((java.lang.Long) 100L);
        user22.setLangKey("");
        java.time.Instant instant25 = user22.getResetDate();
        java.time.Instant instant26 = user22.getCreatedDate();
        user15.setResetDate(instant26);
        user2.setCreatedDate(instant26);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor32 = aluno29.getProfessor();
        com.unifacisa.tcc.domain.Professor professor33 = aluno29.getProfessor();
        boolean boolean34 = user2.equals((java.lang.Object) aluno29);
        com.unifacisa.tcc.service.dto.UserDTO userDTO35 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str36 = userDTO35.getLastModifiedBy();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(user22);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNotNull(instant26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(professor32);
        org.junit.Assert.assertNull(professor33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test3358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3358");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.matricula((java.lang.Long) 10L);
        java.lang.Long long7 = aluno0.getId();
        aluno0.setMatricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno11 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno11);
    }

    @Test
    public void test3359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3359");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.String str56 = aluno53.getPrimeiroNome();
        java.lang.Long long57 = aluno53.getMatricula();
        boolean boolean58 = user48.equals((java.lang.Object) aluno53);
        user48.setFirstName("");
        user48.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = user48.getAuthorities();
        user0.setAuthorities(authoritySet63);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setCreatedBy("error.validation");
        java.lang.String str68 = user0.toString();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str68, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3360");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.springframework.core.env.Environment environment6 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect7 = new com.unifacisa.tcc.aop.logging.LoggingAspect(environment6);
        loggingAspect7.springBeanPointcut();
        loggingAspect7.springBeanPointcut();
        loggingAspect7.springBeanPointcut();
        loggingAspect7.applicationPackagePointcut();
        boolean boolean12 = socialUserConnection0.equals((java.lang.Object) loggingAspect7);
        org.aspectj.lang.JoinPoint joinPoint13 = null;
        java.lang.Throwable throwable14 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect7.logAfterThrowing(joinPoint13, throwable14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3361");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant48 = managedUserVM47.getCreatedDate();
        java.lang.Long long49 = managedUserVM47.getId();
        java.time.Instant instant50 = managedUserVM47.getCreatedDate();
        java.lang.String str51 = managedUserVM47.getLastModifiedBy();
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity52 = userResource3.createUser(managedUserVM47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
        org.junit.Assert.assertNull(instant48);
        org.junit.Assert.assertNull(long49);
        org.junit.Assert.assertNull(instant50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test3362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3362");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = null;
        managedUserVM0.setLastModifiedDate(instant3);
        managedUserVM0.setId((java.lang.Long) 0L);
        java.lang.String str7 = managedUserVM0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str7, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3363");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM7 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str8 = loggerVM7.getName();
        java.lang.String str9 = loggerVM7.getLevel();
        loggerVM7.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str12 = loggerVM7.toString();
        logsResource0.changeLevel(loggerVM7);
        com.unifacisa.tcc.web.rest.LogsResource logsResource14 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM15.setName("LoginVM{username='null', rememberMe=false}");
        logsResource14.changeLevel(loggerVM15);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList19 = logsResource14.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM20.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM20.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource14.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.LogsResource logsResource26 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM27 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM27.setName("LoginVM{username='null', rememberMe=false}");
        logsResource26.changeLevel(loggerVM27);
        loggerVM27.setName("Authority{name='error.concurrencyFailure'}");
        logsResource14.changeLevel(loggerVM27);
        java.lang.String str34 = loggerVM27.toString();
        logsResource0.changeLevel(loggerVM27);
        loggerVM27.setLevel("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str38 = loggerVM27.toString();
        loggerVM27.setLevel("SocialUserConnection{id=null, userId=error.concurrencyFailure, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='error.concurrencyFailure', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}', secret='null', refreshToken='null', expireTime=10}");
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}" + "'", str12, "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNotNull(loggerVMList19);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str34, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}'}" + "'", str38, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}'}");
    }

    @Test
    public void test3364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3364");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.String str17 = aluno14.getPrimeiroNome();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user9.equals((java.lang.Object) aluno14);
        user9.setFirstName("");
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        user22.setResetDate(instant33);
        user9.setCreatedDate(instant33);
        user2.setResetDate(instant33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str38 = user2.getCreatedBy();
        java.lang.String str39 = user2.getResetKey();
        java.time.Instant instant40 = user2.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user43 = userMapper41.userFromId((java.lang.Long) 100L);
        user43.setLangKey("");
        java.time.Instant instant46 = user43.getResetDate();
        java.time.Instant instant47 = user43.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.String str51 = aluno48.getPrimeiroNome();
        java.lang.Long long52 = aluno48.getMatricula();
        boolean boolean53 = user43.equals((java.lang.Object) aluno48);
        user43.setFirstName("");
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        user56.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user56.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user63 = userMapper61.userFromId((java.lang.Long) 100L);
        user63.setLangKey("");
        java.time.Instant instant66 = user63.getResetDate();
        java.time.Instant instant67 = user63.getCreatedDate();
        user56.setResetDate(instant67);
        user43.setCreatedDate(instant67);
        user2.setLastModifiedDate(instant67);
        user2.setActivationKey("ManagedUserVM{} UserDTO{login='', firstName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', lastName='', email='hi!', imageUrl='hi!', activated=false, langKey='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', createdBy=error.validation, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str73 = user2.getLangKey();
        java.lang.String str74 = user2.getLogin();
        user2.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNull(instant66);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test3365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3365");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("LoginVM{username='SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}', rememberMe=false}", "", "SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test3366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3366");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        persistentAuditEvent0.setAuditEventDate(instant14);
        java.lang.String str17 = persistentAuditEvent0.getPrincipal();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test3367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3367");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        loggingAspect2.springBeanPointcut();
        loggingAspect2.springBeanPointcut();
        loggingAspect2.applicationPackagePointcut();
        org.aspectj.lang.JoinPoint joinPoint6 = null;
        java.lang.Throwable throwable7 = null;
        // The following exception was thrown during execution in test generation
        try {
            loggingAspect2.logAfterThrowing(joinPoint6, throwable7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
    }

    @Test
    public void test3368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3368");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}", "hi!", "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", (java.lang.Long) 1L, "SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "LoggerVM{name='null', level='null'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='1', email='null', numeroContato='null', diponibilidade='false'}', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}", "SocialUserConnection{id=null, userId=Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Aluno{id=1, primeiroNome='', segundoNome='null', matricula='0', email='null', numeroContato='null', habilitadoTcc='false'}", (java.lang.Long) 1L);
    }

    @Test
    public void test3369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3369");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant6 = null;
        persistentAuditEvent5.setAuditEventDate(instant6);
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        user8.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user8.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user8.setResetDate(instant19);
        persistentAuditEvent5.setAuditEventDate(instant19);
        persistentAuditEvent0.setAuditEventDate(instant19);
        java.util.Map<java.lang.String, java.lang.String> strMap23 = persistentAuditEvent0.getData();
        persistentAuditEvent0.setPrincipal("LoginVM{username='', rememberMe=false}");
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test3370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3370");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.String str3 = aluno0.getPrimeiroNome();
        java.lang.Long long4 = aluno0.getMatricula();
        java.lang.Boolean boolean5 = aluno0.isHabilitadoTcc();
        java.lang.String str6 = aluno0.toString();
        com.unifacisa.tcc.domain.Professor professor7 = aluno0.getProfessor();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.User user10 = new com.unifacisa.tcc.domain.User();
        java.lang.String str11 = user10.toString();
        user10.setCreatedBy("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str14 = user10.getActivationKey();
        boolean boolean15 = aluno0.equals((java.lang.Object) str14);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str6, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(professor7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str11, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3371");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection3 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection3.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection3.getProviderId();
        socialUserConnection3.setImageURL("error.validation");
        socialUserConnection3.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection3.setExpireTime((java.lang.Long) 100L);
        socialUserConnection3.setProfileURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        boolean boolean15 = authority0.equals((java.lang.Object) socialUserConnection3);
        authority0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM18 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str19 = managedUserVM18.toString();
        java.time.Instant instant20 = managedUserVM18.getLastModifiedDate();
        managedUserVM18.setId((java.lang.Long) (-1L));
        java.lang.String str23 = managedUserVM18.getLastName();
        java.lang.String str24 = managedUserVM18.getLastName();
        boolean boolean25 = authority0.equals((java.lang.Object) managedUserVM18);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str19, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test3372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3372");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray2 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList3 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList3, userArray2);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList5 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList3);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList11 = userMapper1.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList12 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user16.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant21 = user16.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO22 = userMapper13.userToUserDTO(user16);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray24 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList25 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList25, userArray24);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList27 = userMapper23.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList25);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper28 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray29 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList30 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList30, userArray29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper28.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList30);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList33 = userMapper23.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList30);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user36 = userMapper34.userFromId((java.lang.Long) 100L);
        user36.setLangKey("");
        java.time.Instant instant39 = user36.getResetDate();
        java.lang.String str40 = user36.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = userMapper23.userToUserDTO(user36);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray43 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList44 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList44, userArray43);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList46 = userMapper42.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList44);
        java.time.Instant instant57 = null;
        java.time.Instant instant59 = null;
        java.time.Instant instant69 = null;
        java.time.Instant instant71 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet75 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet75, strArray74);
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant69, "hi!", instant71, (java.util.Set<java.lang.String>) strSet75);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM78 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant57, "", instant59, (java.util.Set<java.lang.String>) strSet75);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet79 = userMapper42.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet75);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper80 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray81 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList82 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList82, userArray81);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList84 = userMapper80.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList82);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList85 = userMapper42.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList82);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList86 = userMapper23.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList82);
        java.util.List<com.unifacisa.tcc.domain.User> userList87 = userMapper13.userDTOsToUsers(userDTOList86);
        java.util.List<com.unifacisa.tcc.domain.User> userList88 = userMapper0.userDTOsToUsers(userDTOList86);
        org.junit.Assert.assertNotNull(userArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(userDTOList5);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(userDTOList11);
        org.junit.Assert.assertNotNull(userDTOList12);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNotNull(userDTO22);
        org.junit.Assert.assertNotNull(userArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(userDTOList27);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userDTOList33);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertNull(instant39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(userDTO41);
        org.junit.Assert.assertNotNull(userArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(userDTOList46);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(authoritySet79);
        org.junit.Assert.assertNotNull(userArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(userDTOList84);
        org.junit.Assert.assertNotNull(userDTOList85);
        org.junit.Assert.assertNotNull(userDTOList86);
        org.junit.Assert.assertNotNull(userList87);
        org.junit.Assert.assertNotNull(userList88);
    }

    @Test
    public void test3373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3373");
        com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM keyAndPasswordVM0 = new com.unifacisa.tcc.web.rest.vm.KeyAndPasswordVM();
        keyAndPasswordVM0.setKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        keyAndPasswordVM0.setKey("");
        keyAndPasswordVM0.setNewPassword("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str9 = keyAndPasswordVM0.getNewPassword();
        keyAndPasswordVM0.setNewPassword("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        keyAndPasswordVM0.setNewPassword("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:14.244Z, authorities=null}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str9, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
    }

    @Test
    public void test3374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3374");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        boolean boolean4 = authority0.equals((java.lang.Object) '#');
        java.lang.String str5 = authority0.toString();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Authority{name='null'}" + "'", str5, "Authority{name='null'}");
    }

    @Test
    public void test3375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3375");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("Authority{name='error.concurrencyFailure'}");
        loginVM0.setUsername("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.Boolean boolean16 = loginVM0.isRememberMe();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
    }

    @Test
    public void test3376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3376");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        java.lang.String str13 = loginVM0.toString();
        loginVM0.setPassword("User{login='null', firstName='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "LoginVM{username='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', rememberMe=true}" + "'", str13, "LoginVM{username='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', rememberMe=true}");
    }

    @Test
    public void test3377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3377");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        authority0.setName("");
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        java.lang.String str7 = authority0.getName();
        java.lang.String str8 = authority0.getName();
        java.lang.String str9 = authority0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str7, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str8, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}" + "'", str9, "Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
    }

    @Test
    public void test3378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3378");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant46 = userDTO45.getCreatedDate();
        java.lang.String str47 = userDTO45.toString();
        java.lang.Long long48 = userDTO45.getId();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertNotNull(instant46);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:19.682Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:19.682Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str47, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:19.682Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:19.682Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(long48);
    }

    @Test
    public void test3379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3379");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM7 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str8 = loggerVM7.getName();
        java.lang.String str9 = loggerVM7.getLevel();
        loggerVM7.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str12 = loggerVM7.toString();
        logsResource0.changeLevel(loggerVM7);
        com.unifacisa.tcc.web.rest.LogsResource logsResource14 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM15 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM15.setName("LoginVM{username='null', rememberMe=false}");
        logsResource14.changeLevel(loggerVM15);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList19 = logsResource14.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM20.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM20.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource14.changeLevel(loggerVM20);
        com.unifacisa.tcc.web.rest.LogsResource logsResource26 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM27 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM27.setName("LoginVM{username='null', rememberMe=false}");
        logsResource26.changeLevel(loggerVM27);
        loggerVM27.setName("Authority{name='error.concurrencyFailure'}");
        logsResource14.changeLevel(loggerVM27);
        java.lang.String str34 = loggerVM27.toString();
        logsResource0.changeLevel(loggerVM27);
        loggerVM27.setLevel("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        java.lang.String str38 = loggerVM27.toString();
        java.lang.String str39 = loggerVM27.getName();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}" + "'", str12, "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNotNull(loggerVMList19);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str34, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}'}" + "'", str38, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}'}");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str39, "Authority{name='error.concurrencyFailure'}");
    }

    @Test
    public void test3380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3380");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        boolean boolean45 = user0.getActivated();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper46 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user48 = userMapper46.userFromId((java.lang.Long) 100L);
        user48.setLangKey("");
        java.time.Instant instant51 = user48.getResetDate();
        java.time.Instant instant52 = user48.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno53 = new com.unifacisa.tcc.domain.Aluno();
        aluno53.setPrimeiroNome("");
        java.lang.String str56 = aluno53.getPrimeiroNome();
        java.lang.Long long57 = aluno53.getMatricula();
        boolean boolean58 = user48.equals((java.lang.Object) aluno53);
        user48.setFirstName("");
        user48.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet63 = user48.getAuthorities();
        user0.setAuthorities(authoritySet63);
        com.unifacisa.tcc.service.dto.UserDTO userDTO65 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.time.Instant instant66 = user0.getCreatedDate();
        user0.setId((java.lang.Long) (-1L));
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user48);
        org.junit.Assert.assertNull(instant51);
        org.junit.Assert.assertNotNull(instant52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertNull(long57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(authoritySet63);
        org.junit.Assert.assertNotNull(instant66);
    }

    @Test
    public void test3381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3381");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setPrimeiroNome("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        com.unifacisa.tcc.domain.Aluno aluno9 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor10 = null;
        aluno9.setProfessor(professor10);
        aluno9.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno9.primeiroNome("hi!");
        java.lang.Long long16 = aluno9.getId();
        java.lang.String str17 = aluno9.getSegundoNome();
        aluno9.setSegundoNome("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        com.unifacisa.tcc.domain.Professor professor20 = professor2.removeAluno(aluno9);
        java.lang.Long long21 = professor2.getNumeroContato();
        com.unifacisa.tcc.domain.Professor professor23 = professor2.diponibilidade((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(professor20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNotNull(professor23);
    }

    @Test
    public void test3382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3382");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration15 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        boolean boolean16 = socialUserConnection0.equals((java.lang.Object) loggingAspectConfiguration15);
        java.lang.String str17 = socialUserConnection0.getRefreshToken();
        java.lang.String str18 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str21 = socialUserConnection0.getProviderId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str18, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str21, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3383");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str1 = managedUserVM0.toString();
        java.time.Instant instant2 = managedUserVM0.getLastModifiedDate();
        java.time.Instant instant3 = null;
        managedUserVM0.setLastModifiedDate(instant3);
        java.lang.String str5 = managedUserVM0.toString();
        java.lang.String str6 = managedUserVM0.getLogin();
        java.util.Set<java.lang.String> strSet7 = managedUserVM0.getAuthorities();
        managedUserVM0.setLogin("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}");
        java.lang.String str10 = managedUserVM0.toString();
        java.lang.String str11 = managedUserVM0.getLangKey();
        java.lang.String str12 = managedUserVM0.getPassword();
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        user13.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user13.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = new com.unifacisa.tcc.service.dto.UserDTO(user13);
        user13.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user13.setActivationKey("LoggerVM{name='null', level='null'}");
        java.time.Instant instant23 = user13.getLastModifiedDate();
        managedUserVM0.setLastModifiedDate(instant23);
        java.lang.String str25 = managedUserVM0.getLastName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str1, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str5, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test3384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3384");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user14 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 100L);
        user17.setLangKey("");
        java.time.Instant instant20 = user17.getResetDate();
        java.time.Instant instant21 = user17.getCreatedDate();
        user14.setCreatedDate(instant21);
        com.unifacisa.tcc.service.dto.UserDTO userDTO23 = userMapper11.userToUserDTO(user14);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper24 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray25 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList26 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList26, userArray25);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList28 = userMapper24.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList26);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList29 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList26);
        java.util.List<com.unifacisa.tcc.domain.User> userList30 = userMapper0.userDTOsToUsers(userDTOList29);
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(instant21);
        org.junit.Assert.assertNotNull(userDTO23);
        org.junit.Assert.assertNotNull(userArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(userDTOList28);
        org.junit.Assert.assertNotNull(userDTOList29);
        org.junit.Assert.assertNotNull(userList30);
    }

    @Test
    public void test3385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3385");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = professor0.email("");
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor8 = professor0.addAluno(aluno5);
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno11 = new com.unifacisa.tcc.domain.Aluno();
        aluno11.setPrimeiroNome("");
        java.lang.Long long14 = aluno11.getMatricula();
        java.lang.Long long15 = aluno11.getMatricula();
        aluno11.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa19 = aluno11.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno21 = aluno11.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor22 = professor8.removeAluno(aluno11);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa24 = professor8.numeroContato((java.lang.Long) (-1L));
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertNotNull(professor8);
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNull(long14);
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(pessoa19);
        org.junit.Assert.assertNotNull(aluno21);
        org.junit.Assert.assertNotNull(professor22);
        org.junit.Assert.assertNotNull(pessoa24);
    }

    @Test
    public void test3386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3386");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long9 = user0.getId();
        java.lang.String str10 = user0.getFirstName();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str10, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3387");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean2 = aluno0.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa4 = aluno0.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str6 = professor5.toString();
        professor5.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long9 = professor5.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa11 = professor5.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Professor professor13 = aluno0.getProfessor();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa15 = aluno0.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor16 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor18 = professor16.diponibilidade((java.lang.Boolean) true);
        professor18.setDiponibilidade((java.lang.Boolean) false);
        java.lang.String str21 = professor18.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno22 = new com.unifacisa.tcc.domain.Aluno();
        aluno22.setPrimeiroNome("");
        java.lang.Long long25 = aluno22.getMatricula();
        java.lang.Long long26 = aluno22.getMatricula();
        aluno22.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa30 = aluno22.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno22.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor34 = null;
        aluno33.setProfessor(professor34);
        aluno33.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno33.primeiroNome("hi!");
        java.lang.Long long40 = aluno33.getId();
        com.unifacisa.tcc.domain.Aluno aluno42 = aluno33.habilitadoTcc((java.lang.Boolean) false);
        aluno33.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor45 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str46 = professor45.toString();
        com.unifacisa.tcc.domain.Professor professor48 = professor45.diponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet49 = professor45.getAlunos();
        java.lang.Long long50 = professor45.getNumeroContato();
        professor45.setMatricula((java.lang.Long) (-1L));
        aluno33.setProfessor(professor45);
        com.unifacisa.tcc.domain.Aluno aluno54 = aluno32.professor(professor45);
        com.unifacisa.tcc.domain.Professor professor55 = professor18.removeAluno(aluno32);
        com.unifacisa.tcc.domain.Professor professor57 = professor18.diponibilidade((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno58 = aluno0.professor(professor57);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa60 = aluno58.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Professor professor61 = aluno58.getProfessor();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(pessoa4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(pessoa11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNotNull(professor13);
        org.junit.Assert.assertNotNull(pessoa15);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(long25);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(pessoa30);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertNull(long40);
        org.junit.Assert.assertNotNull(aluno42);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str46, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor48);
        org.junit.Assert.assertNotNull(alunoSet49);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertNotNull(aluno54);
        org.junit.Assert.assertNotNull(professor55);
        org.junit.Assert.assertNotNull(professor57);
        org.junit.Assert.assertNotNull(aluno58);
        org.junit.Assert.assertNotNull(pessoa60);
        org.junit.Assert.assertNotNull(professor61);
    }

    @Test
    public void test3388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3388");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.String str11 = socialUserConnection0.getUserId();
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        java.lang.String str14 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setId((java.lang.Long) 1L);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test3389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3389");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = socialUserConnection0.getImageURL();
        java.lang.String str7 = socialUserConnection0.getUserId();
        java.lang.String str8 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test3390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3390");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProfileURL("error.concurrencyFailure");
        java.lang.String str5 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderId("");
        socialUserConnection0.setDisplayName("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        java.lang.String str10 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "error.concurrencyFailure" + "'", str5, "error.concurrencyFailure");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test3391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3391");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.lang.String str33 = managedUserVM31.getCreatedBy();
        java.lang.String str34 = managedUserVM31.getEmail();
        java.lang.String str35 = managedUserVM31.getPassword();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "error.validation" + "'", str35, "error.validation");
    }

    @Test
    public void test3392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3392");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setId((java.lang.Long) (-1L));
        socialUserConnection0.setImageURL("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        socialUserConnection0.setDisplayName("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
    }

    @Test
    public void test3393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3393");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = loggerVM0.toString();
        loggerVM0.setName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        java.lang.String str6 = loggerVM0.getLevel();
        loggerVM0.setName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        java.lang.String str9 = loggerVM0.toString();
        java.lang.String str10 = loggerVM0.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}" + "'", str3, "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoggerVM{name='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', level='null'}" + "'", str9, "LoggerVM{name='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', level='null'}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str10, "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3394");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        com.unifacisa.tcc.domain.User user13 = new com.unifacisa.tcc.domain.User();
        user13.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user13.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant18 = user13.getLastModifiedDate();
        user2.setCreatedDate(instant18);
        java.time.Instant instant20 = user2.getLastModifiedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent21 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant22 = null;
        persistentAuditEvent21.setAuditEventDate(instant22);
        java.lang.String str24 = persistentAuditEvent21.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap25 = persistentAuditEvent21.getData();
        java.lang.Long long26 = persistentAuditEvent21.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent27 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant28 = null;
        persistentAuditEvent27.setAuditEventDate(instant28);
        persistentAuditEvent27.setAuditEventType("error.validation");
        java.time.Instant instant32 = persistentAuditEvent27.getAuditEventDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent33 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent33.setId((java.lang.Long) 1L);
        java.lang.String str36 = persistentAuditEvent33.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = persistentAuditEvent33.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent38 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent38.setId((java.lang.Long) 1L);
        java.lang.String str41 = persistentAuditEvent38.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap42 = persistentAuditEvent38.getData();
        persistentAuditEvent33.setData(strMap42);
        persistentAuditEvent27.setData(strMap42);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent45 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant46 = persistentAuditEvent45.getAuditEventDate();
        java.time.Instant instant47 = null;
        persistentAuditEvent45.setAuditEventDate(instant47);
        java.time.Instant instant49 = persistentAuditEvent45.getAuditEventDate();
        java.lang.String str50 = persistentAuditEvent45.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper51 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user53 = userMapper51.userFromId((java.lang.Long) 100L);
        user53.setLangKey("");
        java.time.Instant instant56 = user53.getResetDate();
        java.time.Instant instant57 = user53.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.String str61 = aluno58.getPrimeiroNome();
        java.lang.Long long62 = aluno58.getMatricula();
        boolean boolean63 = user53.equals((java.lang.Object) aluno58);
        user53.setFirstName("");
        com.unifacisa.tcc.domain.User user66 = new com.unifacisa.tcc.domain.User();
        user66.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user66.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setLangKey("");
        java.time.Instant instant76 = user73.getResetDate();
        java.time.Instant instant77 = user73.getCreatedDate();
        user66.setResetDate(instant77);
        user53.setCreatedDate(instant77);
        persistentAuditEvent45.setAuditEventDate(instant77);
        java.time.Instant instant81 = persistentAuditEvent45.getAuditEventDate();
        persistentAuditEvent27.setAuditEventDate(instant81);
        persistentAuditEvent21.setAuditEventDate(instant81);
        user2.setResetDate(instant81);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(instant18);
        org.junit.Assert.assertNotNull(instant20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNull(instant49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(user53);
        org.junit.Assert.assertNull(instant56);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(instant76);
        org.junit.Assert.assertNotNull(instant77);
        org.junit.Assert.assertNotNull(instant81);
    }

    @Test
    public void test3395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3395");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor2 = professor0.diponibilidade((java.lang.Boolean) true);
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        professor2.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        java.lang.Boolean boolean12 = aluno7.isHabilitadoTcc();
        java.lang.String str13 = aluno7.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long15 = aluno14.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa17 = aluno14.matricula((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.Aluno aluno18 = new com.unifacisa.tcc.domain.Aluno();
        aluno18.setPrimeiroNome("");
        java.lang.Long long21 = aluno18.getMatricula();
        java.lang.Long long22 = aluno18.getMatricula();
        aluno18.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa26 = aluno18.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Aluno aluno28 = aluno18.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno29 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean31 = aluno29.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long33 = aluno32.getId();
        aluno32.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.String str36 = aluno32.toString();
        com.unifacisa.tcc.domain.Aluno[] alunoArray37 = new com.unifacisa.tcc.domain.Aluno[] { aluno7, aluno14, aluno18, aluno29, aluno32 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet38 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet38, alunoArray37);
        com.unifacisa.tcc.domain.Professor professor40 = professor2.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet38);
        java.lang.String str41 = professor2.toString();
        professor2.setMatricula((java.lang.Long) 100L);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet44 = professor2.getAlunos();
        java.lang.Long long45 = professor2.getNumeroContato();
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository46 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource47 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository46);
        com.unifacisa.tcc.repository.ProfessorRepository professorRepository48 = null;
        com.unifacisa.tcc.web.rest.ProfessorResource professorResource49 = new com.unifacisa.tcc.web.rest.ProfessorResource(professorRepository48);
        com.unifacisa.tcc.domain.Professor professor50 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor52 = professor50.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = professor50.email("");
        com.unifacisa.tcc.domain.Professor professor56 = professor50.diponibilidade((java.lang.Boolean) true);
        professor56.setId((java.lang.Long) (-1L));
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity59 = professorResource49.createProfessor(professor56);
        org.springframework.http.ResponseEntity<com.unifacisa.tcc.domain.Professor> professorResponseEntity60 = professorResource47.createProfessor(professor56);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa62 = professor56.segundoNome("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor63 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor65 = professor63.diponibilidade((java.lang.Boolean) true);
        professor65.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long68 = professor65.getId();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet69 = professor65.getAlunos();
        com.unifacisa.tcc.domain.Professor professor70 = professor56.alunos(alunoSet69);
        professor56.setDiponibilidade((java.lang.Boolean) true);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet73 = professor56.getAlunos();
        professor2.setAlunos(alunoSet73);
        org.junit.Assert.assertNotNull(professor2);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str13, "Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long15);
        org.junit.Assert.assertNotNull(pessoa17);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNull(long22);
        org.junit.Assert.assertNotNull(pessoa26);
        org.junit.Assert.assertNotNull(aluno28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str36, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(alunoArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(professor40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}" + "'", str41, "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(alunoSet44);
        org.junit.Assert.assertNull(long45);
        org.junit.Assert.assertNotNull(professor52);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNotNull(professor56);
        org.junit.Assert.assertNotNull(professorResponseEntity59);
        org.junit.Assert.assertNotNull(professorResponseEntity60);
        org.junit.Assert.assertNotNull(pessoa62);
        org.junit.Assert.assertNotNull(professor65);
        org.junit.Assert.assertNull(long68);
        org.junit.Assert.assertNotNull(alunoSet69);
        org.junit.Assert.assertNotNull(professor70);
        org.junit.Assert.assertNotNull(alunoSet73);
    }

    @Test
    public void test3396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3396");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        aluno0.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor5 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor7 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa9 = professor5.email("");
        com.unifacisa.tcc.domain.Professor professor11 = professor5.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno12 = aluno0.professor(professor5);
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor14 = null;
        aluno13.setProfessor(professor14);
        java.lang.Long long16 = aluno13.getMatricula();
        java.lang.String str17 = aluno13.getSegundoNome();
        com.unifacisa.tcc.domain.Professor professor18 = professor5.removeAluno(aluno13);
        professor18.setMatricula((java.lang.Long) 0L);
        java.lang.String str21 = professor18.getEmail();
        java.lang.Boolean boolean22 = professor18.isDiponibilidade();
        org.junit.Assert.assertNotNull(professor7);
        org.junit.Assert.assertNotNull(pessoa9);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(aluno12);
        org.junit.Assert.assertNull(long16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(professor18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + true + "'", boolean22, true);
    }

    @Test
    public void test3397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3397");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = null;
        user2.setLastModifiedDate(instant5);
        user2.setActivated(false);
        user2.setActivationKey("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertNotNull(user2);
    }

    @Test
    public void test3398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3398");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.User user63 = userMapper0.userFromId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.User user65 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.User user66 = new com.unifacisa.tcc.domain.User();
        user66.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user66.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setLangKey("");
        java.time.Instant instant76 = user73.getResetDate();
        java.time.Instant instant77 = user73.getCreatedDate();
        user66.setResetDate(instant77);
        java.time.Instant instant79 = null;
        user66.setCreatedDate(instant79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO81 = userMapper0.userToUserDTO(user66);
        java.lang.Long long82 = user66.getId();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNotNull(user65);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(instant76);
        org.junit.Assert.assertNotNull(instant77);
        org.junit.Assert.assertNotNull(userDTO81);
        org.junit.Assert.assertNull(long82);
    }

    @Test
    public void test3399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3399");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderId("LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        socialUserConnection0.setAccessToken("UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:49.938Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:49.938Z, authorities=[]}");
    }

    @Test
    public void test3400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3400");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("", "hi!", "");
        java.lang.String str4 = fieldErrorVM3.getField();
        java.lang.String str5 = fieldErrorVM3.getObjectName();
        java.lang.String str6 = fieldErrorVM3.getObjectName();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test3401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3401");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.lang.String str17 = user13.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO18 = userMapper0.userToUserDTO(user13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper19 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user21 = userMapper19.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray23 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList24 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList24, userArray23);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList26 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList24);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray28 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList29 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList29, userArray28);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList31 = userMapper27.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper22.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList29);
        java.util.List<com.unifacisa.tcc.domain.User> userList33 = userMapper19.userDTOsToUsers(userDTOList32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList34 = userMapper0.usersToUserDTOs(userList33);
        com.unifacisa.tcc.domain.User user36 = userMapper0.userFromId((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Authority authority37 = new com.unifacisa.tcc.domain.Authority();
        authority37.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        aluno47.setPrimeiroNome("");
        java.lang.String str50 = aluno47.getPrimeiroNome();
        java.lang.Long long51 = aluno47.getMatricula();
        boolean boolean52 = user42.equals((java.lang.Object) aluno47);
        com.unifacisa.tcc.domain.User user53 = new com.unifacisa.tcc.domain.User();
        user53.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user53.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant58 = user53.getLastModifiedDate();
        user42.setCreatedDate(instant58);
        boolean boolean60 = authority37.equals((java.lang.Object) user42);
        java.lang.String str61 = user42.getResetKey();
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = userMapper0.userToUserDTO(user42);
        java.lang.String str63 = user42.getEmail();
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(userDTO18);
        org.junit.Assert.assertNotNull(user21);
        org.junit.Assert.assertNotNull(userArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(userDTOList26);
        org.junit.Assert.assertNotNull(userArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(userDTOList31);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(userList33);
        org.junit.Assert.assertNotNull(userDTOList34);
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(userDTO62);
        org.junit.Assert.assertNull(str63);
    }

    @Test
    public void test3402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3402");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.Long long11 = socialUserConnection0.getId();
        socialUserConnection0.setExpireTime((java.lang.Long) 0L);
        java.lang.String str14 = socialUserConnection0.getProviderUserId();
        java.lang.String str15 = socialUserConnection0.getImageURL();
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3403");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getImageUrl();
        java.lang.String str3 = managedUserVM0.getEmail();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test3404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3404");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("LoggerVM{name='null', level='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3405");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        java.lang.String str2 = authority0.getName();
        boolean boolean4 = authority0.equals((java.lang.Object) 0L);
        com.unifacisa.tcc.domain.Authority authority5 = new com.unifacisa.tcc.domain.Authority();
        authority5.setName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        boolean boolean8 = authority0.equals((java.lang.Object) authority5);
        java.lang.String str9 = authority0.toString();
        authority0.setName("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Authority{name='null'}" + "'", str9, "Authority{name='null'}");
    }

    @Test
    public void test3406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3406");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("error.concurrencyFailure");
    }

    @Test
    public void test3407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3407");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        java.lang.String str1 = authority0.getName();
        authority0.setName("");
        java.lang.String str4 = authority0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test3408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3408");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setUsername("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("Authority{name='error.concurrencyFailure'}");
        loginVM0.setUsername("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setPassword("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        loginVM0.setPassword("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='1', email='null', numeroContato='null', habilitadoTcc='false'}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test3409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3409");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        java.lang.String str5 = persistentAuditEvent0.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user8 = userMapper6.userFromId((java.lang.Long) 100L);
        user8.setLangKey("");
        java.time.Instant instant11 = user8.getResetDate();
        java.time.Instant instant12 = user8.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("");
        java.lang.String str16 = aluno13.getPrimeiroNome();
        java.lang.Long long17 = aluno13.getMatricula();
        boolean boolean18 = user8.equals((java.lang.Object) aluno13);
        user8.setFirstName("");
        com.unifacisa.tcc.domain.User user21 = new com.unifacisa.tcc.domain.User();
        user21.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user21.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user28 = userMapper26.userFromId((java.lang.Long) 100L);
        user28.setLangKey("");
        java.time.Instant instant31 = user28.getResetDate();
        java.time.Instant instant32 = user28.getCreatedDate();
        user21.setResetDate(instant32);
        user8.setCreatedDate(instant32);
        persistentAuditEvent0.setAuditEventDate(instant32);
        java.time.Instant instant36 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        persistentAuditEvent0.setPrincipal("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.time.Instant instant41 = persistentAuditEvent0.getAuditEventDate();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(instant11);
        org.junit.Assert.assertNotNull(instant12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(user28);
        org.junit.Assert.assertNull(instant31);
        org.junit.Assert.assertNotNull(instant32);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(instant41);
    }

    @Test
    public void test3410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3410");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        socialUserConnection0.setProviderId("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        socialUserConnection0.setProfileURL("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor21 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor23 = professor21.diponibilidade((java.lang.Boolean) true);
        professor23.setSegundoNome("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.Long long26 = professor23.getId();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa28 = professor23.email("error.validation");
        professor23.setId((java.lang.Long) 0L);
        professor23.setDiponibilidade((java.lang.Boolean) true);
        java.lang.Long long33 = professor23.getNumeroContato();
        boolean boolean34 = socialUserConnection0.equals((java.lang.Object) professor23);
        java.lang.Long long35 = socialUserConnection0.getId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNotNull(professor23);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(pessoa28);
        org.junit.Assert.assertNull(long33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(long35);
    }

    @Test
    public void test3411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3411");
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM0 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM0.setLevel("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.String str3 = loggerVM0.toString();
        java.lang.String str4 = loggerVM0.toString();
        java.lang.String str5 = loggerVM0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str3, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str4, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}" + "'", str5, "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
    }

    @Test
    public void test3412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3412");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        socialUserConnection0.setDisplayName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setProviderUserId("");
        java.lang.String str11 = socialUserConnection0.toString();
        socialUserConnection0.setProfileURL("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}");
        java.lang.String str14 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}" + "'", str11, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str14, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3413");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper1 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user3 = userMapper1.userFromId((java.lang.Long) 100L);
        user3.setLangKey("");
        java.time.Instant instant6 = user3.getResetDate();
        java.time.Instant instant7 = user3.getCreatedDate();
        user0.setCreatedDate(instant7);
        boolean boolean9 = user0.getActivated();
        boolean boolean10 = user0.getActivated();
        java.lang.String str11 = user0.getImageUrl();
        user0.setLangKey("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(user3);
        org.junit.Assert.assertNull(instant6);
        org.junit.Assert.assertNotNull(instant7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3414");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        com.unifacisa.tcc.domain.User user5 = new com.unifacisa.tcc.domain.User();
        java.lang.String str6 = user5.toString();
        user5.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user5.setLastName("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str11 = user5.getLastModifiedBy();
        java.lang.String str12 = user5.getFirstName();
        user5.setId((java.lang.Long) 1L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper15 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user17 = userMapper15.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user18 = new com.unifacisa.tcc.domain.User();
        user18.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM21 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet22 = managedUserVM21.getAuthorities();
        boolean boolean23 = user18.equals((java.lang.Object) strSet22);
        java.time.Instant instant24 = user18.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO25 = userMapper15.userToUserDTO(user18);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper26 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray27 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList28 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList28, userArray27);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList30 = userMapper26.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList28);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper31 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray32 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList33 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList33, userArray32);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList35 = userMapper31.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList33);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList36 = userMapper26.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList33);
        com.unifacisa.tcc.domain.User user37 = new com.unifacisa.tcc.domain.User();
        user37.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM40 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet41 = managedUserVM40.getAuthorities();
        boolean boolean42 = user37.equals((java.lang.Object) strSet41);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper43 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray44 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList45 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList45, userArray44);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList47 = userMapper43.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList45);
        java.time.Instant instant58 = null;
        java.time.Instant instant60 = null;
        java.time.Instant instant70 = null;
        java.time.Instant instant72 = null;
        java.lang.String[] strArray75 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet76 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet76, strArray75);
        com.unifacisa.tcc.service.dto.UserDTO userDTO78 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant70, "hi!", instant72, (java.util.Set<java.lang.String>) strSet76);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM79 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant58, "", instant60, (java.util.Set<java.lang.String>) strSet76);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet80 = userMapper43.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet76);
        user37.setAuthorities(authoritySet80);
        java.lang.String str82 = user37.getFirstName();
        user37.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO85 = userMapper26.userToUserDTO(user37);
        com.unifacisa.tcc.domain.User user87 = userMapper26.userFromId((java.lang.Long) 0L);
        user87.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant90 = user87.getLastModifiedDate();
        user18.setLastModifiedDate(instant90);
        user5.setCreatedDate(instant90);
        user2.setResetDate(instant90);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str6, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(user17);
        org.junit.Assert.assertNull(strSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(instant24);
        org.junit.Assert.assertNotNull(userDTO25);
        org.junit.Assert.assertNotNull(userArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(userDTOList30);
        org.junit.Assert.assertNotNull(userArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(userDTOList35);
        org.junit.Assert.assertNotNull(userDTOList36);
        org.junit.Assert.assertNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(userArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(userDTOList47);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(authoritySet80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNotNull(userDTO85);
        org.junit.Assert.assertNotNull(user87);
        org.junit.Assert.assertNotNull(instant90);
    }

    @Test
    public void test3415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3415");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        java.lang.String str3 = user2.getPassword();
        java.lang.String str4 = user2.getLastName();
        java.lang.String str5 = user2.getEmail();
        com.unifacisa.tcc.service.dto.UserDTO userDTO6 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        user2.setActivated(false);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test3416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3416");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        java.lang.String str9 = user2.getPassword();
        user2.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user2.setActivated(false);
        user2.setActivated(false);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test3417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3417");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity39 = userResource3.getUser("SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
    }

    @Test
    public void test3418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3418");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        user2.setPassword("");
        boolean boolean9 = user2.getActivated();
        user2.setFirstName("hi!");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3419");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        java.lang.String str3 = user0.getResetKey();
        user0.setLastModifiedBy("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        user0.setLastModifiedBy("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        com.unifacisa.tcc.domain.User user17 = new com.unifacisa.tcc.domain.User();
        user17.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user17.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        user24.setLangKey("");
        java.time.Instant instant27 = user24.getResetDate();
        java.time.Instant instant28 = user24.getCreatedDate();
        user17.setResetDate(instant28);
        java.time.Instant instant31 = null;
        java.time.Instant instant42 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant54 = null;
        java.time.Instant instant56 = null;
        java.lang.String[] strArray59 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet60 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet60, strArray59);
        com.unifacisa.tcc.service.dto.UserDTO userDTO62 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant54, "hi!", instant56, (java.util.Set<java.lang.String>) strSet60);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM63 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant42, "", instant44, (java.util.Set<java.lang.String>) strSet60);
        java.time.Instant instant64 = managedUserVM63.getCreatedDate();
        java.lang.String str65 = managedUserVM63.getLangKey();
        java.lang.String str66 = managedUserVM63.toString();
        java.util.Set<java.lang.String> strSet67 = managedUserVM63.getAuthorities();
        com.unifacisa.tcc.service.dto.UserDTO userDTO68 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) (-1L), "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}", "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "error.validation", true, "Aluno{id=-1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", "LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}", instant28, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant31, strSet67);
        user0.setLastModifiedDate(instant28);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper70 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray71 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList72 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList72, userArray71);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList74 = userMapper70.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList72);
        boolean boolean75 = user0.equals((java.lang.Object) userMapper70);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNull(instant27);
        org.junit.Assert.assertNotNull(instant28);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str66, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(userArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(userDTOList74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test3420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3420");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str17 = user2.getEmail();
        java.lang.String str18 = user2.getLastModifiedBy();
        user2.setFirstName("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        user2.setFirstName("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        user2.setImageUrl("UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:35:01.295Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:35:01.295Z, authorities=[]}");
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test3421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3421");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        persistentAuditEvent0.setAuditEventType("error.validation");
        org.junit.Assert.assertNull(instant1);
    }

    @Test
    public void test3422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3422");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.http.HttpHeaders httpHeaders7 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", "ManagedUserVM{} UserDTO{login='User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.util.MultiValueMap<java.lang.String, org.springframework.social.connect.Connection<?>> strMap8 = customSocialConnectionRepository3.findConnectionsToUsers((org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>) httpHeaders7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(httpHeaders7);
    }

    @Test
    public void test3423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3423");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap1 = null;
        persistentAuditEvent0.setData(strMap1);
        persistentAuditEvent0.setPrincipal("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        java.lang.Long long5 = persistentAuditEvent0.getId();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent6 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.lang.String str7 = persistentAuditEvent6.getAuditEventType();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent8.setId((java.lang.Long) 1L);
        java.lang.String str11 = persistentAuditEvent8.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap12 = persistentAuditEvent8.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent13.setId((java.lang.Long) 1L);
        java.lang.String str16 = persistentAuditEvent13.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap17 = persistentAuditEvent13.getData();
        persistentAuditEvent8.setData(strMap17);
        persistentAuditEvent6.setData(strMap17);
        persistentAuditEvent0.setData(strMap17);
        org.junit.Assert.assertNull(long5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test3424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3424");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        // The following exception was thrown during execution in test generation
        try {
            customSocialConnectionRepository3.removeConnections("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3425");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        java.lang.String str9 = socialUserConnection0.getImageURL();
        socialUserConnection0.setProviderUserId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str12 = socialUserConnection0.getDisplayName();
        java.lang.String str13 = socialUserConnection0.getProviderUserId();
        java.lang.String str14 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setProviderUserId("SocialUserConnection{id=null, userId=ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=null, displayName='null', profileURL='null', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=100}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "error.validation" + "'", str9, "error.validation");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test3426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3426");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.lang.String str33 = managedUserVM31.getLangKey();
        java.lang.String str34 = managedUserVM31.getLogin();
        java.lang.String str35 = managedUserVM31.toString();
        java.util.Set<java.lang.String> strSet36 = managedUserVM31.getAuthorities();
        java.lang.String str37 = managedUserVM31.getPassword();
        java.lang.String str38 = managedUserVM31.toString();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str34, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str35, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "error.validation" + "'", str37, "error.validation");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str38, "ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3427");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        loggingAspect2.applicationPackagePointcut();
        loggingAspect2.springBeanPointcut();
        org.aspectj.lang.ProceedingJoinPoint proceedingJoinPoint5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object obj6 = loggingAspect2.logAround(proceedingJoinPoint5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(loggingAspect2);
    }

    @Test
    public void test3428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3428");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}", "User{login='null', firstName='null', lastName='null', email='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3429");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        user2.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper7 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user9 = userMapper7.userFromId((java.lang.Long) 100L);
        user9.setLangKey("");
        java.time.Instant instant12 = user9.getResetDate();
        java.time.Instant instant13 = user9.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("");
        java.lang.String str17 = aluno14.getPrimeiroNome();
        java.lang.Long long18 = aluno14.getMatricula();
        boolean boolean19 = user9.equals((java.lang.Object) aluno14);
        user9.setFirstName("");
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user22.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper27 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user29 = userMapper27.userFromId((java.lang.Long) 100L);
        user29.setLangKey("");
        java.time.Instant instant32 = user29.getResetDate();
        java.time.Instant instant33 = user29.getCreatedDate();
        user22.setResetDate(instant33);
        user9.setCreatedDate(instant33);
        user2.setResetDate(instant33);
        com.unifacisa.tcc.service.dto.UserDTO userDTO37 = new com.unifacisa.tcc.service.dto.UserDTO(user2);
        java.lang.String str38 = user2.getCreatedBy();
        java.lang.String str39 = user2.getResetKey();
        java.time.Instant instant40 = user2.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper41 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user43 = userMapper41.userFromId((java.lang.Long) 100L);
        user43.setLangKey("");
        java.time.Instant instant46 = user43.getResetDate();
        java.time.Instant instant47 = user43.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        aluno48.setPrimeiroNome("");
        java.lang.String str51 = aluno48.getPrimeiroNome();
        java.lang.Long long52 = aluno48.getMatricula();
        boolean boolean53 = user43.equals((java.lang.Object) aluno48);
        user43.setFirstName("");
        com.unifacisa.tcc.domain.User user56 = new com.unifacisa.tcc.domain.User();
        user56.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user56.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper61 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user63 = userMapper61.userFromId((java.lang.Long) 100L);
        user63.setLangKey("");
        java.time.Instant instant66 = user63.getResetDate();
        java.time.Instant instant67 = user63.getCreatedDate();
        user56.setResetDate(instant67);
        user43.setCreatedDate(instant67);
        user2.setLastModifiedDate(instant67);
        java.lang.String str71 = user2.getImageUrl();
        java.time.Instant instant72 = user2.getLastModifiedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(user9);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNotNull(instant13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(long18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(user29);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(instant33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(instant40);
        org.junit.Assert.assertNotNull(user43);
        org.junit.Assert.assertNull(instant46);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(long52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(user63);
        org.junit.Assert.assertNull(instant66);
        org.junit.Assert.assertNotNull(instant67);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(instant72);
    }

    @Test
    public void test3430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3430");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        java.lang.String str15 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("SocialUserConnection{id=null, userId=Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str15, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3431");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        java.lang.Boolean boolean11 = loginVM0.isRememberMe();
        loginVM0.setPassword("LoginVM{username='LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}', rememberMe=true}");
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
    }

    @Test
    public void test3432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3432");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str1 = professor0.toString();
        com.unifacisa.tcc.domain.Professor professor3 = professor0.diponibilidade((java.lang.Boolean) true);
        professor3.setDiponibilidade((java.lang.Boolean) false);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str1, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNotNull(professor3);
    }

    @Test
    public void test3433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3433");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str6 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("Authority{name='Authority{name='error.concurrencyFailure'}'}");
        socialUserConnection0.setUserId("LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:08.859Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.859Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3434");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setDisplayName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setRefreshToken("");
        socialUserConnection0.setId((java.lang.Long) 100L);
        socialUserConnection0.setDisplayName("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=2021-03-26T03:34:08.443Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:08.443Z, authorities=[]}");
        socialUserConnection0.setAccessToken("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.lang.String str16 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setRefreshToken("LoggerVM{name='', level='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str16, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
    }

    @Test
    public void test3435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3435");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM6 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet7 = managedUserVM6.getAuthorities();
        boolean boolean8 = user3.equals((java.lang.Object) strSet7);
        java.time.Instant instant9 = user3.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.time.Instant instant38 = null;
        java.time.Instant instant40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO46 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant38, "hi!", instant40, (java.util.Set<java.lang.String>) strSet44);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM47 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant26, "", instant28, (java.util.Set<java.lang.String>) strSet44);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet48 = userMapper11.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet44);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper49 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user51 = userMapper49.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper52 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user54 = userMapper52.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user55 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper56 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user58 = userMapper56.userFromId((java.lang.Long) 100L);
        user58.setLangKey("");
        java.time.Instant instant61 = user58.getResetDate();
        java.time.Instant instant62 = user58.getCreatedDate();
        user55.setCreatedDate(instant62);
        com.unifacisa.tcc.service.dto.UserDTO userDTO64 = userMapper52.userToUserDTO(user55);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper65 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray66 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList67 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList67, userArray66);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList69 = userMapper65.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList67);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList70 = userMapper52.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList67);
        java.util.List<com.unifacisa.tcc.domain.User> userList71 = userMapper49.userDTOsToUsers(userDTOList70);
        java.util.List<com.unifacisa.tcc.domain.User> userList72 = userMapper11.userDTOsToUsers(userDTOList70);
        com.unifacisa.tcc.domain.User user73 = new com.unifacisa.tcc.domain.User();
        java.lang.String str74 = user73.toString();
        user73.setLastModifiedBy("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = userMapper11.userToUserDTO(user73);
        com.unifacisa.tcc.service.dto.UserDTO userDTO78 = userMapper0.userToUserDTO(user73);
        com.unifacisa.tcc.domain.User user79 = new com.unifacisa.tcc.domain.User();
        user79.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM82 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet83 = managedUserVM82.getAuthorities();
        boolean boolean84 = user79.equals((java.lang.Object) strSet83);
        java.time.Instant instant85 = user79.getLastModifiedDate();
        user79.setFirstName("LoginVM{username='null', rememberMe=false}");
        java.time.Instant instant88 = user79.getResetDate();
        java.lang.Long long89 = user79.getId();
        com.unifacisa.tcc.service.dto.UserDTO userDTO90 = new com.unifacisa.tcc.service.dto.UserDTO(user79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO91 = new com.unifacisa.tcc.service.dto.UserDTO(user79);
        com.unifacisa.tcc.service.dto.UserDTO userDTO92 = userMapper0.userToUserDTO(user79);
        java.lang.Long long93 = user79.getId();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(userDTO10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(authoritySet48);
        org.junit.Assert.assertNotNull(user51);
        org.junit.Assert.assertNotNull(user54);
        org.junit.Assert.assertNotNull(user58);
        org.junit.Assert.assertNull(instant61);
        org.junit.Assert.assertNotNull(instant62);
        org.junit.Assert.assertNotNull(userDTO64);
        org.junit.Assert.assertNotNull(userArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(userDTOList69);
        org.junit.Assert.assertNotNull(userDTOList70);
        org.junit.Assert.assertNotNull(userList71);
        org.junit.Assert.assertNotNull(userList72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str74, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNotNull(userDTO77);
        org.junit.Assert.assertNotNull(userDTO78);
        org.junit.Assert.assertNull(strSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(instant85);
        org.junit.Assert.assertNull(instant88);
        org.junit.Assert.assertNull(long89);
        org.junit.Assert.assertNotNull(userDTO92);
        org.junit.Assert.assertNull(long93);
    }

    @Test
    public void test3436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3436");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        userDTO0.setId((java.lang.Long) 0L);
        java.lang.String str3 = userDTO0.getImageUrl();
        java.time.Instant instant4 = userDTO0.getCreatedDate();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(instant4);
    }

    @Test
    public void test3437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3437");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str8 = socialUserConnection0.getProfileURL();
        socialUserConnection0.setAccessToken("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        java.lang.String str11 = socialUserConnection0.getImageURL();
        socialUserConnection0.setAccessToken("ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "error.validation" + "'", str11, "error.validation");
    }

    @Test
    public void test3438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3438");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getResetDate();
        java.time.Instant instant6 = user2.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        aluno7.setPrimeiroNome("");
        java.lang.String str10 = aluno7.getPrimeiroNome();
        java.lang.Long long11 = aluno7.getMatricula();
        boolean boolean12 = user2.equals((java.lang.Object) aluno7);
        user2.setFirstName("");
        user2.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet17 = user2.getAuthorities();
        java.lang.String str18 = user2.toString();
        user2.setCreatedBy("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        user2.setFirstName("LoginVM{username='null', rememberMe=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper23 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user25 = userMapper23.userFromId((java.lang.Long) 100L);
        user25.setLangKey("");
        java.time.Instant instant28 = user25.getResetDate();
        java.time.Instant instant29 = user25.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno30 = new com.unifacisa.tcc.domain.Aluno();
        aluno30.setPrimeiroNome("");
        java.lang.String str33 = aluno30.getPrimeiroNome();
        java.lang.Long long34 = aluno30.getMatricula();
        boolean boolean35 = user25.equals((java.lang.Object) aluno30);
        java.lang.String str36 = user25.getPassword();
        java.lang.String str37 = user25.getImageUrl();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet38 = user25.getAuthorities();
        java.lang.String str39 = user25.getLastName();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper40 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user42 = userMapper40.userFromId((java.lang.Long) 100L);
        user42.setLangKey("");
        java.time.Instant instant45 = user42.getResetDate();
        java.time.Instant instant46 = user42.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        aluno47.setPrimeiroNome("");
        java.lang.String str50 = aluno47.getPrimeiroNome();
        java.lang.Long long51 = aluno47.getMatricula();
        boolean boolean52 = user42.equals((java.lang.Object) aluno47);
        java.lang.String str53 = user42.getPassword();
        java.lang.String str54 = user42.getImageUrl();
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet55 = user42.getAuthorities();
        user25.setAuthorities(authoritySet55);
        user2.setAuthorities(authoritySet55);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM58 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant59 = managedUserVM58.getCreatedDate();
        java.lang.Long long60 = managedUserVM58.getId();
        java.lang.Long long61 = managedUserVM58.getId();
        java.lang.String str62 = managedUserVM58.toString();
        java.lang.String str63 = managedUserVM58.getLangKey();
        java.time.Instant instant64 = managedUserVM58.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper65 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user67 = userMapper65.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user68 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper69 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user71 = userMapper69.userFromId((java.lang.Long) 100L);
        user71.setLangKey("");
        java.time.Instant instant74 = user71.getResetDate();
        java.time.Instant instant75 = user71.getCreatedDate();
        user68.setCreatedDate(instant75);
        com.unifacisa.tcc.service.dto.UserDTO userDTO77 = userMapper65.userToUserDTO(user68);
        boolean boolean78 = user68.getActivated();
        java.lang.String str79 = user68.getLastModifiedBy();
        java.time.Instant instant80 = user68.getCreatedDate();
        managedUserVM58.setLastModifiedDate(instant80);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper82 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user84 = userMapper82.userFromId((java.lang.Long) 100L);
        user84.setLangKey("");
        java.time.Instant instant87 = user84.getResetDate();
        java.time.Instant instant88 = user84.getCreatedDate();
        java.lang.String str89 = user84.getEmail();
        java.time.Instant instant90 = user84.getLastModifiedDate();
        managedUserVM58.setLastModifiedDate(instant90);
        user2.setLastModifiedDate(instant90);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(long11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(authoritySet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}" + "'", str18, "User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        org.junit.Assert.assertNotNull(user25);
        org.junit.Assert.assertNull(instant28);
        org.junit.Assert.assertNotNull(instant29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(authoritySet38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(user42);
        org.junit.Assert.assertNull(instant45);
        org.junit.Assert.assertNotNull(instant46);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(long51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(authoritySet55);
        org.junit.Assert.assertNull(instant59);
        org.junit.Assert.assertNull(long60);
        org.junit.Assert.assertNull(long61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str62, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(instant64);
        org.junit.Assert.assertNotNull(user67);
        org.junit.Assert.assertNotNull(user71);
        org.junit.Assert.assertNull(instant74);
        org.junit.Assert.assertNotNull(instant75);
        org.junit.Assert.assertNotNull(userDTO77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(instant80);
        org.junit.Assert.assertNotNull(user84);
        org.junit.Assert.assertNull(instant87);
        org.junit.Assert.assertNotNull(instant88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(instant90);
    }

    @Test
    public void test3439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3439");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        socialUserConnection0.setProviderId("LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}");
        socialUserConnection0.setProviderUserId("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}");
        socialUserConnection0.setProfileURL("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        socialUserConnection0.setAccessToken("");
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        java.lang.String str25 = socialUserConnection0.getAccessToken();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test3440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3440");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection0.getSecret();
        socialUserConnection0.setRank((java.lang.Long) 100L);
        java.lang.String str9 = socialUserConnection0.getProviderId();
        socialUserConnection0.setAccessToken("Professor{id=null, primeiroNome='null', segundoNome='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str9, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
    }

    @Test
    public void test3441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3441");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        java.lang.String str3 = managedUserVM0.toString();
        java.lang.String str4 = managedUserVM0.getLastModifiedBy();
        boolean boolean5 = managedUserVM0.isActivated();
        java.lang.String str6 = managedUserVM0.getImageUrl();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str3, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3442");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        persistentAuditEvent0.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent8 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = null;
        persistentAuditEvent8.setData(strMap9);
        persistentAuditEvent8.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent13 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant14 = null;
        persistentAuditEvent13.setAuditEventDate(instant14);
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        user16.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user16.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper21 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user23 = userMapper21.userFromId((java.lang.Long) 100L);
        user23.setLangKey("");
        java.time.Instant instant26 = user23.getResetDate();
        java.time.Instant instant27 = user23.getCreatedDate();
        user16.setResetDate(instant27);
        persistentAuditEvent13.setAuditEventDate(instant27);
        persistentAuditEvent8.setAuditEventDate(instant27);
        persistentAuditEvent0.setAuditEventDate(instant27);
        persistentAuditEvent0.setId((java.lang.Long) 0L);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNotNull(user23);
        org.junit.Assert.assertNull(instant26);
        org.junit.Assert.assertNotNull(instant27);
    }

    @Test
    public void test3443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3443");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", "Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3444");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setRank((java.lang.Long) 10L);
        java.lang.String str5 = socialUserConnection0.getDisplayName();
        java.lang.String str6 = socialUserConnection0.getAccessToken();
        socialUserConnection0.setProviderId("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3445");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection11 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='1', habilitadoTcc='true'}", "LoginVM{username='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', rememberMe=null}", "", (java.lang.Long) (-1L), "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='LoginVM{username='null', rememberMe=false}', firstName='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', lastName='error.concurrencyFailure', email='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', imageUrl='LoginVM{username='null', rememberMe=false}', activated=false, langKey='hi!', createdBy=User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}, createdDate=null, lastModifiedBy='error.concurrencyFailure', lastModifiedDate=null, authorities=[hi!, , LoginVM{username='null', rememberMe=false}]}", "SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}", "LoginVM{username='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', rememberMe=false}", "UserDTO{login='null', firstName='null', lastName='ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:49.938Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:49.938Z, authorities=[]}", (java.lang.Long) 10L);
    }

    @Test
    public void test3446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3446");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        managedUserVM14.setId((java.lang.Long) 1L);
        org.springframework.http.ResponseEntity responseEntity18 = userResource3.createUser(managedUserVM14);
        org.springframework.data.domain.Pageable pageable19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.util.List<com.unifacisa.tcc.service.dto.UserDTO>> userDTOListResponseEntity20 = userResource3.getAllUsers(pageable19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertNotNull(responseEntity18);
    }

    @Test
    public void test3447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3447");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setLangKey("");
        java.time.Instant instant14 = user11.getResetDate();
        java.time.Instant instant15 = user11.getCreatedDate();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent17 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap18 = null;
        persistentAuditEvent17.setData(strMap18);
        persistentAuditEvent17.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent22 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant23 = null;
        persistentAuditEvent22.setAuditEventDate(instant23);
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        user25.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user25.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user32 = userMapper30.userFromId((java.lang.Long) 100L);
        user32.setLangKey("");
        java.time.Instant instant35 = user32.getResetDate();
        java.time.Instant instant36 = user32.getCreatedDate();
        user25.setResetDate(instant36);
        persistentAuditEvent22.setAuditEventDate(instant36);
        persistentAuditEvent17.setAuditEventDate(instant36);
        java.time.Instant instant50 = null;
        java.time.Instant instant52 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "hi!", "", "LoginVM{username='null', rememberMe=false}" };
        java.util.LinkedHashSet<java.lang.String> strSet58 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet58, strArray57);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM60 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='null', rememberMe=false}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", false, "LoginVM{username='null', rememberMe=false}", "hi!", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant50, "error.concurrencyFailure", instant52, (java.util.Set<java.lang.String>) strSet58);
        com.unifacisa.tcc.service.dto.UserDTO userDTO61 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 0L, "hi!", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", true, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.concurrencyFailure", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", instant15, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}", instant36, (java.util.Set<java.lang.String>) strSet58);
        java.lang.String str62 = userDTO61.getLogin();
        java.util.Set<java.lang.String> strSet63 = userDTO61.getAuthorities();
        java.lang.String str64 = userDTO61.getEmail();
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!" + "'", str62, "hi!");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}" + "'", str64, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
    }

    @Test
    public void test3448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3448");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setImageURL("error.validation");
        socialUserConnection0.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setExpireTime((java.lang.Long) 100L);
        socialUserConnection0.setProviderUserId("");
        socialUserConnection0.setUserId("LoginVM{username='null', rememberMe=false}");
        java.lang.String str14 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProviderUserId("error.concurrencyFailure");
        socialUserConnection0.setDisplayName("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        socialUserConnection0.setImageURL("SocialUserConnection{id=null, userId=error.concurrencyFailure, providerId='LoggerVM{name='null', level='null'}', providerUserId='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', rank=10, displayName='', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', imageURL='LoggerVM{name='null', level='null'}', accessToken='hi!', secret='LoginVM{username='null', rememberMe=false}', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=10}");
        java.lang.String str21 = socialUserConnection0.getSecret();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str14, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test3449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3449");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        java.lang.String str15 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setProviderId("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        socialUserConnection0.setProviderId("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str15, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3450");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user8 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setLangKey("");
        java.time.Instant instant14 = user11.getResetDate();
        java.time.Instant instant15 = user11.getCreatedDate();
        user8.setCreatedDate(instant15);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = userMapper5.userToUserDTO(user8);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper18 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray19 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList20 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList20, userArray19);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList22 = userMapper18.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList23 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList24 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList20);
        com.unifacisa.tcc.domain.User user26 = userMapper0.userFromId((java.lang.Long) (-1L));
        user26.setEmail("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='', numeroContato='null', habilitadoTcc='true'}");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertNotNull(userDTO17);
        org.junit.Assert.assertNotNull(userArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(userDTOList22);
        org.junit.Assert.assertNotNull(userDTOList23);
        org.junit.Assert.assertNotNull(userDTOList24);
        org.junit.Assert.assertNotNull(user26);
    }

    @Test
    public void test3451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3451");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper6 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray7 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList8 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList8, userArray7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper6.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList8);
        java.time.Instant instant21 = null;
        java.time.Instant instant23 = null;
        java.time.Instant instant33 = null;
        java.time.Instant instant35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        com.unifacisa.tcc.service.dto.UserDTO userDTO41 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant33, "hi!", instant35, (java.util.Set<java.lang.String>) strSet39);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM42 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant21, "", instant23, (java.util.Set<java.lang.String>) strSet39);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet43 = userMapper6.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet39);
        user0.setAuthorities(authoritySet43);
        com.unifacisa.tcc.service.dto.UserDTO userDTO45 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        java.lang.String str46 = userDTO45.getCreatedBy();
        java.time.Instant instant47 = userDTO45.getLastModifiedDate();
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(userArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(authoritySet43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str46, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(instant47);
    }

    @Test
    public void test3452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3452");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        loginVM0.setPassword("");
        loginVM0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) true);
        loginVM0.setUsername("LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}");
        loginVM0.setRememberMe((java.lang.Boolean) false);
    }

    @Test
    public void test3453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3453");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent0.setId((java.lang.Long) 1L);
        java.lang.String str3 = persistentAuditEvent0.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap4 = persistentAuditEvent0.getData();
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent5 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent5.setId((java.lang.Long) 1L);
        java.lang.String str8 = persistentAuditEvent5.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap9 = persistentAuditEvent5.getData();
        persistentAuditEvent0.setData(strMap9);
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        persistentAuditEvent0.setId((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent15 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        persistentAuditEvent15.setId((java.lang.Long) 1L);
        java.lang.String str18 = persistentAuditEvent15.getAuditEventType();
        java.util.Map<java.lang.String, java.lang.String> strMap19 = persistentAuditEvent15.getData();
        java.time.Instant instant20 = persistentAuditEvent15.getAuditEventDate();
        java.util.Map<java.lang.String, java.lang.String> strMap21 = persistentAuditEvent15.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap22 = persistentAuditEvent15.getData();
        persistentAuditEvent0.setData(strMap22);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test3454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3454");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper12 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user14 = userMapper12.userFromId((java.lang.Long) 100L);
        user14.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        user14.setResetDate(instant23);
        com.unifacisa.tcc.domain.User user26 = new com.unifacisa.tcc.domain.User();
        user26.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user26.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant31 = user26.getLastModifiedDate();
        java.util.Set<java.lang.String> strSet32 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO33 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 1L, "Authority{name='error.concurrencyFailure'}", "LoginVM{username='null', rememberMe=false}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", "Authority{name='Authority{name='error.concurrencyFailure'}'}", false, "Authority{name='null'}", "error.concurrencyFailure", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant23, "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}", instant31, strSet32);
        user0.setLastModifiedDate(instant31);
        java.lang.String str35 = user0.getLastName();
        user0.setPassword("UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNotNull(user14);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertNotNull(instant31);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test3455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3455");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        java.lang.Long long12 = socialUserConnection0.getRank();
        socialUserConnection0.setUserId("");
        java.lang.String str15 = socialUserConnection0.getRefreshToken();
        socialUserConnection0.setAccessToken("Authority{name='Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}'}");
        socialUserConnection0.setAccessToken("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setRefreshToken("LoginVM{username='LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}', rememberMe=true}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test3456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3456");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.String str2 = managedUserVM0.getCreatedBy();
        managedUserVM0.setLogin("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str5 = managedUserVM0.getLastName();
        java.lang.String str6 = managedUserVM0.toString();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ManagedUserVM{} UserDTO{login='ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str6, "ManagedUserVM{} UserDTO{login='ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='', numeroContato='null', diponibilidade='true'}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3457");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityDeletionAlert("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='true'}", "");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3458");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.lang.String str36 = managedUserVM35.getLastModifiedBy();
        org.springframework.http.ResponseEntity responseEntity37 = userResource3.createUser(managedUserVM35);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity39 = userResource3.getUser("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(responseEntity37);
    }

    @Test
    public void test3459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3459");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        user0.setLangKey("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        user0.setImageUrl("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str17 = user0.getLastModifiedBy();
        user0.setLastModifiedBy("LoggerVM{name='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', level='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test3460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3460");
        org.springframework.http.HttpHeaders httpHeaders2 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createEntityCreationAlert("", "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(httpHeaders2);
    }

    @Test
    public void test3461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3461");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM3 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet4 = managedUserVM3.getAuthorities();
        boolean boolean5 = user0.equals((java.lang.Object) strSet4);
        java.time.Instant instant6 = user0.getLastModifiedDate();
        user0.setFirstName("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM9 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.lang.String str10 = managedUserVM9.getImageUrl();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user13 = userMapper11.userFromId((java.lang.Long) 100L);
        user13.setLangKey("");
        java.time.Instant instant16 = user13.getResetDate();
        java.time.Instant instant17 = user13.getCreatedDate();
        managedUserVM9.setLastModifiedDate(instant17);
        user0.setCreatedDate(instant17);
        java.lang.String str20 = user0.getLogin();
        java.lang.String str21 = user0.getCreatedBy();
        user0.setPassword("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(strSet4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(instant6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(user13);
        org.junit.Assert.assertNull(instant16);
        org.junit.Assert.assertNotNull(instant17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str21, "LoginVM{username='null', rememberMe=false}");
    }

    @Test
    public void test3462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3462");
        com.unifacisa.tcc.config.LoggingAspectConfiguration loggingAspectConfiguration0 = new com.unifacisa.tcc.config.LoggingAspectConfiguration();
        org.springframework.core.env.Environment environment1 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect2 = loggingAspectConfiguration0.loggingAspect(environment1);
        org.springframework.core.env.Environment environment3 = null;
        com.unifacisa.tcc.aop.logging.LoggingAspect loggingAspect4 = loggingAspectConfiguration0.loggingAspect(environment3);
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.springBeanPointcut();
        loggingAspect4.springBeanPointcut();
        loggingAspect4.applicationPackagePointcut();
        loggingAspect4.applicationPackagePointcut();
        org.junit.Assert.assertNotNull(loggingAspect2);
        org.junit.Assert.assertNotNull(loggingAspect4);
    }

    @Test
    public void test3463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3463");
        com.unifacisa.tcc.service.dto.UserDTO userDTO0 = new com.unifacisa.tcc.service.dto.UserDTO();
        java.util.Set<java.lang.String> strSet1 = userDTO0.getAuthorities();
        java.time.Instant instant2 = userDTO0.getCreatedDate();
        java.lang.String str3 = userDTO0.getCreatedBy();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper4 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user6 = userMapper4.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user8 = userMapper4.userFromId((java.lang.Long) (-1L));
        user8.setActivated(false);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent11 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant12 = persistentAuditEvent11.getAuditEventDate();
        java.time.Instant instant13 = null;
        persistentAuditEvent11.setAuditEventDate(instant13);
        java.time.Instant instant15 = persistentAuditEvent11.getAuditEventDate();
        java.lang.String str16 = persistentAuditEvent11.getAuditEventType();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        aluno24.setPrimeiroNome("");
        java.lang.String str27 = aluno24.getPrimeiroNome();
        java.lang.Long long28 = aluno24.getMatricula();
        boolean boolean29 = user19.equals((java.lang.Object) aluno24);
        user19.setFirstName("");
        com.unifacisa.tcc.domain.User user32 = new com.unifacisa.tcc.domain.User();
        user32.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user32.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper37 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user39 = userMapper37.userFromId((java.lang.Long) 100L);
        user39.setLangKey("");
        java.time.Instant instant42 = user39.getResetDate();
        java.time.Instant instant43 = user39.getCreatedDate();
        user32.setResetDate(instant43);
        user19.setCreatedDate(instant43);
        persistentAuditEvent11.setAuditEventDate(instant43);
        java.time.Instant instant47 = persistentAuditEvent11.getAuditEventDate();
        java.time.Instant instant48 = persistentAuditEvent11.getAuditEventDate();
        user8.setCreatedDate(instant48);
        userDTO0.setLastModifiedDate(instant48);
        org.junit.Assert.assertNull(strSet1);
        org.junit.Assert.assertNull(instant2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(user6);
        org.junit.Assert.assertNotNull(user8);
        org.junit.Assert.assertNull(instant12);
        org.junit.Assert.assertNull(instant15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(user39);
        org.junit.Assert.assertNull(instant42);
        org.junit.Assert.assertNotNull(instant43);
        org.junit.Assert.assertNotNull(instant47);
        org.junit.Assert.assertNotNull(instant48);
    }

    @Test
    public void test3464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3464");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        java.lang.Long long1 = aluno0.getId();
        aluno0.setHabilitadoTcc((java.lang.Boolean) true);
        java.lang.Long long4 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno5 = new com.unifacisa.tcc.domain.Aluno();
        aluno5.setPrimeiroNome("");
        java.lang.Long long8 = aluno5.getMatricula();
        java.lang.Long long9 = aluno5.getMatricula();
        com.unifacisa.tcc.domain.Professor professor10 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor12 = professor10.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Professor professor13 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        aluno14.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor21 = null;
        aluno20.setProfessor(professor21);
        java.lang.Long long23 = aluno20.getMatricula();
        java.lang.String str24 = aluno20.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno25 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean27 = aluno25.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno28 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor29 = null;
        aluno28.setProfessor(professor29);
        aluno28.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno33 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean35 = aluno33.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        aluno36.setPrimeiroNome("");
        java.lang.Long long39 = aluno36.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        aluno40.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray43 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno20, aluno25, aluno28, aluno33, aluno36, aluno40 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet44 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet44, alunoArray43);
        professor13.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        com.unifacisa.tcc.domain.Professor professor47 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet44);
        com.unifacisa.tcc.domain.Professor professor49 = professor47.diponibilidade((java.lang.Boolean) true);
        professor47.setDiponibilidade((java.lang.Boolean) false);
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet52 = professor47.getAlunos();
        com.unifacisa.tcc.domain.Aluno aluno53 = aluno5.professor(professor47);
        java.lang.Long long54 = professor47.getId();
        com.unifacisa.tcc.domain.Aluno aluno55 = aluno0.professor(professor47);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa57 = professor47.primeiroNome("LoginVM{username='LoginVM{username='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', rememberMe=null}', rememberMe=false}");
        org.junit.Assert.assertNull(long1);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNull(long8);
        org.junit.Assert.assertNull(long9);
        org.junit.Assert.assertNotNull(professor12);
        org.junit.Assert.assertNull(long23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(long39);
        org.junit.Assert.assertNotNull(alunoArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(professor47);
        org.junit.Assert.assertNotNull(professor49);
        org.junit.Assert.assertNotNull(alunoSet52);
        org.junit.Assert.assertNotNull(aluno53);
        org.junit.Assert.assertNull(long54);
        org.junit.Assert.assertNotNull(aluno55);
        org.junit.Assert.assertNotNull(pessoa57);
    }

    @Test
    public void test3465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3465");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList1 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM2 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM2.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str5 = loggerVM2.getLevel();
        logsResource0.changeLevel(loggerVM2);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM7 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        java.lang.String str8 = loggerVM7.getName();
        java.lang.String str9 = loggerVM7.getLevel();
        loggerVM7.setName("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        java.lang.String str12 = loggerVM7.toString();
        logsResource0.changeLevel(loggerVM7);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList14 = logsResource0.getList();
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList15 = logsResource0.getList();
        org.junit.Assert.assertNotNull(loggerVMList1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}" + "'", str12, "LoggerVM{name='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}', level='null'}");
        org.junit.Assert.assertNotNull(loggerVMList14);
        org.junit.Assert.assertNotNull(loggerVMList15);
    }

    @Test
    public void test3466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3466");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str6 = loginVM0.getUsername();
        loginVM0.setRememberMe((java.lang.Boolean) false);
        java.lang.String str9 = loginVM0.toString();
        java.lang.String str10 = loginVM0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str9, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test3467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3467");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='false'}", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3468");
        com.unifacisa.tcc.domain.Professor professor0 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Aluno aluno1 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor2 = null;
        aluno1.setProfessor(professor2);
        aluno1.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Aluno aluno6 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno7 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor8 = null;
        aluno7.setProfessor(professor8);
        java.lang.Long long10 = aluno7.getMatricula();
        java.lang.String str11 = aluno7.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno12 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean14 = aluno12.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno15 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor16 = null;
        aluno15.setProfessor(professor16);
        aluno15.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean22 = aluno20.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        aluno23.setPrimeiroNome("");
        java.lang.Long long26 = aluno23.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        aluno27.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno[] alunoArray30 = new com.unifacisa.tcc.domain.Aluno[] { aluno1, aluno6, aluno7, aluno12, aluno15, aluno20, aluno23, aluno27 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet31 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet31, alunoArray30);
        professor0.setAlunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet31);
        java.lang.Long long34 = professor0.getMatricula();
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet35 = professor0.getAlunos();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa37 = professor0.email("SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = professor0.matricula((java.lang.Long) 1L);
        pessoa39.setPrimeiroNome("Professor{id=null, primeiroNome='null', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        java.lang.String str42 = pessoa39.getEmail();
        org.junit.Assert.assertNull(long10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(long26);
        org.junit.Assert.assertNotNull(alunoArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(long34);
        org.junit.Assert.assertNotNull(alunoSet35);
        org.junit.Assert.assertNotNull(pessoa37);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}" + "'", str42, "SocialUserConnection{id=-1, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', expireTime=null}");
    }

    @Test
    public void test3469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3469");
        org.springframework.http.HttpHeaders httpHeaders3 = com.unifacisa.tcc.web.rest.util.HeaderUtil.createFailureAlert("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}", "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='LoggerVM{name='LoginVM{username='null', rememberMe=false}', level='null'}'}");
        org.junit.Assert.assertNotNull(httpHeaders3);
    }

    @Test
    public void test3470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3470");
        com.unifacisa.tcc.web.rest.LogsResource logsResource0 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM1 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM1.setName("LoginVM{username='null', rememberMe=false}");
        logsResource0.changeLevel(loggerVM1);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList5 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM6 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM6.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM6.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource0.changeLevel(loggerVM6);
        com.unifacisa.tcc.web.rest.LogsResource logsResource12 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM13 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM13.setName("LoginVM{username='null', rememberMe=false}");
        logsResource12.changeLevel(loggerVM13);
        loggerVM13.setName("Authority{name='error.concurrencyFailure'}");
        logsResource0.changeLevel(loggerVM13);
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM20 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM20.setName("LoginVM{username='null', rememberMe=false}");
        java.lang.String str23 = loggerVM20.getName();
        logsResource0.changeLevel(loggerVM20);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList25 = logsResource0.getList();
        com.unifacisa.tcc.web.rest.LogsResource logsResource26 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM27 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM27.setName("LoginVM{username='null', rememberMe=false}");
        logsResource26.changeLevel(loggerVM27);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList31 = logsResource26.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM32 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM32.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM32.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource26.changeLevel(loggerVM32);
        com.unifacisa.tcc.web.rest.LogsResource logsResource38 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM39 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM39.setName("LoginVM{username='null', rememberMe=false}");
        logsResource38.changeLevel(loggerVM39);
        loggerVM39.setName("Authority{name='error.concurrencyFailure'}");
        logsResource26.changeLevel(loggerVM39);
        com.unifacisa.tcc.web.rest.LogsResource logsResource46 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM47 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM47.setName("LoginVM{username='null', rememberMe=false}");
        logsResource46.changeLevel(loggerVM47);
        java.util.List<com.unifacisa.tcc.web.rest.vm.LoggerVM> loggerVMList51 = logsResource46.getList();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM52 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM52.setName("LoginVM{username='null', rememberMe=false}");
        loggerVM52.setName("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        logsResource46.changeLevel(loggerVM52);
        com.unifacisa.tcc.web.rest.LogsResource logsResource58 = new com.unifacisa.tcc.web.rest.LogsResource();
        com.unifacisa.tcc.web.rest.vm.LoggerVM loggerVM59 = new com.unifacisa.tcc.web.rest.vm.LoggerVM();
        loggerVM59.setName("LoginVM{username='null', rememberMe=false}");
        logsResource58.changeLevel(loggerVM59);
        loggerVM59.setName("Authority{name='error.concurrencyFailure'}");
        logsResource46.changeLevel(loggerVM59);
        logsResource26.changeLevel(loggerVM59);
        java.lang.String str67 = loggerVM59.toString();
        loggerVM59.setLevel("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='error.validation', expireTime=null}");
        java.lang.String str70 = loggerVM59.getName();
        loggerVM59.setLevel("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        loggerVM59.setLevel("Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        logsResource0.changeLevel(loggerVM59);
        org.junit.Assert.assertNotNull(loggerVMList5);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str23, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertNotNull(loggerVMList25);
        org.junit.Assert.assertNotNull(loggerVMList31);
        org.junit.Assert.assertNotNull(loggerVMList51);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}" + "'", str67, "LoggerVM{name='Authority{name='error.concurrencyFailure'}', level='null'}");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Authority{name='error.concurrencyFailure'}" + "'", str70, "Authority{name='error.concurrencyFailure'}");
    }

    @Test
    public void test3471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3471");
        java.time.Instant instant10 = null;
        java.time.Instant instant12 = null;
        java.time.Instant instant22 = null;
        java.time.Instant instant24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        com.unifacisa.tcc.service.dto.UserDTO userDTO30 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant22, "hi!", instant24, (java.util.Set<java.lang.String>) strSet28);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM31 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant10, "", instant12, (java.util.Set<java.lang.String>) strSet28);
        java.time.Instant instant32 = managedUserVM31.getCreatedDate();
        java.lang.String str33 = managedUserVM31.getLangKey();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper34 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user36 = userMapper34.userFromId((java.lang.Long) 100L);
        user36.setResetKey("hi!");
        java.lang.String str39 = user36.getResetKey();
        user36.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper42 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user44 = userMapper42.userFromId((java.lang.Long) 100L);
        user44.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper47 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user49 = userMapper47.userFromId((java.lang.Long) 100L);
        user49.setLangKey("");
        java.time.Instant instant52 = user49.getResetDate();
        java.time.Instant instant53 = user49.getCreatedDate();
        user44.setResetDate(instant53);
        user36.setResetDate(instant53);
        managedUserVM31.setLastModifiedDate(instant53);
        managedUserVM31.setId((java.lang.Long) 1L);
        managedUserVM31.setId((java.lang.Long) 100L);
        java.lang.String str61 = managedUserVM31.getPassword();
        java.lang.String str62 = managedUserVM31.getCreatedBy();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(user36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(user44);
        org.junit.Assert.assertNotNull(user49);
        org.junit.Assert.assertNull(instant52);
        org.junit.Assert.assertNotNull(instant53);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "error.validation" + "'", str61, "error.validation");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test3472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3472");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.lang.Long long2 = persistentAuditEvent0.getId();
        java.util.Map<java.lang.String, java.lang.String> strMap3 = persistentAuditEvent0.getData();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNotNull(strMap3);
    }

    @Test
    public void test3473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3473");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Boolean boolean65 = aluno62.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor66 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str67 = professor66.toString();
        professor66.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long70 = professor66.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa72 = professor66.matricula((java.lang.Long) (-1L));
        java.util.Set<com.unifacisa.tcc.domain.Aluno> alunoSet73 = professor66.getAlunos();
        aluno62.setProfessor(professor66);
        com.unifacisa.tcc.domain.Aluno aluno76 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertEquals("'" + boolean65 + "' != '" + false + "'", boolean65, false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str67, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long70);
        org.junit.Assert.assertNotNull(pessoa72);
        org.junit.Assert.assertNotNull(alunoSet73);
        org.junit.Assert.assertNotNull(aluno76);
    }

    @Test
    public void test3474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3474");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setRank((java.lang.Long) (-1L));
        java.lang.String str6 = socialUserConnection0.getProviderUserId();
        socialUserConnection0.setDisplayName("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        socialUserConnection0.setSecret("SocialUserConnection{id=100, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=-1}");
        java.lang.String str11 = socialUserConnection0.getRefreshToken();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test3475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3475");
        com.unifacisa.tcc.repository.SocialUserConnectionRepository socialUserConnectionRepository1 = null;
        org.springframework.social.connect.ConnectionFactoryLocator connectionFactoryLocator2 = null;
        com.unifacisa.tcc.repository.CustomSocialConnectionRepository customSocialConnectionRepository3 = new com.unifacisa.tcc.repository.CustomSocialConnectionRepository("", socialUserConnectionRepository1, connectionFactoryLocator2);
        org.springframework.social.connect.ConnectionKey connectionKey4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.social.connect.Connection<?> wildcardConnection5 = customSocialConnectionRepository3.getConnection(connectionKey4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test3476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3476");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor1 = null;
        aluno0.setProfessor(professor1);
        aluno0.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa6 = aluno0.primeiroNome("hi!");
        java.lang.Long long7 = aluno0.getId();
        com.unifacisa.tcc.domain.Aluno aluno9 = aluno0.habilitadoTcc((java.lang.Boolean) false);
        aluno0.setMatricula((java.lang.Long) 1L);
        com.unifacisa.tcc.domain.Professor professor12 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str13 = professor12.toString();
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor15 = null;
        aluno14.setProfessor(professor15);
        java.lang.Long long17 = aluno14.getMatricula();
        java.lang.String str18 = aluno14.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno19 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean21 = aluno19.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor22 = aluno19.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno23 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean25 = aluno23.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno26 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno27 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor28 = null;
        aluno27.setProfessor(professor28);
        java.lang.Long long30 = aluno27.getMatricula();
        java.lang.String str31 = aluno27.getSegundoNome();
        com.unifacisa.tcc.domain.Aluno aluno32 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean34 = aluno32.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor35 = aluno32.getProfessor();
        com.unifacisa.tcc.domain.Aluno aluno36 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor37 = null;
        aluno36.setProfessor(professor37);
        com.unifacisa.tcc.domain.Aluno aluno39 = new com.unifacisa.tcc.domain.Aluno();
        aluno39.setPrimeiroNome("");
        com.unifacisa.tcc.domain.Aluno aluno42 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor43 = null;
        aluno42.setProfessor(professor43);
        aluno42.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Aluno aluno47 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor48 = null;
        aluno47.setProfessor(professor48);
        java.lang.Long long50 = aluno47.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno51 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Aluno aluno52 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean54 = aluno52.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Aluno aluno55 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor56 = null;
        aluno55.setProfessor(professor56);
        com.unifacisa.tcc.domain.Aluno[] alunoArray58 = new com.unifacisa.tcc.domain.Aluno[] { aluno14, aluno19, aluno23, aluno26, aluno27, aluno32, aluno36, aluno39, aluno42, aluno47, aluno51, aluno52, aluno55 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet59 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet59, alunoArray58);
        com.unifacisa.tcc.domain.Professor professor61 = professor12.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet59);
        com.unifacisa.tcc.domain.Aluno aluno62 = aluno0.professor(professor12);
        com.unifacisa.tcc.domain.Aluno aluno64 = aluno62.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Aluno aluno66 = aluno64.habilitadoTcc((java.lang.Boolean) false);
        com.unifacisa.tcc.domain.Professor professor67 = aluno66.getProfessor();
        java.lang.Boolean boolean68 = aluno66.isHabilitadoTcc();
        aluno66.setSegundoNome("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='LoginVM{username='null', rememberMe=false}', rank=null, displayName='null', profileURL='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', imageURL='null', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        org.junit.Assert.assertNotNull(pessoa6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertNotNull(aluno9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str13, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(professor22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(long30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(professor35);
        org.junit.Assert.assertNull(long50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(alunoArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(professor61);
        org.junit.Assert.assertNotNull(aluno62);
        org.junit.Assert.assertNotNull(aluno64);
        org.junit.Assert.assertNotNull(aluno66);
        org.junit.Assert.assertNotNull(professor67);
        org.junit.Assert.assertEquals("'" + boolean68 + "' != '" + false + "'", boolean68, false);
    }

    @Test
    public void test3477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3477");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        java.lang.String str1 = user0.toString();
        user0.setPassword("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        user0.setLastName("User{login='null', firstName='error.validation', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.lang.String str6 = user0.getLastModifiedBy();
        user0.setResetKey("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user0.setActivationKey("Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='1', habilitadoTcc='null'}");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str1, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test3478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3478");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection0 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection0.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str3 = socialUserConnection0.getProviderId();
        socialUserConnection0.setProfileURL("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        socialUserConnection0.setProviderUserId("LoginVM{username='null', rememberMe=false}");
        socialUserConnection0.setUserId("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection0.setUserId("error.concurrencyFailure");
        socialUserConnection0.setAccessToken("LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}");
        java.lang.String str14 = socialUserConnection0.getDisplayName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str3, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test3479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3479");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setResetKey("hi!");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper13 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user15 = userMapper13.userFromId((java.lang.Long) 100L);
        user15.setLangKey("");
        java.time.Instant instant18 = user15.getResetDate();
        java.time.Instant instant19 = user15.getCreatedDate();
        user10.setResetDate(instant19);
        user2.setResetDate(instant19);
        user2.setCreatedBy("Aluno{id=null, primeiroNome='null', segundoNome='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent24 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant25 = persistentAuditEvent24.getAuditEventDate();
        java.time.Instant instant26 = null;
        persistentAuditEvent24.setAuditEventDate(instant26);
        java.time.Instant instant28 = persistentAuditEvent24.getAuditEventDate();
        persistentAuditEvent24.setPrincipal("");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent31 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant32 = persistentAuditEvent31.getAuditEventDate();
        java.time.Instant instant33 = null;
        persistentAuditEvent31.setAuditEventDate(instant33);
        persistentAuditEvent31.setId((java.lang.Long) 1L);
        persistentAuditEvent31.setId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent39 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap40 = null;
        persistentAuditEvent39.setData(strMap40);
        persistentAuditEvent39.setAuditEventType("hi!");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent44 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant45 = null;
        persistentAuditEvent44.setAuditEventDate(instant45);
        com.unifacisa.tcc.domain.User user47 = new com.unifacisa.tcc.domain.User();
        user47.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user47.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper52 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user54 = userMapper52.userFromId((java.lang.Long) 100L);
        user54.setLangKey("");
        java.time.Instant instant57 = user54.getResetDate();
        java.time.Instant instant58 = user54.getCreatedDate();
        user47.setResetDate(instant58);
        persistentAuditEvent44.setAuditEventDate(instant58);
        persistentAuditEvent39.setAuditEventDate(instant58);
        persistentAuditEvent31.setAuditEventDate(instant58);
        com.unifacisa.tcc.domain.User user63 = new com.unifacisa.tcc.domain.User();
        user63.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM66 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet67 = managedUserVM66.getAuthorities();
        boolean boolean68 = user63.equals((java.lang.Object) strSet67);
        java.time.Instant instant69 = user63.getLastModifiedDate();
        persistentAuditEvent31.setAuditEventDate(instant69);
        persistentAuditEvent24.setAuditEventDate(instant69);
        user2.setLastModifiedDate(instant69);
        java.time.Instant instant73 = user2.getCreatedDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNotNull(user15);
        org.junit.Assert.assertNull(instant18);
        org.junit.Assert.assertNotNull(instant19);
        org.junit.Assert.assertNull(instant25);
        org.junit.Assert.assertNull(instant28);
        org.junit.Assert.assertNull(instant32);
        org.junit.Assert.assertNotNull(user54);
        org.junit.Assert.assertNull(instant57);
        org.junit.Assert.assertNotNull(instant58);
        org.junit.Assert.assertNull(strSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(instant69);
        org.junit.Assert.assertNotNull(instant73);
    }

    @Test
    public void test3480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3480");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.toString();
        managedUserVM0.setId((java.lang.Long) (-1L));
        boolean boolean7 = managedUserVM0.isActivated();
        java.lang.String str8 = managedUserVM0.getEmail();
        java.lang.String str9 = managedUserVM0.getLastName();
        java.lang.String str10 = managedUserVM0.getLastModifiedBy();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str4, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test3481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3481");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO5 = new com.unifacisa.tcc.service.dto.UserDTO(user0);
        user0.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.lang.String str8 = user0.getLangKey();
        java.lang.String str9 = user0.getCreatedBy();
        java.lang.String str10 = user0.getFirstName();
        java.lang.Long long11 = user0.getId();
        user0.setLangKey("Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "LoginVM{username='null', rememberMe=false}" + "'", str9, "LoginVM{username='null', rememberMe=false}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str10, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(long11);
    }

    @Test
    public void test3482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3482");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        java.lang.String str3 = user2.getActivationKey();
        com.unifacisa.tcc.domain.User user4 = new com.unifacisa.tcc.domain.User();
        user4.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user4.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper9 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user11 = userMapper9.userFromId((java.lang.Long) 100L);
        user11.setLangKey("");
        java.time.Instant instant14 = user11.getResetDate();
        java.time.Instant instant15 = user11.getCreatedDate();
        user4.setResetDate(instant15);
        boolean boolean17 = user4.getActivated();
        user4.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.lang.String str20 = user4.getPassword();
        java.lang.Long long21 = user4.getId();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper22 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user24 = userMapper22.userFromId((java.lang.Long) 100L);
        com.unifacisa.tcc.domain.User user25 = new com.unifacisa.tcc.domain.User();
        user25.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user25.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper30 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user32 = userMapper30.userFromId((java.lang.Long) 100L);
        user32.setLangKey("");
        java.time.Instant instant35 = user32.getResetDate();
        java.time.Instant instant36 = user32.getCreatedDate();
        user25.setResetDate(instant36);
        boolean boolean38 = user25.getActivated();
        user25.setLangKey("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        java.time.Instant instant41 = user25.getCreatedDate();
        user24.setCreatedDate(instant41);
        user4.setLastModifiedDate(instant41);
        user2.setCreatedDate(instant41);
        java.lang.String str45 = user2.getPassword();
        user2.setActivated(true);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(user11);
        org.junit.Assert.assertNull(instant14);
        org.junit.Assert.assertNotNull(instant15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(long21);
        org.junit.Assert.assertNotNull(user24);
        org.junit.Assert.assertNotNull(user32);
        org.junit.Assert.assertNull(instant35);
        org.junit.Assert.assertNotNull(instant36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(instant41);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test3483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3483");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = persistentAuditEvent0.getAuditEventDate();
        java.time.Instant instant2 = null;
        persistentAuditEvent0.setAuditEventDate(instant2);
        java.time.Instant instant4 = persistentAuditEvent0.getAuditEventDate();
        persistentAuditEvent0.setPrincipal("");
        com.unifacisa.tcc.domain.User user7 = new com.unifacisa.tcc.domain.User();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user7.setCreatedDate(instant14);
        boolean boolean16 = user7.getActivated();
        com.unifacisa.tcc.domain.User user26 = new com.unifacisa.tcc.domain.User();
        user26.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user26.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        java.time.Instant instant31 = user26.getLastModifiedDate();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper33 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user35 = userMapper33.userFromId((java.lang.Long) 100L);
        user35.setLangKey("");
        java.time.Instant instant38 = user35.getResetDate();
        java.time.Instant instant39 = user35.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno40 = new com.unifacisa.tcc.domain.Aluno();
        aluno40.setPrimeiroNome("");
        java.lang.String str43 = aluno40.getPrimeiroNome();
        java.lang.Long long44 = aluno40.getMatricula();
        boolean boolean45 = user35.equals((java.lang.Object) aluno40);
        user35.setFirstName("");
        com.unifacisa.tcc.domain.User user48 = new com.unifacisa.tcc.domain.User();
        user48.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user48.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper53 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user55 = userMapper53.userFromId((java.lang.Long) 100L);
        user55.setLangKey("");
        java.time.Instant instant58 = user55.getResetDate();
        java.time.Instant instant59 = user55.getCreatedDate();
        user48.setResetDate(instant59);
        user35.setCreatedDate(instant59);
        java.util.Set<java.lang.String> strSet62 = null;
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "LoginVM{username='null', rememberMe=false}", "LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}", "error.concurrencyFailure", "LoginVM{username='null', rememberMe=false}", true, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant31, "", instant59, strSet62);
        user7.setLastModifiedDate(instant31);
        persistentAuditEvent0.setAuditEventDate(instant31);
        persistentAuditEvent0.setAuditEventType("Aluno{id=null, primeiroNome='null', segundoNome='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}', matricula='100', email='null', numeroContato='1', habilitadoTcc='null'}");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent68 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant69 = persistentAuditEvent68.getAuditEventDate();
        java.time.Instant instant70 = null;
        persistentAuditEvent68.setAuditEventDate(instant70);
        persistentAuditEvent68.setAuditEventType("LoginVM{username='null', rememberMe=false}");
        java.lang.Long long74 = persistentAuditEvent68.getId();
        persistentAuditEvent68.setPrincipal("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.util.Map<java.lang.String, java.lang.String> strMap77 = persistentAuditEvent68.getData();
        java.util.Map<java.lang.String, java.lang.String> strMap78 = persistentAuditEvent68.getData();
        persistentAuditEvent0.setData(strMap78);
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(instant4);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(instant31);
        org.junit.Assert.assertNotNull(user35);
        org.junit.Assert.assertNull(instant38);
        org.junit.Assert.assertNotNull(instant39);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(user55);
        org.junit.Assert.assertNull(instant58);
        org.junit.Assert.assertNotNull(instant59);
        org.junit.Assert.assertNull(instant69);
        org.junit.Assert.assertNull(long74);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test3484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3484");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        java.time.Instant instant24 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant36 = null;
        java.time.Instant instant38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        com.unifacisa.tcc.service.dto.UserDTO userDTO44 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant36, "hi!", instant38, (java.util.Set<java.lang.String>) strSet42);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM45 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 100L, "", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", false, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "LoginVM{username='null', rememberMe=false}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", instant24, "hi!", instant26, (java.util.Set<java.lang.String>) strSet42);
        org.springframework.http.ResponseEntity responseEntity46 = userResource3.createUser(managedUserVM45);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<com.unifacisa.tcc.service.dto.UserDTO> userDTOResponseEntity48 = userResource3.getUser("Aluno{id=1, primeiroNome='', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(responseEntity46);
    }

    @Test
    public void test3485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3485");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setLangKey("");
        java.time.Instant instant5 = user2.getCreatedDate();
        java.lang.String str6 = user2.toString();
        user2.setActivationKey("SocialUserConnection{id=null, userId=, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=null, displayName='null', profileURL='Aluno{id=null, primeiroNome='hi!', segundoNome='hi!', matricula='null', email='null', numeroContato='-1', habilitadoTcc='false'}', imageURL='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', accessToken='null', secret='null', refreshToken='null', expireTime=null}");
        java.lang.String str9 = user2.getLastName();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNotNull(instant5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}" + "'", str6, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='null'}");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test3486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3486");
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent0 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.time.Instant instant1 = null;
        persistentAuditEvent0.setAuditEventDate(instant1);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user3.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper8 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user10 = userMapper8.userFromId((java.lang.Long) 100L);
        user10.setLangKey("");
        java.time.Instant instant13 = user10.getResetDate();
        java.time.Instant instant14 = user10.getCreatedDate();
        user3.setResetDate(instant14);
        persistentAuditEvent0.setAuditEventDate(instant14);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user19 = userMapper17.userFromId((java.lang.Long) 100L);
        user19.setLangKey("");
        java.time.Instant instant22 = user19.getResetDate();
        java.time.Instant instant23 = user19.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno24 = new com.unifacisa.tcc.domain.Aluno();
        aluno24.setPrimeiroNome("");
        java.lang.String str27 = aluno24.getPrimeiroNome();
        java.lang.Long long28 = aluno24.getMatricula();
        boolean boolean29 = user19.equals((java.lang.Object) aluno24);
        user19.setFirstName("");
        user19.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        user19.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.PersistentAuditEvent persistentAuditEvent36 = new com.unifacisa.tcc.domain.PersistentAuditEvent();
        java.util.Map<java.lang.String, java.lang.String> strMap37 = null;
        persistentAuditEvent36.setData(strMap37);
        java.time.Instant instant39 = null;
        persistentAuditEvent36.setAuditEventDate(instant39);
        persistentAuditEvent36.setAuditEventType("error.validation");
        java.util.Map<java.lang.String, java.lang.String> strMap43 = persistentAuditEvent36.getData();
        com.unifacisa.tcc.service.mapper.UserMapper userMapper44 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user46 = userMapper44.userFromId((java.lang.Long) 100L);
        user46.setResetKey("hi!");
        user46.setFirstName("error.validation");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper51 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user53 = userMapper51.userFromId((java.lang.Long) 100L);
        user53.setLangKey("");
        java.time.Instant instant56 = user53.getResetDate();
        java.time.Instant instant57 = user53.getCreatedDate();
        com.unifacisa.tcc.domain.Aluno aluno58 = new com.unifacisa.tcc.domain.Aluno();
        aluno58.setPrimeiroNome("");
        java.lang.String str61 = aluno58.getPrimeiroNome();
        java.lang.Long long62 = aluno58.getMatricula();
        boolean boolean63 = user53.equals((java.lang.Object) aluno58);
        user53.setFirstName("");
        com.unifacisa.tcc.domain.User user66 = new com.unifacisa.tcc.domain.User();
        user66.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user66.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper71 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user73 = userMapper71.userFromId((java.lang.Long) 100L);
        user73.setLangKey("");
        java.time.Instant instant76 = user73.getResetDate();
        java.time.Instant instant77 = user73.getCreatedDate();
        user66.setResetDate(instant77);
        user53.setCreatedDate(instant77);
        user46.setResetDate(instant77);
        persistentAuditEvent36.setAuditEventDate(instant77);
        user19.setCreatedDate(instant77);
        persistentAuditEvent0.setAuditEventDate(instant77);
        org.junit.Assert.assertNotNull(user10);
        org.junit.Assert.assertNull(instant13);
        org.junit.Assert.assertNotNull(instant14);
        org.junit.Assert.assertNotNull(user19);
        org.junit.Assert.assertNull(instant22);
        org.junit.Assert.assertNotNull(instant23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(long28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(user46);
        org.junit.Assert.assertNotNull(user53);
        org.junit.Assert.assertNull(instant56);
        org.junit.Assert.assertNotNull(instant57);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertNull(long62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(user73);
        org.junit.Assert.assertNull(instant76);
        org.junit.Assert.assertNotNull(instant77);
    }

    @Test
    public void test3487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3487");
        com.unifacisa.tcc.web.rest.errors.FieldErrorVM fieldErrorVM3 = new com.unifacisa.tcc.web.rest.errors.FieldErrorVM("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=-1, displayName='null', profileURL='null', imageURL='error.validation', accessToken='null', secret='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=true}', refreshToken='null', expireTime=null}", "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=-1, userId=null, providerId='null', providerUserId='null', rank=null, displayName='null', profileURL='null', imageURL='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', accessToken='LoggerVM{name='null', level='null'}', secret='null', refreshToken='null', expireTime=null}");
    }

    @Test
    public void test3488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3488");
        com.unifacisa.tcc.web.rest.vm.LoginVM loginVM0 = new com.unifacisa.tcc.web.rest.vm.LoginVM();
        java.lang.String str1 = loginVM0.getPassword();
        java.lang.String str2 = loginVM0.getPassword();
        java.lang.String str3 = loginVM0.toString();
        loginVM0.setRememberMe((java.lang.Boolean) true);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "LoginVM{username='null', rememberMe=null}" + "'", str3, "LoginVM{username='null', rememberMe=null}");
    }

    @Test
    public void test3489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3489");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity<java.lang.Void> voidResponseEntity15 = userResource3.deleteUser("Professor{id=null, primeiroNome='null', segundoNome='hi!', matricula='null', email='null', numeroContato='1', diponibilidade='true'}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
    }

    @Test
    public void test3490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3490");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM4 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant5 = managedUserVM4.getCreatedDate();
        java.lang.Long long6 = managedUserVM4.getId();
        java.lang.Long long7 = managedUserVM4.getId();
        java.lang.String str8 = managedUserVM4.toString();
        managedUserVM4.setId((java.lang.Long) (-1L));
        java.util.Set<java.lang.String> strSet11 = managedUserVM4.getAuthorities();
        java.lang.String str12 = managedUserVM4.getImageUrl();
        org.springframework.http.ResponseEntity responseEntity13 = userResource3.createUser(managedUserVM4);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        java.time.Instant instant16 = null;
        managedUserVM14.setLastModifiedDate(instant16);
        java.lang.String str18 = managedUserVM14.toString();
        java.time.Instant instant19 = null;
        managedUserVM14.setLastModifiedDate(instant19);
        // The following exception was thrown during execution in test generation
        try {
            org.springframework.http.ResponseEntity responseEntity21 = userResource3.createUser(managedUserVM14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(instant5);
        org.junit.Assert.assertNull(long6);
        org.junit.Assert.assertNull(long7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str8, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(responseEntity13);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str18, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
    }

    @Test
    public void test3491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3491");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 100L);
        user2.setResetKey("hi!");
        java.lang.String str5 = user2.getResetKey();
        user2.setId((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.Professor professor8 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor10 = professor8.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa12 = professor8.email("");
        com.unifacisa.tcc.domain.Aluno aluno13 = new com.unifacisa.tcc.domain.Aluno();
        aluno13.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor16 = professor8.addAluno(aluno13);
        java.lang.Long long17 = aluno13.getNumeroContato();
        boolean boolean18 = user2.equals((java.lang.Object) long17);
        java.lang.String str19 = user2.getLangKey();
        user2.setActivated(true);
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(professor10);
        org.junit.Assert.assertNotNull(pessoa12);
        org.junit.Assert.assertNotNull(professor16);
        org.junit.Assert.assertNull(long17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test3492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3492");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user2 = userMapper0.userFromId((java.lang.Long) 10L);
        com.unifacisa.tcc.domain.User user3 = new com.unifacisa.tcc.domain.User();
        user3.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM6 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet7 = managedUserVM6.getAuthorities();
        boolean boolean8 = user3.equals((java.lang.Object) strSet7);
        java.time.Instant instant9 = user3.getLastModifiedDate();
        com.unifacisa.tcc.service.dto.UserDTO userDTO10 = userMapper0.userToUserDTO(user3);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper11 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray12 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList13 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList13, userArray12);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList15 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList13);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper16 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray17 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList18 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList18, userArray17);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList20 = userMapper16.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper11.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList18);
        com.unifacisa.tcc.domain.User user22 = new com.unifacisa.tcc.domain.User();
        user22.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM25 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet26 = managedUserVM25.getAuthorities();
        boolean boolean27 = user22.equals((java.lang.Object) strSet26);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper28 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray29 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList30 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList30, userArray29);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList32 = userMapper28.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList30);
        java.time.Instant instant43 = null;
        java.time.Instant instant45 = null;
        java.time.Instant instant55 = null;
        java.time.Instant instant57 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet61 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet61, strArray60);
        com.unifacisa.tcc.service.dto.UserDTO userDTO63 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant55, "hi!", instant57, (java.util.Set<java.lang.String>) strSet61);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM64 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant43, "", instant45, (java.util.Set<java.lang.String>) strSet61);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet65 = userMapper28.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet61);
        user22.setAuthorities(authoritySet65);
        java.lang.String str67 = user22.getFirstName();
        user22.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO70 = userMapper11.userToUserDTO(user22);
        com.unifacisa.tcc.domain.User user72 = userMapper11.userFromId((java.lang.Long) 0L);
        user72.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant75 = user72.getLastModifiedDate();
        user3.setLastModifiedDate(instant75);
        java.time.Instant instant77 = user3.getResetDate();
        org.junit.Assert.assertNotNull(user2);
        org.junit.Assert.assertNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(instant9);
        org.junit.Assert.assertNotNull(userDTO10);
        org.junit.Assert.assertNotNull(userArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(userDTOList15);
        org.junit.Assert.assertNotNull(userArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(userDTOList20);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNull(strSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(userArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(userDTOList32);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(authoritySet65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(userDTO70);
        org.junit.Assert.assertNotNull(user72);
        org.junit.Assert.assertNotNull(instant75);
        org.junit.Assert.assertNull(instant77);
    }

    @Test
    public void test3493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3493");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        user0.setLangKey("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.User user15 = new com.unifacisa.tcc.domain.User();
        user15.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user15.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.dto.UserDTO userDTO20 = new com.unifacisa.tcc.service.dto.UserDTO(user15);
        user15.setFirstName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        user15.setActivationKey("LoggerVM{name='null', level='null'}");
        java.time.Instant instant25 = user15.getLastModifiedDate();
        user0.setCreatedDate(instant25);
        user0.setLastName("Professor{id=0, primeiroNome='LoginVM{username='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', rememberMe=false}', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='null', email='error.validation', numeroContato='null', diponibilidade='true'}");
        java.lang.String str29 = user0.getFirstName();
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test3494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3494");
        java.time.Instant instant9 = null;
        java.time.Instant instant11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        com.unifacisa.tcc.service.dto.UserDTO userDTO17 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant9, "hi!", instant11, (java.util.Set<java.lang.String>) strSet15);
        java.lang.String str18 = userDTO17.getLogin();
        java.lang.String str19 = userDTO17.getFirstName();
        java.time.Instant instant20 = userDTO17.getCreatedDate();
        java.lang.String str21 = userDTO17.toString();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(instant20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}" + "'", str21, "UserDTO{login='', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=false, langKey='', createdBy=, createdDate=null, lastModifiedBy='hi!', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
    }

    @Test
    public void test3495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3495");
        com.unifacisa.tcc.repository.UserRepository userRepository0 = null;
        com.unifacisa.tcc.service.MailService mailService1 = null;
        com.unifacisa.tcc.service.UserService userService2 = null;
        com.unifacisa.tcc.web.rest.UserResource userResource3 = new com.unifacisa.tcc.web.rest.UserResource(userRepository0, mailService1, userService2);
        java.time.Instant instant14 = null;
        java.time.Instant instant16 = null;
        java.time.Instant instant26 = null;
        java.time.Instant instant28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        com.unifacisa.tcc.service.dto.UserDTO userDTO34 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant26, "hi!", instant28, (java.util.Set<java.lang.String>) strSet32);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM35 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", "hi!", "hi!", "", true, "hi!", "", "", instant14, "", instant16, (java.util.Set<java.lang.String>) strSet32);
        java.time.Instant instant36 = managedUserVM35.getCreatedDate();
        java.util.Set<java.lang.String> strSet37 = managedUserVM35.getAuthorities();
        org.springframework.http.ResponseEntity responseEntity38 = userResource3.createUser(managedUserVM35);
        managedUserVM35.setId((java.lang.Long) 100L);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(instant36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(responseEntity38);
    }

    @Test
    public void test3496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3496");
        com.unifacisa.tcc.domain.Aluno aluno0 = new com.unifacisa.tcc.domain.Aluno();
        aluno0.setPrimeiroNome("");
        java.lang.Long long3 = aluno0.getMatricula();
        java.lang.Long long4 = aluno0.getMatricula();
        aluno0.setMatricula((java.lang.Long) 0L);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa8 = aluno0.email("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        com.unifacisa.tcc.domain.Professor professor9 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor11 = professor9.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa13 = professor9.email("");
        com.unifacisa.tcc.domain.Aluno aluno14 = new com.unifacisa.tcc.domain.Aluno();
        aluno14.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor17 = professor9.addAluno(aluno14);
        professor9.setEmail("User{login='null', firstName='', lastName='null', email='null', imageUrl='null', activated='false', langKey='', activationKey='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}'}");
        com.unifacisa.tcc.domain.Aluno aluno20 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor21 = null;
        aluno20.setProfessor(professor21);
        aluno20.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.Professor professor25 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor27 = professor25.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa29 = professor25.email("");
        com.unifacisa.tcc.domain.Professor professor31 = professor25.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno32 = aluno20.professor(professor31);
        com.unifacisa.tcc.domain.Aluno aluno34 = aluno32.habilitadoTcc((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.Aluno aluno35 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean37 = aluno35.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa39 = aluno35.primeiroNome("Authority{name='error.concurrencyFailure'}");
        com.unifacisa.tcc.domain.Professor professor40 = new com.unifacisa.tcc.domain.Professor();
        java.lang.String str41 = professor40.toString();
        professor40.setDiponibilidade((java.lang.Boolean) false);
        java.lang.Long long44 = professor40.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa46 = professor40.matricula((java.lang.Long) (-1L));
        com.unifacisa.tcc.domain.Aluno aluno47 = aluno35.professor(professor40);
        com.unifacisa.tcc.domain.Aluno aluno48 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor49 = null;
        aluno48.setProfessor(professor49);
        aluno48.setSegundoNome("hi!");
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa54 = aluno48.primeiroNome("hi!");
        java.lang.Long long55 = aluno48.getId();
        com.unifacisa.tcc.domain.Aluno aluno57 = aluno48.habilitadoTcc((java.lang.Boolean) false);
        java.lang.Long long58 = aluno57.getMatricula();
        com.unifacisa.tcc.domain.Aluno aluno59 = new com.unifacisa.tcc.domain.Aluno();
        boolean boolean61 = aluno59.equals((java.lang.Object) 100.0f);
        com.unifacisa.tcc.domain.Professor professor62 = aluno59.getProfessor();
        java.lang.String str63 = aluno59.toString();
        com.unifacisa.tcc.domain.Aluno aluno64 = new com.unifacisa.tcc.domain.Aluno();
        com.unifacisa.tcc.domain.Professor professor65 = null;
        aluno64.setProfessor(professor65);
        java.lang.Long long67 = aluno64.getMatricula();
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa69 = aluno64.numeroContato((java.lang.Long) 1L);
        java.lang.Boolean boolean70 = aluno64.isHabilitadoTcc();
        com.unifacisa.tcc.domain.Professor professor71 = new com.unifacisa.tcc.domain.Professor();
        com.unifacisa.tcc.domain.Professor professor73 = professor71.diponibilidade((java.lang.Boolean) true);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa75 = professor71.email("");
        com.unifacisa.tcc.domain.Aluno aluno76 = new com.unifacisa.tcc.domain.Aluno();
        aluno76.setPrimeiroNome("error.validation");
        com.unifacisa.tcc.domain.Professor professor79 = professor71.addAluno(aluno76);
        com.unifacisa.tcc.domain.abstractions.Pessoa pessoa81 = aluno76.email("ManagedUserVM{} UserDTO{login='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', firstName='hi!', lastName='hi!', email='', imageUrl='hi!', activated=true, langKey='', createdBy=, createdDate=null, lastModifiedBy='', lastModifiedDate=null, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        com.unifacisa.tcc.domain.Aluno[] alunoArray82 = new com.unifacisa.tcc.domain.Aluno[] { aluno32, aluno35, aluno57, aluno59, aluno64, aluno76 };
        java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno> alunoSet83 = new java.util.LinkedHashSet<com.unifacisa.tcc.domain.Aluno>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.Aluno>) alunoSet83, alunoArray82);
        com.unifacisa.tcc.domain.Professor professor85 = professor9.alunos((java.util.Set<com.unifacisa.tcc.domain.Aluno>) alunoSet83);
        aluno0.setProfessor(professor85);
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection98 = new com.unifacisa.tcc.domain.SocialUserConnection("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='0', email='', numeroContato='null', habilitadoTcc='true'}", "SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='null', rank=10, displayName='null', profileURL='null', imageURL='Authority{name='null'}', accessToken='null', secret='null', refreshToken='LoginVM{username='null', rememberMe=null}', expireTime=null}", "Aluno{id=null, primeiroNome='hi!', segundoNome='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', matricula='10', email='null', numeroContato='null', habilitadoTcc='null'}", (java.lang.Long) 0L, "Professor{id=null, primeiroNome='null', segundoNome='hi!', matricula='null', email='null', numeroContato='1', diponibilidade='true'}", "LoggerVM{name='Aluno{id=0, primeiroNome='error.validation', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', level='null'}", "LoggerVM{name='UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:34.552Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:34.552Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}', level='null'}", "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}", "LoggerVM{name='null', level='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}'}", "", (java.lang.Long) (-1L));
        boolean boolean99 = aluno0.equals((java.lang.Object) "UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=LoginVM{username='null', rememberMe=false}, createdDate=2021-03-26T03:34:04.306Z, lastModifiedBy='null', lastModifiedDate=2021-03-26T03:34:04.306Z, authorities=[ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}]}");
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(long4);
        org.junit.Assert.assertNotNull(pessoa8);
        org.junit.Assert.assertNotNull(professor11);
        org.junit.Assert.assertNotNull(pessoa13);
        org.junit.Assert.assertNotNull(professor17);
        org.junit.Assert.assertNotNull(professor27);
        org.junit.Assert.assertNotNull(pessoa29);
        org.junit.Assert.assertNotNull(professor31);
        org.junit.Assert.assertNotNull(aluno32);
        org.junit.Assert.assertNotNull(aluno34);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pessoa39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str41, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertNull(long44);
        org.junit.Assert.assertNotNull(pessoa46);
        org.junit.Assert.assertNotNull(aluno47);
        org.junit.Assert.assertNotNull(pessoa54);
        org.junit.Assert.assertNull(long55);
        org.junit.Assert.assertNotNull(aluno57);
        org.junit.Assert.assertNull(long58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(professor62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}" + "'", str63, "Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNull(long67);
        org.junit.Assert.assertNotNull(pessoa69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(professor73);
        org.junit.Assert.assertNotNull(pessoa75);
        org.junit.Assert.assertNotNull(professor79);
        org.junit.Assert.assertNotNull(pessoa81);
        org.junit.Assert.assertNotNull(alunoArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(professor85);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test3497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3497");
        com.unifacisa.tcc.domain.Authority authority0 = new com.unifacisa.tcc.domain.Authority();
        authority0.setName("Authority{name='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}'}");
        com.unifacisa.tcc.domain.SocialUserConnection socialUserConnection3 = new com.unifacisa.tcc.domain.SocialUserConnection();
        socialUserConnection3.setProviderId("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        java.lang.String str6 = socialUserConnection3.getProviderId();
        socialUserConnection3.setImageURL("error.validation");
        socialUserConnection3.setImageURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}");
        socialUserConnection3.setExpireTime((java.lang.Long) 100L);
        socialUserConnection3.setProfileURL("Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='true'}");
        boolean boolean15 = authority0.equals((java.lang.Object) socialUserConnection3);
        java.lang.String str16 = socialUserConnection3.getSecret();
        socialUserConnection3.setRefreshToken("Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='false'}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}" + "'", str6, "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test3498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3498");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper0 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray1 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList2 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList2, userArray1);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList4 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList2);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray6 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList7 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList7, userArray6);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList9 = userMapper5.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList10 = userMapper0.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList7);
        com.unifacisa.tcc.domain.User user11 = new com.unifacisa.tcc.domain.User();
        user11.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM14 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet15 = managedUserVM14.getAuthorities();
        boolean boolean16 = user11.equals((java.lang.Object) strSet15);
        com.unifacisa.tcc.service.mapper.UserMapper userMapper17 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User[] userArray18 = new com.unifacisa.tcc.domain.User[] {};
        java.util.ArrayList<com.unifacisa.tcc.domain.User> userList19 = new java.util.ArrayList<com.unifacisa.tcc.domain.User>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<com.unifacisa.tcc.domain.User>) userList19, userArray18);
        java.util.List<com.unifacisa.tcc.service.dto.UserDTO> userDTOList21 = userMapper17.usersToUserDTOs((java.util.List<com.unifacisa.tcc.domain.User>) userList19);
        java.time.Instant instant32 = null;
        java.time.Instant instant34 = null;
        java.time.Instant instant44 = null;
        java.time.Instant instant46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        com.unifacisa.tcc.service.dto.UserDTO userDTO52 = new com.unifacisa.tcc.service.dto.UserDTO((java.lang.Long) 100L, "", "hi!", "hi!", "", false, "hi!", "", "", instant44, "hi!", instant46, (java.util.Set<java.lang.String>) strSet50);
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM53 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM((java.lang.Long) 1L, "", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}", "", "hi!", false, "hi!", "Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}", "error.validation", instant32, "", instant34, (java.util.Set<java.lang.String>) strSet50);
        java.util.Set<com.unifacisa.tcc.domain.Authority> authoritySet54 = userMapper17.authoritiesFromStrings((java.util.Set<java.lang.String>) strSet50);
        user11.setAuthorities(authoritySet54);
        java.lang.String str56 = user11.getFirstName();
        user11.setId((java.lang.Long) 10L);
        com.unifacisa.tcc.service.dto.UserDTO userDTO59 = userMapper0.userToUserDTO(user11);
        com.unifacisa.tcc.domain.User user61 = userMapper0.userFromId((java.lang.Long) 0L);
        user61.setActivationKey("User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        java.time.Instant instant64 = user61.getLastModifiedDate();
        user61.setImageUrl("");
        user61.setLangKey("Aluno{id=null, primeiroNome='', segundoNome='null', matricula='null', email='Aluno{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', habilitadoTcc='null'}', numeroContato='null', habilitadoTcc='null'}");
        org.junit.Assert.assertNotNull(userArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(userDTOList4);
        org.junit.Assert.assertNotNull(userArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(userDTOList9);
        org.junit.Assert.assertNotNull(userDTOList10);
        org.junit.Assert.assertNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(userArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(userDTOList21);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(authoritySet54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(userDTO59);
        org.junit.Assert.assertNotNull(user61);
        org.junit.Assert.assertNotNull(instant64);
    }

    @Test
    public void test3499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3499");
        com.unifacisa.tcc.domain.User user0 = new com.unifacisa.tcc.domain.User();
        user0.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        user0.setLastName("ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        com.unifacisa.tcc.service.mapper.UserMapper userMapper5 = new com.unifacisa.tcc.service.mapper.UserMapper();
        com.unifacisa.tcc.domain.User user7 = userMapper5.userFromId((java.lang.Long) 100L);
        user7.setLangKey("");
        java.time.Instant instant10 = user7.getResetDate();
        java.time.Instant instant11 = user7.getCreatedDate();
        user0.setResetDate(instant11);
        java.time.Instant instant13 = null;
        user0.setCreatedDate(instant13);
        java.lang.String str15 = user0.getLastModifiedBy();
        com.unifacisa.tcc.domain.User user16 = new com.unifacisa.tcc.domain.User();
        java.lang.String str17 = user16.toString();
        boolean boolean18 = user0.equals((java.lang.Object) user16);
        com.unifacisa.tcc.domain.User user19 = new com.unifacisa.tcc.domain.User();
        user19.setCreatedBy("LoginVM{username='null', rememberMe=false}");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM22 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.util.Set<java.lang.String> strSet23 = managedUserVM22.getAuthorities();
        boolean boolean24 = user19.equals((java.lang.Object) strSet23);
        java.time.Instant instant25 = user19.getLastModifiedDate();
        user16.setLastModifiedDate(instant25);
        com.unifacisa.tcc.service.dto.UserDTO userDTO27 = new com.unifacisa.tcc.service.dto.UserDTO(user16);
        user16.setImageUrl("SocialUserConnection{id=null, userId=null, providerId='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', providerUserId='', rank=10, displayName='User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}', profileURL='null', imageURL='null', accessToken='null', secret='null', refreshToken='Professor{id=null, primeiroNome='null', segundoNome='null', matricula='null', email='null', numeroContato='null', diponibilidade='null'}', expireTime=null}");
        java.lang.String str30 = user16.getActivationKey();
        user16.setActivated(true);
        java.lang.Object obj33 = null;
        boolean boolean34 = user16.equals(obj33);
        java.lang.String str35 = user16.getActivationKey();
        java.lang.Object obj36 = null;
        boolean boolean37 = user16.equals(obj36);
        org.junit.Assert.assertNotNull(user7);
        org.junit.Assert.assertNull(instant10);
        org.junit.Assert.assertNotNull(instant11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}" + "'", str17, "User{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated='false', langKey='null', activationKey='null'}");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(instant25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3500");
        com.unifacisa.tcc.web.rest.vm.ManagedUserVM managedUserVM0 = new com.unifacisa.tcc.web.rest.vm.ManagedUserVM();
        java.time.Instant instant1 = managedUserVM0.getCreatedDate();
        java.lang.Long long2 = managedUserVM0.getId();
        java.lang.Long long3 = managedUserVM0.getId();
        java.lang.String str4 = managedUserVM0.getLogin();
        boolean boolean5 = managedUserVM0.isActivated();
        java.lang.String str6 = managedUserVM0.toString();
        java.lang.String str7 = managedUserVM0.getEmail();
        org.junit.Assert.assertNull(instant1);
        org.junit.Assert.assertNull(long2);
        org.junit.Assert.assertNull(long3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}" + "'", str6, "ManagedUserVM{} UserDTO{login='null', firstName='null', lastName='null', email='null', imageUrl='null', activated=false, langKey='null', createdBy=null, createdDate=null, lastModifiedBy='null', lastModifiedDate=null, authorities=null}");
        org.junit.Assert.assertNull(str7);
    }
}
